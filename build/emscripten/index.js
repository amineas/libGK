
var Module;
if (typeof Module === 'undefined') Module = eval('(function() { try { return Module || {} } catch(e) { return {} } })()');
if (!Module.expectedDataFileDownloads) {
  Module.expectedDataFileDownloads = 0;
  Module.finishedDataFileDownloads = 0;
}
Module.expectedDataFileDownloads++;
(function() {

    var PACKAGE_PATH;
    if (typeof window === 'object') {
      PACKAGE_PATH = window['encodeURIComponent'](window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf('/')) + '/');
    } else {
      // worker
      PACKAGE_PATH = encodeURIComponent(location.pathname.toString().substring(0, location.pathname.toString().lastIndexOf('/')) + '/');
    }
    var PACKAGE_NAME = 'index.data';
    var REMOTE_PACKAGE_NAME = (Module['filePackagePrefixURL'] || '') + 'index.data';
    var REMOTE_PACKAGE_SIZE = 20267508;
    var PACKAGE_UUID = '8d35e71c-9a73-4a79-8d04-1326edf3c5ff';
  
    function fetchRemotePackage(packageName, packageSize, callback, errback) {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', packageName, true);
      xhr.responseType = 'arraybuffer';
      xhr.onprogress = function(event) {
        var url = packageName;
        var size = packageSize;
        if (event.total) size = event.total;
        if (event.loaded) {
          if (!xhr.addedTotal) {
            xhr.addedTotal = true;
            if (!Module.dataFileDownloads) Module.dataFileDownloads = {};
            Module.dataFileDownloads[url] = {
              loaded: event.loaded,
              total: size
            };
          } else {
            Module.dataFileDownloads[url].loaded = event.loaded;
          }
          var total = 0;
          var loaded = 0;
          var num = 0;
          for (var download in Module.dataFileDownloads) {
          var data = Module.dataFileDownloads[download];
            total += data.total;
            loaded += data.loaded;
            num++;
          }
          total = Math.ceil(total * Module.expectedDataFileDownloads/num);
          if (Module['setStatus']) Module['setStatus']('Downloading data... (' + loaded + '/' + total + ')');
        } else if (!Module.dataFileDownloads) {
          if (Module['setStatus']) Module['setStatus']('Downloading data...');
        }
      };
      xhr.onload = function(event) {
        var packageData = xhr.response;
        callback(packageData);
      };
      xhr.send(null);
    };

    function handleError(error) {
      console.error('package error:', error);
    };
  
      var fetched = null, fetchedCallback = null;
      fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE, function(data) {
        if (fetchedCallback) {
          fetchedCallback(data);
          fetchedCallback = null;
        } else {
          fetched = data;
        }
      }, handleError);
    
  function runWithFS() {

function assert(check, msg) {
  if (!check) throw msg + new Error().stack;
}
Module['FS_createPath']('/', 'assets', true, true);

    function DataRequest(start, end, crunched, audio) {
      this.start = start;
      this.end = end;
      this.crunched = crunched;
      this.audio = audio;
    }
    DataRequest.prototype = {
      requests: {},
      open: function(mode, name) {
        this.name = name;
        this.requests[name] = this;
        Module['addRunDependency']('fp ' + this.name);
      },
      send: function() {},
      onload: function() {
        var byteArray = this.byteArray.subarray(this.start, this.end);

          this.finish(byteArray);

      },
      finish: function(byteArray) {
        var that = this;
        Module['FS_createPreloadedFile'](this.name, null, byteArray, true, true, function() {
          Module['removeRunDependency']('fp ' + that.name);
        }, function() {
          if (that.audio) {
            Module['removeRunDependency']('fp ' + that.name); // workaround for chromium bug 124926 (still no audio with this, but at least we don't hang)
          } else {
            Module.printErr('Preloading file ' + that.name + ' failed');
          }
        }, false, true); // canOwn this data in the filesystem, it is a slide into the heap that will never change
        this.requests[this.name] = null;
      },
    };
      new DataRequest(0, 96452, 0, 0).open('GET', '/assets/chiller.TTF');
    new DataRequest(96452, 20155302, 0, 1).open('GET', '/assets/music.wav');
    new DataRequest(20155302, 20164620, 0, 0).open('GET', '/assets/test.png');
    new DataRequest(20164620, 20233862, 0, 0).open('GET', '/assets/testOut.jpg');
    new DataRequest(20233862, 20267508, 0, 0).open('GET', '/assets/testOut2.jpg');

    function processPackageData(arrayBuffer) {
      Module.finishedDataFileDownloads++;
      assert(arrayBuffer, 'Loading data file failed.');
      var byteArray = new Uint8Array(arrayBuffer);
      var curr;
      
      // copy the entire loaded file into a spot in the heap. Files will refer to slices in that. They cannot be freed though.
      var ptr = Module['_malloc'](byteArray.length);
      Module['HEAPU8'].set(byteArray, ptr);
      DataRequest.prototype.byteArray = Module['HEAPU8'].subarray(ptr, ptr+byteArray.length);
          DataRequest.prototype.requests["/assets/chiller.TTF"].onload();
          DataRequest.prototype.requests["/assets/music.wav"].onload();
          DataRequest.prototype.requests["/assets/test.png"].onload();
          DataRequest.prototype.requests["/assets/testOut.jpg"].onload();
          DataRequest.prototype.requests["/assets/testOut2.jpg"].onload();
          Module['removeRunDependency']('datafile_index.data');

    };
    Module['addRunDependency']('datafile_index.data');
  
    if (!Module.preloadResults) Module.preloadResults = {};
  
      Module.preloadResults[PACKAGE_NAME] = {fromCache: false};
      if (fetched) {
        processPackageData(fetched);
        fetched = null;
      } else {
        fetchedCallback = processPackageData;
      }
    
  }
  if (Module['calledRun']) {
    runWithFS();
  } else {
    if (!Module['preRun']) Module['preRun'] = [];
    Module["preRun"].push(runWithFS); // FS is not initialized yet, wait for it
  }

})();

// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  Module['arguments'] = process['argv'].slice(2);

  module['exports'] = Module;
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    return read(f, 'binary');
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  this['Module'] = Module;

  eval("if (typeof gc === 'function' && gc.toString().indexOf('[native code]') > 0) var gc = undefined"); // wipe out the SpiderMonkey shell 'gc' function, which can confuse closure (uses it as a minified name, and it is then initted to a non-falsey value unexpectedly)
}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WEB) {
    window['Module'] = Module;
  } else {
    Module['load'] = importScripts;
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] == 'undefined' && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Auto-generated preamble library stuff ===

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      return '(((' +target + ')+' + (quantum-1) + ')&' + -quantum + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (isArrayType(type)) return true;
  if (/<?\{ ?[^}]* ?\}>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  STACK_ALIGN: 8,
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    var index = 0;
    type.flatIndexes = type.fields.map(function(field) {
      index++;
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = Runtime.getAlignSize(field, size);
      } else if (Runtime.isStructType(field)) {
        if (field[1] === '0') {
          // this is [0 x something]. When inside another structure like here, it must be at the end,
          // and it adds no size
          // XXX this happens in java-nbody for example... assert(index === type.fields.length, 'zero-length in the middle!');
          size = 0;
          if (Types.types[field]) {
            alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
          } else {
            alignSize = type.alignSize || QUANTUM_SIZE;
          }
        } else {
          size = Types.types[field].flatSize;
          alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
        }
      } else if (field[0] == 'b') {
        // bN, large number field, like a [N x i8]
        size = field.substr(1)|0;
        alignSize = 1;
      } else if (field[0] === '<') {
        // vector type
        size = alignSize = Types.types[field].flatSize; // fully aligned
      } else if (field[0] === 'i') {
        // illegal integer field, that could not be legalized because it is an internal structure field
        // it is ok to have such fields, if we just use them as markers of field size and nothing more complex
        size = alignSize = parseInt(field.substr(1))/8;
        assert(size % 1 === 0, 'cannot handle non-byte-size field ' + field);
      } else {
        assert(false, 'invalid type for calculateStructAlignment');
      }
      if (type.packed) alignSize = 1;
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    if (type.name_ && type.name_[0] === '[') {
      // arrays have 2 elements, so we get the proper difference. then we scale here. that way we avoid
      // allocating a potentially huge array for [999999 x i8] etc.
      type.flatSize = parseInt(type.name_.substr(1))*type.flatSize/2;
    }
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      if (type.fields.length != struct.length) {
        printErr('Number of named fields must match the type for ' + typeName + ': possibly duplicate struct names. Cannot return structInfo');
        return null;
      }
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  getAsmConst: function (code, numArgs) {
    // code is a constant string on the heap, so we can cache these
    if (!Runtime.asmConstCache) Runtime.asmConstCache = {};
    var func = Runtime.asmConstCache[code];
    if (func) return func;
    var args = [];
    for (var i = 0; i < numArgs; i++) {
      args.push(String.fromCharCode(36) + i); // $0, $1 etc
    }
    var source = Pointer_stringify(code);
    if (source[0] === '"') {
      // tolerate EM_ASM("..code..") even though EM_ASM(..code..) is correct
      if (source.indexOf('"', 1) === source.length-1) {
        source = source.substr(1, source.length-2);
      } else {
        // something invalid happened, e.g. EM_ASM("..code($0)..", input)
        abort('invalid EM_ASM input |' + source + '|. Please use EM_ASM(..code..) (no quotes) or EM_ASM({ ..code($0).. }, input) (to input values)');
      }
    }
    try {
      var evalled = eval('(function(' + args.join(',') + '){ ' + source + ' })'); // new Function does not allow upvars in node
    } catch(e) {
      Module.printErr('error in executing inline EM_ASM code: ' + e + ' on: \n\n' + source + '\n\nwith args |' + args + '| (make sure to use the right one out of EM_ASM, EM_ASM_ARGS, etc.)');
      throw e;
    }
    return Runtime.asmConstCache[code] = evalled;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[func]) {
      Runtime.funcWrappers[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return Runtime.funcWrappers[func];
  },
  UTF8Processor: function () {
    var buffer = [];
    var needed = 0;
    this.processCChar = function (code) {
      code = code & 0xFF;

      if (buffer.length == 0) {
        if ((code & 0x80) == 0x00) {        // 0xxxxxxx
          return String.fromCharCode(code);
        }
        buffer.push(code);
        if ((code & 0xE0) == 0xC0) {        // 110xxxxx
          needed = 1;
        } else if ((code & 0xF0) == 0xE0) { // 1110xxxx
          needed = 2;
        } else {                            // 11110xxx
          needed = 3;
        }
        return '';
      }

      if (needed) {
        buffer.push(code);
        needed--;
        if (needed > 0) return '';
      }

      var c1 = buffer[0];
      var c2 = buffer[1];
      var c3 = buffer[2];
      var c4 = buffer[3];
      var ret;
      if (buffer.length == 2) {
        ret = String.fromCharCode(((c1 & 0x1F) << 6)  | (c2 & 0x3F));
      } else if (buffer.length == 3) {
        ret = String.fromCharCode(((c1 & 0x0F) << 12) | ((c2 & 0x3F) << 6)  | (c3 & 0x3F));
      } else {
        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
        var codePoint = ((c1 & 0x07) << 18) | ((c2 & 0x3F) << 12) |
                        ((c3 & 0x3F) << 6)  | (c4 & 0x3F);
        ret = String.fromCharCode(
          Math.floor((codePoint - 0x10000) / 0x400) + 0xD800,
          (codePoint - 0x10000) % 0x400 + 0xDC00);
      }
      buffer.length = 0;
      return ret;
    }
    this.processJSString = function processJSString(string) {
      /* TODO: use TextEncoder when present,
        var encoder = new TextEncoder();
        encoder['encoding'] = "utf-8";
        var utf8Array = encoder['encode'](aMsg.data);
      */
      string = unescape(encodeURIComponent(string));
      var ret = [];
      for (var i = 0; i < string.length; i++) {
        ret.push(string.charCodeAt(i));
      }
      return ret;
    }
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+7)&-8); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+7)&-8); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+7)&-8); if (DYNAMICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 8))*(quantum ? quantum : 8); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*(+4294967296))) : ((+((low>>>0)))+((+((high|0)))*(+4294967296)))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}


Module['Runtime'] = Runtime;









//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Closure can also do so. To avoid that, add your function to
//       the exports using something like
//
//         -s EXPORTED_FUNCTIONS='["_main", "_myfunc"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number', 'string' or 'array' (use 'number' for any C pointer, and
//                   'array' for JavaScript arrays and typed arrays; note that arrays are 8-bit).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType,
//                   except that 'array' is not possible (there is no way for us to know the length of the array)
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  return ccallFunc(getCFunc(ident), returnType, argTypes, args);
}
Module["ccall"] = ccall;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  try {
    var func = Module['_' + ident]; // closure exported function
    if (!func) func = eval('_' + ident); // explicit lookup
  } catch(e) {
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

// Internal function that does a C call using a function, not an identifier
function ccallFunc(func, returnType, argTypes, args) {
  var stack = 0;
  function toC(value, type) {
    if (type == 'string') {
      if (value === null || value === undefined || value === 0) return 0; // null string
      value = intArrayFromString(value);
      type = 'array';
    }
    if (type == 'array') {
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length);
      writeArrayToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    assert(type != 'array');
    return value;
  }
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  var ret = fromC(func.apply(null, cArgs), returnType);
  if (stack) Runtime.stackRestore(stack);
  return ret;
}

// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  var func = getCFunc(ident);
  return function() {
    return ccallFunc(func, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}
Module["cwrap"] = cwrap;

// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[(ptr)]=value; break;
      case 'i8': HEAP8[(ptr)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;

// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[(ptr)];
      case 'i8': return HEAP8[(ptr)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)|0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module['allocate'] = allocate;

function Pointer_stringify(ptr, /* optional */ length) {
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = false;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))|0)];
    if (t >= 128) hasUtf = true;
    else if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (!hasUtf) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }

  var utf8 = new Runtime.UTF8Processor();
  for (i = 0; i < length; i++) {
    t = HEAPU8[(((ptr)+(i))|0)];
    ret += utf8.processCChar(t);
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16LE form. The copy will require at most (str.length*2+1)*2 bytes of space in the HEAP.
function stringToUTF16(str, outPtr) {
  for(var i = 0; i < str.length; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[(((outPtr)+(i*2))>>1)]=codeUnit;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[(((outPtr)+(str.length*2))>>1)]=0;
}
Module['stringToUTF16'] = stringToUTF16;

// Given a pointer 'ptr' to a null-terminated UTF32LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32LE form. The copy will require at most (str.length+1)*4 bytes of space in the HEAP,
// but can use less, since str.length does not return the number of characters in the string, but the number of UTF-16 code units in the string.
function stringToUTF32(str, outPtr) {
  var iChar = 0;
  for(var iCodeUnit = 0; iCodeUnit < str.length; ++iCodeUnit) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    var codeUnit = str.charCodeAt(iCodeUnit); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++iCodeUnit);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[(((outPtr)+(iChar*4))>>2)]=codeUnit;
    ++iChar;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[(((outPtr)+(iChar*4))>>2)]=0;
}
Module['stringToUTF32'] = stringToUTF32;

function demangle(func) {
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    if (rawList) {
      if (ret) {
        list.push(ret + '?');
      }
      return list;
    } else {
      return ret + flushList();
    }
  }
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    return parse();
  } catch(e) {
    return func;
  }
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function stackTrace() {
  var stack = new Error().stack;
  return stack ? demangleAll(stack) : '(no stack trace available)'; // Stack trace is not available at least on IE10 and Safari 6.
}

// Memory management

var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return (x+4095)&-4096;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk

function enlargeMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.');
}

var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 67108864;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;

var totalMemory = 4096;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be more reasonable');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;

function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;

// Tools

// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = (new Runtime.UTF8Processor()).processJSString(stringy);
  if (length) {
    ret.length = length;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))|0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=str.charCodeAt(i);
  }
  if (!dontAddNull) HEAP8[(((buffer)+(str.length))|0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data


var memoryInitializer = null;

// === Body ===





STATIC_BASE = 8;

STATICTOP = STATIC_BASE + Runtime.alignMemory(97291);
/* global initializers */ __ATINIT__.push();


/* memory initializer */ allocate([0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,71,75,32,91,69,82,82,79,82,93,58,32,85,110,107,110,111,119,110,32,70,105,108,101,32,70,111,114,109,97,116,32,37,115,10,0,0,0,0,0,71,75,32,91,69,82,82,79,82,93,58,32,67,97,110,110,111,116,32,79,112,101,110,32,82,101,115,111,117,114,99,101,32,37,115,10,0,0,0,0,71,75,32,91,69,82,82,79,82,93,58,32,73,110,118,97,108,105,100,32,70,105,108,101,32,70,111,114,109,97,116,32,37,115,10,0,0,0,0,0,71,75,32,91,69,82,82,79,82,93,58,32,85,110,105,109,112,108,101,109,101,110,116,101,100,32,70,101,97,116,117,114,101,32,37,115,10,0,0,0,71,75,32,91,69,82,82,79,82,93,58,32,77,105,115,115,105,110,103,32,77,111,100,117,108,101,32,37,115,10,0,0,71,75,32,91,69,82,82,79,82,93,58,32,67,111,117,108,100,32,110,111,116,32,108,111,97,100,32,102,111,110,116,32,114,101,115,111,117,114,99,101,32,37,115,10,0,0,0,0,71,75,32,91,69,82,82,79,82,93,58,32,70,114,101,101,84,121,112,101,50,32,99,111,117,108,100,32,110,111,116,32,98,101,32,105,110,105,116,105,97,108,105,122,101,101,100,46,0,0,0,0,0,0,0,0,71,75,32,91,69,82,82,79,82,93,58,32,102,111,110,116,32,101,114,114,111,114,0,0,71,75,32,91,69,82,82,79,82,93,58,32,67,97,110,110,111,116,32,82,101,110,100,101,114,32,71,108,121,112,104,0,71,75,32,91,69,82,82,79,82,93,58,32,73,110,118,97,108,105,100,32,71,108,121,112,104,32,73,110,100,101,120,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,0,0,0,0,0,0,0,0,0,72,68,0,0,22,68,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,115,115,101,116,115,47,116,101,115,116,79,117,116,46,106,112,103,0,0,0,0,0,0,97,115,115,101,116,115,47,116,101,115,116,46,112,110,103,0,97,115,115,101,116,115,47,99,104,105,108,108,101,114,46,84,84,70,0,0,0,0,0,0,67,104,105,108,108,101,114,0,102,111,110,116,32,99,114,101,97,116,101,100,10,0,0,0,102,111,110,116,32,102,97,105,108,101,100,10,0,0,0,0,97,115,115,101,116,115,47,109,117,115,105,99,46,119,97,118,0,0,0,0,0,0,0,0,67,111,117,108,100,110,39,116,32,108,111,97,100,32,115,111,117,110,100,32,97,115,115,101,116,115,47,109,117,115,105,99,46,119,97,118,0,0,0,0,70,80,83,58,32,37,100,0,67,111,117,108,100,110,39,116,32,108,111,97,100,32,97,115,115,101,116,115,47,116,101,115,116,79,117,116,46,106,112,103,0,0,0,0,0,0,0,0,67,111,117,108,100,110,39,116,32,108,111,97,100,32,97,115,115,101,116,115,47,116,101,115,116,46,112,110,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,97,118,0,0,0,0,0,114,98,0,0,0,0,0,0,100,97,116,97,0,0,0,0,97,108,83,111,117,114,99,101,105,32,97,116,32,50,51,54,0,0,0,0,0,0,0,0,71,75,32,91,69,82,82,79,82,93,58,32,105,110,32,37,115,32,45,32,32,65,76,32,69,114,114,111,114,58,32,37,88,10,0,0,0,0,0,0,97,108,83,111,117,114,99,101,80,97,117,115,101,32,97,116,32,50,51,48,0,0,0,0,97,108,83,111,117,114,99,101,80,108,97,121,32,97,116,32,50,50,53,0,0,0,0,0,97,108,83,111,117,114,99,101,85,110,113,117,101,117,101,66,117,102,102,101,114,115,32,97,116,32,50,50,48,0,0,0,97,108,83,111,117,114,99,101,81,117,101,117,101,66,117,102,102,101,114,115,32,97,116,32,50,49,49,0,0,0,0,0,97,108,71,101,116,83,111,117,114,99,101,105,32,97,116,32,49,55,57,0,0,0,0,0,97,108,83,111,117,114,99,101,102,32,97,116,32,49,54,52,0,0,0,0,0,0,0,0,67,114,101,97,116,101,80,108,97,121,101,114,32,97,116,32,49,52,49,0,0,0,0,0,97,108,66,117,102,102,101,114,68,97,116,97,32,97,116,32,49,50,56,0,0,0,0,0,111,117,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,71,75,32,91,73,78,70,79,93,58,32,65,76,67,32,118,101,114,115,105,111,110,58,32,37,105,46,37,105,10,0,0,71,75,32,91,69,82,82,79,82,93,58,32,70,97,105,108,101,100,32,116,111,32,99,114,101,97,116,101,32,97,117,100,105,111,32,99,111,110,116,101,120,116,0,0,0,0,0,0,71,75,32,91,69,82,82,79,82,93,58,32,79,112,101,110,65,76,58,32,70,97,105,108,101,100,32,116,111,32,111,112,101,110,32,100,101,118,105,99,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,71,75,32,91,69,82,82,79,82,93,58,32,73,110,105,116,68,114,97,119,84,111,73,109,97,103,101,66,117,102,102,101,114,32,71,76,95,70,82,65,77,69,66,85,70,70,69,82,95,85,78,83,85,80,80,79,82,84,69,68,95,69,88,84,0,0,0,0,0,0,0,0,71,75,32,91,73,78,70,79,93,58,32,70,66,79,32,105,110,105,116,105,97,108,105,122,97,116,105,111,110,32,102,97,105,108,101,100,0,0,0,0,71,75,32,91,69,82,82,79,82,93,58,32,73,110,105,116,68,114,97,119,84,111,73,109,97,103,101,66,117,102,102,101,114,32,71,76,95,70,82,65,77,69,66,85,70,70,69,82,95,73,78,67,79,77,80,76,69,84,69,95,77,73,83,83,73,78,71,95,65,84,84,65,67,72,77,69,78,84,95,69,88,84,0,0,0,0,0,0,71,75,32,91,69,82,82,79,82,93,58,32,73,110,105,116,68,114,97,119,84,111,73,109,97,103,101,66,117,102,102,101,114,32,71,76,95,70,82,65,77,69,66,85,70,70,69,82,95,73,78,67,79,77,80,76,69,84,69,95,65,84,84,65,67,72,77,69,78,84,95,69,88,84,0,0,0,0,0,0,71,75,32,91,73,78,70,79,93,58,32,85,115,105,110,103,32,70,66,79,0,0,0,0,0,0,128,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,0,0,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,0,0,0,0,0,0,232,7,0,0,0,0,0,0,0,0,128,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,0,0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,0,0,0,0,0,0,0,0,128,63,0,0,0,0,254,152,126,63,199,18,214,61,232,103,122,63,226,230,84,62,121,120,115,63,122,55,158,62,22,222,105,63,213,63,208,62,208,179,93,63,0,0,0,63,189,27,79,63,20,121,22,63,192,62,62,63,43,76,43,63,43,76,43,63,192,62,62,63,20,121,22,63,189,27,79,63,0,0,0,63,208,179,93,63,213,63,208,62,22,222,105,63,122,55,158,62,121,120,115,63,226,230,84,62,232,103,122,63,199,18,214,61,254,152,126,63,0,0,0,128,0,0,128,63,77,19,214,189,254,152,126,63,226,230,84,190,232,103,122,63,122,55,158,190,104,120,115,63,213,63,208,190,22,222,105,63,0,0,0,191,208,179,93,63,20,121,22,191,189,27,79,63,43,76,43,191,192,62,62,63,192,62,62,191,43,76,43,63,189,27,79,191,37,121,22,63,208,179,93,191,0,0,0,63,22,222,105,191,213,63,208,62,104,120,115,191,155,55,158,62,215,103,122,191,37,231,84,62,254,152,126,191,77,19,214,61,0,0,128,191,189,55,134,53,254,152,126,191,64,18,214,189,232,103,122,191,92,230,84,190,121,120,115,191,88,55,158,190,39,222,105,191,146,63,208,190,225,179,93,191,222,255,255,190,206,27,79,191,3,121,22,191,209,62,62,191,10,76,43,191,60,76,43,191,159,62,62,191,53,121,22,191,172,27,79,191,34,0,0,191,192,179,93,191,24,64,208,190,5,222,105,191,189,55,158,190,104,120,115,191,104,231,84,190,215,103,122,191,89,20,214,189,254,152,126,191,156,83,73,182,0,0,128,191,186,17,214,61,254,152,126,191,25,230,84,62,232,103,122,191,21,55,158,62,121,120,115,191,112,63,208,62,55,222,105,191,155,255,255,62,242,179,93,191,226,120,22,63,223,27,79,191,249,75,43,63,226,62,62,191,142,62,62,63,77,76,43,191,155,27,79,63,70,121,22,191,175,179,93,63,50,0,0,191,5,222,105,63,58,64,208,190,87,120,115,63,0,56,158,190,215,103,122,63,239,231,84,190,238,152,126,63,102,21,214,189,0,0,128,63,172,197,167,182,0,0,0,0,0,0,0,0,0,0,128,63,0,0,0,0,0,0,128,63,0,0,128,63,0,0,0,0,0,0,128,63,114,98,0,0,0,0,0,0,49,46,54,46,49,48,0,0,80,78,71,32,87,97,114,110,105,110,103,58,32,37,115,10,0,0,0,0,0,0,0,0,80,78,71,32,69,114,114,111,114,58,32,37,115,10,0,0,112,110,103,95,99,114,101,97,116,101,95,114,101,97,100,95,115,116,114,117,99,116,32,102,97,105,108,101,100,33,0,0,112,110,103,95,99,114,101,97,116,101,95,105,110,102,111,95,115,116,114,117,99,116,32,102,97,105,108,101,100,33,0,0,115,101,116,106,109,112,32,101,110,116,101,114,101,100,33,0,74,70,73,70,0,0,0,0,69,120,105,102,0,0,0,0,137,80,78,71,13,10,26,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,103,108,102,119,79,112,101,110,87,105,110,100,111,119,40,41,32,102,97,105,108,101,100,0,103,108,102,119,73,110,105,116,40,41,32,102,97,105,108,101,100,0,0,0,0,0,0,0,103,101,116,65,112,112,68,105,114,0,0,0,0,0,0,0,115,101,116,86,83,121,110,99,0,0,0,0,0,0,0,0,114,101,115,105,122,101,83,99,114,101,101,110,0,0,0,0,103,101,116,83,117,112,112,111,114,116,101,100,83,105,122,101,115,0,0,0,0,0,0,0,115,101,116,87,105,110,100,111,119,84,105,116,108,101,0,0,103,101,116,87,105,110,100,111,119,84,105,116,108,101,0,0,115,101,116,87,105,110,100,111,119,82,101,115,105,122,97,98,108,101,0,0,0,0,0,0,103,111,87,105,110,100,111,119,101,100,0,0,0,0,0,0,103,111,70,117,108,108,115,99,114,101,101,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,129,1,29,90,14,2,134,37,16,3,20,17,18,4,11,8,20,5,216,3,23,6,218,1,25,7,229,0,28,8,111,0,30,9,54,0,33,10,26,0,35,11,13,0,9,12,6,0,10,13,3,0,12,13,1,0,143,15,127,90,36,16,37,63,38,17,242,44,39,18,124,32,40,19,185,23,42,20,130,17,43,21,239,12,45,22,161,9,46,23,47,7,48,24,92,5,49,25,6,4,51,26,3,3,52,27,64,2,54,28,177,1,56,29,68,1,57,30,245,0,59,31,183,0,60,32,138,0,62,33,104,0,63,34,78,0,32,35,59,0,33,9,44,0,165,37,225,90,64,38,76,72,65,39,13,58,67,40,241,46,68,41,31,38,69,42,51,31,70,43,168,25,72,44,24,21,73,45,119,17,74,46,116,14,75,47,251,11,77,48,248,9,78,49,97,8,79,50,6,7,48,51,205,5,50,52,222,4,50,53,15,4,51,54,99,3,52,55,212,2,53,56,92,2,54,57,248,1,55,58,164,1,56,59,96,1,57,60,37,1,58,61,246,0,59,62,203,0,61,63,171,0,61,32,143,0,193,65,18,91,80,66,4,77,81,67,44,65,82,68,216,55,83,69,232,47,84,70,60,41,86,71,121,35,87,72,223,30,87,73,169,26,72,74,78,23,72,75,36,20,74,76,156,17,74,77,107,15,75,78,81,13,77,79,182,11,77,48,64,10,208,81,50,88,88,82,28,77,89,83,142,67,90,84,221,59,91,85,238,52,92,86,174,46,93,87,154,41,86,71,22,37,216,89,112,85,95,90,169,76,96,91,217,68,97,92,34,62,99,93,36,56,99,94,180,50,93,86,23,46,223,96,168,86,101,97,70,79,102,98,229,71,103,99,207,65,104,100,61,60,99,93,94,55,105,102,49,82,106,103,15,76,107,104,57,70,103,99,94,65,233,106,39,86,108,107,231,80,109,103,133,75,110,109,151,85,111,107,79,80,238,111,16,90,112,109,34,85,240,111,235,89,113,113,29,90,255,217,0,0,0,0,0,0,0,64,197,88,159,83,66,75,0,64,73,50,163,34,168,17,197,88,33,123,252,115,98,104,197,88,191,69,11,48,126,24,159,83,252,115,65,109,84,98,159,83,179,65,65,45,18,23,66,75,98,104,84,98,126,88,66,75,33,59,186,40,195,20,0,64,197,88,159,83,66,75,0,64,73,50,163,34,168,17,73,50,191,69,179,65,33,59,73,50,130,39,55,27,224,13,163,34,11,48,65,45,186,40,163,34,55,27,191,18,142,9,168,17,126,24,18,23,195,20,168,17,224,13,142,9,223,4,0,0,0,0,0,0,240,63,239,97,72,177,80,49,246,63,202,111,77,145,174,231,244,63,170,17,108,239,98,208,242,63,0,0,0,0,0,0,240,63,59,191,167,192,105,36,233,63,187,32,199,123,122,81,225,63,93,171,114,222,85,168,209,63,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,0,0,0,0,1,0,0,0,5,0,0,0,2,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,5,0,0,0,6,0,0,0,2,0,0,0,4,0,0,0,7,0,0,0,12,0,0,0,3,0,0,0,8,0,0,0,11,0,0,0,13,0,0,0,9,0,0,0,10,0,0,0,14,0,0,0,15,0,0,0,0,0,0,0,1,0,0,0,5,0,0,0,6,0,0,0,14,0,0,0,2,0,0,0,4,0,0,0,7,0,0,0,13,0,0,0,15,0,0,0,3,0,0,0,8,0,0,0,12,0,0,0,16,0,0,0,21,0,0,0,9,0,0,0,11,0,0,0,17,0,0,0,20,0,0,0,22,0,0,0,10,0,0,0,18,0,0,0,19,0,0,0,23,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,5,0,0,0,6,0,0,0,14,0,0,0,15,0,0,0,2,0,0,0,4,0,0,0,7,0,0,0,13,0,0,0,16,0,0,0,25,0,0,0,3,0,0,0,8,0,0,0,12,0,0,0,17,0,0,0,24,0,0,0,26,0,0,0,9,0,0,0,11,0,0,0,18,0,0,0,23,0,0,0,27,0,0,0,32,0,0,0,10,0,0,0,19,0,0,0,22,0,0,0,28,0,0,0,31,0,0,0,33,0,0,0,20,0,0,0,21,0,0,0,29,0,0,0,30,0,0,0,34,0,0,0,35,0,0,0,0,0,0,0,1,0,0,0,5,0,0,0,6,0,0,0,14,0,0,0,15,0,0,0,27,0,0,0,2,0,0,0,4,0,0,0,7,0,0,0,13,0,0,0,16,0,0,0,26,0,0,0,28,0,0,0,3,0,0,0,8,0,0,0,12,0,0,0,17,0,0,0,25,0,0,0,29,0,0,0,38,0,0,0,9,0,0,0,11,0,0,0,18,0,0,0,24,0,0,0,30,0,0,0,37,0,0,0,39,0,0,0,10,0,0,0,19,0,0,0,23,0,0,0,31,0,0,0,36,0,0,0,40,0,0,0,45,0,0,0,20,0,0,0,22,0,0,0,32,0,0,0,35,0,0,0,41,0,0,0,44,0,0,0,46,0,0,0,21,0,0,0,33,0,0,0,34,0,0,0,42,0,0,0,43,0,0,0,47,0,0,0,48,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,5,0,0,0,6,0,0,0,14,0,0,0,15,0,0,0,27,0,0,0,28,0,0,0,2,0,0,0,4,0,0,0,7,0,0,0,13,0,0,0,16,0,0,0,26,0,0,0,29,0,0,0,42,0,0,0,3,0,0,0,8,0,0,0,12,0,0,0,17,0,0,0,25,0,0,0,30,0,0,0,41,0,0,0,43,0,0,0,9,0,0,0,11,0,0,0,18,0,0,0,24,0,0,0,31,0,0,0,40,0,0,0,44,0,0,0,53,0,0,0,10,0,0,0,19,0,0,0,23,0,0,0,32,0,0,0,39,0,0,0,45,0,0,0,52,0,0,0,54,0,0,0,20,0,0,0,22,0,0,0,33,0,0,0,38,0,0,0,46,0,0,0,51,0,0,0,55,0,0,0,60,0,0,0,21,0,0,0,34,0,0,0,37,0,0,0,47,0,0,0,50,0,0,0,56,0,0,0,59,0,0,0,61,0,0,0,35,0,0,0,36,0,0,0,48,0,0,0,49,0,0,0,57,0,0,0,58,0,0,0,62,0,0,0,63,0,0,0,0,0,0,0,1,0,0,0,3,0,0,0,7,0,0,0,15,0,0,0,31,0,0,0,63,0,0,0,127,0,0,0,255,0,0,0,255,1,0,0,255,3,0,0,255,7,0,0,255,15,0,0,255,31,0,0,255,63,0,0,255,127,0,0,76,83,69,0,0,0,0,0,83,79,83,0,0,0,0,0,66,111,103,117,115,32,109,101,115,115,97,103,101,32,99,111,100,101,32,37,100,0,0,0,65,76,73,71,78,95,84,89,80,69,32,105,115,32,119,114,111,110,103,44,32,112,108,101,97,115,101,32,102,105,120,0,77,65,88,95,65,76,76,79,67,95,67,72,85,78,75,32,105,115,32,119,114,111,110,103,44,32,112,108,101,97,115,101,32,102,105,120,0,0,0,0,66,111,103,117,115,32,98,117,102,102,101,114,32,99,111,110,116,114,111,108,32,109,111,100,101,0,0,0,0,0,0,0,73,110,118,97,108,105,100,32,99,111,109,112,111,110,101,110,116,32,73,68,32,37,100,32,105,110,32,83,79,83,0,0,73,110,118,97,108,105,100,32,99,114,111,112,32,114,101,113,117,101,115,116,0,0,0,0,68,67,84,32,99,111,101,102,102,105,99,105,101,110,116,32,111,117,116,32,111,102,32,114,97,110,103,101,0,0,0,0,68,67,84,32,115,99,97,108,101,100,32,98,108,111,99,107,32,115,105,122,101,32,37,100,120,37,100,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,0,0,0,67,111,109,112,111,110,101,110,116,32,105,110,100,101,120,32,37,100,58,32,109,105,115,109,97,116,99,104,105,110,103,32,115,97,109,112,108,105,110,103,32,114,97,116,105,111,32,37,100,58,37,100,44,32,37,100,58,37,100,44,32,37,99,0,66,111,103,117,115,32,72,117,102,102,109,97,110,32,116,97,98,108,101,32,100,101,102,105,110,105,116,105,111,110,0,0,66,111,103,117,115,32,105,110,112,117,116,32,99,111,108,111,114,115,112,97,99,101,0,0,66,111,103,117,115,32,74,80,69,71,32,99,111,108,111,114,115,112,97,99,101,0,0,0,66,111,103,117,115,32,109,97,114,107,101,114,32,108,101,110,103,116,104,0,0,0,0,0,87,114,111,110,103,32,74,80,69,71,32,108,105,98,114,97,114,121,32,118,101,114,115,105,111,110,58,32,108,105,98,114,97,114,121,32,105,115,32,37,100,44,32,99,97,108,108,101,114,32,101,120,112,101,99,116,115,32,37,100,0,0,0,0,83,97,109,112,108,105,110,103,32,102,97,99,116,111,114,115,32,116,111,111,32,108,97,114,103,101,32,102,111,114,32,105,110,116,101,114,108,101,97,118,101,100,32,115,99,97,110,0,73,110,118,97,108,105,100,32,109,101,109,111,114,121,32,112,111,111,108,32,99,111,100,101,32,37,100,0,0,0,0,0,85,110,115,117,112,112,111,114,116,101,100,32,74,80,69,71,32,100,97,116,97,32,112,114,101,99,105,115,105,111,110,32,37,100,0,0,0,0,0,0,73,110,118,97,108,105,100,32,112,114,111,103,114,101,115,115,105,118,101,32,112,97,114,97,109,101,116,101,114,115,32,83,115,61,37,100,32,83,101,61,37,100,32,65,104,61,37,100,32,65,108,61,37,100,0,0,73,110,118,97,108,105,100,32,112,114,111,103,114,101,115,115,105,118,101,32,112,97,114,97,109,101,116,101,114,115,32,97,116,32,115,99,97,110,32,115,99,114,105,112,116,32,101,110,116,114,121,32,37,100,0,0,66,111,103,117,115,32,115,97,109,112,108,105,110,103,32,102,97,99,116,111,114,115,0,0,73,110,118,97,108,105,100,32,115,99,97,110,32,115,99,114,105,112,116,32,97,116,32,101,110,116,114,121,32,37,100,0,73,109,112,114,111,112,101,114,32,99,97,108,108,32,116,111,32,74,80,69,71,32,108,105,98,114,97,114,121,32,105,110,32,115,116,97,116,101,32,37,100,0,0,0,0,0,0,0,74,80,69,71,32,112,97,114,97,109,101,116,101,114,32,115,116,114,117,99,116,32,109,105,115,109,97,116,99,104,58,32,108,105,98,114,97,114,121,32,116,104,105,110,107,115,32,115,105,122,101,32,105,115,32,37,117,44,32,99,97,108,108,101,114,32,101,120,112,101,99,116,115,32,37,117,0,0,0,0,66,111,103,117,115,32,118,105,114,116,117,97,108,32,97,114,114,97,121,32,97,99,99,101,115,115,0,0,0,0,0,0,66,117,102,102,101,114,32,112,97,115,115,101,100,32,116,111,32,74,80,69,71,32,108,105,98,114,97,114,121,32,105,115,32,116,111,111,32,115,109,97,108,108,0,0,0,0,0,0,83,117,115,112,101,110,115,105,111,110,32,110,111,116,32,97,108,108,111,119,101,100,32,104,101,114,101,0,0,0,0,0,67,67,73,82,54,48,49,32,115,97,109,112,108,105,110,103,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,121,101,116,0,0,0,0,84,111,111,32,109,97,110,121,32,99,111,108,111,114,32,99,111,109,112,111,110,101,110,116,115,58,32,37,100,44,32,109,97,120,32,37,100,0,0,0,85,110,115,117,112,112,111,114,116,101,100,32,99,111,108,111,114,32,99,111,110,118,101,114,115,105,111,110,32,114,101,113,117,101,115,116,0,0,0,0,66,111,103,117,115,32,68,65,67,32,105,110,100,101,120,32,37,100,0,0,0,0,0,0,66,111,103,117,115,32,68,65,67,32,118,97,108,117,101,32,48,120,37,120,0,0,0,0,66,111,103,117,115,32,68,72,84,32,105,110,100,101,120,32,37,100,0,0,0,0,0,0,66,111,103,117,115,32,68,81,84,32,105,110,100,101,120,32,37,100,0,0,0,0,0,0,69,109,112,116,121,32,74,80,69,71,32,105,109,97,103,101,32,40,68,78,76,32,110,111,116,32,115,117,112,112,111,114,116,101,100,41,0,0,0,0,82,101,97,100,32,102,114,111,109,32,69,77,83,32,102,97,105,108,101,100,0,0,0,0,87,114,105,116,101,32,116,111,32,69,77,83,32,102,97,105,108,101,100,0,0,0,0,0,68,105,100,110,39,116,32,101,120,112,101,99,116,32,109,111,114,101,32,116,104,97,110,32,111,110,101,32,115,99,97,110,0,0,0,0,0,0,0,0,73,110,112,117,116,32,102,105,108,101,32,114,101,97,100,32,101,114,114,111,114,0,0,0,79,117,116,112,117,116,32,102,105,108,101,32,119,114,105,116,101,32,101,114,114,111,114,32,45,45,45,32,111,117,116,32,111,102,32,100,105,115,107,32,115,112,97,99,101,63,0,0,70,114,97,99,116,105,111,110,97,108,32,115,97,109,112,108,105,110,103,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,121,101,116,0,72,117,102,102,109,97,110,32,99,111,100,101,32,115,105,122,101,32,116,97,98,108,101,32,111,118,101,114,102,108,111,119,0,0,0,0,0,0,0,0,77,105,115,115,105,110,103,32,72,117,102,102,109,97,110,32,99,111,100,101,32,116,97,98,108,101,32,101,110,116,114,121,0,0,0,0,0,0,0,0,77,97,120,105,109,117,109,32,115,117,112,112,111,114,116,101,100,32,105,109,97,103,101,32,100,105,109,101,110,115,105,111,110,32,105,115,32,37,117,32,112,105,120,101,108,115,0,0,69,109,112,116,121,32,105,110,112,117,116,32,102,105,108,101,0,0,0,0,0,0,0,0,80,114,101,109,97,116,117,114,101,32,101,110,100,32,111,102,32,105,110,112,117,116,32,102,105,108,101,0,0,0,0,0,67,97,110,110,111,116,32,116,114,97,110,115,99,111,100,101,32,100,117,101,32,116,111,32,109,117,108,116,105,112,108,101,32,117,115,101,32,111,102,32,113,117,97,110,116,105,122,97,116,105,111,110,32,116,97,98,108,101,32,37,100,0,0,0,83,99,97,110,32,115,99,114,105,112,116,32,100,111,101,115,32,110,111,116,32,116,114,97,110,115,109,105,116,32,97,108,108,32,100,97,116,97,0,0,73,110,118,97,108,105,100,32,99,111,108,111,114,32,113,117,97,110,116,105,122,97,116,105,111,110,32,109,111,100,101,32,99,104,97,110,103,101,0,0,78,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,121,101,116,0,0,0,0,0,82,101,113,117,101,115,116,101,100,32,102,101,97,116,117,114,101,32,119,97,115,32,111,109,105,116,116,101,100,32,97,116,32,99,111,109,112,105,108,101,32,116,105,109,101,0,0,0,65,114,105,116,104,109,101,116,105,99,32,116,97,98,108,101,32,48,120,37,48,50,120,32,119,97,115,32,110,111,116,32,100,101,102,105,110,101,100,0,66,97,99,107,105,110,103,32,115,116,111,114,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,0,72,117,102,102,109,97,110,32,116,97,98,108,101,32,48,120,37,48,50,120,32,119,97,115,32,110,111,116,32,100,101,102,105,110,101,100,0,0,0,0,74,80,69,71,32,100,97,116,97,115,116,114,101,97,109,32,99,111,110,116,97,105,110,115,32,110,111,32,105,109,97,103,101,0,0,0,0,0,0,0,81,117,97,110,116,105,122,97,116,105,111,110,32,116,97,98,108,101,32,48,120,37,48,50,120,32,119,97,115,32,110,111,116,32,100,101,102,105,110,101,100,0,0,0,0,0,0,0,78,111,116,32,97,32,74,80,69,71,32,102,105,108,101,58,32,115,116,97,114,116,115,32,119,105,116,104,32,48,120,37,48,50,120,32,48,120,37,48,50,120,0,0,0,0,0,0,73,110,115,117,102,102,105,99,105,101,110,116,32,109,101,109,111,114,121,32,40,99,97,115,101,32,37,100,41,0,0,0,67,97,110,110,111,116,32,113,117,97,110,116,105,122,101,32,109,111,114,101,32,116,104,97,110,32,37,100,32,99,111,108,111,114,32,99,111,109,112,111,110,101,110,116,115,0,0,0,67,97,110,110,111,116,32,113,117,97,110,116,105,122,101,32,116,111,32,102,101,119,101,114,32,116,104,97,110,32,37,100,32,99,111,108,111,114,115,0,67,97,110,110,111,116,32,113,117,97,110,116,105,122,101,32,116,111,32,109,111,114,101,32,116,104,97,110,32,37,100,32,99,111,108,111,114,115,0,0,73,110,118,97,108,105,100,32,74,80,69,71,32,102,105,108,101,32,115,116,114,117,99,116,117,114,101,58,32,37,115,32,98,101,102,111,114,101,32,83,79,70,0,0,0,0,0,0,73,110,118,97,108,105,100,32,74,80,69,71,32,102,105,108,101,32,115,116,114,117,99,116,117,114,101,58,32,116,119,111,32,83,79,70,32,109,97,114,107,101,114,115,0,0,0,0,73,110,118,97,108,105,100,32,74,80,69,71,32,102,105,108,101,32,115,116,114,117,99,116,117,114,101,58,32,109,105,115,115,105,110,103,32,83,79,83,32,109,97,114,107,101,114,0,85,110,115,117,112,112,111,114,116,101,100,32,74,80,69,71,32,112,114,111,99,101,115,115,58,32,83,79,70,32,116,121,112,101,32,48,120,37,48,50,120,0,0,0,0,0,0,0,73,110,118,97,108,105,100,32,74,80,69,71,32,102,105,108,101,32,115,116,114,117,99,116,117,114,101,58,32,116,119,111,32,83,79,73,32,109,97,114,107,101,114,115,0,0,0,0,70,97,105,108,101,100,32,116,111,32,99,114,101,97,116,101,32,116,101,109,112,111,114,97,114,121,32,102,105,108,101,32,37,115,0,0,0,0,0,0,82,101,97,100,32,102,97,105,108,101,100,32,111,110,32,116,101,109,112,111,114,97,114,121,32,102,105,108,101,0,0,0,83,101,101,107,32,102,97,105,108,101,100,32,111,110,32,116,101,109,112,111,114,97,114,121,32,102,105,108,101,0,0,0,87,114,105,116,101,32,102,97,105,108,101,100,32,111,110,32,116,101,109,112,111,114,97,114,121,32,102,105,108,101,32,45,45,45,32,111,117,116,32,111,102,32,100,105,115,107,32,115,112,97,99,101,63,0,0,0,65,112,112,108,105,99,97,116,105,111,110,32,116,114,97,110,115,102,101,114,114,101,100,32,116,111,111,32,102,101,119,32,115,99,97,110,108,105,110,101,115,0,0,0,0,0,0,0,85,110,115,117,112,112,111,114,116,101,100,32,109,97,114,107,101,114,32,116,121,112,101,32,48,120,37,48,50,120,0,0,86,105,114,116,117,97,108,32,97,114,114,97,121,32,99,111,110,116,114,111,108,108,101,114,32,109,101,115,115,101,100,32,117,112,0,0,0,0,0,0,73,109,97,103,101,32,116,111,111,32,119,105,100,101,32,102,111,114,32,116,104,105,115,32,105,109,112,108,101,109,101,110,116,97,116,105,111,110,0,0,82,101,97,100,32,102,114,111,109,32,88,77,83,32,102,97,105,108,101,100,0,0,0,0,87,114,105,116,101,32,116,111,32,88,77,83,32,102,97,105,108,101,100,0,0,0,0,0,67,111,112,121,114,105,103,104,116,32,40,67,41,32,50,48,49,52,44,32,84,104,111,109,97,115,32,71,46,32,76,97,110,101,44,32,71,117,105,100,111,32,86,111,108,108,98,101,100,105,110,103,0,0,0,0,57,97,32,32,49,57,45,74,97,110,45,50,48,49,52,0,67,97,117,116,105,111,110,58,32,113,117,97,110,116,105,122,97,116,105,111,110,32,116,97,98,108,101,115,32,97,114,101,32,116,111,111,32,99,111,97,114,115,101,32,102,111,114,32,98,97,115,101,108,105,110,101,32,74,80,69,71,0,0,0,65,100,111,98,101,32,65,80,80,49,52,32,109,97,114,107,101,114,58,32,118,101,114,115,105,111,110,32,37,100,44,32,102,108,97,103,115,32,48,120,37,48,52,120,32,48,120,37,48,52,120,44,32,116,114,97,110,115,102,111,114,109,32,37,100,0,0,0,0,0,0,0,85,110,107,110,111,119,110,32,65,80,80,48,32,109,97,114,107,101,114,32,40,110,111,116,32,74,70,73,70,41,44,32,108,101,110,103,116,104,32,37,117,0,0,0,0,0,0,0,85,110,107,110,111,119,110,32,65,80,80,49,52,32,109,97,114,107,101,114,32,40,110,111,116,32,65,100,111,98,101,41,44,32,108,101,110,103,116,104,32,37,117,0,0,0,0,0,68,101,102,105,110,101,32,65,114,105,116,104,109,101,116,105,99,32,84,97,98,108,101,32,48,120,37,48,50,120,58,32,48,120,37,48,50,120,0,0,68,101,102,105,110,101,32,72,117,102,102,109,97,110,32,84,97,98,108,101,32,48,120,37,48,50,120,0,0,0,0,0,68,101,102,105,110,101,32,81,117,97,110,116,105,122,97,116,105,111,110,32,84,97,98,108,101,32,37,100,32,32,112,114,101,99,105,115,105,111,110,32,37,100,0,0,0,0,0,0,68,101,102,105,110,101,32,82,101,115,116,97,114,116,32,73,110,116,101,114,118,97,108,32,37,117,0,0,0,0,0,0,70,114,101,101,100,32,69,77,83,32,104,97,110,100,108,101,32,37,117,0,0,0,0,0,79,98,116,97,105,110,101,100,32,69,77,83,32,104,97,110,100,108,101,32,37,117,0,0,69,110,100,32,79,102,32,73,109,97,103,101,0,0,0,0,32,32,32,32,32,32,32,32,37,51,100,32,37,51,100,32,37,51,100,32,37,51,100,32,37,51,100,32,37,51,100,32,37,51,100,32,37,51,100,0,74,70,73,70,32,65,80,80,48,32,109,97,114,107,101,114,58,32,118,101,114,115,105,111,110,32,37,100,46,37,48,50,100,44,32,100,101,110,115,105,116,121,32,37,100,120,37,100,32,32,37,100,0,0,0,0,87,97,114,110,105,110,103,58,32,116,104,117,109,98,110,97,105,108,32,105,109,97,103,101,32,115,105,122,101,32,100,111,101,115,32,110,111,116,32,109,97,116,99,104,32,100,97,116,97,32,108,101,110,103,116,104,32,37,117,0,0,0,0,0,74,70,73,70,32,101,120,116,101,110,115,105,111,110,32,109,97,114,107,101,114,58,32,116,121,112,101,32,48,120,37,48,50,120,44,32,108,101,110,103,116,104,32,37,117,0,0,0,32,32,32,32,119,105,116,104,32,37,100,32,120,32,37,100,32,116,104,117,109,98,110,97,105,108,32,105,109,97,103,101,0,0,0,0,0,0,0,0,77,105,115,99,101,108,108,97,110,101,111,117,115,32,109,97,114,107,101,114,32,48,120,37,48,50,120,44,32,108,101,110,103,116,104,32,37,117,0,0,85,110,101,120,112,101,99,116,101,100,32,109,97,114,107,101,114,32,48,120,37,48,50,120,0,0,0,0,0,0,0,0,32,32,32,32,32,32,32,32,37,52,117,32,37,52,117,32,37,52,117,32,37,52,117,32,37,52,117,32,37,52,117,32,37,52,117,32,37,52,117,0,81,117,97,110,116,105,122,105,110,103,32,116,111,32,37,100,32,61,32,37,100,42,37,100,42,37,100,32,99,111,108,111,114,115,0,0,0,0,0,0,81,117,97,110,116,105,122,105,110,103,32,116,111,32,37,100,32,99,111,108,111,114,115,0,83,101,108,101,99,116,101,100,32,37,100,32,99,111,108,111,114,115,32,102,111,114,32,113,117,97,110,116,105,122,97,116,105,111,110,0,0,0,0,0,65,116,32,109,97,114,107,101,114,32,48,120,37,48,50,120,44,32,114,101,99,111,118,101,114,121,32,97,99,116,105,111,110,32,37,100,0,0,0,0,82,83,84,37,100,0,0,0,83,109,111,111,116,104,105,110,103,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,119,105,116,104,32,110,111,110,115,116,97,110,100,97,114,100,32,115,97,109,112,108,105,110,103,32,114,97,116,105,111,115,0,0,0,0,0,0,0,0,83,116,97,114,116,32,79,102,32,70,114,97,109,101,32,48,120,37,48,50,120,58,32,119,105,100,116,104,61,37,117,44,32,104,101,105,103,104,116,61,37,117,44,32,99,111,109,112,111,110,101,110,116,115,61,37,100,0,0,0,0,0,0,0,32,32,32,32,67,111,109,112,111,110,101,110,116,32,37,100,58,32,37,100,104,120,37,100,118,32,113,61,37,100,0,0,83,116,97,114,116,32,111,102,32,73,109,97,103,101,0,0,83,116,97,114,116,32,79,102,32,83,99,97,110,58,32,37,100,32,99,111,109,112,111,110,101,110,116,115,0,0,0,0,32,32,32,32,67,111,109,112,111,110,101,110,116,32,37,100,58,32,100,99,61,37,100,32,97,99,61,37,100,0,0,0,32,32,83,115,61,37,100,44,32,83,101,61,37,100,44,32,65,104,61,37,100,44,32,65,108,61,37,100,0,0,0,0,67,108,111,115,101,100,32,116,101,109,112,111,114,97,114,121,32,102,105,108,101,32,37,115,0,0,0,0,0,0,0,0,79,112,101,110,101,100,32,116,101,109,112,111,114,97,114,121,32,102,105,108,101,32,37,115,0,0,0,0,0,0,0,0,74,70,73,70,32,101,120,116,101,110,115,105,111,110,32,109,97,114,107,101,114,58,32,74,80,69,71,45,99,111,109,112,114,101,115,115,101,100,32,116,104,117,109,98,110,97,105,108,32,105,109,97,103,101,44,32,108,101,110,103,116,104,32,37,117,0,0,0,0,0,0,0,74,70,73,70,32,101,120,116,101,110,115,105,111,110,32,109,97,114,107,101,114,58,32,112,97,108,101,116,116,101,32,116,104,117,109,98,110,97,105,108,32,105,109,97,103,101,44,32,108,101,110,103,116,104,32,37,117,0,0,0,0,0,0,0,74,70,73,70,32,101,120,116,101,110,115,105,111,110,32,109,97,114,107,101,114,58,32,82,71,66,32,116,104,117,109,98,110,97,105,108,32,105,109,97,103,101,44,32,108,101,110,103,116,104,32,37,117,0,0,0,85,110,114,101,99,111,103,110,105,122,101,100,32,99,111,109,112,111,110,101,110,116,32,73,68,115,32,37,100,32,37,100,32,37,100,44,32,97,115,115,117,109,105,110,103,32,89,67,98,67,114,0,0,0,0,0,70,114,101,101,100,32,88,77,83,32,104,97,110,100,108,101,32,37,117,0,0,0,0,0,79,98,116,97,105,110,101,100,32,88,77,83,32,104,97,110,100,108,101,32,37,117,0,0,85,110,107,110,111,119,110,32,65,100,111,98,101,32,99,111,108,111,114,32,116,114,97,110,115,102,111,114,109,32,99,111,100,101,32,37,100,0,0,0,67,111,114,114,117,112,116,32,74,80,69,71,32,100,97,116,97,58,32,98,97,100,32,97,114,105,116,104,109,101,116,105,99,32,99,111,100,101,0,0,73,110,99,111,110,115,105,115,116,101,110,116,32,112,114,111,103,114,101,115,115,105,111,110,32,115,101,113,117,101,110,99,101,32,102,111,114,32,99,111,109,112,111,110,101,110,116,32,37,100,32,99,111,101,102,102,105,99,105,101,110,116,32,37,100,0,0,0,0,0,0,0,67,111,114,114,117,112,116,32,74,80,69,71,32,100,97,116,97,58,32,37,117,32,101,120,116,114,97,110,101,111,117,115,32,98,121,116,101,115,32,98,101,102,111,114,101,32,109,97,114,107,101,114,32,48,120,37,48,50,120,0,0,0,0,0,67,111,114,114,117,112,116,32,74,80,69,71,32,100,97,116,97,58,32,112,114,101,109,97,116,117,114,101,32,101,110,100,32,111,102,32,100,97,116,97,32,115,101,103,109,101,110,116,0,0,0,0,0,0,0,0,67,111,114,114,117,112,116,32,74,80,69,71,32,100,97,116,97,58,32,98,97,100,32,72,117,102,102,109,97,110,32,99,111,100,101,0,0,0,0,0,87,97,114,110,105,110,103,58,32,117,110,107,110,111,119,110,32,74,70,73,70,32,114,101,118,105,115,105,111,110,32,110,117,109,98,101,114,32,37,100,46,37,48,50,100,0,0,0,80,114,101,109,97,116,117,114,101,32,101,110,100,32,111,102,32,74,80,69,71,32,102,105,108,101,0,0,0,0,0,0,67,111,114,114,117,112,116,32,74,80,69,71,32,100,97,116,97,58,32,102,111,117,110,100,32,109,97,114,107,101,114,32,48,120,37,48,50,120,32,105,110,115,116,101,97,100,32,111,102,32,82,83,84,37,100,0,73,110,118,97,108,105,100,32,83,79,83,32,112,97,114,97,109,101,116,101,114,115,32,102,111,114,32,115,101,113,117,101,110,116,105,97,108,32,74,80,69,71,0,0,0,0,0,0,65,112,112,108,105,99,97,116,105,111,110,32,116,114,97,110,115,102,101,114,114,101,100,32,116,111,111,32,109,97,110,121,32,115,99,97,110,108,105,110,101,115,0,0,0,0,0,0,120,18,0,0,144,18,0,0,176,18,0,0,216,18,0,0,248,18,0,0,24,19,0,0,48,19,0,0,80,19,0,0,128,19,0,0,192,19,0,0,224,19,0,0,248,19,0,0,16,20,0,0,40,20,0,0,104,20,0,0,152,20,0,0,184,20,0,0,224,20,0,0,24,21,0,0,80,21,0,0,104,21,0,0,136,21,0,0,184,21,0,0,8,22,0,0,40,22,0,0,88,22,0,0,120,22,0,0,160,22,0,0,200,22,0,0,240,22,0,0,8,23,0,0,32,23,0,0,56,23,0,0,80,23,0,0,120,23,0,0,144,23,0,0,168,23,0,0,208,23,0,0,232,23,0,0,24,24,0,0,64,24,0,0,104,24,0,0,144,24,0,0,192,24,0,0,216,24,0,0,248,24,0,0,56,25,0,0,96,25,0,0,136,25,0,0,160,25,0,0,208,25,0,0,248,25,0,0,24,26,0,0,64,26,0,0,104,26,0,0,152,26,0,0,200,26,0,0,232,26,0,0,24,27,0,0,64,27,0,0,104,27,0,0,152,27,0,0,200,27,0,0,248,27,0,0,40,28,0,0,88,28,0,0,128,28,0,0,160,28,0,0,192,28,0,0,248,28,0,0,40,29,0,0,72,29,0,0,112,29,0,0,152,29,0,0,176,29,0,0,200,29,0,0,0,30,0,0,16,30,0,0,80,30,0,0,152,30,0,0,200,30,0,0,248,30,0,0,32,31,0,0,64,31,0,0,112,31,0,0,144,31,0,0,168,31,0,0,192,31,0,0,208,31,0,0,248,31,0,0,48,32,0,0,112,32,0,0,160,32,0,0,200,32,0,0,240,32,0,0,16,33,0,0,56,33,0,0,96,33,0,0,120,33,0,0,160,33,0,0,200,33,0,0,208,33,0,0,16,34,0,0,80,34], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([112,34,0,0,128,34,0,0,160,34,0,0,192,34,0,0,224,34,0,0,0,35,0,0,32,35,0,0,104,35,0,0,168,35,0,0,224,35,0,0,24,36,0,0,48,36,0,0,72,36,0,0,112,36,0,0,152,36,0,0,224,36,0,0,32,37,0,0,88,37,0,0,128,37,0,0,176,37,0,0,208,37,0,0,8,38,0,0,56,38,0,0,0,0,0,0,37,115,10,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,192,48,240,12,204,60,252,3,195,51,243,15,207,63,255,128,64,176,112,140,76,188,124,131,67,179,115,143,79,191,127,32,224,16,208,44,236,28,220,35,227,19,211,47,239,31,223,160,96,144,80,172,108,156,92,163,99,147,83,175,111,159,95,8,200,56,248,4,196,52,244,11,203,59,251,7,199,55,247,136,72,184,120,132,68,180,116,139,75,187,123,135,71,183,119,40,232,24,216,36,228,20,212,43,235,27,219,39,231,23,215,168,104,152,88,164,100,148,84,171,107,155,91,167,103,151,87,2,194,50,242,14,206,62,254,1,193,49,241,13,205,61,253,130,66,178,114,142,78,190,126,129,65,177,113,141,77,189,125,34,226,18,210,46,238,30,222,33,225,17,209,45,237,29,221,162,98,146,82,174,110,158,94,161,97,145,81,173,109,157,93,10,202,58,250,6,198,54,246,9,201,57,249,5,197,53,245,138,74,186,122,134,70,182,118,137,73,185,121,133,69,181,117,42,234,26,218,38,230,22,214,41,233,25,217,37,229,21,213,170,106,154,90,166,102,150,86,169,105,153,89,165,101,149,85,0,0,0,0,1,0,0,0,8,0,0,0,16,0,0,0,9,0,0,0,2,0,0,0,3,0,0,0,10,0,0,0,17,0,0,0,24,0,0,0,32,0,0,0,25,0,0,0,18,0,0,0,11,0,0,0,4,0,0,0,5,0,0,0,12,0,0,0,19,0,0,0,26,0,0,0,33,0,0,0,40,0,0,0,48,0,0,0,41,0,0,0,34,0,0,0,27,0,0,0,20,0,0,0,13,0,0,0,6,0,0,0,7,0,0,0,14,0,0,0,21,0,0,0,28,0,0,0,35,0,0,0,42,0,0,0,49,0,0,0,56,0,0,0,57,0,0,0,50,0,0,0,43,0,0,0,36,0,0,0,29,0,0,0,22,0,0,0,15,0,0,0,23,0,0,0,30,0,0,0,37,0,0,0,44,0,0,0,51,0,0,0,58,0,0,0,59,0,0,0,52,0,0,0,45,0,0,0,38,0,0,0,31,0,0,0,39,0,0,0,46,0,0,0,53,0,0,0,60,0,0,0,61,0,0,0,54,0,0,0,47,0,0,0,55,0,0,0,62,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,0,0,0,0,1,0,0,0,8,0,0,0,16,0,0,0,9,0,0,0,2,0,0,0,3,0,0,0,10,0,0,0,17,0,0,0,24,0,0,0,32,0,0,0,25,0,0,0,18,0,0,0,11,0,0,0,4,0,0,0,5,0,0,0,12,0,0,0,19,0,0,0,26,0,0,0,33,0,0,0,40,0,0,0,48,0,0,0,41,0,0,0,34,0,0,0,27,0,0,0,20,0,0,0,13,0,0,0,6,0,0,0,14,0,0,0,21,0,0,0,28,0,0,0,35,0,0,0,42,0,0,0,49,0,0,0,50,0,0,0,43,0,0,0,36,0,0,0,29,0,0,0,22,0,0,0,30,0,0,0,37,0,0,0,44,0,0,0,51,0,0,0,52,0,0,0,45,0,0,0,38,0,0,0,46,0,0,0,53,0,0,0,54,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,8,0,0,0,16,0,0,0,9,0,0,0,2,0,0,0,3,0,0,0,10,0,0,0,17,0,0,0,24,0,0,0,32,0,0,0,25,0,0,0,18,0,0,0,11,0,0,0,4,0,0,0,5,0,0,0,12,0,0,0,19,0,0,0,26,0,0,0,33,0,0,0,40,0,0,0,41,0,0,0,34,0,0,0,27,0,0,0,20,0,0,0,13,0,0,0,21,0,0,0,28,0,0,0,35,0,0,0,42,0,0,0,43,0,0,0,36,0,0,0,29,0,0,0,37,0,0,0,44,0,0,0,45,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,0,0,0,0,1,0,0,0,8,0,0,0,16,0,0,0,9,0,0,0,2,0,0,0,3,0,0,0,10,0,0,0,17,0,0,0,24,0,0,0,32,0,0,0,25,0,0,0,18,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,19,0,0,0,26,0,0,0,33,0,0,0,34,0,0,0,27,0,0,0,20,0,0,0,28,0,0,0,35,0,0,0,36,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,8,0,0,0,16,0,0,0,9,0,0,0,2,0,0,0,3,0,0,0,10,0,0,0,17,0,0,0,24,0,0,0,25,0,0,0,18,0,0,0,11,0,0,0,19,0,0,0,26,0,0,0,27,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,0,0,0,0,1,0,0,0,8,0,0,0,16,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,17,0,0,0,18,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,8,0,0,0,9,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,63,0,0,0,74,80,69,71,77,69,77,0,37,108,100,37,99,0,0,0,64,6,0,0,128,62,0,0,0,0,0,0,136,19,0,0,80,111,116,101,110,116,105,97,108,32,111,118,101,114,102,108,111,119,32,105,110,32,112,110,103,95,122,97,108,108,111,99,40,41,0,0,0,0,0,0,65,112,112,108,105,99,97,116,105,111,110,32,98,117,105,108,116,32,119,105,116,104,32,108,105,98,112,110,103,45,0,0,32,98,117,116,32,114,117,110,110,105,110,103,32,119,105,116,104,32,0,0,0,0,0,0,49,46,54,46,49,48,0,0,117,110,101,120,112,101,99,116,101,100,32,122,108,105,98,32,114,101,116,117,114,110,32,99,111,100,101,0,0,0,0,0,117,110,101,120,112,101,99,116,101,100,32,101,110,100,32,111,102,32,76,90,32,115,116,114,101,97,109,0,0,0,0,0,109,105,115,115,105,110,103,32,76,90,32,100,105,99,116,105,111,110,97,114,121,0,0,0,122,108,105,98,32,73,79,32,101,114,114,111,114,0,0,0,98,97,100,32,112,97,114,97,109,101,116,101,114,115,32,116,111,32,122,108,105,98,0,0,100,97,109,97,103,101,100,32,76,90,32,115,116,114,101,97,109,0,0,0,0,0,0,0,105,110,115,117,102,102,105,99,105,101,110,116,32,109,101,109,111,114,121,0,0,0,0,0,116,114,117,110,99,97,116,101,100,0,0,0,0,0,0,0,117,110,115,117,112,112,111,114,116,101,100,32,122,108,105,98,32,118,101,114,115,105,111,110,0,0,0,0,0,0,0,0,117,110,101,120,112,101,99,116,101,100,32,122,108,105,98,32,114,101,116,117,114,110,0,0,103,97,109,109,97,32,118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101,0,0,0,0,0,0,0,0,100,117,112,108,105,99,97,116,101,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,99,104,114,111,109,97,116,105,99,105,116,105,101,115,0,0,105,110,116,101,114,110,97,108,32,101,114,114,111,114,32,99,104,101,99,107,105,110,103,32,99,104,114,111,109,97,116,105,99,105,116,105,101,115,0,0,23,161,0,0,16,83,0,0,141,7,0,0,174,139,0,0,93,23,1,0,143,46,0,0,128,70,0,0,51,28,0,0,77,115,1,0,0,0,0,0,115,82,71,66,0,0,0,0,105,110,118,97,108,105,100,32,115,82,71,66,32,114,101,110,100,101,114,105,110,103,32,105,110,116,101,110,116,0,0,0,105,110,99,111,110,115,105,115,116,101,110,116,32,114,101,110,100,101,114,105,110,103,32,105,110,116,101,110,116,115,0,0,100,117,112,108,105,99,97,116,101,32,115,82,71,66,32,105,110,102,111,114,109,97,116,105,111,110,32,105,103,110,111,114,101,100,0,0,0,0,0,0,0,250,0,0,232,128,0,0,48,117,0,0,96,234,0,0,152,58,0,0,112,23,0,0,38,122,0,0,132,128,0,0,99,72,82,77,32,99,104,117,110,107,32,100,111,101,115,32,110,111,116,32,109,97,116,99,104,32,115,82,71,66,0,0,116,111,111,32,115,104,111,114,116,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,108,101,110,103,116,104,0,0,108,101,110,103,116,104,32,100,111,101,115,32,110,111,116,32,109,97,116,99,104,32,112,114,111,102,105,108,101,0,0,0,116,97,103,32,99,111,117,110,116,32,116,111,111,32,108,97,114,103,101,0,0,0,0,0,105,110,118,97,108,105,100,32,114,101,110,100,101,114,105,110,103,32,105,110,116,101,110,116,0,0,0,0,0,0,0,0,105,110,116,101,110,116,32,111,117,116,115,105,100,101,32,100,101,102,105,110,101,100,32,114,97,110,103,101,0,0,0,0,105,110,118,97,108,105,100,32,115,105,103,110,97,116,117,114,101,0,0,0,0,0,0,0,0,0,246,214,0,1,0,0,0,0,211,45,0,0,0,0,80,67,83,32,105,108,108,117,109,105,110,97,110,116,32,105,115,32,110,111,116,32,68,53,48,0,0,0,0,0,0,0,82,71,66,32,99,111,108,111,114,32,115,112,97,99,101,32,110,111,116,32,112,101,114,109,105,116,116,101,100,32,111,110,32,103,114,97,121,115,99,97,108,101,32,80,78,71,0,0,71,114,97,121,32,99,111,108,111,114,32,115,112,97,99,101,32,110,111,116,32,112,101,114,109,105,116,116,101,100,32,111,110,32,82,71,66,32,80,78,71,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,73,67,67,32,112,114,111,102,105,108,101,32,99,111,108,111,114,32,115,112,97,99,101,0,105,110,118,97,108,105,100,32,101,109,98,101,100,100,101,100,32,65,98,115,116,114,97,99,116,32,73,67,67,32,112,114,111,102,105,108,101,0,0,0,117,110,101,120,112,101,99,116,101,100,32,68,101,118,105,99,101,76,105,110,107,32,73,67,67,32,112,114,111,102,105,108,101,32,99,108,97,115,115,0,117,110,101,120,112,101,99,116,101,100,32,78,97,109,101,100,67,111,108,111,114,32,73,67,67,32,112,114,111,102,105,108,101,32,99,108,97,115,115,0,117,110,114,101,99,111,103,110,105,122,101,100,32,73,67,67,32,112,114,111,102,105,108,101,32,99,108,97,115,115,0,0,117,110,101,120,112,101,99,116,101,100,32,73,67,67,32,80,67,83,32,101,110,99,111,100,105,110,103,0,0,0,0,0,73,67,67,32,112,114,111,102,105,108,101,32,116,97,103,32,115,116,97,114,116,32,110,111,116,32,97,32,109,117,108,116,105,112,108,101,32,111,102,32,52,0,0,0,0,0,0,0,73,67,67,32,112,114,111,102,105,108,101,32,116,97,103,32,111,117,116,115,105,100,101,32,112,114,111,102,105,108,101,0,105,110,116,101,114,110,97,108,32,101,114,114,111,114,32,104,97,110,100,108,105,110,103,32,99,72,82,77,32,99,111,101,102,102,105,99,105,101,110,116,115,0,0,0,0,0,0,0,105,110,116,101,114,110,97,108,32,101,114,114,111,114,32,104,97,110,100,108,105,110,103,32,99,72,82,77,45,62,88,89,90,0,0,0,0,0,0,0,73,109,97,103,101,32,119,105,100,116,104,32,105,115,32,122,101,114,111,32,105,110,32,73,72,68,82,0,0,0,0,0,73,109,97,103,101,32,104,101,105,103,104,116,32,105,115,32,122,101,114,111,32,105,110,32,73,72,68,82,0,0,0,0,73,109,97,103,101,32,119,105,100,116,104,32,101,120,99,101,101,100,115,32,117,115,101,114,32,108,105,109,105,116,32,105,110,32,73,72,68,82,0,0,73,109,97,103,101,32,104,101,105,103,104,116,32,101,120,99,101,101,100,115,32,117,115,101,114,32,108,105,109,105,116,32,105,110,32,73,72,68,82,0,73,110,118,97,108,105,100,32,105,109,97,103,101,32,119,105,100,116,104,32,105,110,32,73,72,68,82,0,0,0,0,0,73,110,118,97,108,105,100,32,105,109,97,103,101,32,104,101,105,103,104,116,32,105,110,32,73,72,68,82,0,0,0,0,73,110,118,97,108,105,100,32,98,105,116,32,100,101,112,116,104,32,105,110,32,73,72,68,82,0,0,0,0,0,0,0,73,110,118,97,108,105,100,32,99,111,108,111,114,32,116,121,112,101,32,105,110,32,73,72,68,82,0,0,0,0,0,0,73,110,118,97,108,105,100,32,99,111,108,111,114,32,116,121,112,101,47,98,105,116,32,100,101,112,116,104,32,99,111,109,98,105,110,97,116,105,111,110,32,105,110,32,73,72,68,82,0,0,0,0,0,0,0,0,85,110,107,110,111,119,110,32,105,110,116,101,114,108,97,99,101,32,109,101,116,104,111,100,32,105,110,32,73,72,68,82,0,0,0,0,0,0,0,0,85,110,107,110,111,119,110,32,99,111,109,112,114,101,115,115,105,111,110,32,109,101,116,104,111,100,32,105,110,32,73,72,68,82,0,0,0,0,0,0,77,78,71,32,102,101,97,116,117,114,101,115,32,97,114,101,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,97,32,80,78,71,32,100,97,116,97,115,116,114,101,97,109,0,0,0,0,0,0,0,0,85,110,107,110,111,119,110,32,102,105,108,116,101,114,32,109,101,116,104,111,100,32,105,110,32,73,72,68,82,0,0,0,73,110,118,97,108,105,100,32,102,105,108,116,101,114,32,109,101,116,104,111,100,32,105,110,32,73,72,68,82,0,0,0,73,110,118,97,108,105,100,32,73,72,68,82,32,100,97,116,97,0,0,0,0,0,0,0,103,97,109,109,97,32,116,97,98,108,101,32,98,101,105,110,103,32,114,101,98,117,105,108,116,0,0,0,0,0,0,0,246,217,63,10,185,114,135,59,232,11,0,0,222,61,248,41,174,85,242,175,228,250,66,120,13,57,131,202,1,0,0,0,225,229,9,73,33,187,126,66,236,11,0,0,55,214,91,201,59,138,93,233,153,143,243,13,137,3,50,193,1,0,1,0,161,68,33,253,174,216,111,48,60,238,0,0,120,51,102,252,107,136,226,55,131,233,114,253,184,241,40,130,1,0,0,0,210,53,156,32,18,120,239,187,32,238,0,0,191,42,86,52,6,205,76,153,33,87,44,109,93,140,214,208,1,0,0,0,98,215,84,160,206,41,81,93,208,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,251,243,132,247,82,165,46,24,72,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,252,243,152,3,109,82,158,242,72,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,107,110,111,119,110,32,105,110,99,111,114,114,101,99,116,32,115,82,71,66,32,112,114,111,102,105,108,101,0,0,0,0,111,117,116,45,111,102,45,100,97,116,101,32,115,82,71,66,32,112,114,111,102,105,108,101,32,119,105,116,104,32,110,111,32,115,105,103,110,97,116,117,114,101,0,0,0,0,0,0,78,111,116,32,114,101,99,111,103,110,105,122,105,110,103,32,107,110,111,119,110,32,115,82,71,66,32,112,114,111,102,105,108,101,32,116,104,97,116,32,104,97,115,32,98,101,101,110,32,101,100,105,116,101,100,0,112,114,111,102,105,108,101,32,39,0,0,0,0,0,0,0,39,58,32,0,0,0,0,0,104,58,32,0,0,0,0,0,105,110,99,111,110,115,105,115,116,101,110,116,32,99,104,114,111,109,97,116,105,99,105,116,105,101,115,0,0,0,0,0,103,97,109,109,97,32,118,97,108,117,101,32,100,111,101,115,32,110,111,116,32,109,97,116,99,104,32,115,82,71,66,0,103,97,109,109,97,32,118,97,108,117,101,32,100,111,101,115,32,110,111,116,32,109,97,116,99,104,32,108,105,98,112,110,103,32,101,115,116,105,109,97,116,101,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,0,0,0,0,0,0,0,0,76,105,98,112,110,103,32,106,109,112,95,98,117,102,32,115,116,105,108,108,32,97,108,108,111,99,97,116,101,100,0,0,65,112,112,108,105,99,97,116,105,111,110,32,106,109,112,95,98,117,102,32,115,105,122,101,32,99,104,97,110,103,101,100,0,0,0,0,0,0,0,0,108,105,98,112,110,103,32,119,97,114,110,105,110,103,58,32,37,115,0,0,0,0,0,0,108,105,98,112,110,103,32,101,114,114,111,114,58,32,37,115,0,0,0,0,0,0,0,0,117,110,100,101,102,105,110,101,100,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,105,110,116,101,114,110,97,108,32,101,114,114,111,114,58,32,97,114,114,97,121,32,97,108,108,111,99,0,0,0,0,0,105,110,116,101,114,110,97,108,32,101,114,114,111,114,58,32,97,114,114,97,121,32,114,101,97,108,108,111,99,0,0,0,79,117,116,32,111,102,32,109,101,109,111,114,121,0,0,0,77,105,115,115,105,110,103,32,73,72,68,82,32,98,101,102,111,114,101,32,73,68,65,84,0,0,0,0,0,0,0,0,77,105,115,115,105,110,103,32,80,76,84,69,32,98,101,102,111,114,101,32,73,68,65,84,0,0,0,0,0,0,0,0,84,111,111,32,109,97,110,121,32,73,68,65,84,115,32,102,111,117,110,100,0,0,0,0,73,110,118,97,108,105,100,32,97,116,116,101,109,112,116,32,116,111,32,114,101,97,100,32,114,111,119,32,100,97,116,97,0,0,0,0,0,0,0,0,98,97,100,32,97,100,97,112,116,105,118,101,32,102,105,108,116,101,114,32,118,97,108,117,101,0,0,0,0,0,0,0,115,101,113,117,101,110,116,105,97,108,32,114,111,119,32,111,118,101,114,102,108,111,119,0,105,110,116,101,114,110,97,108,32,115,101,113,117,101,110,116,105,97,108,32,114,111,119,32,115,105,122,101,32,99,97,108,99,117,108,97,116,105,111,110,32,101,114,114,111,114,0,0,67,97,108,108,32,116,111,32,78,85,76,76,32,114,101,97,100,32,102,117,110,99,116,105,111,110,0,0,0,0,0,0,82,101,97,100,32,69,114,114,111,114,0,0,0,0,0,0,67,97,110,39,116,32,115,101,116,32,98,111,116,104,32,114,101,97,100,95,100,97,116,97,95,102,110,32,97,110,100,32,119,114,105,116,101,95,100,97,116,97,95,102,110,32,105,110,32,116,104,101,32,115,97,109,101,32,115,116,114,117,99,116,117,114,101,0,0,0,0,0,108,105,98,112,110,103,32,100,111,101,115,32,110,111,116,32,115,117,112,112,111,114,116,32,103,97,109,109,97,43,98,97,99,107,103,114,111,117,110,100,43,114,103,98,95,116,111,95,103,114,97,121,0,0,0,0,105,110,118,97,108,105,100,32,98,97,99,107,103,114,111,117,110,100,32,103,97,109,109,97,32,116,121,112,101,0,0,0,78,85,76,76,32,114,111,119,32,98,117,102,102,101,114,0,85,110,105,110,105,116,105,97,108,105,122,101,100,32,114,111,119,0,0,0,0,0,0,0,112,110,103,95,100,111,95,114,103,98,95,116,111,95,103,114,97,121,32,102,111,117,110,100,32,110,111,110,103,114,97,121,32,112,105,120,101,108,0,0,112,110,103,95,100,111,95,113,117,97,110,116,105,122,101,32,114,101,116,117,114,110,101,100,32,114,111,119,98,121,116,101,115,61,48,0,0,0,0,0,112,110,103,95,100,111,95,101,110,99,111,100,101,95,97,108,112,104,97,58,32,117,110,101,120,112,101,99,116,101,100,32,99,97,108,108,0,0,0,0,105,110,118,97,108,105,100,32,97,102,116,101,114,32,112,110,103,95,115,116,97,114,116,95,114,101,97,100,95,105,109,97,103,101,32,111,114,32,112,110,103,95,114,101,97,100,95,117,112,100,97,116,101,95,105,110,102,111,0,0,0,0,0,0,80,78,71,32,117,110,115,105,103,110,101,100,32,105,110,116,101,103,101,114,32,111,117,116,32,111,102,32,114,97,110,103,101,0,0,0,0,0,0,0,78,111,116,32,97,32,80,78,71,32,102,105,108,101,0,0,80,78,71,32,102,105,108,101,32,99,111,114,114,117,112,116,101,100,32,98,121,32,65,83,67,73,73,32,99,111,110,118,101,114,115,105,111,110,0,0,67,82,67,32,101,114,114,111,114,0,0,0,0,0,0,0,111,117,116,32,111,102,32,112,108,97,99,101,0,0,0,0,105,110,118,97,108,105,100,0,109,105,115,115,105,110,103,32,73,72,68,82,0,0,0,0,100,117,112,108,105,99,97,116,101,0,0,0,0,0,0,0,105,103,110,111,114,101,100,32,105,110,32,103,114,97,121,115,99,97,108,101,32,80,78,71,0,0,0,0,0,0,0,0,116,82,78,83,32,109,117,115,116,32,98,101,32,97,102,116,101,114,0,0,0,0,0,0,104,73,83,84,32,109,117,115,116,32,98,101,32,97,102,116,101,114,0,0,0,0,0,0,98,75,71,68,32,109,117,115,116,32,98,101,32,97,102,116,101,114,0,0,0,0,0,0,105,110,118,97,108,105,100,32,118,97,108,117,101,115,0,0,116,111,111,32,109,97,110,121,32,112,114,111,102,105,108,101,115,0,0,0,0,0,0,0,116,111,111,32,115,104,111,114,116,0,0,0,0,0,0,0,101,120,116,114,97,32,99,111,109,112,114,101,115,115,101,100,32,100,97,116,97,0,0,0,111,117,116,32,111,102,32,109,101,109,111,114,121,0,0,0,116,114,117,110,99,97,116,101,100,0,0,0,0,0,0,0,98,97,100,32,99,111,109,112,114,101,115,115,105,111,110,32,109,101,116,104,111,100,0,0,98,97,100,32,107,101,121,119,111,114,100,0,0,0,0,0,78,111,32,115,112,97,99,101,32,105,110,32,99,104,117,110,107,32,99,97,99,104,101,32,102,111,114,32,115,80,76,84,0,0,0,0,0,0,0,0,109,97,108,102,111,114,109,101,100,32,115,80,76,84,32,99,104,117,110,107,0,0,0,0,115,80,76,84,32,99,104,117,110,107,32,104,97,115,32,98,97,100,32,108,101,110,103,116,104,0,0,0,0,0,0,0,115,80,76,84,32,99,104,117,110,107,32,116,111,111,32,108,111,110,103,0,0,0,0,0,115,80,76,84,32,99,104,117,110,107,32,114,101,113,117,105,114,101,115,32,116,111,111,32,109,117,99,104,32,109,101,109,111,114,121,0,0,0,0,0,105,110,118,97,108,105,100,32,119,105,116,104,32,97,108,112,104,97,32,99,104,97,110,110,101,108,0,0,0,0,0,0,105,110,118,97,108,105,100,32,105,110,100,101,120,0,0,0,105,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,32,99,111,117,110,116,0,117,110,114,101,99,111,103,110,105,122,101,100,32,101,113,117,97,116,105,111,110,32,116,121,112,101,0,0,0,0,0,0,105,110,118,97,108,105,100,32,100,97,116,97,0,0,0,0,105,110,118,97,108,105,100,32,117,110,105,116,0,0,0,0,98,97,100,32,119,105,100,116,104,32,102,111,114,109,97,116,0,0,0,0,0,0,0,0,110,111,110,45,112,111,115,105,116,105,118,101,32,119,105,100,116,104,0,0,0,0,0,0,98,97,100,32,104,101,105,103,104,116,32,102,111,114,109,97,116,0,0,0,0,0,0,0,110,111,110,45,112,111,115,105,116,105,118,101,32,104,101,105,103,104,116,0,0,0,0,0,110,111,32,115,112,97,99,101,32,105,110,32,99,104,117,110,107,32,99,97,99,104,101,0,73,110,115,117,102,102,105,99,105,101,110,116,32,109,101,109,111,114,121,32,116,111,32,112,114,111,99,101,115,115,32,116,101,120,116,32,99,104,117,110,107,0,0,0,0,0,0,0,117,110,107,110,111,119,110,32,99,111,109,112,114,101,115,115,105,111,110,32,116,121,112,101,0,0,0,0,0,0,0,0,105,110,115,117,102,102,105,99,105,101,110,116,32,109,101,109,111,114,121,0,0,0,0,0,98,97,100,32,99,111,109,112,114,101,115,115,105,111,110,32,105,110,102,111,0,0,0,0,101,114,114,111,114,32,105,110,32,117,115,101,114,32,99,104,117,110,107,0,0,0,0,0,83,97,118,105,110,103,32,117,110,107,110,111,119,110,32,99,104,117,110,107,58,0,0,0,102,111,114,99,105,110,103,32,115,97,118,101,32,111,102,32,97,110,32,117,110,104,97,110,100,108,101,100,32,99,104,117,110,107,59,32,112,108,101,97,115,101,32,99,97,108,108,32,112,110,103,95,115,101,116,95,107,101,101,112,95,117,110,107,110,111,119,110,95,99,104,117,110,107,115,0,0,0,0,0,117,110,104,97,110,100,108,101,100,32,99,114,105,116,105,99,97,108,32,99,104,117,110,107,0,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,99,104,117,110,107,32,116,121,112,101,0,0,0,0,0,0,105,110,116,101,114,110,97,108,32,114,111,119,32,108,111,103,105,99,32,101,114,114,111,114,0,0,0,0,0,0,0,0,105,110,116,101,114,110,97,108,32,114,111,119,32,115,105,122,101,32,99,97,108,99,117,108,97,116,105,111,110,32,101,114,114,111,114,0,0,0,0,0,105,110,116,101,114,110,97,108,32,114,111,119,32,119,105,100,116,104,32,101,114,114,111,114,0,0,0,0,0,0,0,0,1,1,1,1,16,16,16,16,17,17,17,17,68,68,68,68,85,85,85,85,170,170,170,170,3,0,3,0,0,3,0,3,3,3,3,3,48,48,48,48,51,51,51,51,204,204,204,204,15,0,0,0,0,0,15,0,15,0,15,0,0,15,0,15,15,15,15,15,240,240,240,240,128,128,128,128,8,8,8,8,136,136,136,136,34,34,34,34,170,170,170,170,85,85,85,85,192,0,192,0,0,192,0,192,192,192,192,192,12,12,12,12,204,204,204,204,51,51,51,51,240,0,0,0,0,0,240,0,240,0,240,0,0,240,0,240,240,240,240,240,15,15,15,15,240,240,240,240,68,68,68,68,170,170,170,170,0,255,0,255,48,48,48,48,204,204,204,204,0,0,255,255,0,15,0,15,240,240,240,240,15,15,15,15,34,34,34,34,85,85,85,85,0,255,0,255,12,12,12,12,51,51,51,51,0,0,255,255,0,240,0,240,15,15,15,15,105,110,118,97,108,105,100,32,117,115,101,114,32,116,114,97,110,115,102,111,114,109,32,112,105,120,101,108,32,100,101,112,116,104,0,0,0,0,0,0,8,0,0,0,8,0,0,0,4,0,0,0,4,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,78,111,116,32,101,110,111,117,103,104,32,105,109,97,103,101,32,100,97,116,97,0,0,0,69,120,116,114,97,32,99,111,109,112,114,101,115,115,101,100,32,100,97,116,97,0,0,0,84,111,111,32,109,117,99,104,32,105,109,97,103,101,32,100,97,116,97,0,0,0,0,0,0,0,4,0,2,0,1,0,8,8,8,4,4,2,2,0,0,4,0,2,0,1,0,0,8,8,4,4,2,2,1,0,82,111,119,32,104,97,115,32,116,111,111,32,109,97,110,121,32,98,121,116,101,115,32,116,111,32,97,108,108,111,99,97,116,101,32,105,110,32,109,101,109,111,114,121,0,0,0,0,117,110,107,110,111,119,110,32,99,104,117,110,107,32,101,120,99,101,101,100,115,32,109,101,109,111,114,121,32,108,105,109,105,116,115,0,0,0,0,0,122,115,116,114,101,97,109,32,117,110,99,108,97,105,109,101,100,0,0,0,0,0,0,0,105,110,115,117,102,102,105,99,105,101,110,116,32,109,101,109,111,114,121,32,116,111,32,114,101,97,100,32,99,104,117,110,107,0,0,0,0,0,0,0,32,117,115,105,110,103,32,122,115,116,114,101,97,109,0,0,49,46,50,46,53,0,0,0,73,110,118,97,108,105,100,32,112,97,108,101,116,116,101,32,115,105,122,101,44,32,104,73,83,84,32,97,108,108,111,99,97,116,105,111,110,32,115,107,105,112,112,101,100,0,0,0,73,110,115,117,102,102,105,99,105,101,110,116,32,109,101,109,111,114,121,32,102,111,114,32,104,73,83,84,32,99,104,117,110,107,32,100,97,116,97,0,73,110,118,97,108,105,100,32,112,67,65,76,32,101,113,117,97,116,105,111,110,32,116,121,112,101,0,0,0,0,0,0,73,110,118,97,108,105,100,32,112,67,65,76,32,112,97,114,97,109,101,116,101,114,32,99,111,117,110,116,0,0,0,0,73,110,118,97,108,105,100,32,102,111,114,109,97,116,32,102,111,114,32,112,67,65,76,32,112,97,114,97,109,101,116,101,114,0,0,0,0,0,0,0,73,110,115,117,102,102,105,99,105,101,110,116,32,109,101,109,111,114,121,32,102,111,114,32,112,67,65,76,32,112,117,114,112,111,115,101,0,0,0,0,73,110,115,117,102,102,105,99,105,101,110,116,32,109,101,109,111,114,121,32,102,111,114,32,112,67,65,76,32,117,110,105,116,115,0,0,0,0,0,0,73,110,115,117,102,102,105,99,105,101,110,116,32,109,101,109,111,114,121,32,102,111,114,32,112,67,65,76,32,112,97,114,97,109,115,0,0,0,0,0,73,110,115,117,102,102,105,99,105,101,110,116,32,109,101,109,111,114,121,32,102,111,114,32,112,67,65,76,32,112,97,114,97,109,101,116,101,114,0,0,73,110,118,97,108,105,100,32,115,67,65,76,32,117,110,105,116,0,0,0,0,0,0,0,73,110,118,97,108,105,100,32,115,67,65,76,32,119,105,100,116,104,0,0,0,0,0,0,73,110,118,97,108,105,100,32,115,67,65,76,32,104,101,105,103,104,116,0,0,0,0,0,77,101,109,111,114,121,32,97,108,108,111,99,97,116,105,111,110,32,102,97,105,108,101,100,32,119,104,105,108,101,32,112,114,111,99,101,115,115,105,110,103,32,115,67,65,76,0,0,73,110,118,97,108,105,100,32,112,97,108,101,116,116,101,32,108,101,110,103,116,104,0,0,73,110,118,97,108,105,100,32,112,97,108,101,116,116,101,0,116,111,111,32,109,97,110,121,32,116,101,120,116,32,99,104,117,110,107,115,0,0,0,0,116,101,120,116,32,99,111,109,112,114,101,115,115,105,111,110,32,109,111,100,101,32,105,115,32,111,117,116,32,111,102,32,114,97,110,103,101,0,0,0,116,101,120,116,32,99,104,117,110,107,58,32,111,117,116,32,111,102,32,109,101,109,111,114,121,0,0,0,0,0,0,0,73,103,110,111,114,105,110,103,32,105,110,118,97,108,105,100,32,116,105,109,101,32,118,97,108,117,101,0,0,0,0,0,116,82,78,83,32,99,104,117,110,107,32,104,97,115,32,111,117,116,45,111,102,45,114,97,110,103,101,32,115,97,109,112,108,101,115,32,102,111,114,32,98,105,116,95,100,101,112,116,104,0,0,0,0,0,0,0,116,111,111,32,109,97,110,121,32,115,80,76,84,32,99,104,117,110,107,115,0,0,0,0,112,110,103,95,115,101,116,95,115,80,76,84,58,32,105,110,118,97,108,105,100,32,115,80,76,84,0,0,0,0,0,0,115,80,76,84,32,111,117,116,32,111,102,32,109,101,109,111,114,121,0,0,0,0,0,0,116,111,111,32,109,97,110,121,32,117,110,107,110,111,119,110,32,99,104,117,110,107,115,0,117,110,107,110,111,119,110,32,99,104,117,110,107,58,32,111,117,116,32,111,102,32,109,101,109,111,114,121,0,0,0,0,112,110,103,95,115,101,116,95,117,110,107,110,111,119,110,95,99,104,117,110,107,115,32,110,111,119,32,101,120,112,101,99,116,115,32,97,32,118,97,108,105,100,32,108,111,99,97,116,105,111,110,0,0,0,0,0,105,110,118,97,108,105,100,32,108,111,99,97,116,105,111,110,32,105,110,32,112,110,103,95,115,101,116,95,117,110,107,110,111,119,110,95,99,104,117,110,107,115,0,0,0,0,0,0,0,128,64,192,32,160,96,224,16,144,80,208,48,176,112,240,8,136,72,200,40,168,104,232,24,152,88,216,56,184,120,248,4,132,68,196,36,164,100,228,20,148,84,212,52,180,116,244,12,140,76,204,44,172,108,236,28,156,92,220,60,188,124,252,2,130,66,194,34,162,98,226,18,146,82,210,50,178,114,242,10,138,74,202,42,170,106,234,26,154,90,218,58,186,122,250,6,134,70,198,38,166,102,230,22,150,86,214,54,182,118,246,14,142,78,206,46,174,110,238,30,158,94,222,62,190,126,254,1,129,65,193,33,161,97,225,17,145,81,209,49,177,113,241,9,137,73,201,41,169,105,233,25,153,89,217,57,185,121,249,5,133,69,197,37,165,101,229,21,149,85,213,53,181,117,245,13,141,77,205,45,173,109,237,29,157,93,221,61,189,125,253,3,131,67,195,35,163,99,227,19,147,83,211,51,179,115,243,11,139,75,203,43,171,107,235,27,155,91,219,59,187,123,251,7,135,71,199,39,167,103,231,23,151,87,215,55,183,119,247,15,143,79,207,47,175,111,239,31,159,95,223,63,191,127,255,0,64,128,192,16,80,144,208,32,96,160,224,48,112,176,240,4,68,132,196,20,84,148,212,36,100,164,228,52,116,180,244,8,72,136,200,24,88,152,216,40,104,168,232,56,120,184,248,12,76,140,204,28,92,156,220,44,108,172,236,60,124,188,252,1,65,129,193,17,81,145,209,33,97,161,225,49,113,177,241,5,69,133,197,21,85,149,213,37,101,165,229,53,117,181,245,9,73,137,201,25,89,153,217,41,105,169,233,57,121,185,249,13,77,141,205,29,93,157,221,45,109,173,237,61,125,189,253,2,66,130,194,18,82,146,210,34,98,162,226,50,114,178,242,6,70,134,198,22,86,150,214,38,102,166,230,54,118,182,246,10,74,138,202,26,90,154,218,42,106,170,234,58,122,186,250,14,78,142,206,30,94,158,222,46,110,174,238,62,126,190,254,3,67,131,195,19,83,147,211,35,99,163,227,51,115,179,243,7,71,135,199,23,87,151,215,39,103,167,231,55,119,183,247,11,75,139,203,27,91,155,219,43,107,171,235,59,123,187,251,15,79,143,207,31,95,159,223,47,111,175,239,63,127,191,255,0,16,32,48,64,80,96,112,128,144,160,176,192,208,224,240,1,17,33,49,65,81,97,113,129,145,161,177,193,209,225,241,2,18,34,50,66,82,98,114,130,146,162,178,194,210,226,242,3,19,35,51,67,83,99,115,131,147,163,179,195,211,227,243,4,20,36,52,68,84,100,116,132,148,164,180,196,212,228,244,5,21,37,53,69,85,101,117,133,149,165,181,197,213,229,245,6,22,38,54,70,86,102,118,134,150,166,182,198,214,230,246,7,23,39,55,71,87,103,119,135,151,167,183,199,215,231,247,8,24,40,56,72,88,104,120,136,152,168,184,200,216,232,248,9,25,41,57,73,89,105,121,137,153,169,185,201,217,233,249,10,26,42,58,74,90,106,122,138,154,170,186,202,218,234,250,11,27,43,59,75,91,107,123,139,155,171,187,203,219,235,251,12,28,44,60,76,92,108,124,140,156,172,188,204,220,236,252,13,29,45,61,77,93,109,125,141,157,173,189,205,221,237,253,14,30,46,62,78,94,110,126,142,158,174,190,206,222,238,254,15,31,47,63,79,95,111,127,143,159,175,191,207,223,239,255,0,0,0,0,150,48,7,119,44,97,14,238,186,81,9,153,25,196,109,7,143,244,106,112,53,165,99,233,163,149,100,158,50,136,219,14,164,184,220,121,30,233,213,224,136,217,210,151,43,76,182,9,189,124,177,126,7,45,184,231,145,29,191,144,100,16,183,29,242,32,176,106,72,113,185,243,222,65,190,132,125,212,218,26,235,228,221,109,81,181,212,244,199,133,211,131,86,152,108,19,192,168,107,100,122,249,98,253,236,201,101,138,79,92,1,20,217,108,6,99,99,61,15,250,245,13,8,141,200,32,110,59,94,16,105,76,228,65,96,213,114,113,103,162,209,228,3,60,71,212,4,75,253,133,13,210,107,181,10,165,250,168,181,53,108,152,178,66,214,201,187,219,64,249,188,172,227,108,216,50,117,92,223,69,207,13,214,220,89,61,209,171,172,48,217,38,58,0,222,81,128,81,215,200,22,97,208,191,181,244,180,33,35,196,179,86,153,149,186,207,15,165,189,184,158,184,2,40,8,136,5,95,178,217,12,198,36,233,11,177,135,124,111,47,17,76,104,88,171,29,97,193,61,45,102,182,144,65,220,118,6,113,219,1,188,32,210,152,42,16,213,239,137,133,177,113,31,181,182,6,165,228,191,159,51,212,184,232,162,201,7,120,52,249,0,15,142,168,9,150,24,152,14,225,187,13,106,127,45,61,109,8,151,108,100,145,1,92,99,230,244,81,107,107,98,97,108,28,216,48,101,133,78,0,98,242,237,149,6,108,123,165,1,27,193,244,8,130,87,196,15,245,198,217,176,101,80,233,183,18,234,184,190,139,124,136,185,252,223,29,221,98,73,45,218,21,243,124,211,140,101,76,212,251,88,97,178,77,206,81,181,58,116,0,188,163,226,48,187,212,65,165,223,74,215,149,216,61,109,196,209,164,251,244,214,211,106,233,105,67,252,217,110,52,70,136,103,173,208,184,96,218,115,45,4,68,229,29,3,51,95,76,10,170,201,124,13,221,60,113,5,80,170,65,2,39,16,16,11,190,134,32,12,201,37,181,104,87,179,133,111,32,9,212,102,185,159,228,97,206,14,249,222,94,152,201,217,41,34,152,208,176,180,168,215,199,23,61,179,89,129,13,180,46,59,92,189,183,173,108,186,192,32,131,184,237,182,179,191,154,12,226,182,3,154,210,177,116,57,71,213,234,175,119,210,157,21,38,219,4,131,22,220,115,18,11,99,227,132,59,100,148,62,106,109,13,168,90,106,122,11,207,14,228,157,255,9,147,39,174,0,10,177,158,7,125,68,147,15,240,210,163,8,135,104,242,1,30,254,194,6,105,93,87,98,247,203,103,101,128,113,54,108,25,231,6,107,110,118,27,212,254,224,43,211,137,90,122,218,16,204,74,221,103,111,223,185,249,249,239,190,142,67,190,183,23,213,142,176,96,232,163,214,214,126,147,209,161,196,194,216,56,82,242,223,79,241,103,187,209,103,87,188,166,221,6,181,63,75,54,178,72,218,43,13,216,76,27,10,175,246,74,3,54,96,122,4,65,195,239,96,223,85,223,103,168,239,142,110,49,121,190,105,70,140,179,97,203,26,131,102,188,160,210,111,37,54,226,104,82,149,119,12,204,3,71,11,187,185,22,2,34,47,38,5,85,190,59,186,197,40,11,189,178,146,90,180,43,4,106,179,92,167,255,215,194,49,207,208,181,139,158,217,44,29,174,222,91,176,194,100,155,38,242,99,236,156,163,106,117,10,147,109,2,169,6,9,156,63,54,14,235,133,103,7,114,19,87,0,5,130,74,191,149,20,122,184,226,174,43,177,123,56,27,182,12,155,142,210,146,13,190,213,229,183,239,220,124,33,223,219,11,212,210,211,134,66,226,212,241,248,179,221,104,110,131,218,31,205,22,190,129,91,38,185,246,225,119,176,111,119,71,183,24,230,90,8,136,112,106,15,255,202,59,6,102,92,11,1,17,255,158,101,143,105,174,98,248,211,255,107,97,69,207,108,22,120,226,10,160,238,210,13,215,84,131,4,78,194,179,3,57,97,38,103,167,247,22,96,208,77,71,105,73,219,119,110,62,74,106,209,174,220,90,214,217,102,11,223,64,240,59,216,55,83,174,188,169,197,158,187,222,127,207,178,71,233,255,181,48,28,242,189,189,138,194,186,202,48,147,179,83,166,163,180,36,5,54,208,186,147,6,215,205,41,87,222,84,191,103,217,35,46,122,102,179,184,74,97,196,2,27,104,93,148,43,111,42,55,190,11,180,161,142,12,195,27,223,5,90,141,239,2,45,0,0,0,0,65,49,27,25,130,98,54,50,195,83,45,43,4,197,108,100,69,244,119,125,134,167,90,86,199,150,65,79,8,138,217,200,73,187,194,209,138,232,239,250,203,217,244,227,12,79,181,172,77,126,174,181,142,45,131,158,207,28,152,135,81,18,194,74,16,35,217,83,211,112,244,120,146,65,239,97,85,215,174,46,20,230,181,55,215,181,152,28,150,132,131,5,89,152,27,130,24,169,0,155,219,250,45,176,154,203,54,169,93,93,119,230,28,108,108,255,223,63,65,212,158,14,90,205,162,36,132,149,227,21,159,140,32,70,178,167,97,119,169,190,166,225,232,241,231,208,243,232,36,131,222,195,101,178,197,218,170,174,93,93,235,159,70,68,40,204,107,111,105,253,112,118,174,107,49,57,239,90,42,32,44,9,7,11,109,56,28,18,243,54,70,223,178,7,93,198,113,84,112,237,48,101,107,244,247,243,42,187,182,194,49,162,117,145,28,137,52,160,7,144,251,188,159,23,186,141,132,14,121,222,169,37,56,239,178,60,255,121,243,115,190,72,232,106,125,27,197,65,60,42,222,88,5,79,121,240,68,126,98,233,135,45,79,194,198,28,84,219,1,138,21,148,64,187,14,141,131,232,35,166,194,217,56,191,13,197,160,56,76,244,187,33,143,167,150,10,206,150,141,19,9,0,204,92,72,49,215,69,139,98,250,110,202,83,225,119,84,93,187,186,21,108,160,163,214,63,141,136,151,14,150,145,80,152,215,222,17,169,204,199,210,250,225,236,147,203,250,245,92,215,98,114,29,230,121,107,222,181,84,64,159,132,79,89,88,18,14,22,25,35,21,15,218,112,56,36,155,65,35,61,167,107,253,101,230,90,230,124,37,9,203,87,100,56,208,78,163,174,145,1,226,159,138,24,33,204,167,51,96,253,188,42,175,225,36,173,238,208,63,180,45,131,18,159,108,178,9,134,171,36,72,201,234,21,83,208,41,70,126,251,104,119,101,226,246,121,63,47,183,72,36,54,116,27,9,29,53,42,18,4,242,188,83,75,179,141,72,82,112,222,101,121,49,239,126,96,254,243,230,231,191,194,253,254,124,145,208,213,61,160,203,204,250,54,138,131,187,7,145,154,120,84,188,177,57,101,167,168,75,152,131,59,10,169,152,34,201,250,181,9,136,203,174,16,79,93,239,95,14,108,244,70,205,63,217,109,140,14,194,116,67,18,90,243,2,35,65,234,193,112,108,193,128,65,119,216,71,215,54,151,6,230,45,142,197,181,0,165,132,132,27,188,26,138,65,113,91,187,90,104,152,232,119,67,217,217,108,90,30,79,45,21,95,126,54,12,156,45,27,39,221,28,0,62,18,0,152,185,83,49,131,160], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+10240);
/* memory initializer */ allocatei8", ALLOC_NONE, Runtime.GLOBAL_BASE+20480);
/* memory initializer */ allocate([69,0,70,0,71,0,72,0,73,0,74,0,75,0,76,0,77,0,78,0,79,0,80,0,81,0,82,0,83,0,84,0,85,0,86,0,87,0,88,0,89,0,90,0,91,0,92,0,93,0,94,0,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,0,97,0,98,0,99,0,100,0,101,0,102,0,103,0,104,0,105,0,106,0,107,0,108,0,109,0,110,0,0,0,111,0,112,0,113,0,114,0,0,0,115,0,116,0,117,0,118,0,119,0,120,0,121,0,122,0,0,0,123,0,0,0,124,0,125,0,126,0,127,0,128,0,129,0,130,0,131,0,0,0,132,0,133,0,0,0,134,0,135,0,136,0,137,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,138,0,0,0,139,0,0,0,0,0,0,0,0,0,140,0,141,0,142,0,143,0,0,0,0,0,0,0,0,0,0,0,144,0,0,0,0,0,0,0,145,0,0,0,0,0,146,0,147,0,148,0,149,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,229,0,230,0,0,0,231,0,232,0,233,0,234,0,235,0,236,0,237,0,238,0,13,0,14,0,15,0,99,0,239,0,240,0,241,0,242,0,243,0,244,0,245,0,246,0,247,0,248,0,27,0,28,0,249,0,250,0,251,0,252,0,0,0,253,0,254,0,255,0,0,1,1,1,0,0,0,0,0,0,2,1,0,0,0,0,3,1,4,1,5,1,6,1,0,0,0,0,7,1,8,1,9,1,0,0,10,1,109,0,110,0,11,1,12,1,13,1,0,0,14,1,15,1,16,1,17,1,18,1,19,1,20,1,21,1,22,1,23,1,24,1,25,1,26,1,27,1,28,1,29,1,30,1,31,1,32,1,33,1,34,1,35,1,36,1,37,1,38,1,39,1,40,1,41,1,42,1,43,1,44,1,45,1,46,1,47,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,1,49,1,50,1,0,0,0,0,51,1,52,1,53,1,54,1,55,1,0,0,56,1,0,0,0,0,57,1,0,0,0,0,58,1,59,1,0,0,0,0,60,1,61,1,62,1,0,0,0,0,0,0,158,0,155,0,163,0,63,1,64,1,65,1,66,1,67,1,68,1,69,1,0,0,0,0,70,1,150,0,164,0,169,0,71,1,72,1,73,1,74,1,75,1,76,1,77,1,78,1,79,1,80,1,81,1,82,1,83,1,84,1,85,1,86,1,87,1,88,1,89,1,90,1,91,1,92,1,93,1,94,1,95,1,96,1,97,1,98,1,99,1,100,1,101,1,102,1,103,1,104,1,105,1,106,1,107,1,108,1,109,1,110,1,111,1,112,1,113,1,114,1,115,1,116,1,117,1,118,1,119,1,120,1,121,1,122,1,46,110,117,108,108,0,110,111,110,109,97,114,107,105,110,103,114,101,116,117,114,110,0,110,111,116,101,113,117,97,108,0,105,110,102,105,110,105,116,121,0,108,101,115,115,101,113,117,97,108,0,103,114,101,97,116,101,114,101,113,117,97,108,0,112,97,114,116,105,97,108,100,105,102,102,0,115,117,109,109,97,116,105,111,110,0,112,114,111,100,117,99,116,0,112,105,0,105,110,116,101,103,114,97,108,0,79,109,101,103,97,0,114,97,100,105,99,97,108,0,97,112,112,114,111,120,101,113,117,97,108,0,68,101,108,116,97,0,110,111,110,98,114,101,97,107,105,110,103,115,112,97,99,101,0,108,111,122,101,110,103,101,0,97,112,112,108,101,0,102,114,97,110,99,0,71,98,114,101,118,101,0,103,98,114,101,118,101,0,73,100,111,116,97,99,99,101,110,116,0,83,99,101,100,105,108,108,97,0,115,99,101,100,105,108,108,97,0,67,97,99,117,116,101,0,99,97,99,117,116,101,0,67,99,97,114,111,110,0,99,99,97,114,111,110,0,100,99,114,111,97,116,0,46,110,111,116,100,101,102,0,115,112,97,99,101,0,101,120,99,108,97,109,0,113,117,111,116,101,100,98,108,0,110,117,109,98,101,114,115,105,103,110,0,100,111,108,108,97,114,0,112,101,114,99,101,110,116,0,97,109,112,101,114,115,97,110,100,0,113,117,111,116,101,114,105,103,104,116,0,112,97,114,101,110,108,101,102,116,0,112,97,114,101,110,114,105,103,104,116,0,97,115,116,101,114,105,115,107,0,112,108,117,115,0,99,111,109,109,97,0,104,121,112,104,101,110,0,112,101,114,105,111,100,0,115,108,97,115,104,0,122,101,114,111,0,111,110,101,0,116,119,111,0,116,104,114,101,101,0,102,111,117,114,0,102,105,118,101,0,115,105,120,0,115,101,118,101,110,0,101,105,103,104,116,0,110,105,110,101,0,99,111,108,111,110,0,115,101,109,105,99,111,108,111,110,0,108,101,115,115,0,101,113,117,97,108,0,103,114,101,97,116,101,114,0,113,117,101,115,116,105,111,110,0,97,116,0,65,0,66,0,67,0,68,0,69,0,70,0,71,0,72,0,73,0,74,0,75,0,76,0,77,0,78,0,79,0,80,0,81,0,82,0,83,0,84,0,85,0,86,0,87,0,88,0,89,0,90,0,98,114,97,99,107,101,116,108,101,102,116,0,98,97,99,107,115,108,97,115,104,0,98,114,97,99,107,101,116,114,105,103,104,116,0,97,115,99,105,105,99,105,114,99,117,109,0,117,110,100,101,114,115,99,111,114,101,0,113,117,111,116,101,108,101,102,116,0,97,0,98,0,99,0,100,0,101,0,102,0,103,0,104,0,105,0,106,0,107,0,108,0,109,0,110,0,111,0,112,0,113,0,114,0,115,0,116,0,117,0,118,0,119,0,120,0,121,0,122,0,98,114,97,99,101,108,101,102,116,0,98,97,114,0,98,114,97,99,101,114,105,103,104,116,0,97,115,99,105,105,116,105,108,100,101,0,101,120,99,108,97,109,100,111,119,110,0,99,101,110,116,0,115,116,101,114,108,105,110,103,0,102,114,97,99,116,105,111,110,0,121,101,110,0,102,108,111,114,105,110,0,115,101,99,116,105,111,110,0,99,117,114,114,101,110,99,121,0,113,117,111,116,101,115,105,110,103,108,101,0,113,117,111,116,101,100,98,108,108,101,102,116,0,103,117,105,108,108,101,109,111,116,108,101,102,116,0,103,117,105,108,115,105,110,103,108,108,101,102,116,0,103,117,105,108,115,105,110,103,108,114,105,103,104,116,0,102,105,0,102,108,0,101,110,100,97,115,104,0,100,97,103,103,101,114,0,100,97,103,103,101,114,100,98,108,0,112,101,114,105,111,100,99,101,110,116,101,114,101,100,0,112,97,114,97,103,114,97,112,104,0,98,117,108,108,101,116,0,113,117,111,116,101,115,105,110,103,108,98,97,115,101,0,113,117,111,116,101,100,98,108,98,97,115,101,0,113,117,111,116,101,100,98,108,114,105,103,104,116,0,103,117,105,108,108,101,109,111,116,114,105,103,104,116,0,101,108,108,105,112,115,105,115,0,112,101,114,116,104,111,117,115,97,110,100,0,113,117,101,115,116,105,111,110,100,111,119,110,0,103,114,97,118,101,0,97,99,117,116,101,0,99,105,114,99,117,109,102,108,101,120,0,116,105,108,100,101,0,109,97,99,114,111,110,0,98,114,101,118,101,0,100,111,116,97,99,99,101,110,116,0,100,105,101,114,101,115,105,115,0,114,105,110,103,0,99,101,100,105,108,108,97,0,104,117,110,103,97,114,117,109,108,97,117,116,0,111,103,111,110,101,107,0,99,97,114,111,110,0,101,109,100,97,115,104,0,65,69,0,111,114,100,102,101,109,105,110,105,110,101,0,76,115,108,97,115,104,0,79,115,108,97,115,104,0,79,69,0,111,114,100,109,97,115,99,117,108,105,110,101,0,97,101,0,100,111,116,108,101,115,115,105,0,108,115,108,97,115,104,0,111,115,108,97,115,104,0,111,101,0,103,101,114,109,97,110,100,98,108,115,0,111,110,101,115,117,112,101,114,105,111,114,0,108,111,103,105,99,97,108,110,111,116,0,109,117,0,116,114,97,100,101,109,97,114,107,0,69,116,104,0,111,110,101,104,97,108,102,0,112,108,117,115,109,105,110,117,115,0,84,104,111,114,110,0,111,110,101,113,117,97,114,116,101,114,0,100,105,118,105,100,101,0,98,114,111,107,101,110,98,97,114,0,100,101,103,114,101,101,0,116,104,111,114,110,0,116,104,114,101,101,113,117,97,114,116,101,114,115,0,116,119,111,115,117,112,101,114,105,111,114,0,114,101,103,105,115,116,101,114,101,100,0,109,105,110,117,115,0,101,116,104,0,109,117,108,116,105,112,108,121,0,116,104,114,101,101,115,117,112,101,114,105,111,114,0,99,111,112,121,114,105,103,104,116,0,65,97,99,117,116,101,0,65,99,105,114,99,117,109,102,108,101,120,0,65,100,105,101,114,101,115,105,115,0,65,103,114,97,118,101,0,65,114,105,110,103,0,65,116,105,108,100,101,0,67,99,101,100,105,108,108,97,0,69,97,99,117,116,101,0,69,99,105,114,99,117,109,102,108,101,120,0,69,100,105,101,114,101,115,105,115,0,69,103,114,97,118,101,0,73,97,99,117,116,101,0,73,99,105,114,99,117,109,102,108,101,120,0,73,100,105,101,114,101,115,105,115,0,73,103,114,97,118,101,0,78,116,105,108,100,101,0,79,97,99,117,116,101,0,79,99,105,114,99,117,109,102,108,101,120,0,79,100,105,101,114,101,115,105,115,0,79,103,114,97,118,101,0,79,116,105,108,100,101,0,83,99,97,114,111,110,0,85,97,99,117,116,101,0,85,99,105,114,99,117,109,102,108,101,120,0,85,100,105,101,114,101,115,105,115,0,85,103,114,97,118,101,0,89,97,99,117,116,101,0,89,100,105,101,114,101,115,105,115,0,90,99,97,114,111,110,0,97,97,99,117,116,101,0,97,99,105,114,99,117,109,102,108,101,120,0,97,100,105,101,114,101,115,105,115,0,97,103,114,97,118,101,0,97,114,105,110,103,0,97,116,105,108,100,101,0,99,99,101,100,105,108,108,97,0,101,97,99,117,116,101,0,101,99,105,114,99,117,109,102,108,101,120,0,101,100,105,101,114,101,115,105,115,0,101,103,114,97,118,101,0,105,97,99,117,116,101,0,105,99,105,114,99,117,109,102,108,101,120,0,105,100,105,101,114,101,115,105,115,0,105,103,114,97,118,101,0,110,116,105,108,100,101,0,111,97,99,117,116,101,0,111,99,105,114,99,117,109,102,108,101,120,0,111,100,105,101,114,101,115,105,115,0,111,103,114,97,118,101,0,111,116,105,108,100,101,0,115,99,97,114,111,110,0,117,97,99,117,116,101,0,117,99,105,114,99,117,109,102,108,101,120,0,117,100,105,101,114,101,115,105,115,0,117,103,114,97,118,101,0,121,97,99,117,116,101,0,121,100,105,101,114,101,115,105,115,0,122,99,97,114,111,110,0,101,120,99,108,97,109,115,109,97,108,108,0,72,117,110,103,97,114,117,109,108,97,117,116,115,109,97,108,108,0,100,111,108,108,97,114,111,108,100,115,116,121,108,101,0,100,111,108,108,97,114,115,117,112,101,114,105,111,114,0,97,109,112,101,114,115,97,110,100,115,109,97,108,108,0,65,99,117,116,101,115,109,97,108,108,0,112,97,114,101,110,108,101,102,116,115,117,112,101,114,105,111,114,0,112,97,114,101,110,114,105,103,104,116,115,117,112,101,114,105,111,114,0,116,119,111,100,111,116,101,110,108,101,97,100,101,114,0,111,110,101,100,111,116,101,110,108,101,97,100,101,114,0,122,101,114,111,111,108,100,115,116,121,108,101,0,111,110,101,111,108,100,115,116,121,108,101,0,116,119,111,111,108,100,115,116,121,108,101,0,116,104,114,101,101,111,108,100,115,116,121,108,101,0,102,111,117,114,111,108,100,115,116,121,108,101,0,102,105,118,101,111,108,100,115,116,121,108,101,0,115,105,120,111,108,100,115,116,121,108,101,0,115,101,118,101,110,111,108,100,115,116,121,108,101,0,101,105,103,104,116,111,108,100,115,116,121,108,101,0,110,105,110,101,111,108,100,115,116,121,108,101,0,99,111,109,109,97,115,117,112,101,114,105,111,114,0,116,104,114,101,101,113,117,97,114,116,101,114,115,101,109,100,97,115,104,0,112,101,114,105,111,100,115,117,112,101,114,105,111,114,0,113,117,101,115,116,105,111,110,115,109,97,108,108,0,97,115,117,112,101,114,105,111,114,0,98,115,117,112,101,114,105,111,114,0,99,101,110,116,115,117,112,101,114,105,111,114,0,100,115,117,112,101,114,105,111,114,0,101,115,117,112,101,114,105,111,114,0,105,115,117,112,101,114,105,111,114,0,108,115,117,112,101,114,105,111,114,0,109,115,117,112,101,114,105,111,114,0,110,115,117,112,101,114,105,111,114,0,111,115,117,112,101,114,105,111,114,0,114,115,117,112,101,114,105,111,114,0,115,115,117,112,101,114,105,111,114,0,116,115,117,112,101,114,105,111,114,0,102,102,0,102,102,105,0,102,102,108,0,112,97,114,101,110,108,101,102,116,105,110,102,101,114,105,111,114,0,112,97,114,101,110,114,105,103,104,116,105,110,102,101,114,105,111,114,0,67,105,114,99,117,109,102,108,101,120,115,109,97,108,108,0,104,121,112,104,101,110,115,117,112,101,114,105,111,114,0,71,114,97,118,101,115,109,97,108,108,0,65,115,109,97,108,108,0,66,115,109,97,108,108,0,67,115,109,97,108,108,0,68,115,109,97,108,108,0,69,115,109,97,108,108,0,70,115,109,97,108,108,0,71,115,109,97,108,108,0,72,115,109,97,108,108,0,73,115,109,97,108,108,0,74,115,109,97,108,108,0,75,115,109,97,108,108,0,76,115,109,97,108,108,0,77,115,109,97,108,108,0,78,115,109,97,108,108,0,79,115,109,97,108,108,0,80,115,109,97,108,108,0,81,115,109,97,108,108,0,82,115,109,97,108,108,0,83,115,109,97,108,108,0,84,115,109,97,108,108,0,85,115,109,97,108,108,0,86,115,109,97,108,108,0,87,115,109,97,108,108,0,88,115,109,97,108,108,0,89,115,109,97,108,108,0,90,115,109,97,108,108,0,99,111,108,111,110,109,111,110,101,116,97,114,121,0,111,110,101,102,105,116,116,101,100,0,114,117,112,105,97,104,0,84,105,108,100,101,115,109,97,108,108,0,101,120,99,108,97,109,100,111,119,110,115,109,97,108,108,0,99,101,110,116,111,108,100,115,116,121,108,101,0,76,115,108,97,115,104,115,109,97,108,108,0,83,99,97,114,111,110,115,109,97,108,108,0,90,99,97,114,111,110,115,109,97,108,108,0,68,105,101,114,101,115,105,115,115,109,97,108,108,0,66,114,101,118,101,115,109,97,108,108,0,67,97,114,111,110,115,109,97,108,108,0,68,111,116,97,99,99,101,110,116,115,109,97,108,108,0,77,97,99,114,111,110,115,109,97,108,108,0,102,105,103,117,114,101,100,97,115,104,0,104,121,112,104,101,110,105,110,102,101,114,105,111,114,0,79,103,111,110,101,107,115,109,97,108,108,0,82,105,110,103,115,109,97,108,108,0,67,101,100,105,108,108,97,115,109,97,108,108,0,113,117,101,115,116,105,111,110,100,111,119,110,115,109,97,108,108,0,111,110,101,101,105,103,104,116,104,0,116,104,114,101,101,101,105,103,104,116,104,115,0,102,105,118,101,101,105,103,104,116,104,115,0,115,101,118,101,110,101,105,103,104,116,104,115,0,111,110,101,116,104,105,114,100,0,116,119,111,116,104,105,114,100,115,0,122,101,114,111,115,117,112,101,114,105,111,114,0,102,111,117,114,115,117,112,101,114,105,111,114,0,102,105,118,101,115,117,112,101,114,105,111,114,0,115,105,120,115,117,112,101,114,105,111,114,0,115,101,118,101,110,115,117,112,101,114,105,111,114,0,101,105,103,104,116,115,117,112,101,114,105,111,114,0,110,105,110,101,115,117,112,101,114,105,111,114,0,122,101,114,111,105,110,102,101,114,105,111,114,0,111,110,101,105,110,102,101,114,105,111,114,0,116,119,111,105,110,102,101,114,105,111,114,0,116,104,114,101,101,105,110,102,101,114,105,111,114,0,102,111,117,114,105,110,102,101,114,105,111,114,0,102,105,118,101,105,110,102,101,114,105,111,114,0,115,105,120,105,110,102,101,114,105,111,114,0,115,101,118,101,110,105,110,102,101,114,105,111,114,0,101,105,103,104,116,105,110,102,101,114,105,111,114,0,110,105,110,101,105,110,102,101,114,105,111,114,0,99,101,110,116,105,110,102,101,114,105,111,114,0,100,111,108,108,97,114,105,110,102,101,114,105,111,114,0,112,101,114,105,111,100,105,110,102,101,114,105,111,114,0,99,111,109,109,97,105,110,102,101,114,105,111,114,0,65,103,114,97,118,101,115,109,97,108,108,0,65,97,99,117,116,101,115,109,97,108,108,0,65,99,105,114,99,117,109,102,108,101,120,115,109,97,108,108,0,65,116,105,108,100,101,115,109,97,108,108,0,65,100,105,101,114,101,115,105,115,115,109,97,108,108,0,65,114,105,110,103,115,109,97,108,108,0,65,69,115,109,97,108,108,0,67,99,101,100,105,108,108,97,115,109,97,108,108,0,69,103,114,97,118,101,115,109,97,108,108,0,69,97,99,117,116,101,115,109,97,108,108,0,69,99,105,114,99,117,109,102,108,101,120,115,109,97,108,108,0,69,100,105,101,114,101,115,105,115,115,109,97,108,108,0,73,103,114,97,118,101,115,109,97,108,108,0,73,97,99,117,116,101,115,109,97,108,108,0,73,99,105,114,99,117,109,102,108,101,120,115,109,97,108,108,0,73,100,105,101,114,101,115,105,115,115,109,97,108,108,0,69,116,104,115,109,97,108,108,0,78,116,105,108,100,101,115,109,97,108,108,0,79,103,114,97,118,101,115,109,97,108,108,0,79,97,99,117,116,101,115,109,97,108,108,0,79,99,105,114,99,117,109,102,108,101,120,115,109,97,108,108,0,79,116,105,108,100,101,115,109,97,108,108,0,79,100,105,101,114,101,115,105,115,115,109,97,108,108,0,79,69,115,109,97,108,108,0,79,115,108,97,115,104,115,109,97,108,108,0,85,103,114,97,118,101,115,109,97,108,108,0,85,97,99,117,116,101,115,109,97,108,108,0,85,99,105,114,99,117,109,102,108,101,120,115,109,97,108,108,0,85,100,105,101,114,101,115,105,115,115,109,97,108,108,0,89,97,99,117,116,101,115,109,97,108,108,0,84,104,111,114,110,115,109,97,108,108,0,89,100,105,101,114,101,115,105,115,115,109,97,108,108,0,48,48,49,46,48,48,48,0,48,48,49,46,48,48,49,0,48,48,49,46,48,48,50,0,48,48,49,46,48,48,51,0,66,108,97,99,107,0,66,111,108,100,0,66,111,111,107,0,76,105,103,104,116,0,77,101,100,105,117,109,0,82,101,103,117,108,97,114,0,82,111,109,97,110,0,83,101,109,105,98,111,108,100,0,253,0,5,1,11,1,18,1,27,1,38,1,45,1,53,1,63,1,74,1,84,1,95,1,104,1,109,1,115,1,122,1,129,1,135,1,140,1,144,1,148,1,154,1,159,1,164,1,168,1,174,1,180,1,185,1,191,1,201,1,206,1,212,1,220,1,229,1,232,1,234,1,236,1,238,1,240,1,242,1,244,1,246,1,248,1,250,1,252,1,254,1,0,2,2,2,4,2,6,2,8,2,10,2,12,2,14,2,16,2,18,2,20,2,22,2,24,2,26,2,28,2,40,2,50,2,63,2,75,2,86,2,96,2,98,2,100,2,102,2,104,2,106,2,108,2,110,2,112,2,114,2,116,2,118,2,120,2,122,2,124,2,126,2,128,2,130,2,132,2,134,2,136,2,138,2,140,2,142,2,144,2,146,2,148,2,158,2,162,2,173,2,184,2,195,2,200,2,209,2,218,2,222,2,229,2,237,2,246,2,2,3,15,3,29,3,43,3,58,3,61,3,64,3,71,3,78,3,88,3,103,3,113,3,120,3,135,3,148,3,162,3,177,3,186,3,198,3,211,3,217,3,223,3,234,3,240,3,247,3,253,3,7,4,16,4,21,4,29,4,42,4,49,4,55,4,62,4,65,4,77,4,84,4,91,4,94,4,107,4,110,4,119,4,126,4,133,4,136,4,147,4,159,4,170,4,173,4,183,4,187,4,195,4,205,4,211,4,222,4,229,4,239,4,246,4,252,4,10,5,22,5,33,5,39,5,43,5,52,5,66,5,76,5,83,5,95,5,105,5,112,5,118,5,125,5,134,5,141,5,153,5,163,5,170,5,177,5,189,5,199,5,206,5,213,5,220,5,232,5,242,5,249,5,0,6,7,6,14,6,26,6,36,6,43,6,50,6,60,6,67,6,74,6,86,6,96,6,103,6,109,6,116,6,125,6,132,6,144,6,154,6,161,6,168,6,180,6,190,6,197,6,204,6,211,6,223,6,233,6,240,6,247,6,254,6,5,7,17,7,27,7,34,7,41,7,51,7,58,7,70,7,88,7,103,7,118,7,133,7,144,7,162,7,181,7,196,7,211,7,224,7,236,7,248,7,6,8,19,8,32,8,44,8,58,8,72,8,85,8,99,8,119,8,134,8,148,8,158,8,168,8,181,8,191,8,201,8,211,8,221,8,231,8,241,8,251,8,5,9,15,9,25,9,28,9,32,9,36,9,54,9,73,9,89,9,104,9,115,9,122,9,129,9,136,9,143,9,150,9,157,9,164,9,171,9,178,9,185,9,192,9,199,9,206,9,213,9,220,9,227,9,234,9,241,9,248,9,255,9,6,10,13,10,20,10,27,10,34,10,41,10,55,10,65,10,72,10,83,10,99,10,112,10,124,10,136,10,148,10,162,10,173,10,184,10,199,10,211,10,222,10,237,10,249,10,3,11,16,11,34,11,44,11,57,11,69,11,82,11,91,11,101,11,114,11,127,11,140,11,152,11,166,11,180,11,193,11,206,11,218,11,230,11,244,11,1,12,14,12,26,12,40,12,54,12,67,12,80,12,95,12,110,12,124,12,136,12,148,12,165,12,177,12,192,12,203,12,211,12,225,12,237,12,249,12,10,13,25,13,37,13,49,13,66,13,81,13,90,13,102,13,114,13,126,13,143,13,155,13,170,13,178,13,190,13,202,13,214,13,231,13,246,13,2,14,13,14,28,14,36,14,44,14,52,14,60,14,66,14,71,14,76,14,82,14,89,14,97,14,103,14,0,0,253,0,0,0,6,0,5,1,11,1,18,1,27,1,38,1,45,1,53,1,246,2,74,1,84,1,95,1,104,1,109,1,115,1,122,1,129,1,135,1,140,1,144,1,148,1,154,1,159,1,164,1,168,1,174,1,180,1,185,1,191,1,201,1,206,1,212,1,220,1,229,1,232,1,234,1,236,1,238,1,240,1,242,1,244,1,246,1,248,1,250,1,252,1,254,1,0,2,2,2,4,2,6,2,8,2,10,2,12,2,14,2,16,2,18,2,20,2,22,2,24,2,26,2,28,2,40,2,50,2,63,2,75,2,211,3,96,2,98,2,100,2,102,2,104,2,106,2,108,2,110,2,112,2,114,2,116,2,118,2,120,2,122,2,124,2,126,2,128,2,130,2,132,2,134,2,136,2,138,2,140,2,142,2,144,2,146,2,148,2,158,2,162,2,173,2,95,5,112,5,125,5,134,5,206,5,232,5,26,6,67,6,96,6,74,6,86,6,109,6,103,6,116,6,125,6,154,6,132,6,144,6,161,6,190,6,168,6,180,6,197,6,204,6,233,6,211,6,223,6,240,6,254,6,27,7,5,7,17,7,71,3,239,4,195,2,200,2,229,2,113,3,103,3,136,4,22,5,66,5,173,4,217,3,7,4,23,0,62,4,84,4,32,0,195,4,41,0,51,0,218,2,170,4,64,0,76,0,86,0,94,0,97,0,65,4,94,4,106,0,107,4,126,4,198,3,184,2,159,4,112,0,222,2,120,0,132,0,15,3,162,3,177,3,138,0,105,5,118,5,249,5,91,4,133,4,64,3,55,4,2,3,148,3,86,2,63,1,222,4,155,0,41,7,50,6,209,2,237,2,29,3,43,3,58,3,61,3,78,3,88,3,120,3,135,3,186,3,83,5,141,5,76,5,153,5,163,5,170,5,177,5,189,5,199,5,213,5,220,5,163,0,242,5,7,6,14,6,36,6,110,4,223,3,234,3,240,3,247,3,253,3,16,4,21,4,29,4,42,4,49,4,77,4,119,4,0,6,247,6,60,6,51,7,229,4,183,4,39,5,43,6,34,7,205,4,246,4,33,5,43,5,147,4,10,5,52,5,187,4,211,4,252,4,169,0,175,0,182,0,189,0,200,0,209,0,218,0,225,0,232,0,239,0,246,0,0,0,0,0,148,3,0,0,169,3,0,0,21,34,0,0,173,0,0,0,201,2,0,0,188,3,0,0,25,34,0,0,160,0,0,0,26,2,0,0,27,2,0,0,68,101,108,116,97,0,79,109,101,103,97,0,102,114,97,99,116,105,111,110,0,104,121,112,104,101,110,0,109,97,99,114,111,110,0,109,117,0,112,101,114,105,111,100,99,101,110,116,101,114,101,100,0,115,112,97,99,101,0,84,99,111,109,109,97,97,99,99,101,110,116,0,116,99,111,109,109,97,97,99,99,101,110,116,0,0,0,0,0,0,0,0,6,0,0,0,12,0,0,0,21,0,0,0,28,0,0,0,35,0,0,0,38,0,0,0,53,0,0,0,59,0,0,0,72,0,0,0,0,52,0,106,2,167,3,63,4,220,6,125,9,143,10,23,11,137,12,199,14,246,15,87,16,233,17,219,18,104,19,88,22,110,23,32,23,71,24,77,27,156,29,73,31,247,32,107,32,222,33,55,34,154,35,218,58,10,64,122,72,188,80,109,88,104,93,61,98,168,106,91,114,111,115,237,122,180,127,255,135,164,143,132,149,213,158,108,161,115,168,175,183,147,197,199,202,25,204,166,208,209,209,81,215,26,65,143,0,65,0,140,0,175,0,193,1,15,1,147,1,233,1,251,2,7,2,40,2,57,2,82,2,91,2,128,2,136,2,154,69,131,0,198,0,150,0,158,0,167,225,227,245,244,101,128,1,252,237,225,227,242,239,110,128,1,226,243,237,225,236,108,128,247,230,225,227,245,244,101,129,0,193,0,185,243,237,225,236,108,128,247,225,226,242,229,246,101,134,1,2,0,213,0,221,0,232,0,243,0,251,1,7,225,227,245,244,101,128,30,174,227,249,242,233,236,236,233,99,128,4,208,228,239,244,226,229,236,239,119,128,30,182,231,242,225,246,101,128,30,176,232,239,239,235,225,226,239,246,101,128,30,178,244,233,236,228,101,128,30,180,99,4,1,25,1,32,1,121,1,137,225,242,239,110,128,1,205,233,242,99,2,1,40,1,45,236,101,128,36,182,245,237,230,236,229,120,134,0,194,1,66,1,74,1,85,1,93,1,105,1,113,225,227,245,244,101,128,30,164,228,239,244,226,229,236,239,119,128,30,172,231,242,225,246,101,128,30,166,232,239,239,235,225,226,239,246,101,128,30,168,243,237,225,236,108,128,247,226,244,233,236,228,101,128,30,170,245,244,101,129,246,201,1,129,243,237,225,236,108,128,247,180,249,242,233,236,236,233,99,128,4,16,100,3,1,155,1,165,1,209,226,236,231,242,225,246,101,128,2,0,233,229,242,229,243,233,115,131,0,196,1,181,1,192,1,201,227,249,242,233,236,236,233,99,128,4,210,237,225,227,242,239,110,128,1,222,243,237,225,236,108,128,247,228,239,116,2,1,216,1,224,226,229,236,239,119,128,30,160,237,225,227,242,239,110,128,1,224,231,242,225,246,101,129,0,192,1,243,243,237,225,236,108,128,247,224,232,239,239,235,225,226,239,246,101,128,30,162,105,2,2,13,2,25,229,227,249,242,233,236,236,233,99,128,4,212,238,246,229,242,244,229,228,226,242,229,246,101,128,2,2,236,240,232,97,129,3,145,2,49,244,239,238,239,115,128,3,134,109,2,2,63,2,71,225,227,242,239,110,128,1,0,239,238,239,243,240,225,227,101,128,255,33,239,231,239,238,229,107,128,1,4,242,233,238,103,131,0,197,2,104,2,112,2,120,225,227,245,244,101,128,1,250,226,229,236,239,119,128,30,0,243,237,225,236,108,128,247,229,243,237,225,236,108,128,247,97,244,233,236,228,101,129,0,195,2,146,243,237,225,236,108,128,247,227,249,226,225,242,237,229,238,233,225,110,128,5,49,66,137,0,66,2,189,2,198,2,223,3,3,3,10,3,22,3,34,3,46,3,54,227,233,242,227,236,101,128,36,183,228,239,116,2,2,206,2,215,225,227,227,229,238,116,128,30,2,226,229,236,239,119,128,30,4,101,3,2,231,2,242,2,254,227,249,242,233,236,236,233,99,128,4,17,238,225,242,237,229,238,233,225,110,128,5,50,244,97,128,3,146,232,239,239,107,128,1,129,236,233,238,229,226,229,236,239,119,128,30,6,237,239,238,239,243,240,225,227,101,128,255,34,242,229,246,229,243,237,225,236,108,128,246,244,243,237,225,236,108,128,247,98,244,239,240,226,225,114,128,1,130,67,137,0,67,3,85,3,127,3,193,3,210,3,224,4,171,4,188,4,200,4,212,97,3,3,93,3,104,3,111,225,242,237,229,238,233,225,110,128,5,62,227,245,244,101,128,1,6,242,239,110,129,246,202,3,119,243,237,225,236,108,128,246,245,99,3,3,135,3,142,3,171,225,242,239,110,128,1,12,229,228,233,236,236,97,130,0,199,3,155,3,163,225,227,245,244,101,128,30,8,243,237,225,236,108,128,247,231,233,242,99,2,3,179,3,184,236,101,128,36,184,245,237,230,236,229,120,128,1,8,228,239,116,129,1,10,3,201,225,227,227,229,238,116,128,1,10,229,228,233,236,236,225,243,237,225,236,108,128,247,184,104,4,3,234,3,246,4,161,4,165,225,225,242,237,229,238,233,225,110,128,5,73,101,6,4,4,4,24,4,35,4,103,4,115,4,136,225,226,235,232,225,243,233,225,238,227,249,242,233,236,236,233,99,128,4,188,227,249,242,233,236,236,233,99,128,4,39,100,2,4,41,4,85,229,243,227,229,238,228,229,114,2,4,54,4,74,225,226,235,232,225,243,233,225,238,227,249,242,233,236,236,233,99,128,4,190,227,249,242,233,236,236,233,99,128,4,182,233,229,242,229,243,233,243,227,249,242,233,236,236,233,99,128,4,244,232,225,242,237,229,238,233,225,110,128,5,67,235,232,225,235,225,243,243,233,225,238,227,249,242,233,236,236,233,99,128,4,203,246,229,242,244,233,227,225,236,243,244,242,239,235,229,227,249,242,233,236,236,233,99,128,4,184,105,128,3,167,239,239,107,128,1,135,233,242,227,245,237,230,236,229,248,243,237,225,236,108,128,246,246,237,239,238,239,243,240,225,227,101,128,255,35,239,225,242,237,229,238,233,225,110,128,5,81,243,237,225,236,108,128,247,99,68,142,0,68,4,252,5,10,5,36,5,96,5,121,5,166,5,173,5,231,5,244,6,0,6,12,6,28,6,48,6,57,90,129,1,241,5,2,227,225,242,239,110,128,1,196,97,2,5,16,5,27,225,242,237,229,238,233,225,110,128,5,52,230,242,233,227,225,110,128,1,137,99,4,5,46,5,53,5,62,5,89,225,242,239,110,128,1,14,229,228,233,236,236,97,128,30,16,233,242,99,2,5,70,5,75,236,101,128,36,185,245,237,230,236,229,248,226,229,236,239,119,128,30,18,242,239,225,116,128,1,16,228,239,116,2,5,104,5,113,225,227,227,229,238,116,128,30,10,226,229,236,239,119,128,30,12,101,3,5,129,5,140,5,150,227,249,242,233,236,236,233,99,128,4,20,233,227,239,240,244,233,99,128,3,238,236,244,97,129,34,6,5,158,231,242,229,229,107,128,3,148,232,239,239,107,128,1,138,105,2,5,179,5,218,229,242,229,243,233,115,131,246,203,5,194,5,202,5,210,193,227,245,244,101,128,246,204,199,242,225,246,101,128,246,205,243,237,225,236,108,128,247,168,231,225,237,237,225,231,242,229,229,107,128,3,220,234,229,227,249,242,233,236,236,233,99,128,4,2,236,233,238,229,226,229,236,239,119,128,30,14,237,239,238,239,243,240,225,227,101,128,255,36,239,244,225,227,227,229,238,244,243,237,225,236,108,128,246,247,115,2,6,34,6,41,236,225,243,104,128,1,16,237,225,236,108,128,247,100,244,239,240,226,225,114,128,1,139,122,131,1,242,6,67,6,75,6,112,227,225,242,239,110,128,1,197,101,2,6,81,6,101,225,226,235,232,225,243,233,225,238,227,249,242,233,236,236,233,99,128,4,224,227,249,242,233,236,236,233,99,128,4,5,232,229,227,249,242,233,236,236,233,99,128,4,15,69,146,0,69,6,165,6,183,6,191,7,89,7,153,7,165,7,183,7,211,8,7,8,36,8,94,8,169,8,189,8,208,8,248,9,44,9,109,9,115,225,227,245,244,101,129,0,201,6,175,243,237,225,236,108,128,247,233,226,242,229,246,101,128,1,20,99,5,6,203,6,210,6,224,6,236,7,79,225,242,239,110,128,1,26,229,228,233,236,236,225,226,242,229,246,101,128,30,28,232,225,242,237,229,238,233,225,110,128,5,53,233,242,99,2,6,244,6,249,236,101,128,36,186,245,237,230,236,229,120,135,0,202,7,16,7,24,7,32,7,43,7,51,7,63,7,71,225,227,245,244,101,128,30,190,226,229,236,239,119,128,30,24,228,239,244,226,229,236,239,119,128,30,198,231,242,225,246,101,128,30,192,232,239,239,235,225,226,239,246,101,128,30,194,243,237,225,236,108,128,247,234,244,233,236,228,101,128,30,196,249,242,233,236,236,233,99,128,4,4,100,3,7,97,7,107,7,127,226,236,231,242,225,246,101,128,2,4,233,229,242,229,243,233,115,129,0,203,7,119,243,237,225,236,108,128,247,235,239,116,130,1,22,7,136,7,145,225,227,227,229,238,116,128,1,22,226,229,236,239,119,128,30,184,230,227,249,242,233,236,236,233,99,128,4,36,231,242,225,246,101,129,0,200,7,175,243,237,225,236,108,128,247,232,104,2,7,189,7,200,225,242,237,229,238,233,225,110,128,5,55,239,239,235,225,226,239,246,101,128,30,186,105,3,7,219,7,230,7,245,231,232,244,242,239,237,225,110,128,33,103,238,246,229,242,244,229,228,226,242,229,246,101,128,2,6,239,244,233,230,233,229,228,227,249,242,233,236,236,233,99,128,4,100,108,2,8,13,8,24,227,249,242,233,236,236,233,99,128,4,27,229,246,229,238,242,239,237,225,110,128,33,106,109,3,8,44,8,72,8,83,225,227,242,239,110,130,1,18,8,56,8,64,225,227,245,244,101,128,30,22,231,242,225,246,101,128,30,20,227,249,242,233,236,236,233,99,128,4,28,239,238,239,243,240,225,227,101,128,255,37,110,4,8,104,8,115,8,135,8,154,227,249,242,233,236,236,233,99,128,4,29,228,229,243,227,229,238,228,229,242,227,249,242,233,236,236,233,99,128,4,162,103,129,1,74,8,141,232,229,227,249,242,233,236,236,233,99,128,4,164,232,239,239,235,227,249,242,233,236,236,233,99,128,4,199,111,2,8,175,8,183,231,239,238,229,107,128,1,24,240,229,110,128,1,144,240,243,233,236,239,110,129,3,149,8,200,244,239,238,239,115,128,3,136,114,2,8,214,8,225,227,249,242,233,236,236,233,99,128,4,32,229,246,229,242,243,229,100,129,1,142,8,237,227,249,242,233,236,236,233,99,128,4,45,115,4,9,2,9,13,9,33,9,37,227,249,242,233,236,236,233,99,128,4,33,228,229,243,227,229,238,228,229,242,227,249,242,233,236,236,233,99,128,4,170,104,128,1,169,237,225,236,108,128,247,101,116,3,9,52,9,78,9,92,97,130,3,151,9,60,9,70,242,237,229,238,233,225,110,128,5,56,244,239,238,239,115,128,3,137,104,129,0,208,9,84,243,237,225,236,108,128,247,240,233,236,228,101,129,30,188,9,101,226,229,236,239,119,128,30,26,245,242,111,128,32,172,250,104,130,1,183,9,124,9,132,227,225,242,239,110,128,1,238,242,229,246,229,242,243,229,100,128,1,184,70,136,0,70,9,163,9,172,9,184,9,212,9,219,9,248,10,4,10,15,227,233,242,227,236,101,128,36,187,228,239,244,225,227,227,229,238,116,128,30,30,101,2,9,190,9,202,232,225,242,237,229,238,233,225,110,128,5,86,233,227,239,240,244,233,99,128,3,228,232,239,239,107,128,1,145,105,2,9,225,9,238,244,225,227,249,242,233,236,236,233,99,128,4,114,246,229,242,239,237,225,110,128,33,100,237,239,238,239,243,240,225,227,101,128,255,38,239,245,242,242,239,237,225,110,128,33,99,243,237,225,236,108,128,247,102,71,140,0,71,10,51,10,61,10,107,10,115,10,176,10,193,10,205,11,39,11,52,11,65,11,90,11,107,194,243,241,245,225,242,101,128,51,135,97,3,10,69,10,76,10,94,227,245,244,101,128,1,244,237,237,97,129,3,147,10,84,225,230,242,233,227,225,110,128,1,148,238,231,233,225,227,239,240,244,233,99,128,3,234,226,242,229,246,101,128,1,30,99,4,10,125,10,132,10,141,10,163,225,242,239,110,128,1,230,229,228,233,236,236,97,128,1,34,233,242,99,2,10,149,10,154,236,101,128,36,188,245,237,230,236,229,120,128,1,28,239,237,237,225,225,227,227,229,238,116,128,1,34,228,239,116,129,1,32,10,184,225,227,227,229,238,116,128,1,32,229,227,249,242,233,236,236,233,99,128,4,19,104,3,10,213,10,226,11,33,225,228,225,242,237,229,238,233,225,110,128,5,66,101,3,10,234,10,255,11,16,237,233,228,228,236,229,232,239,239,235,227,249,242,233,236,236,233,99,128,4,148,243,244,242,239,235,229,227,249,242,233,236,236,233,99,128,4,146,245,240,244,245,242,238,227,249,242,233,236,236,233,99,128,4,144,239,239,107,128,1,147,233,237,225,242,237,229,238,233,225,110,128,5,51,234,229,227,249,242,233,236,236,233,99,128,4,3,109,2,11,71,11,79,225,227,242,239,110,128,30,32,239,238,239,243,240,225,227,101,128,255,39,242,225,246,101,129,246,206,11,99,243,237,225,236,108,128,247,96,115,2,11,113,11,129,237,225,236,108,129,247,103,11,122,232,239,239,107,128,2,155,244,242,239,235,101,128,1,228,72,140,0,72,11,165,11,190,11,198,11,208,12,17,12,40,12,77,12,117,12,129,12,157,12,165,12,189,177,184,53,3,11,175,11,180,11,185,179,51,128,37,207,180,51,128,37,170,181,49,128,37,171,178,178,176,183,51,128,37,161,208,243,241,245,225,242,101,128,51,203,97,3,11,216,11,236,12,0,225,226,235,232,225,243,233,225,238,227,249,242,233,236,236,233,99,128,4,168,228,229,243,227,229,238,228,229,242,227,249,242,233,236,236,233,99,128,4,178,242,228,243,233,231,238,227,249,242,233,236,236,233,99,128,4,42,98,2,12,23,12,28,225,114,128,1,38,242,229,246,229,226,229,236,239,119,128,30,42,99,2,12,46,12,55,229,228,233,236,236,97,128,30,40,233,242,99,2,12,63,12,68,236,101,128,36,189,245,237,230,236,229,120,128,1,36,100,2,12,83,12,93,233,229,242,229,243,233,115,128,30,38,239,116,2,12,100,12,109,225,227,227,229,238,116,128,30,34,226,229,236,239,119,128,30,36,237,239,238,239,243,240,225,227,101,128,255,40,111,2,12,135,12,146,225,242,237,229,238,233,225,110,128,5,64,242,233,227,239,240,244,233,99,128,3,232,243,237,225,236,108,128,247,104,245,238,231,225,242,245,237,236,225,245,116,129,246,207,12,181,243,237,225,236,108,128,246,248,250,243,241,245,225,242,101,128,51,144,73,146,0,73,12,239,12,251,12,255,13,11,13,29,13,37,13,94,13,181,13,214,13,224,13,242,13,254,14,48,14,86,14,99,14,166,14,187,14,205,193,227,249,242,233,236,236,233,99,128,4,47,74,128,1,50,213,227,249,242,233,236,236,233,99,128,4,46,225,227,245,244,101,129,0,205,13,21,243,237,225,236,108,128,247,237,226,242,229,246,101,128,1,44,99,3,13,45,13,52,13,84,225,242,239,110,128,1,207,233,242,99,2,13,60,13,65,236,101,128,36,190,245,237,230,236,229,120,129,0,206,13,76,243,237,225,236,108,128,247,238,249,242,233,236,236,233,99,128,4,6,100,3,13,102,13,112,13,155,226,236,231,242,225,246,101,128,2,8,233,229,242,229,243,233,115,131,0,207,13,128,13,136,13,147,225,227,245,244,101,128,30,46,227,249,242,233,236,236,233,99,128,4,228,243,237,225,236,108,128,247,239,239,116,130,1,48,13,164,13,173,225,227,227,229,238,116,128,1,48,226,229,236,239,119,128,30,202,101,2,13,187,13,203,226,242,229,246,229,227,249,242,233,236,236,233,99,128,4,214,227,249,242,233,236,236,233,99,128,4,21,230,242,225,235,244,245,114,128,33,17,231,242,225,246,101,129,0,204,13,234,243,237,225,236,108,128,247,236,232,239,239,235,225,226,239,246,101,128,30,200,105,3,14,6,14,17,14,32,227,249,242,233,236,236,233,99,128,4,24,238,246,229,242,244,229,228,226,242,229,246,101,128,2,10,243,232,239,242,244,227,249,242,233,236,236,233,99,128,4,25,109,2,14,54,14,75,225,227,242,239,110,129,1,42,14,64,227,249,242,233,236,236,233,99,128,4,226,239,238,239,243,240,225,227,101,128,255,41,238,233,225,242,237,229,238,233,225,110,128,5,59,111,3,14,107,14,118,14,126,227,249,242,233,236,236,233,99,128,4,1,231,239,238,229,107,128,1,46,244,97,131,3,153,14,137,14,147,14,158,225,230,242,233,227,225,110,128,1,150,228,233,229,242,229,243,233,115,128,3,170,244,239,238,239,115,128,3,138,115,2,14,172,14,179,237,225,236,108,128,247,105,244,242,239,235,101,128,1,151,244,233,236,228,101,129,1,40,14,197,226,229,236,239,119,128,30,44,250,232,233,244,243,97,2,14,216,14,227,227,249,242,233,236,236,233,99,128,4,116,228,226,236,231,242,225,246,229,227,249,242,233,236,236,233,99,128,4,118,74,134,0,74,15,6,15,18,15,41,15,53,15,67,15,79,225,225,242,237,229,238,233,225,110,128,5,65,227,233,242,99,2,15,27,15,32,236,101,128,36,191,245,237,230,236,229,120,128,1,52,229,227,249,242,233,236,236,233,99,128,4,8,232,229,232,225,242,237,229,238,233,225,110,128,5,75,237,239,238,239,243,240,225,227,101,128,255,42,243,237,225,236,108,128,247,106,75,140,0,75,15,115,15,125,15,135,16,18,16,65,16,76,16,106,16,143,16,156,16,168,16,180,16,208,194,243,241,245,225,242,101,128,51,133,203,243,241,245,225,242,101,128,51,205,97,7,15,151,15,169,15,191,15,211,15,226,15,232,15,249,226,225,243,232,235,233,242,227,249,242,233,236,236,233,99,128,4,160,99,2,15,175,15,181,245,244,101,128,30,48,249,242,233,236,236,233,99,128,4,26,228,229,243,227,229,238,228,229,242,227,249,242,233,236,236,233,99,128,4,154,232,239,239,235,227,249,242,233,236,236,233,99,128,4,195,240,240,97,128,3,154,243,244,242,239,235,229,227,249,242,233,236,236,233,99,128,4,158,246,229,242,244,233,227,225,236,243,244,242,239,235,229,227,249,242,233,236,236,233,99,128,4,156,99,4,16,28,16,35,16,44,16,52,225,242,239,110,128,1,232,229,228,233,236,236,97,128,1,54,233,242,227,236,101,128,36,192,239,237,237,225,225,227,227,229,238,116,128,1,54,228,239,244,226,229,236,239,119,128,30,50,101,2,16,82,16,94,232,225,242,237,229,238,233,225,110,128,5,84,238,225,242,237,229,238,233,225,110,128,5,63,104,3,16,114,16,126,16,137,225,227,249,242,233,236,236,233,99,128,4,37,229,233,227,239,240,244,233,99,128,3,230,239,239,107,128,1,152,234,229,227,249,242,233,236,236,233], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+30720);
/* memory initializer */ allocate([99,128,4,12,236,233,238,229,226,229,236,239,119,128,30,52,237,239,238,239,243,240,225,227,101,128,255,43,239,240,240,97,2,16,189,16,200,227,249,242,233,236,236,233,99,128,4,128,231,242,229,229,107,128,3,222,115,2,16,214,16,226,233,227,249,242,233,236,236,233,99,128,4,110,237,225,236,108,128,247,107,76,138,0,76,17,1,17,5,17,9,17,29,17,95,17,133,17,147,17,165,17,177,17,189,74,128,1,199,76,128,246,191,97,2,17,15,17,22,227,245,244,101,128,1,57,237,226,228,97,128,3,155,99,4,17,39,17,46,17,55,17,82,225,242,239,110,128,1,61,229,228,233,236,236,97,128,1,59,233,242,99,2,17,63,17,68,236,101,128,36,193,245,237,230,236,229,248,226,229,236,239,119,128,30,60,239,237,237,225,225,227,227,229,238,116,128,1,59,228,239,116,130,1,63,17,105,17,114,225,227,227,229,238,116,128,1,63,226,229,236,239,119,129,30,54,17,124,237,225,227,242,239,110,128,30,56,233,247,238,225,242,237,229,238,233,225,110,128,5,60,106,129,1,200,17,153,229,227,249,242,233,236,236,233,99,128,4,9,236,233,238,229,226,229,236,239,119,128,30,58,237,239,238,239,243,240,225,227,101,128,255,44,115,2,17,195,17,212,236,225,243,104,129,1,65,17,204,243,237,225,236,108,128,246,249,237,225,236,108,128,247,108,77,137,0,77,17,241,17,251,18,24,18,33,18,58,18,71,18,83,18,91,18,100,194,243,241,245,225,242,101,128,51,134,225,99,2,18,2,18,18,242,239,110,129,246,208,18,10,243,237,225,236,108,128,247,175,245,244,101,128,30,62,227,233,242,227,236,101,128,36,194,228,239,116,2,18,41,18,50,225,227,227,229,238,116,128,30,64,226,229,236,239,119,128,30,66,229,238,225,242,237,229,238,233,225,110,128,5,68,237,239,238,239,243,240,225,227,101,128,255,45,243,237,225,236,108,128,247,109,244,245,242,238,229,100,128,1,156,117,128,3,156,78,141,0,78,18,134,18,138,18,146,18,212,18,237,18,248,19,3,19,21,19,33,19,45,19,58,19,66,19,84,74,128,1,202,225,227,245,244,101,128,1,67,99,4,18,156,18,163,18,172,18,199,225,242,239,110,128,1,71,229,228,233,236,236,97,128,1,69,233,242,99,2,18,180,18,185,236,101,128,36,195,245,237,230,236,229,248,226,229,236,239,119,128,30,74,239,237,237,225,225,227,227,229,238,116,128,1,69,228,239,116,2,18,220,18,229,225,227,227,229,238,116,128,30,68,226,229,236,239,119,128,30,70,232,239,239,235,236,229,230,116,128,1,157,233,238,229,242,239,237,225,110,128,33,104,106,129,1,203,19,9,229,227,249,242,233,236,236,233,99,128,4,10,236,233,238,229,226,229,236,239,119,128,30,72,237,239,238,239,243,240,225,227,101,128,255,46,239,247,225,242,237,229,238,233,225,110,128,5,70,243,237,225,236,108,128,247,110,244,233,236,228,101,129,0,209,19,76,243,237,225,236,108,128,247,241,117,128,3,157,79,141,0,79,19,118,19,132,19,150,19,203,20,78,20,152,20,187,21,48,21,69,21,213,21,223,21,254,22,53,69,129,1,82,19,124,243,237,225,236,108,128,246,250,225,227,245,244,101,129,0,211,19,142,243,237,225,236,108,128,247,243,98,2,19,156,19,196,225,242,242,229,100,2,19,166,19,177,227,249,242,233,236,236,233,99,128,4,232,228,233,229,242,229,243,233,243,227,249,242,233,236,236,233,99,128,4,234,242,229,246,101,128,1,78,99,4,19,213,19,220,19,235,20,68,225,242,239,110,128,1,209,229,238,244,229,242,229,228,244,233,236,228,101,128,1,159,233,242,99,2,19,243,19,248,236,101,128,36,196,245,237,230,236,229,120,134,0,212,20,13,20,21,20,32,20,40,20,52,20,60,225,227,245,244,101,128,30,208,228,239,244,226,229,236,239,119,128,30,216,231,242,225,246,101,128,30,210,232,239,239,235,225,226,239,246,101,128,30,212,243,237,225,236,108,128,247,244,244,233,236,228,101,128,30,214,249,242,233,236,236,233,99,128,4,30,100,3,20,86,20,109,20,142,226,108,2,20,93,20,101,225,227,245,244,101,128,1,80,231,242,225,246,101,128,2,12,233,229,242,229,243,233,115,130,0,214,20,123,20,134,227,249,242,233,236,236,233,99,128,4,230,243,237,225,236,108,128,247,246,239,244,226,229,236,239,119,128,30,204,103,2,20,158,20,170,239,238,229,235,243,237,225,236,108,128,246,251,242,225,246,101,129,0,210,20,179,243,237,225,236,108,128,247,242,104,4,20,197,20,208,20,212,21,34,225,242,237,229,238,233,225,110,128,5,85,109,128,33,38,111,2,20,218,20,228,239,235,225,226,239,246,101,128,30,206,242,110,133,1,160,20,243,20,251,21,6,21,14,21,26,225,227,245,244,101,128,30,218,228,239,244,226,229,236,239,119,128,30,226,231,242,225,246,101,128,30,220,232,239,239,235,225,226,239,246,101,128,30,222,244,233,236,228,101,128,30,224,245,238,231,225,242,245,237,236,225,245,116,128,1,80,105,129,1,162,21,54,238,246,229,242,244,229,228,226,242,229,246,101,128,2,14,109,4,21,79,21,107,21,184,21,202,225,227,242,239,110,130,1,76,21,91,21,99,225,227,245,244,101,128,30,82,231,242,225,246,101,128,30,80,229,231,97,132,33,38,21,121,21,132,21,140,21,156,227,249,242,233,236,236,233,99,128,4,96,231,242,229,229,107,128,3,169,242,239,245,238,228,227,249,242,233,236,236,233,99,128,4,122,116,2,21,162,21,177,233,244,236,239,227,249,242,233,236,236,233,99,128,4,124,239,238,239,115,128,3,143,233,227,242,239,110,129,3,159,21,194,244,239,238,239,115,128,3,140,239,238,239,243,240,225,227,101,128,255,47,238,229,242,239,237,225,110,128,33,96,111,2,21,229,21,248,231,239,238,229,107,129,1,234,21,239,237,225,227,242,239,110,128,1,236,240,229,110,128,1,134,115,3,22,6,22,33,22,40,236,225,243,104,130,0,216,22,17,22,25,225,227,245,244,101,128,1,254,243,237,225,236,108,128,247,248,237,225,236,108,128,247,111,244,242,239,235,229,225,227,245,244,101,128,1,254,116,2,22,59,22,70,227,249,242,233,236,236,233,99,128,4,126,233,236,228,101,131,0,213,22,83,22,91,22,102,225,227,245,244,101,128,30,76,228,233,229,242,229,243,233,115,128,30,78,243,237,225,236,108,128,247,245,80,136,0,80,22,130,22,138,22,147,22,159,22,211,22,227,22,246,23,2,225,227,245,244,101,128,30,84,227,233,242,227,236,101,128,36,197,228,239,244,225,227,227,229,238,116,128,30,86,101,3,22,167,22,178,22,190,227,249,242,233,236,236,233,99,128,4,31,232,225,242,237,229,238,233,225,110,128,5,74,237,233,228,228,236,229,232,239,239,235,227,249,242,233,236,236,233,99,128,4,166,104,2,22,217,22,221,105,128,3,166,239,239,107,128,1,164,105,129,3,160,22,233,247,242,225,242,237,229,238,233,225,110,128,5,83,237,239,238,239,243,240,225,227,101,128,255,48,115,2,23,8,23,25,105,129,3,168,23,14,227,249,242,233,236,236,233,99,128,4,112,237,225,236,108,128,247,112,81,131,0,81,23,42,23,51,23,63,227,233,242,227,236,101,128,36,198,237,239,238,239,243,240,225,227,101,128,255,49,243,237,225,236,108,128,247,113,82,138,0,82,23,95,23,119,23,166,23,217,23,230,23,240,23,245,24,19,24,31,24,43,97,2,23,101,23,112,225,242,237,229,238,233,225,110,128,5,76,227,245,244,101,128,1,84,99,4,23,129,23,136,23,145,23,153,225,242,239,110,128,1,88,229,228,233,236,236,97,128,1,86,233,242,227,236,101,128,36,199,239,237,237,225,225,227,227,229,238,116,128,1,86,100,2,23,172,23,182,226,236,231,242,225,246,101,128,2,16,239,116,2,23,189,23,198,225,227,227,229,238,116,128,30,88,226,229,236,239,119,129,30,90,23,208,237,225,227,242,239,110,128,30,92,229,232,225,242,237,229,238,233,225,110,128,5,80,230,242,225,235,244,245,114,128,33,28,232,111,128,3,161,233,110,2,23,252,24,5,231,243,237,225,236,108,128,246,252,246,229,242,244,229,228,226,242,229,246,101,128,2,18,236,233,238,229,226,229,236,239,119,128,30,94,237,239,238,239,243,240,225,227,101,128,255,50,243,237,225,236,108,129,247,114,24,53,233,238,246,229,242,244,229,100,129,2,129,24,66,243,245,240,229,242,233,239,114,128,2,182,83,139,0,83,24,103,26,17,26,55,26,182,26,221,26,250,27,84,27,105,27,117,27,135,27,143,70,6,24,117,24,209,24,241,25,77,25,119,25,221,48,9,24,137,24,145,24,153,24,161,24,169,24,177,24,185,24,193,24,201,177,176,176,176,48,128,37,12,178,176,176,176,48,128,37,20,179,176,176,176,48,128,37,16,180,176,176,176,48,128,37,24,181,176,176,176,48,128,37,60,182,176,176,176,48,128,37,44,183,176,176,176,48,128,37,52,184,176,176,176,48,128,37,28,185,176,176,176,48,128,37,36,49,3,24,217,24,225,24,233,176,176,176,176,48,128,37,0,177,176,176,176,48,128,37,2,185,176,176,176,48,128,37,97,50,9,25,5,25,13,25,21,25,29,25,37,25,45,25,53,25,61,25,69,176,176,176,176,48,128,37,98,177,176,176,176,48,128,37,86,178,176,176,176,48,128,37,85,179,176,176,176,48,128,37,99,180,176,176,176,48,128,37,81,181,176,176,176,48,128,37,87,182,176,176,176,48,128,37,93,183,176,176,176,48,128,37,92,184,176,176,176,48,128,37,91,51,4,25,87,25,95,25,103,25,111,182,176,176,176,48,128,37,94,183,176,176,176,48,128,37,95,184,176,176,176,48,128,37,90,185,176,176,176,48,128,37,84,52,10,25,141,25,149,25,157,25,165,25,173,25,181,25,189,25,197,25,205,25,213,176,176,176,176,48,128,37,105,177,176,176,176,48,128,37,102,178,176,176,176,48,128,37,96,179,176,176,176,48,128,37,80,180,176,176,176,48,128,37,108,181,176,176,176,48,128,37,103,182,176,176,176,48,128,37,104,183,176,176,176,48,128,37,100,184,176,176,176,48,128,37,101,185,176,176,176,48,128,37,89,53,5,25,233,25,241,25,249,26,1,26,9,176,176,176,176,48,128,37,88,177,176,176,176,48,128,37,82,178,176,176,176,48,128,37,83,179,176,176,176,48,128,37,107,180,176,176,176,48,128,37,106,97,2,26,23,26,44,227,245,244,101,129,1,90,26,32,228,239,244,225,227,227,229,238,116,128,30,100,237,240,233,231,242,229,229,107,128,3,224,99,5,26,67,26,98,26,107,26,147,26,169,225,242,239,110,130,1,96,26,78,26,90,228,239,244,225,227,227,229,238,116,128,30,102,243,237,225,236,108,128,246,253,229,228,233,236,236,97,128,1,94,232,247,97,130,1,143,26,117,26,128,227,249,242,233,236,236,233,99,128,4,216,228,233,229,242,229,243,233,243,227,249,242,233,236,236,233,99,128,4,218,233,242,99,2,26,155,26,160,236,101,128,36,200,245,237,230,236,229,120,128,1,92,239,237,237,225,225,227,227,229,238,116,128,2,24,228,239,116,2,26,190,26,199,225,227,227,229,238,116,128,30,96,226,229,236,239,119,129,30,98,26,209,228,239,244,225,227,227,229,238,116,128,30,104,101,2,26,227,26,239,232,225,242,237,229,238,233,225,110,128,5,77,246,229,238,242,239,237,225,110,128,33,102,104,5,27,6,27,34,27,48,27,59,27,72,97,2,27,12,27,23,225,242,237,229,238,233,225,110,128,5,71,227,249,242,233,236,236,233,99,128,4,40,227,232,225,227,249,242,233,236,236,233,99,128,4,41,229,233,227,239,240,244,233,99,128,3,226,232,225,227,249,242,233,236,236,233,99,128,4,186,233,237,225,227,239,240,244,233,99,128,3,236,105,2,27,90,27,96,231,237,97,128,3,163,248,242,239,237,225,110,128,33,101,237,239,238,239,243,240,225,227,101,128,255,51,239,230,244,243,233,231,238,227,249,242,233,236,236,233,99,128,4,44,243,237,225,236,108,128,247,115,244,233,231,237,225,231,242,229,229,107,128,3,218,84,141,0,84,27,186,27,191,27,197,28,7,28,32,28,96,28,147,28,177,28,189,28,201,28,246,29,6,29,46,225,117,128,3,164,226,225,114,128,1,102,99,4,27,207,27,214,27,223,27,250,225,242,239,110,128,1,100,229,228,233,236,236,97,128,1,98,233,242,99,2,27,231,27,236,236,101,128,36,201,245,237,230,236,229,248,226,229,236,239,119,128,30,112,239,237,237,225,225,227,227,229,238,116,128,1,98,228,239,116,2,28,15,28,24,225,227,227,229,238,116,128,30,106,226,229,236,239,119,128,30,108,101,4,28,42,28,53,28,73,28,82,227,249,242,233,236,236,233,99,128,4,34,228,229,243,227,229,238,228,229,242,227,249,242,233,236,236,233,99,128,4,172,238,242,239,237,225,110,128,33,105,244,243,229,227,249,242,233,236,236,233,99,128,4,180,104,3,28,104,28,110,28,136,229,244,97,128,3,152,111,2,28,116,28,121,239,107,128,1,172,242,110,129,0,222,28,128,243,237,225,236,108,128,247,254,242,229,229,242,239,237,225,110,128,33,98,105,2,28,153,28,164,236,228,229,243,237,225,236,108,128,246,254,247,238,225,242,237,229,238,233,225,110,128,5,79,236,233,238,229,226,229,236,239,119,128,30,110,237,239,238,239,243,240,225,227,101,128,255,52,111,2,28,207,28,218,225,242,237,229,238,233,225,110,128,5,57,238,101,3,28,227,28,234,28,240,230,233,246,101,128,1,188,243,233,120,128,1,132,244,247,111,128,1,167,242,229,244,242,239,230,236,229,248,232,239,239,107,128,1,174,115,3,29,14,29,26,29,39,229,227,249,242,233,236,236,233,99,128,4,38,232,229,227,249,242,233,236,236,233,99,128,4,11,237,225,236,108,128,247,116,119,2,29,52,29,64,229,236,246,229,242,239,237,225,110,128,33,107,239,242,239,237,225,110,128,33,97,85,142,0,85,29,105,29,123,29,131,29,198,30,69,30,87,30,198,30,214,30,226,31,21,31,30,31,142,31,149,31,219,225,227,245,244,101,129,0,218,29,115,243,237,225,236,108,128,247,250,226,242,229,246,101,128,1,108,99,3,29,139,29,146,29,188,225,242,239,110,128,1,211,233,242,99,2,29,154,29,159,236,101,128,36,202,245,237,230,236,229,120,130,0,219,29,172,29,180,226,229,236,239,119,128,30,118,243,237,225,236,108,128,247,251,249,242,233,236,236,233,99,128,4,35,100,3,29,206,29,229,30,59,226,108,2,29,213,29,221,225,227,245,244,101,128,1,112,231,242,225,246,101,128,2,20,233,229,242,229,243,233,115,134,0,220,29,251,30,3,30,11,30,34,30,42,30,51,225,227,245,244,101,128,1,215,226,229,236,239,119,128,30,114,99,2,30,17,30,24,225,242,239,110,128,1,217,249,242,233,236,236,233,99,128,4,240,231,242,225,246,101,128,1,219,237,225,227,242,239,110,128,1,213,243,237,225,236,108,128,247,252,239,244,226,229,236,239,119,128,30,228,231,242,225,246,101,129,0,217,30,79,243,237,225,236,108,128,247,249,104,2,30,93,30,171,111,2,30,99,30,109,239,235,225,226,239,246,101,128,30,230,242,110,133,1,175,30,124,30,132,30,143,30,151,30,163,225,227,245,244,101,128,30,232,228,239,244,226,229,236,239,119,128,30,240,231,242,225,246,101,128,30,234,232,239,239,235,225,226,239,246,101,128,30,236,244,233,236,228,101,128,30,238,245,238,231,225,242,245,237,236,225,245,116,129,1,112,30,187,227,249,242,233,236,236,233,99,128,4,242,233,238,246,229,242,244,229,228,226,242,229,246,101,128,2,22,235,227,249,242,233,236,236,233,99,128,4,120,109,2,30,232,31,10,225,227,242,239,110,130,1,106,30,244,30,255,227,249,242,233,236,236,233,99,128,4,238,228,233,229,242,229,243,233,115,128,30,122,239,238,239,243,240,225,227,101,128,255,53,239,231,239,238,229,107,128,1,114,240,243,233,236,239,110,133,3,165,31,49,31,53,31,90,31,121,31,134,49,128,3,210,97,2,31,59,31,81,227,245,244,229,232,239,239,235,243,249,237,226,239,236,231,242,229,229,107,128,3,211,230,242,233,227,225,110,128,1,177,228,233,229,242,229,243,233,115,129,3,171,31,103,232,239,239,235,243,249,237,226,239,236,231,242,229,229,107,128,3,212,232,239,239,235,243,249,237,226,239,108,128,3,210,244,239,238,239,115,128,3,142,242,233,238,103,128,1,110,115,3,31,157,31,172,31,179,232,239,242,244,227,249,242,233,236,236,233,99,128,4,14,237,225,236,108,128,247,117,244,242,225,233,231,232,116,2,31,191,31,202,227,249,242,233,236,236,233,99,128,4,174,243,244,242,239,235,229,227,249,242,233,236,236,233,99,128,4,176,244,233,236,228,101,130,1,104,31,231,31,239,225,227,245,244,101,128,30,120,226,229,236,239,119,128,30,116,86,136,0,86,32,11,32,20,32,31,32,60,32,67,32,79,32,91,32,99,227,233,242,227,236,101,128,36,203,228,239,244,226,229,236,239,119,128,30,126,101,2,32,37,32,48,227,249,242,233,236,236,233,99,128,4,18,247,225,242,237,229,238,233,225,110,128,5,78,232,239,239,107,128,1,178,237,239,238,239,243,240,225,227,101,128,255,54,239,225,242,237,229,238,233,225,110,128,5,72,243,237,225,236,108,128,247,118,244,233,236,228,101,128,30,124,87,134,0,87,32,123,32,131,32,154,32,194,32,202,32,214,225,227,245,244,101,128,30,130,227,233,242,99,2,32,140,32,145,236,101,128,36,204,245,237,230,236,229,120,128,1,116,100,2,32,160,32,170,233,229,242,229,243,233,115,128,30,132,239,116,2,32,177,32,186,225,227,227,229,238,116,128,30,134,226,229,236,239,119,128,30,136,231,242,225,246,101,128,30,128,237,239,238,239,243,240,225,227,101,128,255,55,243,237,225,236,108,128,247,119,88,134,0,88,32,238,32,247,33,18,33,31,33,35,33,47,227,233,242,227,236,101,128,36,205,100,2,32,253,33,7,233,229,242,229,243,233,115,128,30,140,239,244,225,227,227,229,238,116,128,30,138,229,232,225,242,237,229,238,233,225,110,128,5,61,105,128,3,158,237,239,238,239,243,240,225,227,101,128,255,56,243,237,225,236,108,128,247,120,89,139,0,89,33,81,33,116,33,139,33,189,33,228,33,236,33,253,34,40,34,52,34,60,34,68,97,2,33,87,33,104,227,245,244,101,129,0,221,33,96,243,237,225,236,108,128,247,253,244,227,249,242,233,236,236,233,99,128,4,98,227,233,242,99,2,33,125,33,130,236,101,128,36,206,245,237,230,236,229,120,128,1,118,100,2,33,145,33,165,233,229,242,229,243,233,115,129,1,120,33,157,243,237,225,236,108,128,247,255,239,116,2,33,172,33,181,225,227,227,229,238,116,128,30,142,226,229,236,239,119,128,30,244,229,114,2,33,196,33,208,233,227,249,242,233,236,236,233,99,128,4,43,245,228,233,229,242,229,243,233,243,227,249,242,233,236,236,233,99,128,4,248,231,242,225,246,101,128,30,242,232,239,239,107,129,1,179,33,245,225,226,239,246,101,128,30,246,105,3,34,5,34,16,34,27,225,242,237,229,238,233,225,110,128,5,69,227,249,242,233,236,236,233,99,128,4,7,247,238,225,242,237,229,238,233,225,110,128,5,82,237,239,238,239,243,240,225,227,101,128,255,57,243,237,225,236,108,128,247,121,244,233,236,228,101,128,30,248,245,115,2,34,75,34,113,226,233,103,2,34,83,34,94,227,249,242,233,236,236,233,99,128,4,106,233,239,244,233,230,233,229,228,227,249,242,233,236,236,233,99,128,4,108,236,233,244,244,236,101,2,34,124,34,135,227,249,242,233,236,236,233,99,128,4,102,233,239,244,233,230,233,229,228,227,249,242,233,236,236,233,99,128,4,104,90,136,0,90,34,174,34,198,34,243,35,14,35,81,35,173,35,185,35,197,97,2,34,180,34,191,225,242,237,229,238,233,225,110,128,5,54,227,245,244,101,128,1,121,99,2,34,204,34,221,225,242,239,110,129,1,125,34,213,243,237,225,236,108,128,246,255,233,242,99,2,34,229,34,234,236,101,128,36,207,245,237,230,236,229,120,128,30,144,228,239,116,130,1,123,34,253,35,6,225,227,227,229,238,116,128,1,123,226,229,236,239,119,128,30,146,101,3,35,22,35,33,35,76,227,249,242,233,236,236,233,99,128,4,23,100,2,35,39,35,58,229,243,227,229,238,228,229,242,227,249,242,233,236,236,233,99,128,4,152,233,229,242,229,243,233,243,227,249,242,233,236,236,233,99,128,4,222,244,97,128,3,150,232,101,4,35,92,35,103,35,119,35,130,225,242,237,229,238,233,225,110,128,5,58,226,242,229,246,229,227,249,242,233,236,236,233,99,128,4,193,227,249,242,233,236,236,233,99,128,4,22,100,2,35,136,35,155,229,243,227,229,238,228,229,242,227,249,242,233,236,236,233,99,128,4,150,233,229,242,229,243,233,243,227,249,242,233,236,236,233,99,128,4,220,236,233,238,229,226,229,236,239,119,128,30,148,237,239,238,239,243,240,225,227,101,128,255,58,115,2,35,203,35,210,237,225,236,108,128,247,122,244,242,239,235,101,128,1,181,97,158,0,97,36,26,38,154,39,4,39,68,39,132,39,196,40,4,40,68,40,126,40,190,41,70,41,217,42,137,42,237,43,17,49,192,49,229,50,0,50,225,51,7,52,96,52,168,53,123,53,132,54,5,56,13,57,3,57,50,57,201,57,215,49,138,39,1,36,50,36,114,36,154,36,218,37,26,37,90,37,154,37,218,38,26,38,90,48,138,39,33,36,74,36,78,36,82,36,86,36,90,36,94,36,98,36,102,36,106,36,110,48,128,39,94,49,128,39,97,50,128,39,98,51,128,39,99,52,128,39,100,53,128,39,16,54,128,39,101,55,128,39,102,56,128,39,103,57,128,38,96,49,134,38,27,36,130,36,134,36,138,36,142,36,146,36,150,48,128,38,101,49,128,38,102,50,128,38,99,55,128,39,9,56,128,39,8,57,128,39,7,50,138,38,30,36,178,36,182,36,186,36,190,36,194,36,198,36,202,36,206,36,210,36,214,48,128,36,96,49,128,36,97,50,128,36,98,51,128,36,99,52,128,36,100,53,128,36,101,54,128,36,102,55,128,36,103,56,128,36,104,57,128,36,105,51,138,39,12,36,242,36,246,36,250,36,254,37,2,37,6,37,10,37,14,37,18,37,22,48,128,39,118,49,128,39,119,50,128,39,120,51,128,39,121,52,128,39,122,53,128,39,123,54,128,39,124,55,128,39,125,56,128,39,126,57,128,39,127,52,138,39,13,37,50,37,54,37,58,37,62,37,66,37,70,37,74,37,78,37,82,37,86,48,128,39,128,49,128,39,129,50,128,39,130,51,128,39,131,52,128,39,132,53,128,39,133,54,128,39,134,55,128,39,135,56,128,39,136,57,128,39,137,53,138,39,14,37,114,37,118,37,122,37,126,37,130,37,134,37,138,37,142,37,146,37,150,48,128,39,138,49,128,39,139,50,128,39,140,51,128,39,141,52,128,39,142,53,128,39,143,54,128,39,144,55,128,39,145,56,128,39,146,57,128,39,147,54,138,39,15,37,178,37,182,37,186,37,190,37,194,37,198,37,202,37,206,37,210,37,214,48,128,39,148,49,128,33,146,50,128,39,163,51,128,33,148,52,128,33,149,53,128,39,153,54,128,39,155,55,128,39,156,56,128,39,157,57,128,39,158,55,138,39,17,37,242,37,246,37,250,37,254,38,2,38,6,38,10,38,14,38,18,38,22,48,128,39,159,49,128,39,160,50,128,39,161,51,128,39,162,52,128,39,164,53,128,39,165,54,128,39,166,55,128,39,167,56,128,39,168,57,128,39,169,56,138,39,18,38,50,38,54,38,58,38,62,38,66,38,70,38,74,38,78,38,82,38,86,48,128,39,171,49,128,39,173,50,128,39,175,51,128,39,178,52,128,39,179,53,128,39,181,54,128,39,184,55,128,39,186,56,128,39,187,57,128,39,188,57,138,39,19,38,114,38,118,38,122,38,126,38,130,38,134,38,138,38,142,38,146,38,150,48,128,39,189,49,128,39,190,50,128,39,154,51,128,39,170,52,128,39,182,53,128,39,185,54,128,39,152,55,128,39,180,56,128,39,183,57,128,39,172,50,138,39,2,38,178,38,224,38,228,38,232,38,236,38,240,38,244,38,248,38,252,39,0,48,135,39,20,38,196,38,200,38,204,38,208,38,212,38,216,38,220,48,128,39,174,49,128,39,177,50,128,39,3,51,128,39,80,52,128,39,82,53,128,39,110,54,128,39,112,49,128,39,21,50,128,39,22,51,128,39,23,52,128,39,24,53,128,39,25,54,128,39,26,55,128,39,27,56,128,39,28,57,128,39,34,51,138,39,4,39,28,39,32,39,36,39,40,39,44,39,48,39,52,39,56,39,60,39,64,48,128,39,35,49,128,39,36,50,128,39,37,51,128,39,38,52,128,39,39,53,128,38,5,54,128,39,41,55,128,39,42,56,128,39,43,57,128,39,44,52,138,38,14,39,92,39,96,39,100,39,104,39,108,39,112,39,116,39,120,39,124,39,128,48,128,39,45,49,128,39,46,50,128,39,47,51,128,39,48,52,128,39,49,53,128,39,50,54,128,39,51,55,128,39,52,56,128,39,53,57,128,39,54,53,138,39,6,39,156,39,160,39,164,39,168,39,172,39,176,39,180,39,184,39,188,39,192,48,128,39,55,49,128,39,56,50,128,39,57,51,128,39,58,52,128,39,59,53,128,39,60,54,128,39,61,55,128,39,62,56,128,39,63,57,128,39,64,54,138,39,29,39,220,39,224,39,228,39,232,39,236,39,240,39,244,39,248,39,252,40,0,48,128,39,65,49,128,39,66,50,128,39,67,51,128,39,68,52,128,39,69,53,128,39,70,54,128,39,71,55,128,39,72,56,128,39,73,57,128,39,74,55,138,39,30,40,28,40,32,40,36,40,40,40,44,40,48,40,52,40,56,40,60,40,64,48,128,39,75,49,128,37,207,50,128,39,77,51,128,37,160,52,128,39,79,53,128,39,81,54,128,37,178,55,128,37,188,56,128,37,198,57,128,39,86,56,137,39,31,40,90,40,94,40,98,40,102,40,106,40,110,40,114,40,118,40,122,49,128,37,215,50,128,39,88,51,128,39,89,52,128,39,90,53,128,39,111,54,128,39,113,55,128,39,114,56,128,39,115,57,128,39,104,57,138,39,32,40,150,40,154,40,158,40,162,40,166,40,170,40,174,40,178,40,182,40,186,48,128,39,105,49,128,39,108,50,128,39,109,51,128,39,106,52,128,39,107,53,128,39,116,54,128,39,117,55,128,39,91,56,128,39,92,57,128,39,93,97,7,40,206,40,216,40,223,40,230,40,255,41,15,41,26,226,229,238,231,225,236,105,128,9,134,227,245,244,101,128,0,225,228,229,246,97,128,9,6,231,117,2,40,237,40,246,234,225,242,225,244,105,128,10,134,242,237,245,235,232,105,128,10,6,237,225,244,242,225,231,245,242,237,245,235,232,105,128,10,62,242,245,243,241,245,225,242,101,128,51,3,246,239,247,229,236,243,233,231,110,3,41,42,41,52,41,59,226,229,238,231,225,236,105,128,9,190,228,229,246,97,128,9,62,231,245,234,225,242,225,244,105,128,10,190,98,4,41,80,41,121,41,130,41,140,226,242,229,246,233,225,244,233,239,110,2,41,95,41,110,237,225,242,235,225,242,237,229,238,233,225,110,128,5,95,243,233,231,238,228,229,246,97,128,9,112,229,238,231,225,236,105,128,9,133,239,240,239,237,239,230,111,128,49,26,242,229,246,101,134,1,3,41,159,41,167,41,178,41,189,41,197,41,209,225,227,245,244,101,128,30,175,227,249,242,233,236,236,233,99,128,4,209,228,239,244,226,229,236,239,119,128,30,183,231,242,225,246,101,128,30,177,232,239,239,235,225,226,239,246,101,128,30,179,244,233,236,228,101,128,30,181,99,4,41,227,41,234,42,57,42,127,225,242,239,110,128,1,206,233,242,99,2,41,242,41,247,236,101,128,36,208,245,237,230,236,229,120,133,0,226,42,10,42,18,42,29,42,37,42,49,225,227,245,244,101,128,30,165,228,239,244,226,229,236,239,119,128,30,173,231,242,225,246,101,128,30,167,232,239,239,235,225,226,239,246,101,128,30,169,244,233,236,228,101,128,30,171,245,244,101,133,0,180,42,73,42,84,42,101,42,108,42,117,226,229,236,239,247,227,237,98,128,3,23,99,2,42,90,42,95,237,98,128,3,1,239,237,98,128,3,1,228,229,246,97,128,9,84,236,239,247,237,239,100,128,2,207,244,239,238,229,227,237,98,128,3,65,249,242,233,236,236,233,99,128,4,48,100,5,42,149,42,159,42,173,42,179,42,213,226,236,231,242,225,246,101,128,2,1,228,225,235,231,245,242,237,245,235,232,105,128,10,113,229,246,97,128,9,5,233,229,242,229,243,233,115,130,0,228,42,193,42,204,227,249,242,233,236,236,233,99,128,4,211,237,225,227,242,239,110,128,1,223,239,116,2,42,220,42,228,226,229,236,239,119,128,30,161,237,225,227,242,239,110,128,1,225,101,131,0,230,42,247,42,255,43,8,225,227,245,244,101,128,1,253,235,239,242,229,225,110,128,49,80,237,225,227,242,239,110,128,1,227,230,233,105,6,43,33,43,53,45,246,45,252,46,11,49,111,48,2,43,39,43,46,176,178,176,56,128,32,21,184,185,180,49,128,32,164,177,48,3,43,62,45,86,45,221,48,9,43,82,43,102,43,164,43,226,44,32,44,94,44,156,44,218,45,24,49,3,43,90,43,94,43,98,55,128,4,16,56,128,4,17,57,128,4,18,50,10,43,124,43,128,43,132,43,136,43,140,43,144,43,148,43,152,43,156,43,160,48,128,4,19,49,128,4,20,50,128,4,21,51,128,4,1,52,128,4,22,53,128,4,23,54,128,4,24,55,128,4,25,56,128,4,26,57,128,4,27,51,10,43,186,43,190,43,194,43,198,43,202,43,206,43,210,43,214,43,218,43,222,48,128,4,28,49,128,4,29,50,128,4,30,51,128,4,31,52,128,4,32,53,128,4,33,54,128,4,34,55,128,4,35,56,128,4,36,57,128,4,37,52,10,43,248,43,252,44,0,44,4,44,8,44,12,44,16,44,20,44,24,44,28,48,128,4,38,49,128,4,39,50,128,4,40,51,128,4,41,52,128,4,42,53,128,4,43,54,128,4,44,55,128,4,45,56,128,4,46,57,128,4,47,53,10,44,54,44,58,44,62,44,66,44,70,44,74,44,78,44,82,44,86,44,90,48,128,4,144,49,128,4,2,50,128,4,3,51,128,4,4,52,128,4,5,53,128,4,6,54,128,4,7,55,128,4,8,56,128,4,9,57,128,4,10,54,10,44,116,44,120,44,124,44,128,44,132,44,136,44,140,44,144,44,148,44,152,48,128,4,11,49,128,4,12,50,128,4,14,51,128,246,196,52,128,246,197,53,128,4,48,54,128,4,49,55,128,4,50,56,128,4,51,57,128,4,52,55,10,44,178,44,182,44,186,44,190,44,194,44,198,44,202,44,206,44,210,44,214,48,128,4,53,49,128,4,81,50,128,4,54,51,128,4,55,52,128,4,56,53,128,4,57,54,128,4,58,55,128,4,59,56,128,4,60,57,128,4,61,56,10,44,240,44,244,44,248,44,252,45,0,45,4,45,8,45,12,45,16,45,20,48,128,4,62,49,128,4,63,50,128,4,64,51,128,4,65,52,128,4,66,53,128,4,67,54,128,4,68,55,128,4,69,56,128,4,70,57,128,4,71,57,10,45,46,45,50,45,54,45,58,45,62,45,66,45,70,45,74,45,78,45,82,48,128,4,72,49,128,4,73,50,128,4,74,51,128,4,75,52,128,4,76,53,128,4,77,54,128,4,78,55,128,4,79,56,128,4,145,57,128,4,82,49,4,45,96,45,158,45,163,45,189,48,10,45,118,45,122,45,126,45,130,45,134,45,138,45,142,45,146,45,150,45,154,48,128,4,83,49,128,4,84,50,128,4,85,51,128,4,86,52,128,4,87,53,128,4,88,54,128,4,89,55,128,4,90,56,128,4,91,57,128,4,92,177,48,128,4,94,52,4,45,173,45,177,45,181,45,185,53,128,4,15,54,128,4,98,55,128,4,114,56,128,4,116,57,5,45,201,45,205,45,209,45,213,45,217,50,128,246,198,51,128,4,95,52,128,4,99,53,128,4,115,54,128,4,117,56,2,45,227,45,241,51,2,45,233,45,237,49,128,246,199,50,128,246,200,180,54,128,4,217,178,185,57,128,32,14,179,48,2,46,3,46,7,48,128,32,15,49,128,32,13,181,55,7,46,28,46,98,47,163,47,240,48,197,49,34,49,105,51,2,46,34,46,48,56,2,46,40,46,44,49,128,6,106,56,128,6,12,57,8,46,66,46,70,46,74,46,78,46,82,46,86,46,90,46,94,50,128,6,96,51,128,6,97,52,128,6,98,53,128,6,99,54,128,6,100,55,128,6,101,56,128,6,102,57,128,6,103,52,7,46,114,46,146,46,208,47,14,47,46,47,102,47,158,48,5,46,126,46,130,46,134,46,138,46,142,48,128,6,104,49,128,6,105,51,128,6,27,55,128,6,31,57,128,6,33,49,10,46,168,46,172,46,176,46,180,46,184,46,188,46,192,46,196,46,200,46,204,48,128,6,34,49,128,6,35,50,128,6,36,51,128,6,37,52,128,6,38,53,128,6,39,54,128,6,40,55,128,6,41,56,128,6,42,57,128,6,43,50,10,46,230,46,234,46,238,46,242,46,246,46,250,46,254,47,2,47,6,47,10,48,128,6,44,49,128,6,45,50,128,6,46,51,128,6,47,52,128,6,48,53,128,6,49,54,128,6,50,55,128,6,51,56,128,6,52,57,128,6,53,51,5,47,26,47,30,47,34,47,38,47,42,48,128,6,54,49,128,6,55,50,128,6,56,51,128,6,57,52,128,6,58,52,9,47,66,47,70,47,74,47,78,47,82,47,86,47,90,47,94,47,98,48,128,6,64,49,128,6,65,50,128,6,66,51,128,6,67,52,128,6,68,53,128,6,69,54,128,6,70,56,128,6,72,57,128,6,73,53,9,47,122,47,126,47,130,47,134,47,138,47,142,47,146,47,150,47,154,48,128,6,74,49,128,6,75,50,128,6,76,51,128,6,77,52,128,6,78,53,128,6,79,54,128,6,80,55,128,6,81,56,128,6,82,183,48,128,6,71,53,3,47,171,47,203,47,235,48,5,47,183,47,187,47,191,47,195,47,199,53,128,6,164,54,128,6,126,55,128,6,134,56,128,6,152,57,128,6,175,49,5,47,215,47,219,47,223,47,227,47,231,49,128,6,121,50,128,6,136,51,128,6,145,52,128,6,186,57,128,6,210,179,52,128,6,213,54,7,48,0,48,5,48,10,48,15,48,53,48,115,48,177,179,54,128,32,170,180,53,128,5,190,181,56,128,5,195,54,6,48,29,48,33,48,37,48,41,48,45,48,49,52,128,5,208,53,128,5,209,54,128,5,210,55,128,5,211,56,128,5,212,57,128,5,213,55,10,48,75,48,79,48,83,48,87,48,91,48,95,48,99,48,103,48,107,48,111,48,128,5,214,49,128,5,215,50,128,5,216,51,128,5,217,52,128,5,218,53,128,5,219,54,128,5,220,55,128,5,221,56,128,5,222,57,128,5,223,56,10,48,137,48,141,48,145,48,149,48,153,48,157,48,161,48,165,48,169,48,173,48,128,5,224,49,128,5,225,50,128,5,226,51,128,5,227,52,128,5,228,53,128,5,229,54,128,5,230,55,128,5,231,56,128,5,232,57,128,5,233,57,3,48,185,48,189,48,193,48,128,5,234,52,128,251,42,53,128,251,43,55,4,48,207,48,221,48,241,48,246,48,2,48,213,48,217,48,128,251,75,53,128,251,31,49,3,48,229,48,233,48,237,54,128,5,240,55,128,5,241,56,128,5,242,178,51,128,251,53,57,7,49,6,49,10,49,14,49,18,49,22,49,26,49,30,51,128,5,180,52,128,5,181,53,128,5,182,54,128,5,187,55,128,5,184,56,128,5,183,57,128,5,176,56,3,49,42,49,86,49,91,48,7,49,58,49,62,49,66,49,70,49,74,49,78,49,82,48,128,5,178,49,128,5,177,50,128,5,179,51,128,5,194,52,128,5,193,54,128,5,185,55,128,5,188,179,57,128,5,189,52,2,49,97,49,101,49,128,5,191,50,128,5,192,185,178,57,128,2,188,54,3,49,119,49,178,49,185,49,4,49,129,49,145,49,151,49,172,50,2,49,135,49,140,180,56,128,33,5,184,57,128,33,19,179,181,50,128,33,22,181,55,3,49,160,49,164,49,168,51,128,32,44,52,128,32,45,53,128,32,46,182,182,52,128,32,12,179,177,182,55,128,6,109,180,185,179,55,128,2,189,103,2,49,198,49,205,242,225,246,101,128,0,224,117,2,49,211,49,220,234,225,242,225,244,105,128,10,133,242,237,245,235,232,105,128,10,5,104,2,49,235,49,245,233,242,225,231,225,238,97,128,48,66,239,239,235,225,226,239,246,101,128,30,163,105,7,50,16,50,41,50,48,50,60,50,85,50,101,50,181,98,2,50,22,50,31,229,238,231,225,236,105,128,9,144,239,240,239,237,239,230,111,128,49,30,228,229,246,97,128,9,16,229,227,249,242,233,236,236,233,99,128,4,213,231,117,2,50,67,50,76,234,225,242,225,244,105,128,10,144,242,237,245,235,232,105,128,10,16,237,225,244,242,225,231,245,242,237,245,235,232,105,128,10,72,110,5,50,113,50,122,50,136,50,152,50,167,225,242,225,226,233,99,128,6,57,230,233,238,225,236,225,242,225,226,233,99,128,254,202,233,238,233,244,233,225,236,225,242,225,226,233,99,128,254,203,237,229,228,233,225,236,225,242,225,226,233,99,128,254,204,246,229,242,244,229,228,226,242,229,246,101,128,2,3,246,239,247,229,236,243,233,231,110,3,50,197,50,207,50,214,226,229,238,231,225,236,105,128,9,200,228,229,246,97,128,9,72,231,245,234,225,242,225,244,105,128,10,200,107,2,50,231,50,255,225,244,225,235,225,238,97,129,48,162,50,243,232,225,236,230,247,233,228,244,104,128,255,113,239,242,229,225,110,128,49,79,108,3,51,15,52,71,52,80,101,2,51,21,52,66,102,136,5,208,51,41,51,50,51,65,51,79,51,168,51,182,52,37,52,51,225,242,225,226,233,99,128,6,39,228,225,231,229,243,232,232,229,226,242,229,119,128,251,48,230,233,238,225,236,225,242,225,226,233,99,128,254,142,104,2,51,85,51,160,225,237,250,97,2,51,94,51,127,225,226,239,246,101,2,51,104,51,113,225,242,225,226,233,99,128,6,35,230,233,238,225,236,225,242,225,226,233,99,128,254,132,226,229,236,239,119,2,51,137,51,146,225,242,225,226,233,99,128,6,37,230,233,238,225,236,225,242,225,226,233,99,128,254,136,229,226,242,229,119,128,5,208,236,225,237,229,228,232,229,226,242,229,119,128,251,79,237,97,2,51,189,51,225,228,228,225,225,226,239,246,101,2,51,202,51,211,225,242,225,226,233,99,128,6,34,230,233,238,225,236,225,242,225,226,233,99,128,254,130,235,243,245,242,97,4,51,239,51,248,52,6,52,22,225,242,225,226,233,99,128,6,73,230,233,238,225,236,225,242,225,226,233,99,128,254,240,233,238,233,244,233,225,236,225,242,225,226,233,99,128,254,243,237,229,228,233,225,236,225,242,225,226,233,99,128,254,244,240,225,244,225,232,232,229,226,242,229,119,128,251,46,241,225,237,225,244,243,232,229,226,242,229,119,128,251,47,240,104,128,33,53,236,229,241,245,225,108,128,34,76,240,232,97,129,3,177,52,88,244,239,238,239,115,128,3,172,109,4,52,106,52,114,52,125,52,159,225,227,242,239,110,128,1,1,239,238,239,243,240,225,227,101,128,255,65,240,229,242,243,225,238,100,130,0,38,52,139,52,151,237,239,238,239,243,240,225,227,101,128,255,6,243,237,225,236,108,128,247,38,243,241,245,225,242,101,128,51,194,110,4,52,178,52,189,53,55,53,65,226,239,240,239,237,239,230,111,128,49,34,103,4,52,199,52,210,52,224,53,47,226,239,240,239,237,239,230,111,128,49,36,235,232,225,238,235,232,245,244,232,225,105,128,14,90,236,101,131,34,32,52,235,53,32,53,39,226,242,225,227,235,229,116,2,52,247,53,11,236,229,230,116,129,48,8,53,0,246,229,242,244,233,227,225,108,128,254,63,242,233,231,232,116,129,48,9,53,21,246,229,242,244,233,227,225,108,128,254,64,236,229,230,116,128,35,41,242,233,231,232,116,128,35,42,243,244,242,239,109,128,33,43,239,244,229,236,229,233,97,128,3,135,117,2,53,71,53,83,228,225,244,244,225,228,229,246,97,128,9,82,243,246,225,242,97,3,53,95,53,105,53,112,226,229,238,231,225,236,105,128,9,130,228,229,246,97,128,9,2,231,245,234,225,242,225,244,105,128,10,130,239,231,239,238,229,107,128,1,5,112,3,53,140,53,164,53,194,97,2,53,146,53,158,225,244,239,243,241,245,225,242,101,128,51,0,242,229,110,128,36,156,239,243,244,242,239,240,232,101,2,53,177,53,188,225,242,237,229,238,233,225,110,128,5,90,237,239,100,128,2,188,112,2,53,200,53,205,236,101,128,248,255,242,111,2,53,212,53,220,225,227,232,229,115,128,34,80,120,2,53,226,53,246,229,241,245,225,108,129,34,72,53,236,239,242,233,237,225,231,101,128,34,82,233,237,225,244,229,236,249,229,241,245,225,108,128,34,69,114,4,54,15,54,42,54,46,54,91,225,229,97,2,54,23,54,33,229,235,239,242,229,225,110,128,49,142,235,239,242,229,225,110,128,49,141,99,128,35,18,105,2,54,52,54,66,231,232,244,232,225,236,230,242,233,238,103,128,30,154,238,103,130,0,229,54,75,54,83,225,227,245,244,101,128,1,251,226,229,236,239,119,128,30,1,242,239,119,8,54,111,54,118,54,247,55,57,55,107,55,162,55,185,56,4,226,239,244,104,128,33,148,100,3,54,126,54,165,54,212,225,243,104,4,54,138,54,145,54,152,54,160,228,239,247,110,128,33,227,236,229,230,116,128,33,224,242,233,231,232,116,128,33,226,245,112,128,33,225,226,108,5,54,178,54,185,54,192,54,199,54,207,226,239,244,104,128,33,212,228,239,247,110,128,33,211,236,229,230,116,128,33,208,242,233,231,232,116,128,33,210,245,112,128,33,209,239,247,110,131,33,147,54,224,54,231,54,239,236,229,230,116,128,33,153,242,233,231,232,116,128,33,152,247,232,233,244,101,128,33,233,104,2,54,253,55,48,229,225,100,4,55,9,55,19,55,29,55,40,228,239,247,238,237,239,100,128,2,197,236,229,230,244,237,239,100,128,2,194,242,233,231,232,244,237,239,100,128,2,195,245,240,237,239,100,128,2,196,239,242,233,250,229,120,128,248,231,236,229,230,116,131,33,144,55,70,55,87,55,99,228,226,108,129,33,208,55,78,243,244,242,239,235,101,128,33,205,239,246,229,242,242,233,231,232,116,128,33,198,247,232,233,244,101,128,33,230,242,233,231,232,116,132,33,146,55,123,55,135,55,143,55,154,228,226,236,243,244,242,239,235,101,128,33,207,232,229,225,246,121,128,39,158,239,246,229,242,236,229,230,116,128,33,196,247,232,233,244,101,128,33,232,244,225,98,2,55,170,55,177,236,229,230,116,128,33,228,242,233,231,232,116,128,33,229,245,112,132,33,145,55,198,55,226,55,244,55,252,100,2,55,204,55,216,110,129,33,149,55,210,226,243,101,128,33,168,239,247,238,226,225,243,101,128,33,168,236,229,230,116,129,33,150,55,235,239,230,228,239,247,110,128,33,197,242,233,231,232,116,128,33,151,247,232,233,244,101,128,33,231,246,229,242,244,229,120,128,248,230,115,5,56,25,56,101,56,146,56,229,56,239,99,2,56,31,56,83,233,105,2,56,38,56,61,227,233,242,227,245,109,129,0,94,56,49,237,239,238,239,243,240,225,227,101,128,255,62,244,233,236,228,101,129,0,126,56,71,237,239,238,239,243,240,225,227,101,128,255,94,242,233,240,116,129,2,81,56,92,244,245,242,238,229,100,128,2,82,237,225,236,108,2,56,110,56,121,232,233,242,225,231,225,238,97,128,48,65,235,225,244,225,235,225,238,97,129,48,161,56,134,232,225,236,230,247,233,228,244,104,128,255,103,244,229,242,233,115,2], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+40960);
/* memory initializer */ allocate([56,156,56,225,107,131,0,42,56,166,56,194,56,217,97,2,56,172,56,186,236,244,239,238,229,225,242,225,226,233,99,128,6,109,242,225,226,233,99,128,6,109,109,2,56,200,56,206,225,244,104,128,34,23,239,238,239,243,240,225,227,101,128,255,10,243,237,225,236,108,128,254,97,109,128,32,66,245,240,229,242,233,239,114,128,246,233,249,237,240,244,239,244,233,227,225,236,236,249,229,241,245,225,108,128,34,67,116,132,0,64,57,15,57,22,57,34,57,42,233,236,228,101,128,0,227,237,239,238,239,243,240,225,227,101,128,255,32,243,237,225,236,108,128,254,107,245,242,238,229,100,128,2,80,117,6,57,64,57,89,57,96,57,121,57,141,57,157,98,2,57,70,57,79,229,238,231,225,236,105,128,9,148,239,240,239,237,239,230,111,128,49,32,228,229,246,97,128,9,20,231,117,2,57,103,57,112,234,225,242,225,244,105,128,10,148,242,237,245,235,232,105,128,10,20,236,229,238,231,244,232,237,225,242,235,226,229,238,231,225,236,105,128,9,215,237,225,244,242,225,231,245,242,237,245,235,232,105,128,10,76,246,239,247,229,236,243,233,231,110,3,57,173,57,183,57,190,226,229,238,231,225,236,105,128,9,204,228,229,246,97,128,9,76,231,245,234,225,242,225,244,105,128,10,204,246,225,231,242,225,232,225,228,229,246,97,128,9,61,121,2,57,221,57,233,226,225,242,237,229,238,233,225,110,128,5,97,233,110,130,5,226,57,242,58,1,225,236,244,239,238,229,232,229,226,242,229,119,128,251,32,232,229,226,242,229,119,128,5,226,98,144,0,98,58,46,58,181,58,192,58,201,58,226,60,11,60,73,60,146,62,72,62,84,62,127,62,135,62,145,64,15,64,39,64,48,97,7,58,62,58,72,58,96,58,103,58,128,58,152,58,163,226,229,238,231,225,236,105,128,9,172,227,235,243,236,225,243,104,129,0,92,58,84,237,239,238,239,243,240,225,227,101,128,255,60,228,229,246,97,128,9,44,231,117,2,58,110,58,119,234,225,242,225,244,105,128,10,172,242,237,245,235,232,105,128,10,44,104,2,58,134,58,144,233,242,225,231,225,238,97,128,48,112,244,244,232,225,105,128,14,63,235,225,244,225,235,225,238,97,128,48,208,114,129,0,124,58,169,237,239,238,239,243,240,225,227,101,128,255,92,226,239,240,239,237,239,230,111,128,49,5,227,233,242,227,236,101,128,36,209,228,239,116,2,58,209,58,218,225,227,227,229,238,116,128,30,3,226,229,236,239,119,128,30,5,101,6,58,240,59,5,59,28,59,170,59,181,59,193,225,237,229,228,243,233,248,244,229,229,238,244,232,238,239,244,229,115,128,38,108,99,2,59,11,59,18,225,245,243,101,128,34,53,249,242,233,236,236,233,99,128,4,49,104,5,59,40,59,49,59,63,59,93,59,152,225,242,225,226,233,99,128,6,40,230,233,238,225,236,225,242,225,226,233,99,128,254,144,105,2,59,69,59,84,238,233,244,233,225,236,225,242,225,226,233,99,128,254,145,242,225,231,225,238,97,128,48,121,237,101,2,59,100,59,113,228,233,225,236,225,242,225,226,233,99,128,254,146,229,237,105,2,59,121,59,136,238,233,244,233,225,236,225,242,225,226,233,99,128,252,159,243,239,236,225,244,229,228,225,242,225,226,233,99,128,252,8,238,239,239,238,230,233,238,225,236,225,242,225,226,233,99,128,252,109,235,225,244,225,235,225,238,97,128,48,217,238,225,242,237,229,238,233,225,110,128,5,98,116,132,5,209,59,205,59,225,59,245,59,254,97,129,3,178,59,211,243,249,237,226,239,236,231,242,229,229,107,128,3,208,228,225,231,229,243,104,129,251,49,59,236,232,229,226,242,229,119,128,251,49,232,229,226,242,229,119,128,5,209,242,225,230,229,232,229,226,242,229,119,128,251,76,104,2,60,17,60,67,97,3,60,25,60,35,60,42,226,229,238,231,225,236,105,128,9,173,228,229,246,97,128,9,45,231,117,2,60,49,60,58,234,225,242,225,244,105,128,10,173,242,237,245,235,232,105,128,10,45,239,239,107,128,2,83,105,5,60,85,60,96,60,107,60,121,60,135,232,233,242,225,231,225,238,97,128,48,115,235,225,244,225,235,225,238,97,128,48,211,236,225,226,233,225,236,227,236,233,227,107,128,2,152,238,228,233,231,245,242,237,245,235,232,105,128,10,2,242,245,243,241,245,225,242,101,128,51,49,108,3,60,154,62,55,62,66,97,2,60,160,62,50,227,107,6,60,175,60,184,60,221,61,114,61,169,61,221,227,233,242,227,236,101,128,37,207,100,2,60,190,60,199,233,225,237,239,238,100,128,37,198,239,247,238,240,239,233,238,244,233,238,231,244,242,233,225,238,231,236,101,128,37,188,108,2,60,227,61,74,101,2,60,233,61,13,230,244,240,239,233,238,244,233,238,103,2,60,248,61,2,240,239,233,238,244,229,114,128,37,196,244,242,233,225,238,231,236,101,128,37,192,238,244,233,227,245,236,225,242,226,242,225,227,235,229,116,2,61,33,61,53,236,229,230,116,129,48,16,61,42,246,229,242,244,233,227,225,108,128,254,59,242,233,231,232,116,129,48,17,61,63,246,229,242,244,233,227,225,108,128,254,60,239,247,229,114,2,61,83,61,98,236,229,230,244,244,242,233,225,238,231,236,101,128,37,227,242,233,231,232,244,244,242,233,225,238,231,236,101,128,37,226,114,2,61,120,61,131,229,227,244,225,238,231,236,101,128,37,172,233,231,232,244,240,239,233,238,244,233,238,103,2,61,148,61,158,240,239,233,238,244,229,114,128,37,186,244,242,233,225,238,231,236,101,128,37,182,115,3,61,177,61,207,61,215,109,2,61,183,61,195,225,236,236,243,241,245,225,242,101,128,37,170,233,236,233,238,231,230,225,227,101,128,38,59,241,245,225,242,101,128,37,160,244,225,114,128,38,5,245,240,112,2,61,229,62,11,229,114,2,61,236,61,251,236,229,230,244,244,242,233,225,238,231,236,101,128,37,228,242,233,231,232,244,244,242,233,225,238,231,236,101,128,37,229,239,233,238,244,233,238,103,2,62,23,62,39,243,237,225,236,236,244,242,233,225,238,231,236,101,128,37,180,244,242,233,225,238,231,236,101,128,37,178,238,107,128,36,35,233,238,229,226,229,236,239,119,128,30,7,239,227,107,128,37,136,237,239,238,239,243,240,225,227,101,128,255,66,111,3,62,92,62,105,62,116,226,225,233,237,225,233,244,232,225,105,128,14,26,232,233,242,225,231,225,238,97,128,48,124,235,225,244,225,235,225,238,97,128,48,220,240,225,242,229,110,128,36,157,241,243,241,245,225,242,101,128,51,195,114,4,62,155,63,149,63,222,64,5,225,99,2,62,162,63,56,101,3,62,170,62,175,62,243,229,120,128,248,244,236,229,230,116,133,0,123,62,192,62,197,62,219,62,227,62,232,226,116,128,248,243,109,2,62,203,62,208,233,100,128,248,242,239,238,239,243,240,225,227,101,128,255,91,243,237,225,236,108,128,254,91,244,112,128,248,241,246,229,242,244,233,227,225,108,128,254,55,242,233,231,232,116,133,0,125,63,5,63,10,63,32,63,40,63,45,226,116,128,248,254,109,2,63,16,63,21,233,100,128,248,253,239,238,239,243,240,225,227,101,128,255,93,243,237,225,236,108,128,254,92,244,112,128,248,252,246,229,242,244,233,227,225,108,128,254,56,235,229,116,2,63,64,63,106,236,229,230,116,132,0,91,63,79,63,84,63,89,63,101,226,116,128,248,240,229,120,128,248,239,237,239,238,239,243,240,225,227,101,128,255,59,244,112,128,248,238,242,233,231,232,116,132,0,93,63,122,63,127,63,132,63,144,226,116,128,248,251,229,120,128,248,250,237,239,238,239,243,240,225,227,101,128,255,61,244,112,128,248,249,229,246,101,131,2,216,63,161,63,172,63,178,226,229,236,239,247,227,237,98,128,3,46,227,237,98,128,3,6,233,238,246,229,242,244,229,100,3,63,193,63,204,63,210,226,229,236,239,247,227,237,98,128,3,47,227,237,98,128,3,17,228,239,245,226,236,229,227,237,98,128,3,97,233,228,231,101,2,63,231,63,242,226,229,236,239,247,227,237,98,128,3,42,233,238,246,229,242,244,229,228,226,229,236,239,247,227,237,98,128,3,58,239,235,229,238,226,225,114,128,0,166,115,2,64,21,64,29,244,242,239,235,101,128,1,128,245,240,229,242,233,239,114,128,246,234,244,239,240,226,225,114,128,1,131,117,3,64,56,64,67,64,78,232,233,242,225,231,225,238,97,128,48,118,235,225,244,225,235,225,238,97,128,48,214,236,108,2,64,85,64,115,229,116,130,32,34,64,94,64,104,233,238,246,229,242,243,101,128,37,216,239,240,229,242,225,244,239,114,128,34,25,243,229,249,101,128,37,206,99,143,0,99,64,156,65,105,65,116,65,180,65,211,66,48,67,215,68,199,69,43,69,92,72,84,72,92,72,102,72,114,72,147,97,9,64,176,64,187,64,197,64,204,64,211,64,236,64,246,65,42,65,51,225,242,237,229,238,233,225,110,128,5,110,226,229,238,231,225,236,105,128,9,154,227,245,244,101,128,1,7,228,229,246,97,128,9,26,231,117,2,64,218,64,227,234,225,242,225,244,105,128,10,154,242,237,245,235,232,105,128,10,26,236,243,241,245,225,242,101,128,51,136,238,228,242,225,226,233,238,228,117,4,65,8,65,18,65,24,65,31,226,229,238,231,225,236,105,128,9,129,227,237,98,128,3,16,228,229,246,97,128,9,1,231,245,234,225,242,225,244,105,128,10,129,240,243,236,239,227,107,128,33,234,114,3,65,59,65,65,65,91,229,239,102,128,33,5,239,110,130,2,199,65,74,65,85,226,229,236,239,247,227,237,98,128,3,44,227,237,98,128,3,12,242,233,225,231,229,242,229,244,245,242,110,128,33,181,226,239,240,239,237,239,230,111,128,49,24,99,4,65,126,65,133,65,152,65,174,225,242,239,110,128,1,13,229,228,233,236,236,97,129,0,231,65,144,225,227,245,244,101,128,30,9,233,242,99,2,65,160,65,165,236,101,128,36,210,245,237,230,236,229,120,128,1,9,245,242,108,128,2,85,100,2,65,186,65,202,239,116,129,1,11,65,193,225,227,227,229,238,116,128,1,11,243,241,245,225,242,101,128,51,197,101,2,65,217,65,233,228,233,236,236,97,129,0,184,65,227,227,237,98,128,3,39,238,116,132,0,162,65,246,66,14,66,26,66,37,105,2,65,252,66,4,231,242,225,228,101,128,33,3,238,230,229,242,233,239,114,128,246,223,237,239,238,239,243,240,225,227,101,128,255,224,239,236,228,243,244,249,236,101,128,247,162,243,245,240,229,242,233,239,114,128,246,224,104,5,66,60,66,123,66,134,67,62,67,154,97,4,66,70,66,81,66,91,66,98,225,242,237,229,238,233,225,110,128,5,121,226,229,238,231,225,236,105,128,9,155,228,229,246,97,128,9,27,231,117,2,66,105,66,114,234,225,242,225,244,105,128,10,155,242,237,245,235,232,105,128,10,27,226,239,240,239,237,239,230,111,128,49,20,101,6,66,148,66,168,66,192,67,4,67,16,67,37,225,226,235,232,225,243,233,225,238,227,249,242,233,236,236,233,99,128,4,189,99,2,66,174,66,182,235,237,225,242,107,128,39,19,249,242,233,236,236,233,99,128,4,71,100,2,66,198,66,242,229,243,227,229,238,228,229,114,2,66,211,66,231,225,226,235,232,225,243,233,225,238,227,249,242,233,236,236,233,99,128,4,191,227,249,242,233,236,236,233,99,128,4,183,233,229,242,229,243,233,243,227,249,242,233,236,236,233,99,128,4,245,232,225,242,237,229,238,233,225,110,128,5,115,235,232,225,235,225,243,243,233,225,238,227,249,242,233,236,236,233,99,128,4,204,246,229,242,244,233,227,225,236,243,244,242,239,235,229,227,249,242,233,236,236,233,99,128,4,185,105,129,3,199,67,68,229,245,227,104,4,67,81,67,116,67,131,67,140,97,2,67,87,67,102,227,233,242,227,236,229,235,239,242,229,225,110,128,50,119,240,225,242,229,238,235,239,242,229,225,110,128,50,23,227,233,242,227,236,229,235,239,242,229,225,110,128,50,105,235,239,242,229,225,110,128,49,74,240,225,242,229,238,235,239,242,229,225,110,128,50,9,111,2,67,160,67,210,227,104,3,67,169,67,191,67,201,225,110,2,67,176,67,184,231,244,232,225,105,128,14,10,244,232,225,105,128,14,8,233,238,231,244,232,225,105,128,14,9,239,229,244,232,225,105,128,14,12,239,107,128,1,136,105,2,67,221,68,67,229,245,99,5,67,235,68,14,68,29,68,38,68,52,97,2,67,241,68,0,227,233,242,227,236,229,235,239,242,229,225,110,128,50,118,240,225,242,229,238,235,239,242,229,225,110,128,50,22,227,233,242,227,236,229,235,239,242,229,225,110,128,50,104,235,239,242,229,225,110,128,49,72,240,225,242,229,238,235,239,242,229,225,110,128,50,8,245,240,225,242,229,238,235,239,242,229,225,110,128,50,28,242,99,2,68,74,68,169,236,101,132,37,203,68,87,68,98,68,103,68,127,237,245,236,244,233,240,236,121,128,34,151,239,116,128,34,153,112,2,68,109,68,115,236,245,115,128,34,149,239,243,244,225,236,237,225,242,107,128,48,54,247,233,244,104,2,68,136,68,152,236,229,230,244,232,225,236,230,226,236,225,227,107,128,37,208,242,233,231,232,244,232,225,236,230,226,236,225,227,107,128,37,209,245,237,230,236,229,120,130,2,198,68,182,68,193,226,229,236,239,247,227,237,98,128,3,45,227,237,98,128,3,2,108,3,68,207,68,213,69,11,229,225,114,128,35,39,233,227,107,4,68,225,68,236,68,245,68,255,225,236,246,229,239,236,225,114,128,1,194,228,229,238,244,225,108,128,1,192,236,225,244,229,242,225,108,128,1,193,242,229,244,242,239,230,236,229,120,128,1,195,245,98,129,38,99,69,18,243,245,233,116,2,69,27,69,35,226,236,225,227,107,128,38,99,247,232,233,244,101,128,38,103,109,3,69,51,69,65,69,76,227,245,226,229,228,243,241,245,225,242,101,128,51,164,239,238,239,243,240,225,227,101,128,255,67,243,241,245,225,242,229,228,243,241,245,225,242,101,128,51,160,111,8,69,110,69,121,69,208,70,150,71,179,71,210,72,61,72,70,225,242,237,229,238,233,225,110,128,5,129,236,239,110,131,0,58,69,133,69,158,69,177,237,239,110,2,69,141,69,149,229,244,225,242,121,128,32,161,239,243,240,225,227,101,128,255,26,115,2,69,164,69,170,233,231,110,128,32,161,237,225,236,108,128,254,85,244,242,233,225,238,231,245,236,225,114,2,69,192,69,202,232,225,236,230,237,239,100,128,2,209,237,239,100,128,2,208,109,2,69,214,70,143,237,97,134,0,44,69,231,70,39,70,50,70,62,70,92,70,115,97,3,69,239,70,9,70,17,226,239,246,101,2,69,248,69,254,227,237,98,128,3,19,242,233,231,232,244,227,237,98,128,3,21,227,227,229,238,116,128,246,195,114,2,70,23,70,30,225,226,233,99,128,6,12,237,229,238,233,225,110,128,5,93,233,238,230,229,242,233,239,114,128,246,225,237,239,238,239,243,240,225,227,101,128,255,12,242,229,246,229,242,243,229,100,2,70,75,70,86,225,226,239,246,229,227,237,98,128,3,20,237,239,100,128,2,189,115,2,70,98,70,105,237,225,236,108,128,254,80,245,240,229,242,233,239,114,128,246,226,244,245,242,238,229,100,2,70,126,70,137,225,226,239,246,229,227,237,98,128,3,18,237,239,100,128,2,187,240,225,243,115,128,38,60,110,2,70,156,70,165,231,242,245,229,238,116,128,34,69,116,2,70,171,70,185,239,245,242,233,238,244,229,231,242,225,108,128,34,46,242,239,108,142,35,3,70,219,70,225,70,240,70,255,71,43,71,88,71,102,71,107,71,112,71,117,71,123,71,128,71,169,71,174,193,195,75,128,0,6,66,2,70,231,70,236,197,76,128,0,7,83,128,0,8,67,2,70,246,70,251,193,78,128,0,24,82,128,0,13,68,3,71,7,71,33,71,38,67,4,71,17,71,21,71,25,71,29,49,128,0,17,50,128,0,18,51,128,0,19,52,128,0,20,197,76,128,0,127,204,69,128,0,16,69,5,71,55,71,59,71,64,71,69,71,74,77,128,0,25,206,81,128,0,5,207,84,128,0,4,211,67,128,0,27,84,2,71,80,71,84,66,128,0,23,88,128,0,3,70,2,71,94,71,98,70,128,0,12,83,128,0,28,199,83,128,0,29,200,84,128,0,9,204,70,128,0,10,206,193,75,128,0,21,210,83,128,0,30,83,5,71,140,71,144,71,154,71,159,71,164,73,128,0,15,79,129,0,14,71,150,84,128,0,2,212,88,128,0,1,213,66,128,0,26,217,78,128,0,22,213,83,128,0,31,214,84,128,0,11,240,249,242,233,231,232,116,129,0,169,71,191,115,2,71,197,71,203,225,238,115,128,248,233,229,242,233,102,128,246,217,114,2,71,216,72,44,238,229,242,226,242,225,227,235,229,116,2,71,231,72,9,236,229,230,116,130,48,12,71,242,71,254,232,225,236,230,247,233,228,244,104,128,255,98,246,229,242,244,233,227,225,108,128,254,65,242,233,231,232,116,130,48,13,72,21,72,33,232,225,236,230,247,233,228,244,104,128,255,99,246,229,242,244,233,227,225,108,128,254,66,240,239,242,225,244,233,239,238,243,241,245,225,242,101,128,51,127,243,241,245,225,242,101,128,51,199,246,229,242,235,231,243,241,245,225,242,101,128,51,198,240,225,242,229,110,128,36,158,242,245,250,229,233,242,111,128,32,162,243,244,242,229,244,227,232,229,100,128,2,151,245,114,2,72,121,72,139,236,121,2,72,128,72,134,225,238,100,128,34,207,239,114,128,34,206,242,229,238,227,121,128,0,164,249,114,4,72,158,72,166,72,173,72,181,194,242,229,246,101,128,246,209,198,236,229,120,128,246,210,226,242,229,246,101,128,246,212,230,236,229,120,128,246,213,100,146,0,100,72,228,74,110,75,134,75,194,76,114,77,68,77,130,78,59,78,72,78,81,78,107,78,132,78,141,79,208,79,216,79,227,79,247,80,19,97,11,72,252,73,7,73,17,73,89,73,152,73,163,73,174,73,243,74,49,74,55,74,85,225,242,237,229,238,233,225,110,128,5,100,226,229,238,231,225,236,105,128,9,166,100,5,73,29,73,38,73,44,73,58,73,74,225,242,225,226,233,99,128,6,54,229,246,97,128,9,38,230,233,238,225,236,225,242,225,226,233,99,128,254,190,233,238,233,244,233,225,236,225,242,225,226,233,99,128,254,191,237,229,228,233,225,236,225,242,225,226,233,99,128,254,192,103,3,73,97,73,114,73,128,229,243,104,129,5,188,73,105,232,229,226,242,229,119,128,5,188,231,229,114,129,32,32,73,122,228,226,108,128,32,33,117,2,73,134,73,143,234,225,242,225,244,105,128,10,166,242,237,245,235,232,105,128,10,38,232,233,242,225,231,225,238,97,128,48,96,235,225,244,225,235,225,238,97,128,48,192,108,3,73,182,73,191,73,229,225,242,225,226,233,99,128,6,47,229,116,130,5,211,73,200,73,220,228,225,231,229,243,104,129,251,51,73,211,232,229,226,242,229,119,128,251,51,232,229,226,242,229,119,128,5,211,230,233,238,225,236,225,242,225,226,233,99,128,254,170,237,237,97,3,73,253,74,6,74,18,225,242,225,226,233,99,128,6,79,236,239,247,225,242,225,226,233,99,128,6,79,244,225,238,97,2,74,27,74,41,236,244,239,238,229,225,242,225,226,233,99,128,6,76,242,225,226,233,99,128,6,76,238,228,97,128,9,100,242,231,97,2,74,63,74,72,232,229,226,242,229,119,128,5,167,236,229,230,244,232,229,226,242,229,119,128,5,167,243,233,225,240,238,229,245,237,225,244,225,227,249,242,233,236,236,233,227,227,237,98,128,4,133,98,3,74,118,75,115,75,125,108,9,74,138,74,146,75,3,75,11,75,27,75,38,75,56,75,70,75,81,199,242,225,246,101,128,246,211,97,2,74,152,74,209,238,231,236,229,226,242,225,227,235,229,116,2,74,168,74,188,236,229,230,116,129,48,10,74,177,246,229,242,244,233,227,225,108,128,254,61,242,233,231,232,116,129,48,11,74,198,246,229,242,244,233,227,225,108,128,254,62,114,2,74,215,74,236,227,232,233,238,246,229,242,244,229,228,226,229,236,239,247,227,237,98,128,3,43,242,239,119,2,74,244,74,251,236,229,230,116,128,33,212,242,233,231,232,116,128,33,210,228,225,238,228,97,128,9,101,231,242,225,246,101,129,246,214,75,21,227,237,98,128,3,15,233,238,244,229,231,242,225,108,128,34,44,236,239,247,236,233,238,101,129,32,23,75,50,227,237,98,128,3,51,239,246,229,242,236,233,238,229,227,237,98,128,3,63,240,242,233,237,229,237,239,100,128,2,186,246,229,242,244,233,227,225,108,2,75,94,75,100,226,225,114,128,32,22,236,233,238,229,225,226,239,246,229,227,237,98,128,3,14,239,240,239,237,239,230,111,128,49,9,243,241,245,225,242,101,128,51,200,99,4,75,144,75,151,75,160,75,187,225,242,239,110,128,1,15,229,228,233,236,236,97,128,30,17,233,242,99,2,75,168,75,173,236,101,128,36,211,245,237,230,236,229,248,226,229,236,239,119,128,30,19,242,239,225,116,128,1,17,100,4,75,204,76,29,76,39,76,90,97,4,75,214,75,224,75,231,76,0,226,229,238,231,225,236,105,128,9,161,228,229,246,97,128,9,33,231,117,2,75,238,75,247,234,225,242,225,244,105,128,10,161,242,237,245,235,232,105,128,10,33,108,2,76,6,76,15,225,242,225,226,233,99,128,6,136,230,233,238,225,236,225,242,225,226,233,99,128,251,137,228,232,225,228,229,246,97,128,9,92,232,97,3,76,48,76,58,76,65,226,229,238,231,225,236,105,128,9,162,228,229,246,97,128,9,34,231,117,2,76,72,76,81,234,225,242,225,244,105,128,10,162,242,237,245,235,232,105,128,10,34,239,116,2,76,97,76,106,225,227,227,229,238,116,128,30,11,226,229,236,239,119,128,30,13,101,8,76,132,76,185,76,192,76,217,76,227,76,238,77,27,77,63,99,2,76,138,76,175,233,237,225,236,243,229,240,225,242,225,244,239,114,2,76,156,76,165,225,242,225,226,233,99,128,6,107,240,229,242,243,233,225,110,128,6,107,249,242,233,236,236,233,99,128,4,52,231,242,229,101,128,0,176,232,105,2,76,199,76,208,232,229,226,242,229,119,128,5,173,242,225,231,225,238,97,128,48,103,233,227,239,240,244,233,99,128,3,239,235,225,244,225,235,225,238,97,128,48,199,108,2,76,244,77,11,229,244,101,2,76,252,77,3,236,229,230,116,128,35,43,242,233,231,232,116,128,35,38,244,97,129,3,180,77,18,244,245,242,238,229,100,128,1,141,238,239,237,233,238,225,244,239,242,237,233,238,245,243,239,238,229,238,245,237,229,242,225,244,239,242,226,229,238,231,225,236,105,128,9,248,250,104,128,2,164,104,2,77,74,77,124,97,3,77,82,77,92,77,99,226,229,238,231,225,236,105,128,9,167,228,229,246,97,128,9,39,231,117,2,77,106,77,115,234,225,242,225,244,105,128,10,167,242,237,245,235,232,105,128,10,39,239,239,107,128,2,87,105,6,77,144,77,193,77,253,78,8,78,19,78,29,97,2,77,150,77,172,236,249,244,233,235,225,244,239,238,239,115,129,3,133,77,166,227,237,98,128,3,68,237,239,238,100,129,38,102,77,181,243,245,233,244,247,232,233,244,101,128,38,98,229,242,229,243,233,115,133,0,168,77,212,77,220,77,231,77,237,77,245,225,227,245,244,101,128,246,215,226,229,236,239,247,227,237,98,128,3,36,227,237,98,128,3,8,231,242,225,246,101,128,246,216,244,239,238,239,115,128,3,133,232,233,242,225,231,225,238,97,128,48,98,235,225,244,225,235,225,238,97,128,48,194,244,244,239,237,225,242,107,128,48,3,246,105,2,78,36,78,47,228,101,129,0,247,78,43,115,128,34,35,243,233,239,238,243,236,225,243,104,128,34,21,234,229,227,249,242,233,236,236,233,99,128,4,82,235,243,232,225,228,101,128,37,147,108,2,78,87,78,98,233,238,229,226,229,236,239,119,128,30,15,243,241,245,225,242,101,128,51,151,109,2,78,113,78,121,225,227,242,239,110,128,1,17,239,238,239,243,240,225,227,101,128,255,68,238,226,236,239,227,107,128,37,132,111,10,78,163,78,175,78,185,78,196,78,207,79,23,79,28,79,39,79,154,79,180,227,232,225,228,225,244,232,225,105,128,14,14,228,229,235,244,232,225,105,128,14,20,232,233,242,225,231,225,238,97,128,48,105,235,225,244,225,235,225,238,97,128,48,201,236,236,225,114,132,0,36,78,222,78,233,78,245,79,0,233,238,230,229,242,233,239,114,128,246,227,237,239,238,239,243,240,225,227,101,128,255,4,239,236,228,243,244,249,236,101,128,247,36,115,2,79,6,79,13,237,225,236,108,128,254,105,245,240,229,242,233,239,114,128,246,228,238,103,128,32,171,242,245,243,241,245,225,242,101,128,51,38,116,6,79,53,79,70,79,92,79,103,79,135,79,142,225,227,227,229,238,116,129,2,217,79,64,227,237,98,128,3,7,226,229,236,239,247,99,2,79,81,79,86,237,98,128,3,35,239,237,98,128,3,35,235,225,244,225,235,225,238,97,128,48,251,236,229,243,115,2,79,112,79,116,105,128,1,49,106,129,246,190,79,122,243,244,242,239,235,229,232,239,239,107,128,2,132,237,225,244,104,128,34,197,244,229,228,227,233,242,227,236,101,128,37,204,245,226,236,229,249,239,228,240,225,244,225,104,129,251,31,79,171,232,229,226,242,229,119,128,251,31,247,238,244,225,227,107,2,79,191,79,202,226,229,236,239,247,227,237,98,128,3,30,237,239,100,128,2,213,240,225,242,229,110,128,36,159,243,245,240,229,242,233,239,114,128,246,235,116,2,79,233,79,239,225,233,108,128,2,86,239,240,226,225,114,128,1,140,117,2,79,253,80,8,232,233,242,225,231,225,238,97,128,48,101,235,225,244,225,235,225,238,97,128,48,197,122,132,1,243,80,31,80,40,80,59,80,96,225,236,244,239,238,101,128,2,163,99,2,80,46,80,53,225,242,239,110,128,1,198,245,242,108,128,2,165,101,2,80,65,80,85,225,226,235,232,225,243,233,225,238,227,249,242,233,236,236,233,99,128,4,225,227,249,242,233,236,236,233,99,128,4,85,232,229,227,249,242,233,236,236,233,99,128,4,95,101,151,0,101,80,159,80,178,80,212,81,186,81,248,82,25,82,37,82,60,82,113,83,225,84,27,84,129,84,245,85,124,85,199,85,230,86,36,86,89,87,24,87,157,87,177,87,221,88,56,97,2,80,165,80,172,227,245,244,101,128,0,233,242,244,104,128,38,65,98,3,80,186,80,195,80,205,229,238,231,225,236,105,128,9,143,239,240,239,237,239,230,111,128,49,28,242,229,246,101,128,1,21,99,5,80,224,81,41,81,55,81,87,81,176,97,2,80,230,81,35,238,228,242,97,3,80,241,80,248,81,3,228,229,246,97,128,9,13,231,245,234,225,242,225,244,105,128,10,141,246,239,247,229,236,243,233,231,110,2,81,17,81,24,228,229,246,97,128,9,69,231,245,234,225,242,225,244,105,128,10,197,242,239,110,128,1,27,229,228,233,236,236,225,226,242,229,246,101,128,30,29,104,2,81,61,81,72,225,242,237,229,238,233,225,110,128,5,101,249,233,247,238,225,242,237,229,238,233,225,110,128,5,135,233,242,99,2,81,95,81,100,236,101,128,36,212,245,237,230,236,229,120,134,0,234,81,121,81,129,81,137,81,148,81,156,81,168,225,227,245,244,101,128,30,191,226,229,236,239,119,128,30,25,228,239,244,226,229,236,239,119,128,30,199,231,242,225,246,101,128,30,193,232,239,239,235,225,226,239,246,101,128,30,195,244,233,236,228,101,128,30,197,249,242,233,236,236,233,99,128,4,84,100,4,81,196,81,206,81,212,81,222,226,236,231,242,225,246,101,128,2,5,229,246,97,128,9,15,233,229,242,229,243,233,115,128,0,235,239,116,130,1,23,81,231,81,240,225,227,227,229,238,116,128,1,23,226,229,236,239,119,128,30,185,101,2,81,254,82,9,231,245,242,237,245,235,232,105,128,10,15,237,225,244,242,225,231,245,242,237,245,235,232,105,128,10,71,230,227,249,242,233,236,236,233,99,128,4,68,103,2,82,43,82,50,242,225,246,101,128,0,232,245,234,225,242,225,244,105,128,10,143,104,4,82,70,82,81,82,92,82,102,225,242,237,229,238,233,225,110,128,5,103,226,239,240,239,237,239,230,111,128,49,29,233,242,225,231,225,238,97,128,48,72,239,239,235,225,226,239,246,101,128,30,187,105,4,82,123,82,134,83,192,83,207,226,239,240,239,237,239,230,111,128,49,31,231,232,116,142,0,56,82,168,82,177,82,187,82,217,82,224,83,6,83,31,83,76,83,110,83,122,83,133,83,166,83,174,83,185,225,242,225,226,233,99,128,6,104,226,229,238,231,225,236,105,128,9,238,227,233,242,227,236,101,129,36,103,82,198,233,238,246,229,242,243,229,243,225,238,243,243,229,242,233,102,128,39,145,228,229,246,97,128,9,110,229,229,110,2,82,232,82,241,227,233,242,227,236,101,128,36,113,112,2,82,247,82,254,225,242,229,110,128,36,133,229,242,233,239,100,128,36,153,231,117,2,83,13,83,22,234,225,242,225,244,105,128,10,238,242,237,245,235,232,105,128,10,110,104,2,83,37,83,63,97,2,83,43,83,54,227,235,225,242,225,226,233,99,128,6,104,238,231,250,232,239,117,128,48,40,238,239,244,229,226,229,225,237,229,100,128,38,107,105,2,83,82,83,100,228,229,239,231,242,225,240,232,233,227,240,225,242,229,110,128,50,39,238,230,229,242,233,239,114,128,32,136,237,239,238,239,243,240,225,227,101,128,255,24,239,236,228,243,244,249,236,101,128,247,56,112,2,83,139,83,146,225,242,229,110,128,36,123,229,114,2,83,153,83,159,233,239,100,128,36,143,243,233,225,110,128,6,248,242,239,237,225,110,128,33,119,243,245,240,229,242,233,239,114,128,32,120,244,232,225,105,128,14,88,238,246,229,242,244,229,228,226,242,229,246,101,128,2,7,239,244,233,230,233,229,228,227,249,242,233,236,236,233,99,128,4,101,107,2,83,231,83,255,225,244,225,235,225,238,97,129,48,168,83,243,232,225,236,230,247,233,228,244,104,128,255,116,111,2,84,5,84,20,238,235,225,242,231,245,242,237,245,235,232,105,128,10,116,242,229,225,110,128,49,84,108,3,84,35,84,46,84,107,227,249,242,233,236,236,233,99,128,4,59,101,2,84,52,84,59,237,229,238,116,128,34,8,246,229,110,3,84,69,84,78,84,99,227,233,242,227,236,101,128,36,106,112,2,84,84,84,91,225,242,229,110,128,36,126,229,242,233,239,100,128,36,146,242,239,237,225,110,128,33,122,236,233,240,243,233,115,129,32,38,84,118,246,229,242,244,233,227,225,108,128,34,238,109,5,84,141,84,169,84,180,84,200,84,211,225,227,242,239,110,130,1,19,84,153,84,161,225,227,245,244,101,128,30,23,231,242,225,246,101,128,30,21,227,249,242,233,236,236,233,99,128,4,60,228,225,243,104,129,32,20,84,189,246,229,242,244,233,227,225,108,128,254,49,239,238,239,243,240,225,227,101,128,255,69,112,2,84,217,84,237,232,225,243,233,243,237,225,242,235,225,242,237,229,238,233,225,110,128,5,91,244,249,243,229,116,128,34,5,110,6,85,3,85,14,85,25,85,69,85,101,85,116,226,239,240,239,237,239,230,111,128,49,35,227,249,242,233,236,236,233,99,128,4,61,100,2,85,31,85,50,225,243,104,129,32,19,85,39,246,229,242,244,233,227,225,108,128,254,50,229,243,227,229,238,228,229,242,227,249,242,233,236,236,233,99,128,4,163,103,130,1,75,85,77,85,88,226,239,240,239,237,239,230,111,128,49,37,232,229,227,249,242,233,236,236,233,99,128,4,165,232,239,239,235,227,249,242,233,236,236,233,99,128,4,200,243,240,225,227,101,128,32,2,111,3,85,132,85,140,85,149,231,239,238,229,107,128,1,25,235,239,242,229,225,110,128,49,83,240,229,110,130,2,91,85,159,85,168,227,236,239,243,229,100,128,2,154,242,229,246,229,242,243,229,100,130,2,92,85,183,85,192,227,236,239,243,229,100,128,2,94,232,239,239,107,128,2,93,112,2,85,205,85,212,225,242,229,110,128,36,160,243,233,236,239,110,129,3,181,85,222,244,239,238,239,115,128,3,173,241,117,2,85,237,86,25,225,108,130,0,61,85,246,86,2,237,239,238,239,243,240,225,227,101,128,255,29,115,2,86,8,86,15,237,225,236,108,128,254,102,245,240,229,242,233,239,114,128,32,124,233,246,225,236,229,238,227,101,128,34,97,114,3,86,44,86,55,86,66,226,239,240,239,237,239,230,111,128,49,38,227,249,242,233,236,236,233,99,128,4,64,229,246,229,242,243,229,100,129,2,88,86,78,227,249,242,233,236,236,233,99,128,4,77,115,6,86,103,86,114,86,134,86,215,87,4,87,14,227,249,242,233,236,236,233,99,128,4,65,228,229,243,227,229,238,228,229,242,227,249,242,233,236,236,233,99,128,4,171,104,132,2,131,86,146,86,153,86,184,86,199,227,245,242,108,128,2,134,239,242,116,2,86,161,86,168,228,229,246,97,128,9,14,246,239,247,229,236,243,233,231,238,228,229,246,97,128,9,70,242,229,246,229,242,243,229,228,236,239,239,112,128,1,170,243,241,245,225,244,242,229,246,229,242,243,229,100,128,2,133,237,225,236,108,2,86,224,86,235,232,233,242,225,231,225,238,97,128,48,71,235,225,244,225,235,225,238,97,129,48,167,86,248,232,225,236,230,247,233,228,244,104,128,255,106,244,233,237,225,244,229,100,128,33,46,245,240,229,242,233,239,114,128,246,236,116,5,87,36,87,62,87,66,87,83,87,149,97,130,3,183,87,44,87,54,242,237,229,238,233,225,110,128,5,104,244,239,238,239,115,128,3,174,104,128,0,240,233,236,228,101,129,30,189,87,75,226,229,236,239,119,128,30,27,238,225,232,244,97,3,87,95,87,127,87,136,230,239,245,235,104,2,87,105,87,114,232,229,226,242,229,119,128,5,145,236,229,230,244,232,229,226,242,229,119,128,5,145,232,229,226,242,229,119,128,5,145,236,229,230,244,232,229,226,242,229,119,128,5,145,245,242,238,229,100,128,1,221,117,2,87,163,87,172,235,239,242,229,225,110,128,49,97,242,111,128,32,172,246,239,247,229,236,243,233,231,110,3,87,193,87,203,87,210,226,229,238,231,225,236,105,128,9,199,228,229,246,97,128,9,71,231,245,234,225,242,225,244,105,128,10,199,120,2,87,227,88,44,227,236,225,109,132,0,33,87,242,87,253,88,24,88,36,225,242,237,229,238,233,225,110,128,5,92,100,2,88,3,88,8,226,108,128,32,60,239,247,110,129,0,161,88,16,243,237,225,236,108,128,247,161,237,239,238,239,243,240,225,227,101,128,255,1,243,237,225,236,108,128,247,33,233,243,244,229,238,244,233,225,108,128,34,3,250,104,131,2,146,88,67,88,86,88,97,99,2,88,73,88,80,225,242,239,110,128,1,239,245,242,108,128,2,147,242,229,246,229,242,243,229,100,128,1,185,244,225,233,108,128,1,186,102,140,0,102,88,132,88,214,88,225,88,234,88,246,89,93,89,109,91,117,91,130,91,156,93,33,93,41,97,4,88,142,88,149,88,160,88,171,228,229,246,97,128,9,94,231,245,242,237,245,235,232,105,128,10,94,232,242,229,238,232,229,233,116,128,33,9,244,232,97,3,88,181,88,190,88,202,225,242,225,226,233,99,128,6,78,236,239,247,225,242,225,226,233,99,128,6,78,244,225,238,225,242,225,226,233,99,128,6,75,226,239,240,239,237,239,230,111,128,49,8,227,233,242,227,236,101,128,36,213,228,239,244,225,227,227,229,238,116,128,30,31,101,3,88,254,89,76,89,86,104,4,89,8,89,31,89,45,89,61,225,114,2,89,15,89,22,225,226,233,99,128,6,65,237,229,238,233,225,110,128,5,134,230,233,238,225,236,225,242,225,226,233,99,128,254,210,233,238,233,244,233,225,236,225,242,225,226,233,99,128,254,211,237,229,228,233,225,236,225,242,225,226,233,99,128,254,212,233,227,239,240,244,233,99,128,3,229,237,225,236,101,128,38,64,102,130,251,0,89,101,89,105,105,128,251,3,108,128,251,4,105,136,251,1,89,129,89,169,89,180,89,202,90,68,90,85,90,93,90,106,230,244,229,229,110,2,89,139,89,148,227,233,242,227,236,101,128,36,110,112,2,89,154,89,161,225,242,229,110,128,36,130,229,242,233,239,100,128,36,150,231,245,242,229,228,225,243,104,128,32,18,236,236,229,100,2,89,189,89,195,226,239,120,128,37,160,242,229,227,116,128,37,172,238,225,108,5,89,216,89,255,90,16,90,33,90,49,235,225,102,130,5,218,89,226,89,246,228,225,231,229,243,104,129,251,58,89,237,232,229,226,242,229,119,128,251,58,232,229,226,242,229,119,128,5,218,237,229,109,129,5,221,90,7,232,229,226,242,229,119,128,5,221,238,245,110,129,5,223,90,24,232,229,226,242,229,119,128,5,223,240,101,129,5,227,90,40,232,229,226,242,229,119,128,5,227,244,243,225,228,105,129,5,229,90,59,232,229,226,242,229,119,128,5,229,242,243,244,244,239,238,229,227,232,233,238,229,243,101,128,2,201,243,232,229,249,101,128,37,201,244,225,227,249,242,233,236,236,233,99,128,4,115,246,101,142,0,53,90,139,90,148,90,158,90,188,90,195,90,205,90,230,91,1,91,35,91,47,91,58,91,91,91,99,91,110,225,242,225,226,233,99,128,6,101,226,229,238,231,225,236,105,128,9,235,227,233,242,227,236,101,129,36,100,90,169,233,238,246,229,242,243,229,243,225,238,243,243,229,242,233,102,128,39,142,228,229,246,97,128,9,107,229,233,231,232,244,232,115,128,33,93,231,117,2,90,212,90,221,234,225,242,225,244,105,128,10,235,242,237,245,235,232,105,128,10,107,232,97,2,90,237,90,248,227,235,225,242,225,226,233,99,128,6,101,238,231,250,232,239,117,128,48,37,105,2,91,7,91,25,228,229,239,231,242,225,240,232,233,227,240,225,242,229,110,128,50,36,238,230,229,242,233,239,114,128,32,133,237,239,238,239,243,240,225,227,101,128,255,21,239,236,228,243,244,249,236,101,128,247,53,112,2,91,64,91,71,225,242,229,110,128,36,120,229,114,2,91,78,91,84,233,239,100,128,36,140,243,233,225,110,128,6,245,242,239,237,225,110,128,33,116,243,245,240,229,242,233,239,114,128,32,117,244,232,225,105,128,14,85,108,129,251,2,91,123,239,242,233,110,128,1,146,109,2,91,136,91,147,239,238,239,243,240,225,227,101,128,255,70,243,241,245,225,242,101,128,51,153,111,4,91,166,91,188,91,200,91,207,230,97,2,91,173,91,181,238,244,232,225,105,128,14,31,244,232,225,105,128,14,29,238,231,237,225,238,244,232,225,105,128,14,79,242,225,236,108,128,34,0,245,114,142,0,52,91,240,91,249,92,3,92,33,92,40,92,65,92,92,92,126,92,138,92,157,92,168,92,201,92,209,92,220,225,242,225,226,233,99,128,6,100,226,229,238,231,225,236,105,128,9,234,227,233,242,227,236,101,129,36,99,92,14,233,238,246,229,242,243,229,243,225,238,243,243,229,242,233,102,128,39,141,228,229,246,97,128,9,106,231,117,2,92,47,92,56,234,225,242,225,244,105,128,10,234,242,237,245,235,232,105,128,10,106,232,97,2,92,72,92,83,227,235,225,242,225,226,233,99,128,6,100,238,231,250,232,239,117,128,48,36,105,2,92,98,92,116,228,229,239,231,242,225,240,232,233,227,240,225,242,229,110,128,50,35,238,230,229,242,233,239,114,128,32,132,237,239,238,239,243,240,225,227,101,128,255,20,238,245,237,229,242,225,244,239,242,226,229,238,231,225,236,105,128,9,247,239,236,228,243,244,249,236,101,128,247,52,112,2,92,174,92,181,225,242,229,110,128,36,119,229,114,2,92,188,92,194,233,239,100,128,36,139,243,233,225,110,128,6,244,242,239,237,225,110,128,33,115,243,245,240,229,242,233,239,114,128,32,116,116,2,92,226,93,8,229,229,110,2,92,234,92,243,227,233,242,227,236,101,128,36,109,112,2,92,249,93,0,225,242,229,110,128,36,129,229,242,233,239,100,128,36,149,104,2,93,14,93,19,225,105,128,14,84,244,239,238,229,227,232,233,238,229,243,101,128,2,203,240,225,242,229,110,128,36,161,242,97,2,93,48,93,56,227,244,233,239,110,128,32,68,238,99,128,32,163,103,144,0,103,93,97,94,43,94,66,94,127,94,144,95,65,96,58,96,143,96,156,97,14,97,39,97,67,97,89,98,34,98,56,98,158,97,9,93,117,93,127,93,134,93,141,93,205,93,230,93,241,93,252,94,30,226,229,238,231,225,236,105,128,9,151,227,245,244,101,128,1,245,228,229,246,97,128,9,23,102,4,93,151,93,160,93,174,93,190,225,242,225,226,233,99,128,6,175,230,233,238,225,236,225,242,225,226,233,99,128,251,147,233,238,233,244,233,225,236,225,242,225,226,233,99,128,251,148,237,229,228,233,225,236,225,242,225,226,233,99,128,251,149,231,117,2,93,212,93,221,234,225,242,225,244,105,128,10,151,242,237,245,235,232,105,128,10,23,232,233,242,225,231,225,238,97,128,48,76,235,225,244,225,235,225,238,97,128,48,172,237,237,97,130,3,179,94,6,94,19,236,225,244,233,238,243,237,225,236,108,128,2,99,243,245,240,229,242,233,239,114,128,2,224,238,231,233,225,227,239,240,244,233,99,128,3,235,98,2,94,49,94,59,239,240,239,237,239,230,111,128,49,13,242,229,246,101,128,1,31,99,4,94,76,94,83,94,92,94,114,225,242,239,110,128,1,231,229,228,233,236,236,97,128,1,35,233,242,99,2,94,100,94,105,236,101,128,36,214,245,237,230,236,229,120,128,1,29,239,237,237,225,225,227,227,229,238,116,128,1,35,228,239,116,129,1,33,94,135,225,227,227,229,238,116,128,1,33,101,6,94,158,94,169,94,180,94,191,94,210,95,56,227,249,242,233,236,236,233,99,128,4,51,232,233,242,225,231,225,238,97,128,48,82,235,225,244,225,235,225,238,97,128,48,178,239,237,229,244,242,233,227,225,236,236,249,229,241,245,225,108,128,34,81,114,3,94,218,95,11,95,21,229,243,104,3,94,228,94,243,94,252,225,227,227,229,238,244,232,229,226,242,229,119,128,5,156,232,229,226,242,229,119,128,5,243,237,245,241,228,225,237,232,229,226,242,229,119,128,5,157,237,225,238,228,226,236,115,128,0,223,243,232,225,249,233,109,2,95,32,95,47,225,227,227,229,238,244,232,229,226,242,229,119,128,5,158,232,229,226,242,229,119,128,5,244,244,225,237,225,242,107,128,48,19,104,5,95,77,95,210,96,17,96,42,96,48,97,4,95,87,95,97,95,120,95,145,226,229,238,231,225,236,105,128,9,152,100,2,95,103,95,114,225,242,237,229,238,233,225,110,128,5,114,229,246,97,128,9,24,231,117,2,95,127,95,136,234,225,242,225,244,105,128,10,152,242,237,245,235,232,105,128,10,24,233,110,4,95,156,95,165,95,179,95,195,225,242,225,226,233,99,128,6,58,230,233,238,225,236,225,242,225,226,233,99,128,254,206,233,238,233,244,233,225,236,225,242,225,226,233,99,128,254,207,237,229,228,233,225,236,225,242,225,226,233,99,128,254,208,101,3,95,218,95,239,96,0,237,233,228,228,236,229,232,239,239,235,227,249,242,233,236,236,233,99,128,4,149,243,244,242,239,235,229,227,249,242,233,236,236,233,99,128,4,147,245,240,244,245,242,238,227,249,242,233,236,236,233,99,128,4,145,232,97,2,96,24,96,31,228,229,246,97,128,9,90,231,245,242,237,245,235,232,105,128,10,90,239,239,107,128,2,96,250,243,241,245,225,242,101,128,51,147,105,3,96,66,96,77,96,88,232,233,242,225,231,225,238,97,128,48,78,235,225,244,225,235,225,238,97,128,48,174,109,2,96,94,96,105,225,242,237,229,238,233,225,110,128,5,99,229,108,130,5,210,96,114,96,134,228,225,231,229,243,104,129,251,50,96,125,232,229,226,242,229,119,128,251,50,232,229,226,242,229,119,128,5,210,234,229,227,249,242,233,236,236,233], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+51200);
/* memory initializer */ allocate([99,128,4,83,236,239,244,244,225,108,2,96,167,96,184,233,238,246,229,242,244,229,228,243,244,242,239,235,101,128,1,190,243,244,239,112,132,2,148,96,199,96,210,96,216,96,248,233,238,246,229,242,244,229,100,128,2,150,237,239,100,128,2,192,242,229,246,229,242,243,229,100,130,2,149,96,231,96,237,237,239,100,128,2,193,243,245,240,229,242,233,239,114,128,2,228,243,244,242,239,235,101,129,2,161,97,3,242,229,246,229,242,243,229,100,128,2,162,109,2,97,20,97,28,225,227,242,239,110,128,30,33,239,238,239,243,240,225,227,101,128,255,71,111,2,97,45,97,56,232,233,242,225,231,225,238,97,128,48,84,235,225,244,225,235,225,238,97,128,48,180,240,97,2,97,74,97,80,242,229,110,128,36,162,243,241,245,225,242,101,128,51,172,114,2,97,95,97,192,97,2,97,101,97,109,228,233,229,238,116,128,34,7,246,101,134,0,96,97,126,97,137,97,154,97,161,97,170,97,182,226,229,236,239,247,227,237,98,128,3,22,99,2,97,143,97,148,237,98,128,3,0,239,237,98,128,3,0,228,229,246,97,128,9,83,236,239,247,237,239,100,128,2,206,237,239,238,239,243,240,225,227,101,128,255,64,244,239,238,229,227,237,98,128,3,64,229,225,244,229,114,132,0,62,97,208,97,227,97,239,98,26,229,241,245,225,108,129,34,101,97,218,239,242,236,229,243,115,128,34,219,237,239,238,239,243,240,225,227,101,128,255,30,111,2,97,245,98,15,114,2,97,251,98,8,229,241,245,233,246,225,236,229,238,116,128,34,115,236,229,243,115,128,34,119,246,229,242,229,241,245,225,108,128,34,103,243,237,225,236,108,128,254,101,115,2,98,40,98,48,227,242,233,240,116,128,2,97,244,242,239,235,101,128,1,229,117,4,98,66,98,77,98,134,98,145,232,233,242,225,231,225,238,97,128,48,80,233,108,2,98,84,98,109,236,229,237,239,116,2,98,94,98,101,236,229,230,116,128,0,171,242,233,231,232,116,128,0,187,243,233,238,231,108,2,98,119,98,126,236,229,230,116,128,32,57,242,233,231,232,116,128,32,58,235,225,244,225,235,225,238,97,128,48,176,242,225,237,245,243,241,245,225,242,101,128,51,24,249,243,241,245,225,242,101,128,51,201,104,144,0,104,98,204,101,90,101,125,101,162,101,202,103,90,103,110,104,75,104,87,104,99,105,167,105,175,105,186,105,195,106,19,106,23,97,13,98,232,99,15,99,25,99,55,99,80,99,158,99,170,99,195,99,210,99,239,99,252,100,54,100,63,97,2,98,238,99,1,226,235,232,225,243,233,225,238,227,249,242,233,236,236,233,99,128,4,169,236,244,239,238,229,225,242,225,226,233,99,128,6,193,226,229,238,231,225,236,105,128,9,185,228,101,2,99,32,99,50,243,227,229,238,228,229,242,227,249,242,233,236,236,233,99,128,4,179,246,97,128,9,57,231,117,2,99,62,99,71,234,225,242,225,244,105,128,10,185,242,237,245,235,232,105,128,10,57,104,4,99,90,99,99,99,113,99,143,225,242,225,226,233,99,128,6,45,230,233,238,225,236,225,242,225,226,233,99,128,254,162,105,2,99,119,99,134,238,233,244,233,225,236,225,242,225,226,233,99,128,254,163,242,225,231,225,238,97,128,48,111,237,229,228,233,225,236,225,242,225,226,233,99,128,254,164,233,244,245,243,241,245,225,242,101,128,51,42,235,225,244,225,235,225,238,97,129,48,207,99,183,232,225,236,230,247,233,228,244,104,128,255,138,236,225,238,244,231,245,242,237,245,235,232,105,128,10,77,237,250,97,2,99,218,99,227,225,242,225,226,233,99,128,6,33,236,239,247,225,242,225,226,233,99,128,6,33,238,231,245,236,230,233,236,236,229,114,128,49,100,114,2,100,2,100,18,228,243,233,231,238,227,249,242,233,236,236,233,99,128,4,74,240,239,239,110,2,100,27,100,40,236,229,230,244,226,225,242,226,245,112,128,33,188,242,233,231,232,244,226,225,242,226,245,112,128,33,192,243,241,245,225,242,101,128,51,202,244,225,102,3,100,73,100,165,101,0,240,225,244,225,104,134,5,178,100,93,100,98,100,112,100,121,100,136,100,152,177,54,128,5,178,50,2,100,104,100,108,51,128,5,178,102,128,5,178,232,229,226,242,229,119,128,5,178,238,225,242,242,239,247,232,229,226,242,229,119,128,5,178,241,245,225,242,244,229,242,232,229,226,242,229,119,128,5,178,247,233,228,229,232,229,226,242,229,119,128,5,178,241,225,237,225,244,115,135,5,179,100,188,100,193,100,198,100,203,100,212,100,227,100,243,177,98,128,5,179,178,56,128,5,179,179,52,128,5,179,232,229,226,242,229,119,128,5,179,238,225,242,242,239,247,232,229,226,242,229,119,128,5,179,241,245,225,242,244,229,242,232,229,226,242,229,119,128,5,179,247,233,228,229,232,229,226,242,229,119,128,5,179,243,229,231,239,108,135,5,177,101,22,101,27,101,32,101,37,101,46,101,61,101,77,177,55,128,5,177,178,52,128,5,177,179,48,128,5,177,232,229,226,242,229,119,128,5,177,238,225,242,242,239,247,232,229,226,242,229,119,128,5,177,241,245,225,242,244,229,242,232,229,226,242,229,119,128,5,177,247,233,228,229,232,229,226,242,229,119,128,5,177,98,3,101,98,101,103,101,113,225,114,128,1,39,239,240,239,237,239,230,111,128,49,15,242,229,246,229,226,229,236,239,119,128,30,43,99,2,101,131,101,140,229,228,233,236,236,97,128,30,41,233,242,99,2,101,148,101,153,236,101,128,36,215,245,237,230,236,229,120,128,1,37,100,2,101,168,101,178,233,229,242,229,243,233,115,128,30,39,239,116,2,101,185,101,194,225,227,227,229,238,116,128,30,35,226,229,236,239,119,128,30,37,101,136,5,212,101,222,101,255,102,19,102,248,103,8,103,53,103,62,103,75,225,242,116,129,38,101,101,230,243,245,233,116,2,101,239,101,247,226,236,225,227,107,128,38,101,247,232,233,244,101,128,38,97,228,225,231,229,243,104,129,251,52,102,10,232,229,226,242,229,119,128,251,52,104,6,102,33,102,61,102,69,102,119,102,165,102,214,97,2,102,39,102,53,236,244,239,238,229,225,242,225,226,233,99,128,6,193,242,225,226,233,99,128,6,71,229,226,242,229,119,128,5,212,230,233,238,225,236,97,2,102,80,102,111,236,116,2,102,87,102,99,239,238,229,225,242,225,226,233,99,128,251,167,244,247,239,225,242,225,226,233,99,128,254,234,242,225,226,233,99,128,254,234,232,225,237,250,225,225,226,239,246,101,2,102,134,102,148,230,233,238,225,236,225,242,225,226,233,99,128,251,165,233,243,239,236,225,244,229,228,225,242,225,226,233,99,128,251,164,105,2,102,171,102,205,238,233,244,233,225,236,97,2,102,183,102,197,236,244,239,238,229,225,242,225,226,233,99,128,251,168,242,225,226,233,99,128,254,235,242,225,231,225,238,97,128,48,120,237,229,228,233,225,236,97,2,102,226,102,240,236,244,239,238,229,225,242,225,226,233,99,128,251,169,242,225,226,233,99,128,254,236,233,243,229,233,229,242,225,243,241,245,225,242,101,128,51,123,107,2,103,14,103,38,225,244,225,235,225,238,97,129,48,216,103,26,232,225,236,230,247,233,228,244,104,128,255,141,245,244,225,225,242,245,243,241,245,225,242,101,128,51,54,238,231,232,239,239,107,128,2,103,242,245,244,245,243,241,245,225,242,101,128,51,57,116,129,5,215,103,81,232,229,226,242,229,119,128,5,215,232,239,239,107,129,2,102,103,99,243,245,240,229,242,233,239,114,128,2,177,105,4,103,120,103,205,103,216,103,241,229,245,104,4,103,132,103,167,103,182,103,191,97,2,103,138,103,153,227,233,242,227,236,229,235,239,242,229,225,110,128,50,123,240,225,242,229,238,235,239,242,229,225,110,128,50,27,227,233,242,227,236,229,235,239,242,229,225,110,128,50,109,235,239,242,229,225,110,128,49,78,240,225,242,229,238,235,239,242,229,225,110,128,50,13,232,233,242,225,231,225,238,97,128,48,114,235,225,244,225,235,225,238,97,129,48,210,103,229,232,225,236,230,247,233,228,244,104,128,255,139,242,233,113,134,5,180,104,3,104,8,104,22,104,31,104,46,104,62,177,52,128,5,180,50,2,104,14,104,18,49,128,5,180,100,128,5,180,232,229,226,242,229,119,128,5,180,238,225,242,242,239,247,232,229,226,242,229,119,128,5,180,241,245,225,242,244,229,242,232,229,226,242,229,119,128,5,180,247,233,228,229,232,229,226,242,229,119,128,5,180,236,233,238,229,226,229,236,239,119,128,30,150,237,239,238,239,243,240,225,227,101,128,255,72,111,9,104,119,104,130,104,154,104,179,105,11,105,24,105,110,105,150,105,161,225,242,237,229,238,233,225,110,128,5,112,232,105,2,104,137,104,145,240,244,232,225,105,128,14,43,242,225,231,225,238,97,128,48,123,235,225,244,225,235,225,238,97,129,48,219,104,167,232,225,236,230,247,233,228,244,104,128,255,142,236,225,109,135,5,185,104,199,104,204,104,209,104,214,104,223,104,238,104,254,177,57,128,5,185,178,54,128,5,185,179,50,128,5,185,232,229,226,242,229,119,128,5,185,238,225,242,242,239,247,232,229,226,242,229,119,128,5,185,241,245,225,242,244,229,242,232,229,226,242,229,119,128,5,185,247,233,228,229,232,229,226,242,229,119,128,5,185,238,239,235,232,245,235,244,232,225,105,128,14,46,111,2,105,30,105,100,107,4,105,40,105,52,105,58,105,80,225,226,239,246,229,227,239,237,98,128,3,9,227,237,98,128,3,9,240,225,236,225,244,225,236,233,250,229,228,226,229,236,239,247,227,237,98,128,3,33,242,229,244,242,239,230,236,229,248,226,229,236,239,247,227,237,98,128,3,34,238,243,241,245,225,242,101,128,51,66,114,2,105,116,105,143,105,2,105,122,105,131,227,239,240,244,233,99,128,3,233,250,239,238,244,225,236,226,225,114,128,32,21,238,227,237,98,128,3,27,244,243,240,242,233,238,231,115,128,38,104,245,243,101,128,35,2,240,225,242,229,110,128,36,163,243,245,240,229,242,233,239,114,128,2,176,244,245,242,238,229,100,128,2,101,117,4,105,205,105,216,105,229,105,254,232,233,242,225,231,225,238,97,128,48,117,233,233,244,239,243,241,245,225,242,101,128,51,51,235,225,244,225,235,225,238,97,129,48,213,105,242,232,225,236,230,247,233,228,244,104,128,255,140,238,231,225,242,245,237,236,225,245,116,129,2,221,106,13,227,237,98,128,3,11,118,128,1,149,249,240,232,229,110,132,0,45,106,39,106,50,106,62,106,85,233,238,230,229,242,233,239,114,128,246,229,237,239,238,239,243,240,225,227,101,128,255,13,115,2,106,68,106,75,237,225,236,108,128,254,99,245,240,229,242,233,239,114,128,246,230,244,247,111,128,32,16,105,149,0,105,106,137,106,160,106,194,106,241,110,123,110,243,111,24,111,51,111,213,111,217,111,255,112,21,112,105,113,14,113,89,113,97,113,110,113,197,113,254,114,26,114,70,225,99,2,106,144,106,150,245,244,101,128,0,237,249,242,233,236,236,233,99,128,4,79,98,3,106,168,106,177,106,187,229,238,231,225,236,105,128,9,135,239,240,239,237,239,230,111,128,49,39,242,229,246,101,128,1,45,99,3,106,202,106,209,106,231,225,242,239,110,128,1,208,233,242,99,2,106,217,106,222,236,101,128,36,216,245,237,230,236,229,120,128,0,238,249,242,233,236,236,233,99,128,4,86,100,4,106,251,107,5,110,80,110,113,226,236,231,242,225,246,101,128,2,9,101,2,107,11,110,75,239,231,242,225,240,104,7,107,32,107,46,107,59,109,244,110,19,110,32,110,44,229,225,242,244,232,227,233,242,227,236,101,128,50,143,230,233,242,229,227,233,242,227,236,101,128,50,139,233,99,14,107,90,107,106,107,205,108,3,108,69,108,98,108,114,108,171,108,220,108,232,109,3,109,70,109,208,109,237,225,236,236,233,225,238,227,229,240,225,242,229,110,128,50,63,99,4,107,116,107,127,107,141,107,148,225,236,236,240,225,242,229,110,128,50,58,229,238,244,242,229,227,233,242,227,236,101,128,50,165,236,239,243,101,128,48,6,111,3,107,156,107,171,107,191,237,237,97,129,48,1,107,164,236,229,230,116,128,255,100,238,231,242,225,244,245,236,225,244,233,239,238,240,225,242,229,110,128,50,55,242,242,229,227,244,227,233,242,227,236,101,128,50,163,101,3,107,213,107,225,107,242,225,242,244,232,240,225,242,229,110,128,50,47,238,244,229,242,240,242,233,243,229,240,225,242,229,110,128,50,61,248,227,229,236,236,229,238,244,227,233,242,227,236,101,128,50,157,102,2,108,9,108,24,229,243,244,233,246,225,236,240,225,242,229,110,128,50,64,105,2,108,30,108,59,238,225,238,227,233,225,108,2,108,42,108,51,227,233,242,227,236,101,128,50,150,240,225,242,229,110,128,50,54,242,229,240,225,242,229,110,128,50,43,104,2,108,75,108,86,225,246,229,240,225,242,229,110,128,50,50,233,231,232,227,233,242,227,236,101,128,50,164,233,244,229,242,225,244,233,239,238,237,225,242,107,128,48,5,108,3,108,122,108,148,108,160,225,226,239,114,2,108,131,108,140,227,233,242,227,236,101,128,50,152,240,225,242,229,110,128,50,56,229,230,244,227,233,242,227,236,101,128,50,167,239,247,227,233,242,227,236,101,128,50,166,109,2,108,177,108,209,101,2,108,183,108,198,228,233,227,233,238,229,227,233,242,227,236,101,128,50,169,244,225,236,240,225,242,229,110,128,50,46,239,239,238,240,225,242,229,110,128,50,42,238,225,237,229,240,225,242,229,110,128,50,52,112,2,108,238,108,246,229,242,233,239,100,128,48,2,242,233,238,244,227,233,242,227,236,101,128,50,158,114,2,109,9,109,57,101,3,109,17,109,28,109,43,225,227,232,240,225,242,229,110,128,50,67,240,242,229,243,229,238,244,240,225,242,229,110,128,50,57,243,239,245,242,227,229,240,225,242,229,110,128,50,62,233,231,232,244,227,233,242,227,236,101,128,50,168,115,5,109,82,109,111,109,125,109,150,109,178,101,2,109,88,109,101,227,242,229,244,227,233,242,227,236,101,128,50,153,236,230,240,225,242,229,110,128,50,66,239,227,233,229,244,249,240,225,242,229,110,128,50,51,112,2,109,131,109,137,225,227,101,128,48,0,229,227,233,225,236,240,225,242,229,110,128,50,53,116,2,109,156,109,167,239,227,235,240,225,242,229,110,128,50,49,245,228,249,240,225,242,229,110,128,50,59,117,2,109,184,109,193,238,240,225,242,229,110,128,50,48,240,229,242,246,233,243,229,240,225,242,229,110,128,50,60,119,2,109,214,109,226,225,244,229,242,240,225,242,229,110,128,50,44,239,239,228,240,225,242,229,110,128,50,45,250,229,242,111,128,48,7,109,2,109,250,110,7,229,244,225,236,227,233,242,227,236,101,128,50,142,239,239,238,227,233,242,227,236,101,128,50,138,238,225,237,229,227,233,242,227,236,101,128,50,148,243,245,238,227,233,242,227,236,101,128,50,144,119,2,110,50,110,63,225,244,229,242,227,233,242,227,236,101,128,50,140,239,239,228,227,233,242,227,236,101,128,50,141,246,97,128,9,7,233,229,242,229,243,233,115,130,0,239,110,94,110,102,225,227,245,244,101,128,30,47,227,249,242,233,236,236,233,99,128,4,229,239,244,226,229,236,239,119,128,30,203,101,3,110,131,110,147,110,158,226,242,229,246,229,227,249,242,233,236,236,233,99,128,4,215,227,249,242,233,236,236,233,99,128,4,53,245,238,103,4,110,170,110,205,110,220,110,229,97,2,110,176,110,191,227,233,242,227,236,229,235,239,242,229,225,110,128,50,117,240,225,242,229,238,235,239,242,229,225,110,128,50,21,227,233,242,227,236,229,235,239,242,229,225,110,128,50,103,235,239,242,229,225,110,128,49,71,240,225,242,229,238,235,239,242,229,225,110,128,50,7,103,2,110,249,111,0,242,225,246,101,128,0,236,117,2,111,6,111,15,234,225,242,225,244,105,128,10,135,242,237,245,235,232,105,128,10,7,104,2,111,30,111,40,233,242,225,231,225,238,97,128,48,68,239,239,235,225,226,239,246,101,128,30,201,105,8,111,69,111,79,111,90,111,97,111,122,111,138,111,153,111,169,226,229,238,231,225,236,105,128,9,136,227,249,242,233,236,236,233,99,128,4,56,228,229,246,97,128,9,8,231,117,2,111,104,111,113,234,225,242,225,244,105,128,10,136,242,237,245,235,232,105,128,10,8,237,225,244,242,225,231,245,242,237,245,235,232,105,128,10,64,238,246,229,242,244,229,228,226,242,229,246,101,128,2,11,243,232,239,242,244,227,249,242,233,236,236,233,99,128,4,57,246,239,247,229,236,243,233,231,110,3,111,185,111,195,111,202,226,229,238,231,225,236,105,128,9,192,228,229,246,97,128,9,64,231,245,234,225,242,225,244,105,128,10,192,106,128,1,51,107,2,111,223,111,247,225,244,225,235,225,238,97,129,48,164,111,235,232,225,236,230,247,233,228,244,104,128,255,114,239,242,229,225,110,128,49,99,108,2,112,5,112,10,228,101,128,2,220,245,249,232,229,226,242,229,119,128,5,172,109,2,112,27,112,94,97,3,112,35,112,55,112,80,227,242,239,110,129,1,43,112,44,227,249,242,233,236,236,233,99,128,4,227,231,229,239,242,225,240,240,242,239,248,233,237,225,244,229,236,249,229,241,245,225,108,128,34,83,244,242,225,231,245,242,237,245,235,232,105,128,10,63,239,238,239,243,240,225,227,101,128,255,73,110,5,112,117,112,127,112,136,112,148,112,232,227,242,229,237,229,238,116,128,34,6,230,233,238,233,244,121,128,34,30,233,225,242,237,229,238,233,225,110,128,5,107,116,2,112,154,112,222,101,2,112,160,112,211,231,242,225,108,131,34,43,112,173,112,191,112,196,98,2,112,179,112,187,239,244,244,239,109,128,35,33,116,128,35,33,229,120,128,248,245,116,2,112,202,112,207,239,112,128,35,32,112,128,35,32,242,243,229,227,244,233,239,110,128,34,41,233,243,241,245,225,242,101,128,51,5,118,3,112,240,112,249,113,2,226,245,236,236,229,116,128,37,216,227,233,242,227,236,101,128,37,217,243,237,233,236,229,230,225,227,101,128,38,59,111,3,113,22,113,33,113,41,227,249,242,233,236,236,233,99,128,4,81,231,239,238,229,107,128,1,47,244,97,131,3,185,113,52,113,73,113,81,228,233,229,242,229,243,233,115,129,3,202,113,65,244,239,238,239,115,128,3,144,236,225,244,233,110,128,2,105,244,239,238,239,115,128,3,175,240,225,242,229,110,128,36,164,242,233,231,245,242,237,245,235,232,105,128,10,114,115,4,113,120,113,165,113,179,113,187,237,225,236,108,2,113,129,113,140,232,233,242,225,231,225,238,97,128,48,67,235,225,244,225,235,225,238,97,129,48,163,113,153,232,225,236,230,247,233,228,244,104,128,255,104,243,232,225,242,226,229,238,231,225,236,105,128,9,250,244,242,239,235,101,128,2,104,245,240,229,242,233,239,114,128,246,237,116,2,113,203,113,237,229,242,225,244,233,239,110,2,113,215,113,226,232,233,242,225,231,225,238,97,128,48,157,235,225,244,225,235,225,238,97,128,48,253,233,236,228,101,129,1,41,113,246,226,229,236,239,119,128,30,45,117,2,114,4,114,15,226,239,240,239,237,239,230,111,128,49,41,227,249,242,233,236,236,233,99,128,4,78,246,239,247,229,236,243,233,231,110,3,114,42,114,52,114,59,226,229,238,231,225,236,105,128,9,191,228,229,246,97,128,9,63,231,245,234,225,242,225,244,105,128,10,191,250,232,233,244,243,97,2,114,81,114,92,227,249,242,233,236,236,233,99,128,4,117,228,226,236,231,242,225,246,229,227,249,242,233,236,236,233,99,128,4,119,106,138,0,106,114,135,114,198,114,209,115,3,115,19,115,132,115,201,115,206,115,218,115,226,97,4,114,145,114,156,114,166,114,173,225,242,237,229,238,233,225,110,128,5,113,226,229,238,231,225,236,105,128,9,156,228,229,246,97,128,9,28,231,117,2,114,180,114,189,234,225,242,225,244,105,128,10,156,242,237,245,235,232,105,128,10,28,226,239,240,239,237,239,230,111,128,49,16,99,3,114,217,114,224,114,246,225,242,239,110,128,1,240,233,242,99,2,114,232,114,237,236,101,128,36,217,245,237,230,236,229,120,128,1,53,242,239,243,243,229,228,244,225,233,108,128,2,157,228,239,244,236,229,243,243,243,244,242,239,235,101,128,2,95,101,3,115,27,115,38,115,103,227,249,242,233,236,236,233,99,128,4,88,229,109,4,115,49,115,58,115,72,115,88,225,242,225,226,233,99,128,6,44,230,233,238,225,236,225,242,225,226,233,99,128,254,158,233,238,233,244,233,225,236,225,242,225,226,233,99,128,254,159,237,229,228,233,225,236,225,242,225,226,233,99,128,254,160,104,2,115,109,115,118,225,242,225,226,233,99,128,6,152,230,233,238,225,236,225,242,225,226,233,99,128,251,139,104,2,115,138,115,188,97,3,115,146,115,156,115,163,226,229,238,231,225,236,105,128,9,157,228,229,246,97,128,9,29,231,117,2,115,170,115,179,234,225,242,225,244,105,128,10,157,242,237,245,235,232,105,128,10,29,229,232,225,242,237,229,238,233,225,110,128,5,123,233,115,128,48,4,237,239,238,239,243,240,225,227,101,128,255,74,240,225,242,229,110,128,36,165,243,245,240,229,242,233,239,114,128,2,178,107,146,0,107,116,21,118,110,118,121,118,183,118,194,119,28,119,42,120,150,121,90,121,103,121,129,121,178,122,60,122,82,122,95,122,118,122,160,122,170,97,12,116,47,116,79,116,101,116,131,116,245,117,14,117,44,117,69,117,175,117,189,118,56,118,85,98,2,116,53,116,70,225,243,232,235,233,242,227,249,242,233,236,236,233,99,128,4,161,229,238,231,225,236,105,128,9,149,99,2,116,85,116,91,245,244,101,128,30,49,249,242,233,236,236,233,99,128,4,58,228,101,2,116,108,116,126,243,227,229,238,228,229,242,227,249,242,233,236,236,233,99,128,4,155,246,97,128,9,21,102,135,5,219,116,149,116,158,116,178,116,192,116,201,116,217,116,232,225,242,225,226,233,99,128,6,67,228,225,231,229,243,104,129,251,59,116,169,232,229,226,242,229,119,128,251,59,230,233,238,225,236,225,242,225,226,233,99,128,254,218,232,229,226,242,229,119,128,5,219,233,238,233,244,233,225,236,225,242,225,226,233,99,128,254,219,237,229,228,233,225,236,225,242,225,226,233,99,128,254,220,242,225,230,229,232,229,226,242,229,119,128,251,77,231,117,2,116,252,117,5,234,225,242,225,244,105,128,10,149,242,237,245,235,232,105,128,10,21,104,2,117,20,117,30,233,242,225,231,225,238,97,128,48,75,239,239,235,227,249,242,233,236,236,233,99,128,4,196,235,225,244,225,235,225,238,97,129,48,171,117,57,232,225,236,230,247,233,228,244,104,128,255,118,112,2,117,75,117,96,240,97,129,3,186,117,82,243,249,237,226,239,236,231,242,229,229,107,128,3,240,249,229,239,245,110,3,117,108,117,122,117,156,237,233,229,245,237,235,239,242,229,225,110,128,49,113,112,2,117,128,117,143,232,233,229,245,240,232,235,239,242,229,225,110,128,49,132,233,229,245,240,235,239,242,229,225,110,128,49,120,243,243,225,238,231,240,233,229,245,240,235,239,242,229,225,110,128,49,121,242,239,242,233,233,243,241,245,225,242,101,128,51,13,115,5,117,201,117,245,118,4,118,12,118,40,232,233,228,225,225,245,244,111,2,117,214,117,223,225,242,225,226,233,99,128,6,64,238,239,243,233,228,229,226,229,225,242,233,238,231,225,242,225,226,233,99,128,6,64,237,225,236,236,235,225,244,225,235,225,238,97,128,48,245,241,245,225,242,101,128,51,132,242,97,2,118,19,118,28,225,242,225,226,233,99,128,6,80,244,225,238,225,242,225,226,233,99,128,6,77,244,242,239,235,229,227,249,242,233,236,236,233,99,128,4,159,244,225,232,233,242,225,240,242,239,236,239,238,231,237,225,242,235,232,225,236,230,247,233,228,244,104,128,255,112,246,229,242,244,233,227,225,236,243,244,242,239,235,229,227,249,242,233,236,236,233,99,128,4,157,226,239,240,239,237,239,230,111,128,49,14,99,4,118,131,118,153,118,162,118,170,97,2,118,137,118,147,236,243,241,245,225,242,101,128,51,137,242,239,110,128,1,233,229,228,233,236,236,97,128,1,55,233,242,227,236,101,128,36,218,239,237,237,225,225,227,227,229,238,116,128,1,55,228,239,244,226,229,236,239,119,128,30,51,101,4,118,204,118,231,119,0,119,12,104,2,118,210,118,221,225,242,237,229,238,233,225,110,128,5,132,233,242,225,231,225,238,97,128,48,81,235,225,244,225,235,225,238,97,129,48,177,118,244,232,225,236,230,247,233,228,244,104,128,255,121,238,225,242,237,229,238,233,225,110,128,5,111,243,237,225,236,236,235,225,244,225,235,225,238,97,128,48,246,231,242,229,229,238,236,225,238,228,233,99,128,1,56,104,6,119,56,119,185,119,196,119,221,120,52,120,140,97,5,119,68,119,78,119,89,119,96,119,121,226,229,238,231,225,236,105,128,9,150,227,249,242,233,236,236,233,99,128,4,69,228,229,246,97,128,9,22,231,117,2,119,103,119,112,234,225,242,225,244,105,128,10,150,242,237,245,235,232,105,128,10,22,104,4,119,131,119,140,119,154,119,170,225,242,225,226,233,99,128,6,46,230,233,238,225,236,225,242,225,226,233,99,128,254,166,233,238,233,244,233,225,236,225,242,225,226,233,99,128,254,167,237,229,228,233,225,236,225,242,225,226,233,99,128,254,168,229,233,227,239,240,244,233,99,128,3,231,232,97,2,119,203,119,210,228,229,246,97,128,9,89,231,245,242,237,245,235,232,105,128,10,89,233,229,245,235,104,4,119,235,120,14,120,29,120,38,97,2,119,241,120,0,227,233,242,227,236,229,235,239,242,229,225,110,128,50,120,240,225,242,229,238,235,239,242,229,225,110,128,50,24,227,233,242,227,236,229,235,239,242,229,225,110,128,50,106,235,239,242,229,225,110,128,49,75,240,225,242,229,238,235,239,242,229,225,110,128,50,10,111,4,120,62,120,111,120,121,120,126,235,104,4,120,73,120,82,120,91,120,101,225,233,244,232,225,105,128,14,2,239,238,244,232,225,105,128,14,5,245,225,244,244,232,225,105,128,14,3,247,225,233,244,232,225,105,128,14,4,237,245,244,244,232,225,105,128,14,91,239,107,128,1,153,242,225,235,232,225,238,231,244,232,225,105,128,14,6,250,243,241,245,225,242,101,128,51,145,105,4,120,160,120,171,120,196,120,245,232,233,242,225,231,225,238,97,128,48,77,235,225,244,225,235,225,238,97,129,48,173,120,184,232,225,236,230,247,233,228,244,104,128,255,119,242,111,3,120,205,120,220,120,236,231,245,242,225,237,245,243,241,245,225,242,101,128,51,21,237,229,229,244,239,242,245,243,241,245,225,242,101,128,51,22,243,241,245,225,242,101,128,51,20,249,229,239,107,5,121,4,121,39,121,54,121,63,121,77,97,2,121,10,121,25,227,233,242,227,236,229,235,239,242,229,225,110,128,50,110,240,225,242,229,238,235,239,242,229,225,110,128,50,14,227,233,242,227,236,229,235,239,242,229,225,110,128,50,96,235,239,242,229,225,110,128,49,49,240,225,242,229,238,235,239,242,229,225,110,128,50,0,243,233,239,243,235,239,242,229,225,110,128,49,51,234,229,227,249,242,233,236,236,233,99,128,4,92,108,2,121,109,121,120,233,238,229,226,229,236,239,119,128,30,53,243,241,245,225,242,101,128,51,152,109,3,121,137,121,151,121,162,227,245,226,229,228,243,241,245,225,242,101,128,51,166,239,238,239,243,240,225,227,101,128,255,75,243,241,245,225,242,229,228,243,241,245,225,242,101,128,51,162,111,5,121,190,121,216,121,254,122,10,122,24,104,2,121,196,121,206,233,242,225,231,225,238,97,128,48,83,237,243,241,245,225,242,101,128,51,192,235,97,2,121,223,121,231,233,244,232,225,105,128,14,1,244,225,235,225,238,97,129,48,179,121,242,232,225,236,230,247,233,228,244,104,128,255,122,239,240,239,243,241,245,225,242,101,128,51,30,240,240,225,227,249,242,233,236,236,233,99,128,4,129,114,2,122,30,122,50,229,225,238,243,244,225,238,228,225,242,228,243,249,237,226,239,108,128,50,127,239,238,233,243,227,237,98,128,3,67,240,97,2,122,67,122,73,242,229,110,128,36,166,243,241,245,225,242,101,128,51,170,243,233,227,249,242,233,236,236,233,99,128,4,111,116,2,122,101,122,110,243,241,245,225,242,101,128,51,207,245,242,238,229,100,128,2,158,117,2,122,124,122,135,232,233,242,225,231,225,238,97,128,48,79,235,225,244,225,235,225,238,97,129,48,175,122,148,232,225,236,230,247,233,228,244,104,128,255,120,246,243,241,245,225,242,101,128,51,184,247,243,241,245,225,242,101,128,51,190,108,146,0,108,122,220,124,247,125,20,125,86,125,124,126,20,126,29,126,45,126,69,126,87,126,205,126,246,127,125,127,133,127,166,127,175,127,183,127,245,97,7,122,236,122,246,122,253,123,4,123,29,123,45,124,235,226,229,238,231,225,236,105,128,9,178,227,245,244,101,128,1,58,228,229,246,97,128,9,50,231,117,2,123,11,123,20,234,225,242,225,244,105,128,10,178,242,237,245,235,232,105,128,10,50,235,235,232,225,238,231,249,225,239,244,232,225,105,128,14,69,109,10,123,67,124,6,124,23,124,61,124,75,124,94,124,110,124,130,124,150,124,173,97,2,123,73,123,254,236,229,102,4,123,85,123,99,123,191,123,208,230,233,238,225,236,225,242,225,226,233,99,128,254,252,232,225,237,250,97,2,123,109,123,150,225,226,239,246,101,2,123,119,123,133,230,233,238,225,236,225,242,225,226,233,99,128,254,248,233,243,239,236,225,244,229,228,225,242,225,226,233,99,128,254,247,226,229,236,239,119,2,123,160,123,174,230,233,238,225,236,225,242,225,226,233,99,128,254,250,233,243,239,236,225,244,229,228,225,242,225,226,233,99,128,254,249,233,243,239,236,225,244,229,228,225,242,225,226,233,99,128,254,251,237,225,228,228,225,225,226,239,246,101,2,123,223,123,237,230,233,238,225,236,225,242,225,226,233,99,128,254,246,233,243,239,236,225,244,229,228,225,242,225,226,233,99,128,254,245,242,225,226,233,99,128,6,68,226,228,97,129,3,187,124,14,243,244,242,239,235,101,128,1,155,229,100,130,5,220,124,32,124,52,228,225,231,229,243,104,129,251,60,124,43,232,229,226,242,229,119,128,251,60,232,229,226,242,229,119,128,5,220,230,233,238,225,236,225,242,225,226,233,99,128,254,222,232,225,232,233,238,233,244,233,225,236,225,242,225,226,233,99,128,252,202,233,238,233,244,233,225,236,225,242,225,226,233,99,128,254,223,234,229,229,237,233,238,233,244,233,225,236,225,242,225,226,233,99,128,252,201,235,232,225,232,233,238,233,244,233,225,236,225,242,225,226,233,99,128,252,203,236,225,237,232,229,232,233,243,239,236,225,244,229,228,225,242,225,226,233,99,128,253,242,237,101,2,124,180,124,193,228,233,225,236,225,242,225,226,233,99,128,254,224,229,109,2,124,200,124,219,232,225,232,233,238,233,244,233,225,236,225,242,225,226,233,99,128,253,136,233,238,233,244,233,225,236,225,242,225,226,233,99,128,252,204,242,231,229,227,233,242,227,236,101,128,37,239,98,3,124,255,125,4,125,10,225,114,128,1,154,229,236,116,128,2,108,239,240,239,237,239,230,111,128,49,12,99,4,125,30,125,37,125,46,125,73,225,242,239,110,128,1,62,229,228,233,236,236,97,128,1,60,233,242,99,2,125,54,125,59,236,101,128,36,219,245,237,230,236,229,248,226,229,236,239,119,128,30,61,239,237,237,225,225,227,227,229,238,116,128,1,60,228,239,116,130,1,64,125,96,125,105,225,227,227,229,238,116,128,1,64,226,229,236,239,119,129,30,55,125,115,237,225,227,242,239,110,128,30,57,101,3,125,132,125,170,126,15,230,116,2,125,139,125,155,225,238,231,236,229,225,226,239,246,229,227,237,98,128,3,26,244,225,227,235,226,229,236,239,247,227,237,98,128,3,24,243,115,132,0,60,125,183,125,205,125,217,126,7,229,241,245,225,108,129,34,100,125,193,239,242,231,242,229,225,244,229,114,128,34,218,237,239,238,239,243,240,225,227,101,128,255,28,111,2,125,223,125,252,114,2,125,229,125,242,229,241,245,233,246,225,236,229,238,116,128,34,114,231,242,229,225,244,229,114,128,34,118,246,229,242,229,241,245,225,108,128,34,102,243,237,225,236,108,128,254,100,250,104,128,2,110,230,226,236,239,227,107,128,37,140,232,239,239,235,242,229,244,242,239,230,236,229,120,128,2,109,105,2,126,51,126,56,242,97,128,32,164,247,238,225,242,237,229,238,233,225,110,128,5,108,106,129,1,201,126,75,229,227,249,242,233,236,236,233,99,128,4,89,108,132,246,192,126,99,126,123,126,134,126,143,97,2,126,105,126,112,228,229,246,97,128,9,51,231,245,234,225,242,225,244,105,128,10,179,233,238,229,226,229,236,239,119,128,30,59,236,225,228,229,246,97,128,9,52,246,239,227,225,236,233,99,3,126,157,126,167,126,174,226,229,238,231,225,236,105,128,9,225,228,229,246,97,128,9,97,246,239,247,229,236,243,233,231,110,2,126,188,126,198,226,229,238,231,225,236,105,128,9,227,228,229,246,97,128,9,99,109,3,126,213,126,226,126,237,233,228,228,236,229,244,233,236,228,101,128,2,107,239,238,239,243,240,225,227,101,128,255,76,243,241,245,225,242,101,128,51,208,111,6,127,4,127,16,127,58,127,69,127,75,127,117,227,232,245,236,225,244,232,225,105,128,14,44,231,233,227,225,108,3,127,28,127,34,127,53,225,238,100,128,34,39,238,239,116,129,0,172,127,42,242,229,246,229,242,243,229,100,128,35,16,239,114,128,34,40,236,233,238,231,244,232,225,105,128,14,37,238,231,115,128,1,127,247,236,233,238,101,2,127,85,127,108,99,2,127,91,127,103,229,238,244,229,242,236,233,238,101,128,254,78,237,98,128,3,50,228,225,243,232,229,100,128,254,77,250,229,238,231,101,128,37,202,240,225,242,229,110,128,36,167,115,3,127,141,127,148,127,156,236,225,243,104,128,1,66,241,245,225,242,101,128,33,19,245,240,229,242,233,239,114,128,246,238,244,243,232,225,228,101,128,37,145,245,244,232,225,105,128,14,38,246,239,227,225,236,233,99,3,127,197,127,207,127,214,226,229,238,231,225,236,105,128,9,140,228,229,246,97,128,9,12,246,239,247,229,236,243,233,231,110,2,127,228,127,238,226,229,238,231,225,236,105,128,9,226,228,229,246,97,128,9,98,248,243,241,245,225,242,101,128,51,211,109,144,0,109,128,35,130,144,130,169,130,196,130,221,132,18,132,40,133,95,133,125,133,174,134,25,134,47,134,72,134,81,135,108,135,136,97,12,128,61,128,71,128,135,128,142,128,167,128,215,130,51,130,76,130,81,130,95,130,107,130,112,226,229,238,231,225,236,105,128,9,174,99,2,128,77,128,129,242,239,110,132,0,175,128,91,128,102,128,108,128,117,226,229,236,239,247,227,237,98,128,3,49,227,237,98,128,3,4,236,239,247,237,239,100,128,2,205,237,239,238,239,243,240,225,227,101,128,255,227,245,244,101,128,30,63,228,229,246,97,128,9,46,231,117,2,128,149,128,158,234,225,242,225,244,105,128,10,174,242,237,245,235,232,105,128,10,46,104,2,128,173,128,205,225,240,225,235,104,2,128,183,128,192,232,229,226,242,229,119,128,5,164,236,229,230,244,232,229,226,242,229,119,128,5,164,233,242,225,231,225,238,97,128,48,126,105,5,128,227,129,40,129,103,129,133,130,39,227,232,225,244,244,225,247,97,3,128,242,129,17,129,24,236,239,119,2,128,250,129,5,236,229,230,244,244,232,225,105,128,248,149,242,233,231,232,244,244,232,225,105,128,248,148,244,232,225,105,128,14,75,245,240,240,229,242,236,229,230,244,244,232,225,105,128,248,147,229,107,3,129,49,129,80,129,87,236,239,119,2,129,57,129,68,236,229,230,244,244,232,225,105,128,248,140,242,233,231,232,244,244,232,225,105,128,248,139,244,232,225,105,128,14,72,245,240,240,229,242,236,229,230,244,244,232,225,105,128,248,138,232,225,238,225,235,225,116,2,129,115,129,126,236,229,230,244,244,232,225,105,128,248,132,244,232,225,105,128,14,49,116,3,129,141,129,169,129,232,225,233,235,232,117,2,129,151,129,162,236,229,230,244,244,232,225,105,128,248,137,244,232,225,105,128,14,71,232,111,3,129,178,129,209,129,216,236,239,119,2,129,186,129,197,236,229,230,244,244,232,225,105,128,248,143,242,233,231,232,244,244,232,225,105,128,248,142,244,232,225,105,128,14,73,245,240,240,229,242,236,229,230,244,244,232,225,105,128,248,141,242,105,3,129,241,130,16,130,23,236,239,119,2,129,249,130,4,236,229,230,244,244,232,225,105,128,248,146,242,233,231,232,244,244,232,225,105,128,248,145,244,232,225,105,128,14,74,245,240,240,229,242,236,229,230,244,244,232,225,105,128,248,144,249,225,237,239,235,244,232,225,105,128,14,70,235,225,244,225,235,225,238,97,129,48,222,130,64,232,225,236,230,247,233,228,244,104,128,255,143,236,101,128,38,66,238,243,249,239,238,243,241,245,225,242,101,128,51,71,241,225,230,232,229,226,242,229,119,128,5,190,242,115,128,38,66,115,2,130,118,130,136,239,242,225,227,233,242,227,236,229,232,229,226,242,229,119,128,5,175,241,245,225,242,101,128,51,131,98,2,130,150,130,160,239,240,239,237,239,230,111,128,49,7,243,241,245,225,242,101,128,51,212,99,2,130,175,130,183,233,242,227,236,101,128,36,220,245,226,229,228,243,241,245,225,242,101,128,51,165,228,239,116,2,130,204,130,213,225,227,227,229,238,116,128,30,65,226,229,236,239,119,128,30,67,101,7,130,237,131,108,131,119,131,134,131,159,131,196,131,208,101,2,130,243,131,95,109,4,130,253,131,6,131,20,131,36,225,242,225,226,233,99,128,6,69,230,233,238,225,236,225,242,225,226,233,99,128,254,226,233,238,233,244,233,225,236,225,242,225,226,233,99,128,254,227,237,101,2,131,43,131,56,228,233,225,236,225,242,225,226,233,99,128,254,228,229,237,105,2,131,64,131,79,238,233,244,233,225,236,225,242,225,226,233,99,128,252,209,243,239,236,225,244,229,228,225,242,225,226,233,99,128,252,72,244,239,242,245,243,241,245,225,242,101,128,51,77,232,233,242,225,231,225,238,97,128,48,129,233,250,233,229,242,225,243,241,245,225,242,101,128,51,126,235,225,244,225,235,225,238,97,129,48,225,131,147,232,225,236,230,247,233,228,244,104,128,255,146,109,130,5,222,131,167,131,187,228,225,231,229,243,104,129,251,62,131,178,232,229,226,242,229,119,128,251,62,232,229,226,242,229,119,128,5,222,238,225,242,237,229,238,233,225,110,128,5,116,242,235,232,97,3,131,219,131,228,132,5,232,229,226,242,229,119,128,5,165,235,229,230,245,236,97,2,131,239,131,248,232,229,226,242,229,119,128,5,166,236,229,230,244,232,229,226,242,229,119,128,5,166,236,229,230,244,232,229,226,242,229,119,128,5,165,104,2,132,24,132,30,239,239,107,128,2,113,250,243,241,245,225,242,101,128,51,146,105,6,132,54,132,91,132,228,132,239,133,8,133,65,228,100,2,132,61,132,86,236,229,228,239,244,235,225,244,225,235,225,238,225,232,225,236,230,247,233,228,244,104,128,255,101,239,116,128,0,183,229,245,109,5,132,105,132,140,132,155,132,164,132,215,97,2,132,111,132,126,227,233,242,227,236,229,235,239,242,229,225,110,128,50,114,240,225,242,229,238,235,239,242,229,225,110,128,50,18,227,233,242,227,236,229,235,239,242,229,225,110,128,50,100,235,239,242,229,225,110,128,49,65,112,2,132,170,132,202,97,2,132,176,132,190,238,243,233,239,243,235,239,242,229,225,110,128,49,112,242,229,238,235,239,242,229,225,110,128,50,4,233,229,245,240,235,239,242,229,225,110,128,49,110,243,233,239,243,235,239,242,229,225,110,128,49,111,232,233,242,225,231,225,238,97,128,48,127,235,225,244,225,235,225,238,97,129,48,223,132,252,232,225,236,230,247,233,228,244,104,128,255,144,238,117,2,133,15,133,60,115,132,34,18,133,27,133,38,133,47,133,53,226,229,236,239,247,227,237,98,128,3,32,227,233,242,227,236,101,128,34,150,237,239,100,128,2,215,240,236,245,115,128,34,19,244,101,128,32,50,242,105,2,133,72,133,86,226,225,225,242,245,243,241,245,225,242,101,128,51,74,243,241,245,225,242,101,128,51,73,108,2,133,101,133,116,239,238,231,236,229,231,244,245,242,238,229,100,128,2,112,243,241,245,225,242,101,128,51,150,109,3,133,133,133,147,133,158,227,245,226,229,228,243,241,245,225,242,101,128,51,163,239,238,239,243,240,225,227,101,128,255,77,243,241,245,225,242,229,228,243,241,245,225,242,101,128,51,159,111,5,133,186,133,212,133,237,133,247,134,0,104,2,133,192,133,202,233,242,225,231,225,238,97,128,48,130,237,243,241,245,225,242,101,128,51,193,235,225,244,225,235,225,238,97,129,48,226,133,225,232,225,236,230,247,233,228,244,104,128,255,147,236,243,241,245,225,242,101,128,51,214,237,225,244,232,225,105,128,14,33,246,229,242,243,243,241,245,225,242,101,129,51,167,134,15,228,243,241,245,225,242,101,128,51,168,240,97,2,134,32,134,38,242,229,110,128,36,168,243,241,245,225,242,101,128,51,171,115,2,134,53,134,62,243,241,245,225,242,101,128,51,179,245,240,229,242,233,239,114,128,246,239,244,245,242,238,229,100,128,2,111,117,141,0,181,134,111,134,115,134,125,134,149,134,159,134,181,134,192,134,217,134,240,134,250,135,24,135,88,135,98,49,128,0,181,225,243,241,245,225,242,101,128,51,130,227,104,2,134,132,134,142,231,242,229,225,244,229,114,128,34,107,236,229,243,115,128,34,106,230,243,241,245,225,242,101,128,51,140,103,2,134,165,134,172,242,229,229,107,128,3,188,243,241,245,225,242,101,128,51,141,232,233,242,225,231,225,238,97,128,48,128,235,225,244,225,235,225,238,97,129,48,224,134,205,232,225,236,230,247,233,228,244,104,128,255,145,108,2,134,223,134,232,243,241,245,225,242,101,128,51,149,244,233,240,236,121,128,0,215,237,243,241,245,225,242,101,128,51,155,238,225,104,2,135,2,135,11,232,229,226,242,229,119,128,5,163,236,229,230,244,232,229,226,242,229,119,128,5,163,115,2,135,30,135,79,233,99,3,135,39,135,56,135,67,225,236,238,239,244,101,129,38,106,135,50,228,226,108,128,38,107,230,236,225,244,243,233,231,110,128,38,109,243,232,225,242,240,243,233,231,110,128,38,111,243,241,245,225,242,101,128,51,178,246,243,241,245,225,242,101,128,51,182,247,243,241,245,225,242,101,128,51,188,118,2,135,114,135,127,237,229,231,225,243,241,245,225,242,101,128,51,185,243,241,245,225,242,101,128,51,183,119,2,135,142,135,155,237,229,231,225,243,241,245,225,242,101,128,51,191,243,241,245,225,242,101,128,51,189,110,150,0,110,135,212,136,90,136,114,136,180,136,205,137,7,137,17,137,84,137,127,139,161,139,179,139,204,139,235,140,5,140,70,142,52,142,60,142,85,142,93,143,61,143,71,143,81,97,8,135,230,135,250,136,1,136,8,136,33,136,44,136,69,136,81,98,2,135,236,135,245,229,238,231,225,236,105,128,9,168,236,97,128,34,7,227,245,244,101,128,1,68,228,229,246,97,128,9,40,231,117,2,136,15,136,24,234,225,242,225,244,105,128,10,168,242,237,245,235,232,105,128,10,40,232,233,242,225,231,225,238,97,128,48,106,235,225,244,225,235,225,238,97,129,48,202,136,57,232,225,236,230,247,233,228,244,104,128,255,133,240,239,243,244,242,239,240,232,101,128,1,73,243,241,245,225,242,101,128,51,129,98,2,136,96,136,106,239,240,239,237,239,230,111,128,49,11,243,240,225,227,101,128,0,160,99,4,136,124,136,131,136,140,136,167,225,242,239,110,128,1,72,229,228,233,236,236,97,128,1,70,233,242,99,2,136,148,136,153,236,101,128,36], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+61440);
/* memory initializer */ allocate([221,245,237,230,236,229,248,226,229,236,239,119,128,30,75,239,237,237,225,225,227,227,229,238,116,128,1,70,228,239,116,2,136,188,136,197,225,227,227,229,238,116,128,30,69,226,229,236,239,119,128,30,71,101,3,136,213,136,224,136,249,232,233,242,225,231,225,238,97,128,48,109,235,225,244,225,235,225,238,97,129,48,205,136,237,232,225,236,230,247,233,228,244,104,128,255,136,247,243,232,229,241,229,236,243,233,231,110,128,32,170,230,243,241,245,225,242,101,128,51,139,103,2,137,23,137,73,97,3,137,31,137,41,137,48,226,229,238,231,225,236,105,128,9,153,228,229,246,97,128,9,25,231,117,2,137,55,137,64,234,225,242,225,244,105,128,10,153,242,237,245,235,232,105,128,10,25,239,238,231,245,244,232,225,105,128,14,7,104,2,137,90,137,100,233,242,225,231,225,238,97,128,48,147,239,239,107,2,137,108,137,115,236,229,230,116,128,2,114,242,229,244,242,239,230,236,229,120,128,2,115,105,4,137,137,138,50,138,61,138,119,229,245,110,7,137,155,137,190,137,222,137,236,137,245,138,22,138,35,97,2,137,161,137,176,227,233,242,227,236,229,235,239,242,229,225,110,128,50,111,240,225,242,229,238,235,239,242,229,225,110,128,50,15,227,105,2,137,197,137,209,229,245,227,235,239,242,229,225,110,128,49,53,242,227,236,229,235,239,242,229,225,110,128,50,97,232,233,229,245,232,235,239,242,229,225,110,128,49,54,235,239,242,229,225,110,128,49,52,240,97,2,137,252,138,10,238,243,233,239,243,235,239,242,229,225,110,128,49,104,242,229,238,235,239,242,229,225,110,128,50,1,243,233,239,243,235,239,242,229,225,110,128,49,103,244,233,235,229,245,244,235,239,242,229,225,110,128,49,102,232,233,242,225,231,225,238,97,128,48,107,107,2,138,67,138,91,225,244,225,235,225,238,97,129,48,203,138,79,232,225,236,230,247,233,228,244,104,128,255,134,232,225,232,233,116,2,138,101,138,112,236,229,230,244,244,232,225,105,128,248,153,244,232,225,105,128,14,77,238,101,141,0,57,138,150,138,159,138,169,138,199,138,206,138,231,139,2,139,36,139,48,139,59,139,92,139,100,139,111,225,242,225,226,233,99,128,6,105,226,229,238,231,225,236,105,128,9,239,227,233,242,227,236,101,129,36,104,138,180,233,238,246,229,242,243,229,243,225,238,243,243,229,242,233,102,128,39,146,228,229,246,97,128,9,111,231,117,2,138,213,138,222,234,225,242,225,244,105,128,10,239,242,237,245,235,232,105,128,10,111,232,97,2,138,238,138,249,227,235,225,242,225,226,233,99,128,6,105,238,231,250,232,239,117,128,48,41,105,2,139,8,139,26,228,229,239,231,242,225,240,232,233,227,240,225,242,229,110,128,50,40,238,230,229,242,233,239,114,128,32,137,237,239,238,239,243,240,225,227,101,128,255,25,239,236,228,243,244,249,236,101,128,247,57,112,2,139,65,139,72,225,242,229,110,128,36,124,229,114,2,139,79,139,85,233,239,100,128,36,144,243,233,225,110,128,6,249,242,239,237,225,110,128,33,120,243,245,240,229,242,233,239,114,128,32,121,116,2,139,117,139,155,229,229,110,2,139,125,139,134,227,233,242,227,236,101,128,36,114,112,2,139,140,139,147,225,242,229,110,128,36,134,229,242,233,239,100,128,36,154,232,225,105,128,14,89,106,129,1,204,139,167,229,227,249,242,233,236,236,233,99,128,4,90,235,225,244,225,235,225,238,97,129,48,243,139,192,232,225,236,230,247,233,228,244,104,128,255,157,108,2,139,210,139,224,229,231,242,233,231,232,244,236,239,238,103,128,1,158,233,238,229,226,229,236,239,119,128,30,73,109,2,139,241,139,252,239,238,239,243,240,225,227,101,128,255,78,243,241,245,225,242,101,128,51,154,110,2,140,11,140,61,97,3,140,19,140,29,140,36,226,229,238,231,225,236,105,128,9,163,228,229,246,97,128,9,35,231,117,2,140,43,140,52,234,225,242,225,244,105,128,10,163,242,237,245,235,232,105,128,10,35,238,225,228,229,246,97,128,9,41,111,6,140,84,140,95,140,120,140,161,141,113,142,40,232,233,242,225,231,225,238,97,128,48,110,235,225,244,225,235,225,238,97,129,48,206,140,108,232,225,236,230,247,233,228,244,104,128,255,137,110,3,140,128,140,144,140,153,226,242,229,225,235,233,238,231,243,240,225,227,101,128,0,160,229,238,244,232,225,105,128,14,19,245,244,232,225,105,128,14,25,239,110,7,140,178,140,187,140,201,140,235,140,251,141,36,141,95,225,242,225,226,233,99,128,6,70,230,233,238,225,236,225,242,225,226,233,99,128,254,230,231,232,245,238,238,97,2,140,212,140,221,225,242,225,226,233,99,128,6,186,230,233,238,225,236,225,242,225,226,233,99,128,251,159,233,238,233,244,233,225,236,225,242,225,226,233,99,128,254,231,234,229,229,237,105,2,141,5,141,20,238,233,244,233,225,236,225,242,225,226,233,99,128,252,210,243,239,236,225,244,229,228,225,242,225,226,233,99,128,252,75,237,101,2,141,43,141,56,228,233,225,236,225,242,225,226,233,99,128,254,232,229,237,105,2,141,64,141,79,238,233,244,233,225,236,225,242,225,226,233,99,128,252,213,243,239,236,225,244,229,228,225,242,225,226,233,99,128,252,78,238,239,239,238,230,233,238,225,236,225,242,225,226,233,99,128,252,141,116,7,141,129,141,140,141,169,141,204,141,216,141,236,142,6,227,239,238,244,225,233,238,115,128,34,12,101,2,141,146,141,162,236,229,237,229,238,116,129,34,9,141,157,239,102,128,34,9,241,245,225,108,128,34,96,231,242,229,225,244,229,114,129,34,111,141,181,238,239,114,2,141,189,141,197,229,241,245,225,108,128,34,113,236,229,243,115,128,34,121,233,228,229,238,244,233,227,225,108,128,34,98,236,229,243,115,129,34,110,141,225,238,239,242,229,241,245,225,108,128,34,112,112,2,141,242,141,252,225,242,225,236,236,229,108,128,34,38,242,229,227,229,228,229,115,128,34,128,243,117,3,142,15,142,22,142,31,226,243,229,116,128,34,132,227,227,229,229,228,115,128,34,129,240,229,242,243,229,116,128,34,133,247,225,242,237,229,238,233,225,110,128,5,118,240,225,242,229,110,128,36,169,115,2,142,66,142,75,243,241,245,225,242,101,128,51,177,245,240,229,242,233,239,114,128,32,127,244,233,236,228,101,128,0,241,117,132,3,189,142,105,142,116,142,197,143,24,232,233,242,225,231,225,238,97,128,48,108,107,2,142,122,142,146,225,244,225,235,225,238,97,129,48,204,142,134,232,225,236,230,247,233,228,244,104,128,255,135,244,97,3,142,155,142,165,142,172,226,229,238,231,225,236,105,128,9,188,228,229,246,97,128,9,60,231,117,2,142,179,142,188,234,225,242,225,244,105,128,10,188,242,237,245,235,232,105,128,10,60,109,2,142,203,142,237,226,229,242,243,233,231,110,130,0,35,142,217,142,229,237,239,238,239,243,240,225,227,101,128,255,3,243,237,225,236,108,128,254,95,229,114,2,142,244,143,20,225,236,243,233,231,110,2,142,255,143,7,231,242,229,229,107,128,3,116,236,239,247,229,242,231,242,229,229,107,128,3,117,111,128,33,22,110,130,5,224,143,32,143,52,228,225,231,229,243,104,129,251,64,143,43,232,229,226,242,229,119,128,251,64,232,229,226,242,229,119,128,5,224,246,243,241,245,225,242,101,128,51,181,247,243,241,245,225,242,101,128,51,187,249,97,3,143,90,143,100,143,107,226,229,238,231,225,236,105,128,9,158,228,229,246,97,128,9,30,231,117,2,143,114,143,123,234,225,242,225,244,105,128,10,158,242,237,245,235,232,105,128,10,30,111,147,0,111,143,174,143,196,144,18,144,188,145,4,145,19,145,59,145,182,145,203,145,241,145,252,146,174,148,8,148,72,148,105,148,151,149,24,149,71,149,83,97,2,143,180,143,187,227,245,244,101,128,0,243,238,231,244,232,225,105,128,14,45,98,4,143,206,143,248,144,1,144,11,225,242,242,229,100,130,2,117,143,218,143,229,227,249,242,233,236,236,233,99,128,4,233,228,233,229,242,229,243,233,243,227,249,242,233,236,236,233,99,128,4,235,229,238,231,225,236,105,128,9,147,239,240,239,237,239,230,111,128,49,27,242,229,246,101,128,1,79,99,3,144,26,144,99,144,178,97,2,144,32,144,93,238,228,242,97,3,144,43,144,50,144,61,228,229,246,97,128,9,17,231,245,234,225,242,225,244,105,128,10,145,246,239,247,229,236,243,233,231,110,2,144,75,144,82,228,229,246,97,128,9,73,231,245,234,225,242,225,244,105,128,10,201,242,239,110,128,1,210,233,242,99,2,144,107,144,112,236,101,128,36,222,245,237,230,236,229,120,133,0,244,144,131,144,139,144,150,144,158,144,170,225,227,245,244,101,128,30,209,228,239,244,226,229,236,239,119,128,30,217,231,242,225,246,101,128,30,211,232,239,239,235,225,226,239,246,101,128,30,213,244,233,236,228,101,128,30,215,249,242,233,236,236,233,99,128,4,62,100,4,144,198,144,221,144,227,144,250,226,108,2,144,205,144,213,225,227,245,244,101,128,1,81,231,242,225,246,101,128,2,13,229,246,97,128,9,19,233,229,242,229,243,233,115,129,0,246,144,239,227,249,242,233,236,236,233,99,128,4,231,239,244,226,229,236,239,119,128,30,205,101,129,1,83,145,10,235,239,242,229,225,110,128,49,90,103,3,145,27,145,42,145,49,239,238,229,107,129,2,219,145,36,227,237,98,128,3,40,242,225,246,101,128,0,242,245,234,225,242,225,244,105,128,10,147,104,4,145,69,145,80,145,90,145,168,225,242,237,229,238,233,225,110,128,5,133,233,242,225,231,225,238,97,128,48,74,111,2,145,96,145,106,239,235,225,226,239,246,101,128,30,207,242,110,133,1,161,145,121,145,129,145,140,145,148,145,160,225,227,245,244,101,128,30,219,228,239,244,226,229,236,239,119,128,30,227,231,242,225,246,101,128,30,221,232,239,239,235,225,226,239,246,101,128,30,223,244,233,236,228,101,128,30,225,245,238,231,225,242,245,237,236,225,245,116,128,1,81,105,129,1,163,145,188,238,246,229,242,244,229,228,226,242,229,246,101,128,2,15,107,2,145,209,145,233,225,244,225,235,225,238,97,129,48,170,145,221,232,225,236,230,247,233,228,244,104,128,255,117,239,242,229,225,110,128,49,87,236,229,232,229,226,242,229,119,128,5,171,109,6,146,10,146,38,146,45,146,134,146,145,146,163,225,227,242,239,110,130,1,77,146,22,146,30,225,227,245,244,101,128,30,83,231,242,225,246,101,128,30,81,228,229,246,97,128,9,80,229,231,97,133,3,201,146,61,146,65,146,76,146,90,146,106,49,128,3,214,227,249,242,233,236,236,233,99,128,4,97,236,225,244,233,238,227,236,239,243,229,100,128,2,119,242,239,245,238,228,227,249,242,233,236,236,233,99,128,4,123,116,2,146,112,146,127,233,244,236,239,227,249,242,233,236,236,233,99,128,4,125,239,238,239,115,128,3,206,231,245,234,225,242,225,244,105,128,10,208,233,227,242,239,110,129,3,191,146,155,244,239,238,239,115,128,3,204,239,238,239,243,240,225,227,101,128,255,79,238,101,145,0,49,146,213,146,222,146,232,147,6,147,31,147,40,147,49,147,74,147,108,147,142,147,154,147,173,147,184,147,217,147,227,147,235,147,246,225,242,225,226,233,99,128,6,97,226,229,238,231,225,236,105,128,9,231,227,233,242,227,236,101,129,36,96,146,243,233,238,246,229,242,243,229,243,225,238,243,243,229,242,233,102,128,39,138,100,2,147,12,147,18,229,246,97,128,9,103,239,244,229,238,236,229,225,228,229,114,128,32,36,229,233,231,232,244,104,128,33,91,230,233,244,244,229,100,128,246,220,231,117,2,147,56,147,65,234,225,242,225,244,105,128,10,231,242,237,245,235,232,105,128,10,103,232,97,3,147,83,147,94,147,99,227,235,225,242,225,226,233,99,128,6,97,236,102,128,0,189,238,231,250,232,239,117,128,48,33,105,2,147,114,147,132,228,229,239,231,242,225,240,232,233,227,240,225,242,229,110,128,50,32,238,230,229,242,233,239,114,128,32,129,237,239,238,239,243,240,225,227,101,128,255,17,238,245,237,229,242,225,244,239,242,226,229,238,231,225,236,105,128,9,244,239,236,228,243,244,249,236,101,128,247,49,112,2,147,190,147,197,225,242,229,110,128,36,116,229,114,2,147,204,147,210,233,239,100,128,36,136,243,233,225,110,128,6,241,241,245,225,242,244,229,114,128,0,188,242,239,237,225,110,128,33,112,243,245,240,229,242,233,239,114,128,0,185,244,104,2,147,253,148,2,225,105,128,14,81,233,242,100,128,33,83,111,3,148,16,148,50,148,66,103,2,148,22,148,40,239,238,229,107,129,1,235,148,31,237,225,227,242,239,110,128,1,237,245,242,237,245,235,232,105,128,10,19,237,225,244,242,225,231,245,242,237,245,235,232,105,128,10,75,240,229,110,128,2,84,112,3,148,80,148,87,148,98,225,242,229,110,128,36,170,229,238,226,245,236,236,229,116,128,37,230,244,233,239,110,128,35,37,114,2,148,111,148,140,100,2,148,117,148,128,230,229,237,233,238,233,238,101,128,0,170,237,225,243,227,245,236,233,238,101,128,0,186,244,232,239,231,239,238,225,108,128,34,31,115,5,148,163,148,195,148,212,149,1,149,14,232,239,242,116,2,148,172,148,179,228,229,246,97,128,9,18,246,239,247,229,236,243,233,231,238,228,229,246,97,128,9,74,236,225,243,104,129,0,248,148,204,225,227,245,244,101,128,1,255,237,225,236,108,2,148,221,148,232,232,233,242,225,231,225,238,97,128,48,73,235,225,244,225,235,225,238,97,129,48,169,148,245,232,225,236,230,247,233,228,244,104,128,255,107,244,242,239,235,229,225,227,245,244,101,128,1,255,245,240,229,242,233,239,114,128,246,240,116,2,149,30,149,41,227,249,242,233,236,236,233,99,128,4,127,233,236,228,101,130,0,245,149,52,149,60,225,227,245,244,101,128,30,77,228,233,229,242,229,243,233,115,128,30,79,245,226,239,240,239,237,239,230,111,128,49,33,118,2,149,89,149,170,229,114,2,149,96,149,162,236,233,238,101,131,32,62,149,109,149,132,149,155,99,2,149,115,149,127,229,238,244,229,242,236,233,238,101,128,254,74,237,98,128,3,5,100,2,149,138,149,146,225,243,232,229,100,128,254,73,226,236,247,225,246,121,128,254,76,247,225,246,121,128,254,75,243,227,239,242,101,128,0,175,239,247,229,236,243,233,231,110,3,149,185,149,195,149,202,226,229,238,231,225,236,105,128,9,203,228,229,246,97,128,9,75,231,245,234,225,242,225,244,105,128,10,203,112,145,0,112,149,251,152,123,152,134,152,143,152,155,154,80,154,90,155,82,156,101,156,191,156,217,157,92,157,100,158,2,158,60,158,88,158,98,97,14,150,25,150,57,150,67,150,74,150,81,150,129,150,140,150,154,150,165,150,212,150,226,151,238,152,21,152,111,97,2,150,31,150,43,237,240,243,243,241,245,225,242,101,128,51,128,243,229,238,244,239,243,241,245,225,242,101,128,51,43,226,229,238,231,225,236,105,128,9,170,227,245,244,101,128,30,85,228,229,246,97,128,9,42,103,2,150,87,150,105,101,2,150,93,150,100,228,239,247,110,128,33,223,245,112,128,33,222,117,2,150,111,150,120,234,225,242,225,244,105,128,10,170,242,237,245,235,232,105,128,10,42,232,233,242,225,231,225,238,97,128,48,113,233,249,225,238,238,239,233,244,232,225,105,128,14,47,235,225,244,225,235,225,238,97,128,48,209,108,2,150,171,150,196,225,244,225,236,233,250,225,244,233,239,238,227,249,242,233,236,236,233,227,227,237,98,128,4,132,239,227,232,235,225,227,249,242,233,236,236,233,99,128,4,192,238,243,233,239,243,235,239,242,229,225,110,128,49,127,114,3,150,234,150,255,151,227,97,2,150,240,150,248,231,242,225,240,104,128,0,182,236,236,229,108,128,34,37,229,110,2,151,6,151,116,236,229,230,116,136,0,40,151,29,151,44,151,49,151,54,151,65,151,77,151,100,151,105,225,236,244,239,238,229,225,242,225,226,233,99,128,253,62,226,116,128,248,237,229,120,128,248,236,233,238,230,229,242,233,239,114,128,32,141,237,239,238,239,243,240,225,227,101,128,255,8,115,2,151,83,151,90,237,225,236,108,128,254,89,245,240,229,242,233,239,114,128,32,125,244,112,128,248,235,246,229,242,244,233,227,225,108,128,254,53,242,233,231,232,116,136,0,41,151,140,151,155,151,160,151,165,151,176,151,188,151,211,151,216,225,236,244,239,238,229,225,242,225,226,233,99,128,253,63,226,116,128,248,248,229,120,128,248,247,233,238,230,229,242,233,239,114,128,32,142,237,239,238,239,243,240,225,227,101,128,255,9,115,2,151,194,151,201,237,225,236,108,128,254,90,245,240,229,242,233,239,114,128,32,126,244,112,128,248,246,246,229,242,244,233,227,225,108,128,254,54,244,233,225,236,228,233,230,102,128,34,2,115,3,151,246,152,1,152,13,229,241,232,229,226,242,229,119,128,5,192,232,244,225,232,229,226,242,229,119,128,5,153,241,245,225,242,101,128,51,169,244,225,104,134,5,183,152,39,152,53,152,58,152,67,152,82,152,98,49,2,152,45,152,49,49,128,5,183,100,128,5,183,178,97,128,5,183,232,229,226,242,229,119,128,5,183,238,225,242,242,239,247,232,229,226,242,229,119,128,5,183,241,245,225,242,244,229,242,232,229,226,242,229,119,128,5,183,247,233,228,229,232,229,226,242,229,119,128,5,183,250,229,242,232,229,226,242,229,119,128,5,161,226,239,240,239,237,239,230,111,128,49,6,227,233,242,227,236,101,128,36,223,228,239,244,225,227,227,229,238,116,128,30,87,101,137,5,228,152,177,152,188,152,208,152,220,152,240,153,86,153,97,153,118,154,73,227,249,242,233,236,236,233,99,128,4,63,228,225,231,229,243,104,129,251,68,152,199,232,229,226,242,229,119,128,251,68,229,250,233,243,241,245,225,242,101,128,51,59,230,233,238,225,236,228,225,231,229,243,232,232,229,226,242,229,119,128,251,67,104,5,152,252,153,19,153,27,153,41,153,71,225,114,2,153,3,153,10,225,226,233,99,128,6,126,237,229,238,233,225,110,128,5,122,229,226,242,229,119,128,5,228,230,233,238,225,236,225,242,225,226,233,99,128,251,87,105,2,153,47,153,62,238,233,244,233,225,236,225,242,225,226,233,99,128,251,88,242,225,231,225,238,97,128,48,122,237,229,228,233,225,236,225,242,225,226,233,99,128,251,89,235,225,244,225,235,225,238,97,128,48,218,237,233,228,228,236,229,232,239,239,235,227,249,242,233,236,236,233,99,128,4,167,114,5,153,130,153,142,153,184,154,49,154,62,225,230,229,232,229,226,242,229,119,128,251,78,227,229,238,116,131,0,37,153,155,153,164,153,176,225,242,225,226,233,99,128,6,106,237,239,238,239,243,240,225,227,101,128,255,5,243,237,225,236,108,128,254,106,105,2,153,190,154,31,239,100,134,0,46,153,207,153,218,153,229,153,241,153,252,154,8,225,242,237,229,238,233,225,110,128,5,137,227,229,238,244,229,242,229,100,128,0,183,232,225,236,230,247,233,228,244,104,128,255,97,233,238,230,229,242,233,239,114,128,246,231,237,239,238,239,243,240,225,227,101,128,255,14,115,2,154,14,154,21,237,225,236,108,128,254,82,245,240,229,242,233,239,114,128,246,232,243,240,239,237,229,238,233,231,242,229,229,235,227,237,98,128,3,66,240,229,238,228,233,227,245,236,225,114,128,34,165,244,232,239,245,243,225,238,100,128,32,48,243,229,244,97,128,32,167,230,243,241,245,225,242,101,128,51,138,104,3,154,98,154,148,155,29,97,3,154,106,154,116,154,123,226,229,238,231,225,236,105,128,9,171,228,229,246,97,128,9,43,231,117,2,154,130,154,139,234,225,242,225,244,105,128,10,171,242,237,245,235,232,105,128,10,43,105,133,3,198,154,162,154,166,154,252,155,4,155,15,49,128,3,213,229,245,240,104,4,154,179,154,214,154,229,154,238,97,2,154,185,154,200,227,233,242,227,236,229,235,239,242,229,225,110,128,50,122,240,225,242,229,238,235,239,242,229,225,110,128,50,26,227,233,242,227,236,229,235,239,242,229,225,110,128,50,108,235,239,242,229,225,110,128,49,77,240,225,242,229,238,235,239,242,229,225,110,128,50,12,236,225,244,233,110,128,2,120,238,244,232,245,244,232,225,105,128,14,58,243,249,237,226,239,236,231,242,229,229,107,128,3,213,111,3,155,37,155,42,155,68,239,107,128,1,165,240,104,2,155,49,155,58,225,238,244,232,225,105,128,14,30,245,238,231,244,232,225,105,128,14,28,243,225,237,240,232,225,239,244,232,225,105,128,14,32,105,133,3,192,155,96,156,52,156,63,156,74,156,88,229,245,112,6,155,112,155,147,155,179,155,207,155,221,156,17,97,2,155,118,155,133,227,233,242,227,236,229,235,239,242,229,225,110,128,50,115,240,225,242,229,238,235,239,242,229,225,110,128,50,19,227,105,2,155,154,155,166,229,245,227,235,239,242,229,225,110,128,49,118,242,227,236,229,235,239,242,229,225,110,128,50,101,107,2,155,185,155,199,233,249,229,239,235,235,239,242,229,225,110,128,49,114,239,242,229,225,110,128,49,66,240,225,242,229,238,235,239,242,229,225,110,128,50,5,243,233,239,115,2,155,230,156,2,107,2,155,236,155,250,233,249,229,239,235,235,239,242,229,225,110,128,49,116,239,242,229,225,110,128,49,68,244,233,235,229,245,244,235,239,242,229,225,110,128,49,117,116,2,156,23,156,38,232,233,229,245,244,232,235,239,242,229,225,110,128,49,119,233,235,229,245,244,235,239,242,229,225,110,128,49,115,232,233,242,225,231,225,238,97,128,48,116,235,225,244,225,235,225,238,97,128,48,212,243,249,237,226,239,236,231,242,229,229,107,128,3,214,247,242,225,242,237,229,238,233,225,110,128,5,131,236,245,115,132,0,43,156,115,156,126,156,135,156,168,226,229,236,239,247,227,237,98,128,3,31,227,233,242,227,236,101,128,34,149,109,2,156,141,156,148,233,238,245,115,128,0,177,111,2,156,154,156,158,100,128,2,214,238,239,243,240,225,227,101,128,255,11,115,2,156,174,156,181,237,225,236,108,128,254,98,245,240,229,242,233,239,114,128,32,122,109,2,156,197,156,208,239,238,239,243,240,225,227,101,128,255,80,243,241,245,225,242,101,128,51,216,111,5,156,229,156,240,157,51,157,62,157,72,232,233,242,225,231,225,238,97,128,48,125,233,238,244,233,238,231,233,238,228,229,120,4,157,4,157,16,157,28,157,41,228,239,247,238,247,232,233,244,101,128,38,31,236,229,230,244,247,232,233,244,101,128,38,28,242,233,231,232,244,247,232,233,244,101,128,38,30,245,240,247,232,233,244,101,128,38,29,235,225,244,225,235,225,238,97,128,48,221,240,236,225,244,232,225,105,128,14,27,243,244,225,236,237,225,242,107,129,48,18,157,85,230,225,227,101,128,48,32,240,225,242,229,110,128,36,171,114,3,157,108,157,134,157,159,101,2,157,114,157,122,227,229,228,229,115,128,34,122,243,227,242,233,240,244,233,239,110,128,33,30,233,237,101,2,157,142,157,148,237,239,100,128,2,185,242,229,246,229,242,243,229,100,128,32,53,111,4,157,169,157,176,157,186,157,199,228,245,227,116,128,34,15,234,229,227,244,233,246,101,128,35,5,236,239,238,231,229,228,235,225,238,97,128,48,252,112,2,157,205,157,242,101,2,157,211,157,218,236,236,239,114,128,35,24,242,243,117,2,157,226,157,233,226,243,229,116,128,34,130,240,229,242,243,229,116,128,34,131,239,242,244,233,239,110,129,34,55,157,253,225,108,128,34,29,115,2,158,8,158,51,105,130,3,200,158,16,158,27,227,249,242,233,236,236,233,99,128,4,113,236,233,240,238,229,245,237,225,244,225,227,249,242,233,236,236,233,227,227,237,98,128,4,134,243,241,245,225,242,101,128,51,176,117,2,158,66,158,77,232,233,242,225,231,225,238,97,128,48,119,235,225,244,225,235,225,238,97,128,48,215,246,243,241,245,225,242,101,128,51,180,247,243,241,245,225,242,101,128,51,186,113,136,0,113,158,128,159,177,159,188,159,197,159,204,159,216,159,254,160,6,97,4,158,138,158,161,158,225,159,160,100,2,158,144,158,150,229,246,97,128,9,88,237,225,232,229,226,242,229,119,128,5,168,102,4,158,171,158,180,158,194,158,210,225,242,225,226,233,99,128,6,66,230,233,238,225,236,225,242,225,226,233,99,128,254,214,233,238,233,244,233,225,236,225,242,225,226,233,99,128,254,215,237,229,228,233,225,236,225,242,225,226,233,99,128,254,216,237,225,244,115,136,5,184,158,248,159,12,159,26,159,31,159,36,159,45,159,60,159,147,49,3,159,0,159,4,159,8,48,128,5,184,97,128,5,184,99,128,5,184,50,2,159,18,159,22,55,128,5,184,57,128,5,184,179,51,128,5,184,228,101,128,5,184,232,229,226,242,229,119,128,5,184,238,225,242,242,239,247,232,229,226,242,229,119,128,5,184,113,2,159,66,159,132,225,244,225,110,4,159,79,159,88,159,103,159,119,232,229,226,242,229,119,128,5,184,238,225,242,242,239,247,232,229,226,242,229,119,128,5,184,241,245,225,242,244,229,242,232,229,226,242,229,119,128,5,184,247,233,228,229,232,229,226,242,229,119,128,5,184,245,225,242,244,229,242,232,229,226,242,229,119,128,5,184,247,233,228,229,232,229,226,242,229,119,128,5,184,242,238,229,249,240,225,242,225,232,229,226,242,229,119,128,5,159,226,239,240,239,237,239,230,111,128,49,17,227,233,242,227,236,101,128,36,224,232,239,239,107,128,2,160,237,239,238,239,243,240,225,227,101,128,255,81,239,102,130,5,231,159,225,159,245,228,225,231,229,243,104,129,251,71,159,236,232,229,226,242,229,119,128,251,71,232,229,226,242,229,119,128,5,231,240,225,242,229,110,128,36,172,117,4,160,16,160,28,160,117,160,204,225,242,244,229,242,238,239,244,101,128,38,105,226,245,244,115,135,5,187,160,49,160,54,160,59,160,64,160,73,160,88,160,104,177,56,128,5,187,178,53,128,5,187,179,49,128,5,187,232,229,226,242,229,119,128,5,187,238,225,242,242,239,247,232,229,226,242,229,119,128,5,187,241,245,225,242,244,229,242,232,229,226,242,229,119,128,5,187,247,233,228,229,232,229,226,242,229,119,128,5,187,229,243,244,233,239,110,133,0,63,160,136,160,159,160,176,160,184,160,196,225,114,2,160,143,160,150,225,226,233,99,128,6,31,237,229,238,233,225,110,128,5,94,228,239,247,110,129,0,191,160,168,243,237,225,236,108,128,247,191,231,242,229,229,107,128,3,126,237,239,238,239,243,240,225,227,101,128,255,31,243,237,225,236,108,128,247,63,239,244,101,4,160,216,161,31,161,51,161,80,228,226,108,133,0,34,160,232,160,239,160,246,161,2,161,23,226,225,243,101,128,32,30,236,229,230,116,128,32,28,237,239,238,239,243,240,225,227,101,128,255,2,240,242,233,237,101,129,48,30,161,12,242,229,246,229,242,243,229,100,128,48,29,242,233,231,232,116,128,32,29,236,229,230,116,129,32,24,161,40,242,229,246,229,242,243,229,100,128,32,27,114,2,161,57,161,67,229,246,229,242,243,229,100,128,32,27,233,231,232,116,129,32,25,161,76,110,128,1,73,243,233,238,231,108,2,161,90,161,97,226,225,243,101,128,32,26,101,129,0,39,161,103,237,239,238,239,243,240,225,227,101,128,255,7,114,145,0,114,161,153,162,157,162,168,162,215,163,10,164,27,164,51,164,146,166,180,166,217,166,229,167,27,167,35,167,197,167,208,167,243,168,87,97,11,161,177,161,188,161,198,161,205,162,14,162,30,162,55,162,66,162,91,162,114,162,151,225,242,237,229,238,233,225,110,128,5,124,226,229,238,231,225,236,105,128,9,176,227,245,244,101,128,1,85,100,4,161,215,161,221,161,235,162,5,229,246,97,128,9,48,233,227,225,108,129,34,26,161,230,229,120,128,248,229,239,246,229,242,243,243,241,245,225,242,101,129,51,174,161,251,228,243,241,245,225,242,101,128,51,175,243,241,245,225,242,101,128,51,173,230,101,129,5,191,162,21,232,229,226,242,229,119,128,5,191,231,117,2,162,37,162,46,234,225,242,225,244,105,128,10,176,242,237,245,235,232,105,128,10,48,232,233,242,225,231,225,238,97,128,48,137,235,225,244,225,235,225,238,97,129,48,233,162,79,232,225,236,230,247,233,228,244,104,128,255,151,236,239,247,229,242,228,233,225,231,239,238,225,236,226,229,238,231,225,236,105,128,9,241,109,2,162,120,162,143,233,228,228,236,229,228,233,225,231,239,238,225,236,226,229,238,231,225,236,105,128,9,240,243,232,239,242,110,128,2,100,244,233,111,128,34,54,226,239,240,239,237,239,230,111,128,49,22,99,4,162,178,162,185,162,194,162,202,225,242,239,110,128,1,89,229,228,233,236,236,97,128,1,87,233,242,227,236,101,128,36,225,239,237,237,225,225,227,227,229,238,116,128,1,87,100,2,162,221,162,231,226,236,231,242,225,246,101,128,2,17,239,116,2,162,238,162,247,225,227,227,229,238,116,128,30,89,226,229,236,239,119,129,30,91,163,1,237,225,227,242,239,110,128,30,93,101,6,163,24,163,69,163,104,163,159,163,184,163,217,102,2,163,30,163,43,229,242,229,238,227,229,237,225,242,107,128,32,59,236,229,248,243,117,2,163,53,163,60,226,243,229,116,128,34,134,240,229,242,243,229,116,128,34,135,231,233,243,244,229,114,2,163,80,163,85,229,100,128,0,174,115,2,163,91,163,97,225,238,115,128,248,232,229,242,233,102,128,246,218,104,3,163,112,163,135,163,149,225,114,2,163,119,163,126,225,226,233,99,128,6,49,237,229,238,233,225,110,128,5,128,230,233,238,225,236,225,242,225,226,233,99,128,254,174,233,242,225,231,225,238,97,128,48,140,235,225,244,225,235,225,238,97,129,48,236,163,172,232,225,236,230,247,233,228,244,104,128,255,154,243,104,130,5,232,163,193,163,208,228,225,231,229,243,232,232,229,226,242,229,119,128,251,72,232,229,226,242,229,119,128,5,232,118,3,163,225,163,238,164,14,229,242,243,229,228,244,233,236,228,101,128,34,61,233,97,2,163,245,163,254,232,229,226,242,229,119,128,5,151,237,245,231,242,225,243,232,232,229,226,242,229,119,128,5,151,236,239,231,233,227,225,236,238,239,116,128,35,16,230,233,243,232,232,239,239,107,129,2,126,164,40,242,229,246,229,242,243,229,100,128,2,127,104,2,164,57,164,80,97,2,164,63,164,73,226,229,238,231,225,236,105,128,9,221,228,229,246,97,128,9,93,111,131,3,193,164,90,164,119,164,133,239,107,129,2,125,164,97,244,245,242,238,229,100,129,2,123,164,108,243,245,240,229,242,233,239,114,128,2,181,243,249,237,226,239,236,231,242,229,229,107,128,3,241,244,233,227,232,239,239,235,237,239,100,128,2,222,105,6,164,160,165,204,165,250,166,5,166,30,166,166,229,245,108,9,164,182,164,217,164,232,164,246,165,36,165,50,165,136,165,149,165,184,97,2,164,188,164,203,227,233,242,227,236,229,235,239,242,229,225,110,128,50,113,240,225,242,229,238,235,239,242,229,225,110,128,50,17,227,233,242,227,236,229,235,239,242,229,225,110,128,50,99,232,233,229,245,232,235,239,242,229,225,110,128,49,64,107,2,164,252,165,28,233,249,229,239,107,2,165,6,165,15,235,239,242,229,225,110,128,49,58,243,233,239,243,235,239,242,229,225,110,128,49,105,239,242,229,225,110,128,49,57,237,233,229,245,237,235,239,242,229,225,110,128,49,59,112,3,165,58,165,90,165,105,97,2,165,64,165,78,238,243,233,239,243,235,239,242,229,225,110,128,49,108,242,229,238,235,239,242,229,225,110,128,50,3,232,233,229,245,240,232,235,239,242,229,225,110,128,49,63,233,229,245,112,2,165,114,165,123,235,239,242,229,225,110,128,49,60,243,233,239,243,235,239,242,229,225,110,128,49,107,243,233,239,243,235,239,242,229,225,110,128,49,61,116,2,165,155,165,170,232,233,229,245,244,232,235,239,242,229,225,110,128,49,62,233,235,229,245,244,235,239,242,229,225,110,128,49,106,249,229,239,242,233,238,232,233,229,245,232,235,239,242,229,225,110,128,49,109,231,232,116,2,165,212,165,220,225,238,231,236,101,128,34,31,116,2,165,226,165,240,225,227,235,226,229,236,239,247,227,237,98,128,3,25,242,233,225,238,231,236,101,128,34,191,232,233,242,225,231,225,238,97,128,48,138,235,225,244,225,235,225,238,97,129,48,234,166,18,232,225,236,230,247,233,228,244,104,128,255,152,110,2,166,36,166,152,103,131,2,218,166,46,166,57,166,63,226,229,236,239,247,227,237,98,128,3,37,227,237,98,128,3,10,232,225,236,102,2,166,72,166,118,236,229,230,116,131,2,191,166,85,166,96,166,107,225,242,237,229,238,233,225,110,128,5,89,226,229,236,239,247,227,237,98,128,3,28,227,229,238,244,229,242,229,100,128,2,211,242,233,231,232,116,130,2,190,166,130,166,141,226,229,236,239,247,227,237,98,128,3,57,227,229,238,244,229,242,229,100,128,2,210,246,229,242,244,229,228,226,242,229,246,101,128,2,19,244,244,239,242,245,243,241,245,225,242,101,128,51,81,108,2,166,186,166,197,233,238,229,226,229,236,239,119,128,30,95,239,238,231,236,229,103,129,2,124,166,208,244,245,242,238,229,100,128,2,122,237,239,238,239,243,240,225,227,101,128,255,82,111,3,166,237,166,248,167,17,232,233,242,225,231,225,238,97,128,48,141,235,225,244,225,235,225,238,97,129,48,237,167,5,232,225,236,230,247,233,228,244,104,128,255,155,242,245,225,244,232,225,105,128,14,35,240,225,242,229,110,128,36,173,114,3,167,43,167,79,167,109,97,3,167,51,167,61,167,68,226,229,238,231,225,236,105,128,9,220,228,229,246,97,128,9,49,231,245,242,237,245,235,232,105,128,10,92,229,104,2,167,86,167,95,225,242,225,226,233,99,128,6,145,230,233,238,225,236,225,242,225,226,233,99,128,251,141,246,239,227,225,236,233,99,4,167,125,167,135,167,142,167,153,226,229,238,231,225,236,105,128,9,224,228,229,246,97,128,9,96,231,245,234,225,242,225,244,105,128,10,224,246,239,247,229,236,243,233,231,110,3,167,169,167,179,167,186,226,229,238,231,225,236,105,128,9,196,228,229,246,97,128,9,68,231,245,234,225,242,225,244,105,128,10,196,243,245,240,229,242,233,239,114,128,246,241,116,2,167,214,167,222,226,236,239,227,107,128,37,144,245,242,238,229,100,129,2,121,167,232,243,245,240,229,242,233,239,114,128,2,180,117,4,167,253,168,8,168,33,168,80,232,233,242,225,231,225,238,97,128,48,139,235,225,244,225,235,225,238,97,129,48,235,168,21,232,225,236,230,247,233,228,244,104,128,255,153,112,2,168,39,168,74,229,101,2,168,46,168,60,237,225,242,235,226,229,238,231,225,236,105,128,9,242,243,233,231,238,226,229,238,231,225,236,105,128,9,243,233,225,104,128,246,221,244,232,225,105,128,14,36,246,239,227,225,236,233,99,4,168,103,168,113,168,120,168,131,226,229,238,231,225,236,105,128,9,139,228,229,246,97,128,9,11,231,245,234,225,242,225,244,105,128,10,139,246,239,247,229,236,243,233,231,110,3,168,147,168,157,168,164,226,229,238,231,225,236,105,128,9,195,228,229,246,97,128,9,67,231,245,234,225,242,225,244,105,128,10,195,115,147,0,115,168,217,170,187,170,198,171,68,171,107,174,49,174,60,176,203,179,85,179,131,179,158,180,93,180,160,181,193,181,203,182,133,182,206,183,120,183,130,97,9,168,237,168,247,169,12,169,84,169,109,169,120,169,145,169,177,169,217,226,229,238,231,225,236,105,128,9,184,227,245,244,101,129,1,91,169,0,228,239,244,225,227,227,229,238,116,128,30,101,100,5,169,24,169,33,169,39,169,53,169,69,225,242,225,226,233,99,128,6,53,229,246,97,128,9,56,230,233,238,225,236,225,242,225,226,233,99,128,254,186,233,238,233,244,233,225,236,225,242,225,226,233,99,128,254,187,237,229,228,233,225,236,225,242,225,226,233,99,128,254,188,231,117,2,169,91,169,100,234,225,242,225,244,105,128,10,184,242,237,245,235,232,105,128,10,56,232,233,242,225,231,225,238,97,128,48,85,235,225,244,225,235,225,238,97,129,48,181,169,133,232,225,236,230,247,233,228,244,104,128,255,123,236,236,225,236,236,225,232,239,245,225,236,225,249,232,229,247,225,243,225,236,236,225,237,225,242,225,226,233,99,128,253,250,237,229,235,104,130,5,225,169,188,169,208,228,225,231,229,243,104,129,251,65,169,199,232,229,226,242,229,119,128,251,65,232,229,226,242,229,119,128,5,225,242,97,5,169,230,170,48,170,56,170,106,170,114,97,5,169,242,169,250,170,2,170,33,170,41,225,244,232,225,105,128,14,50,229,244,232,225,105,128,14,65,233,237,225,233,109,2,170,12,170,23,225,236,225,233,244,232,225,105,128,14,68,245,225,238,244,232,225,105,128,14,67,237,244,232,225,105,128,14,51,244,232,225,105,128,14,48,229,244,232,225,105,128,14,64,105,3,170,64,170,88,170,99,105,2,170,70,170,81,236,229,230,244,244,232,225,105,128,248,134,244,232,225,105,128,14,53,236,229,230,244,244,232,225,105,128,248,133,244,232,225,105,128,14,52,239,244,232,225,105,128,14,66,117,3,170,122,170,172,170,179,101,3,170,130,170,154,170,165,101,2,170,136,170,147,236,229,230,244,244,232,225,105,128,248,136,244,232,225,105,128,14,55,236,229,230,244,244,232,225,105,128,248,135,244,232,225,105,128,14,54,244,232,225,105,128,14,56,245,244,232,225,105,128,14,57,226,239,240,239,237,239,230,111,128,49,25,99,5,170,210,170,231,170,240,171,33,171,55,225,242,239,110,129,1,97,170,219,228,239,244,225,227,227,229,238,116,128,30,103,229,228,233,236,236,97,128,1,95,232,247,97,131,2,89,170,252,171,7,171,26,227,249,242,233,236,236,233,99,128,4,217,228,233,229,242,229,243,233,243,227,249,242,233,236,236,233,99,128,4,219,232,239,239,107,128,2,90,233,242,99,2,171,41,171,46,236,101,128,36,226,245,237,230,236,229,120,128,1,93,239,237,237,225,225,227,227,229,238,116,128,2,25,228,239,116,2,171,76,171,85,225,227,227,229,238,116,128,30,97,226,229,236,239,119,129,30,99,171,95,228,239,244,225,227,227,229,238,116,128,30,105,101,9,171,127,171,143,171,178,171,243,172,90,172,117,172,142,172,223,172,250,225,231,245,236,236,226,229,236,239,247,227,237,98,128,3,60,99,2,171,149,171,171,239,238,100,129,32,51,171,157,244,239,238,229,227,232,233,238,229,243,101,128,2,202,244,233,239,110,128,0,167,229,110,4,171,189,171,198,171,212,171,228,225,242,225,226,233,99,128,6,51,230,233,238,225,236,225,242,225,226,233,99,128,254,178,233,238,233,244,233,225,236,225,242,225,226,233,99,128,254,179,237,229,228,233,225,236,225,242,225,226,233,99,128,254,180,231,239,108,135,5,182,172,7,172,21,172,26,172,35,172,50,172,66,172,77,49,2,172,13,172,17,51,128,5,182,102,128,5,182,178,99,128,5,182,232,229,226,242,229,119,128,5,182,238,225,242,242,239,247,232,229,226,242,229,119,128,5,182,241,245,225,242,244,229,242,232,229,226,242,229,119,128,5,182,244,225,232,229,226,242,229,119,128,5,146,247,233,228,229,232,229,226,242,229,119,128,5,182,104,2,172,96,172,107,225,242,237,229,238,233,225,110,128,5,125,233,242,225,231,225,238,97,128,48,91,235,225,244,225,235,225,238,97,129,48,187,172,130,232,225,236,230,247,233,228,244,104,128,255,126,237,105,2,172,149,172,192,227,239,236,239,110,131,0,59,172,163,172,172,172,184,225,242,225,226,233,99,128,6,27,237,239,238,239,243,240,225,227,101,128,255,27,243,237,225,236,108,128,254,84,246,239,233,227,229,228,237,225,242,235,235,225,238,97,129,48,156,172,211,232,225,236,230,247,233,228,244,104,128,255,159,238,116,2,172,230,172,240,233,243,241,245,225,242,101,128,51,34,239,243,241,245,225,242,101,128,51,35,246,229,110,142,0,55,173,28,173,37,173,47,173,77,173,84,173,94,173,119,173,146,173,180,173,192,173,203,173,236,173,244,173,255,225,242,225,226,233,99,128,6,103,226,229,238,231,225,236,105,128,9,237,227,233,242,227,236,101,129,36,102,173,58,233,238,246,229,242,243,229,243,225,238,243,243,229,242,233,102,128,39,144,228,229,246,97,128,9,109,229,233,231,232,244,232,115,128,33,94,231,117,2,173,101,173,110,234,225,242,225,244,105,128,10,237,242,237,245,235,232,105,128,10,109,232,97,2,173,126,173,137,227,235,225,242,225,226,233,99,128,6,103,238,231,250,232,239,117,128,48,39,105,2,173,152,173,170,228,229,239,231,242,225,240,232,233,227,240,225,242,229,110,128,50,38,238,230,229,242,233,239,114,128,32,135,237,239,238,239,243,240,225,227,101,128,255,23,239,236,228,243,244,249,236,101,128,247,55,112,2,173,209,173,216,225,242,229,110,128,36,122,229,114,2,173,223,173,229,233,239,100,128,36,142,243,233,225,110,128,6,247,242,239,237,225,110,128,33,118,243,245,240,229,242,233,239,114,128,32,119,116,2,174,5,174,43,229,229,110,2,174,13,174,22,227,233,242,227,236,101,128,36,112,112,2,174,28,174,35,225,242,229,110,128,36,132,229,242,233,239,100,128,36,152,232,225,105,128,14,87,230,244,232,249,240,232,229,110,128,0,173,104,7,174,76,175,50,175,61,175,75,176,20,176,33,176,197,97,6,174,90,174,101,174,111,174,122,175,9,175,34,225,242,237,229,238,233,225,110,128,5,119,226,229,238,231,225,236,105,128,9,182,227,249,242,233,236,236,233,99,128,4,72,100,2,174,128,174,224,228,97,4,174,139,174,148,174,179,174,193,225,242,225,226,233,99,128,6,81,228,225,237,237,97,2,174,158,174,167,225,242,225,226,233,99,128,252,97,244,225,238,225,242,225,226,233,99,128,252,94,230,225,244,232,225,225,242,225,226,233,99,128,252,96,235,225,243,242,97,2,174,203,174,212,225,242,225,226,233,99,128,252,98,244,225,238,225,242,225,226,233,99,128,252,95,101,132,37,146,174,236,174,243,174,251,175,4,228,225,242,107,128,37,147,236,233,231,232,116,128,37,145,237,229,228,233,245,109,128,37,146,246,97,128,9,54,231,117,2,175,16,175,25,234,225,242,225,244,105,128,10,182,242,237,245,235,232,105,128,10,54,236,243,232,229,236,229,244,232,229,226,242,229,119,128,5,147,226,239,240,239,237,239,230,111,128,49,21,227,232,225,227,249,242,233,236,236,233,99,128,4,73,101,4,175,85,175,150,175,160,175,177,229,110,4,175,96,175,105,175,119,175,135,225,242,225,226,233,99,128,6,52,230,233,238,225,236,225,242,225,226,233,99,128,254,182,233,238,233,244,233,225,236,225,242,225,226,233,99,128,254,183,237,229,228,233,225,236,225,242,225,226,233,99,128,254,184,233,227,239,240,244,233,99,128,3,227,241,229,108,129,32,170,175,168,232,229,226,242,229,119,128,32,170,246,97,134,5,176,175,194,175,209,175,223,175,232,175,247,176,7,49,2,175,200,175,205,177,53,128,5,176,53,128,5,176,50,2,175,215,175,219,50,128,5,176,101,128,5,176,232,229,226,242,229,119,128,5,176,238,225,242,242,239,247,232,229,226,242,229,119,128,5,176,241,245,225,242,244,229,242,232,229,226,242,229,119,128,5,176,247,233,228,229,232,229,226,242,229,119,128,5,176,232,225,227,249,242,233,236,236,233,99,128,4,187,105,2,176,39,176,50,237,225,227,239,240,244,233,99,128,3,237,110,131,5,233,176,60,176,143,176,152,100,2,176,66,176,132,225,231,229,243,104,130,251,73,176,78,176,87,232,229,226,242,229,119,128,251,73,115,2,176,93,176,113,232,233,238,228,239,116,129,251,44,176,104,232,229,226,242,229,119,128,251,44,233,238,228,239,116,129,251,45,176,123,232,229,226,242,229,119,128,251,45,239,244,232,229,226,242,229,119,128,5,193,232,229,226,242,229,119,128,5,233], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+71680);
/* memory initializer */ allocate([115,2,176,158,176,178,232,233,238,228,239,116,129,251,42,176,169,232,229,226,242,229,119,128,251,42,233,238,228,239,116,129,251,43,176,188,232,229,226,242,229,119,128,251,43,239,239,107,128,2,130,105,8,176,221,177,9,177,20,177,45,177,75,177,83,177,96,178,11,231,237,97,131,3,195,176,233,176,237,176,245,49,128,3,194,230,233,238,225,108,128,3,194,236,245,238,225,244,229,243,249,237,226,239,236,231,242,229,229,107,128,3,242,232,233,242,225,231,225,238,97,128,48,87,235,225,244,225,235,225,238,97,129,48,183,177,33,232,225,236,230,247,233,228,244,104,128,255,124,236,245,113,2,177,53,177,62,232,229,226,242,229,119,128,5,189,236,229,230,244,232,229,226,242,229,119,128,5,189,237,233,236,225,114,128,34,60,238,228,239,244,232,229,226,242,229,119,128,5,194,239,115,6,177,111,177,146,177,178,177,206,177,220,177,252,97,2,177,117,177,132,227,233,242,227,236,229,235,239,242,229,225,110,128,50,116,240,225,242,229,238,235,239,242,229,225,110,128,50,20,227,105,2,177,153,177,165,229,245,227,235,239,242,229,225,110,128,49,126,242,227,236,229,235,239,242,229,225,110,128,50,102,107,2,177,184,177,198,233,249,229,239,235,235,239,242,229,225,110,128,49,122,239,242,229,225,110,128,49,69,238,233,229,245,238,235,239,242,229,225,110,128,49,123,112,2,177,226,177,239,225,242,229,238,235,239,242,229,225,110,128,50,6,233,229,245,240,235,239,242,229,225,110,128,49,125,244,233,235,229,245,244,235,239,242,229,225,110,128,49,124,120,141,0,54,178,41,178,50,178,60,178,90,178,97,178,122,178,149,178,183,178,195,178,206,178,239,178,247,179,2,225,242,225,226,233,99,128,6,102,226,229,238,231,225,236,105,128,9,236,227,233,242,227,236,101,129,36,101,178,71,233,238,246,229,242,243,229,243,225,238,243,243,229,242,233,102,128,39,143,228,229,246,97,128,9,108,231,117,2,178,104,178,113,234,225,242,225,244,105,128,10,236,242,237,245,235,232,105,128,10,108,232,97,2,178,129,178,140,227,235,225,242,225,226,233,99,128,6,102,238,231,250,232,239,117,128,48,38,105,2,178,155,178,173,228,229,239,231,242,225,240,232,233,227,240,225,242,229,110,128,50,37,238,230,229,242,233,239,114,128,32,134,237,239,238,239,243,240,225,227,101,128,255,22,239,236,228,243,244,249,236,101,128,247,54,112,2,178,212,178,219,225,242,229,110,128,36,121,229,114,2,178,226,178,232,233,239,100,128,36,141,243,233,225,110,128,6,246,242,239,237,225,110,128,33,117,243,245,240,229,242,233,239,114,128,32,118,116,2,179,8,179,79,229,229,110,2,179,16,179,58,99,2,179,22,179,30,233,242,227,236,101,128,36,111,245,242,242,229,238,227,249,228,229,238,239,237,233,238,225,244,239,242,226,229,238,231,225,236,105,128,9,249,112,2,179,64,179,71,225,242,229,110,128,36,131,229,242,233,239,100,128,36,151,232,225,105,128,14,86,108,2,179,91,179,111,225,243,104,129,0,47,179,99,237,239,238,239,243,240,225,227,101,128,255,15,239,238,103,129,1,127,179,119,228,239,244,225,227,227,229,238,116,128,30,155,109,2,179,137,179,147,233,236,229,230,225,227,101,128,38,58,239,238,239,243,240,225,227,101,128,255,83,111,6,179,172,179,222,179,233,180,2,180,47,180,58,102,2,179,178,179,192,240,225,243,245,241,232,229,226,242,229,119,128,5,195,116,2,179,198,179,207,232,249,240,232,229,110,128,0,173,243,233,231,238,227,249,242,233,236,236,233,99,128,4,76,232,233,242,225,231,225,238,97,128,48,93,235,225,244,225,235,225,238,97,129,48,189,179,246,232,225,236,230,247,233,228,244,104,128,255,127,236,233,228,245,115,2,180,12,180,29,236,239,238,231,239,246,229,242,236,225,249,227,237,98,128,3,56,243,232,239,242,244,239,246,229,242,236,225,249,227,237,98,128,3,55,242,245,243,233,244,232,225,105,128,14,41,115,3,180,66,180,76,180,84,225,236,225,244,232,225,105,128,14,40,239,244,232,225,105,128,14,11,245,225,244,232,225,105,128,14,42,240,97,3,180,102,180,122,180,154,227,101,129,0,32,180,109,232,225,227,235,225,242,225,226,233,99,128,0,32,228,101,129,38,96,180,129,243,245,233,116,2,180,138,180,146,226,236,225,227,107,128,38,96,247,232,233,244,101,128,38,100,242,229,110,128,36,174,241,245,225,242,101,11,180,188,180,199,180,213,180,238,180,255,181,25,181,40,181,73,181,100,181,156,181,171,226,229,236,239,247,227,237,98,128,3,59,99,2,180,205,180,209,99,128,51,196,109,128,51,157,228,233,225,231,239,238,225,236,227,242,239,243,243,232,225,244,227,232,230,233,236,108,128,37,169,232,239,242,233,250,239,238,244,225,236,230,233,236,108,128,37,164,107,2,181,5,181,9,103,128,51,143,109,129,51,158,181,15,227,225,240,233,244,225,108,128,51,206,108,2,181,31,181,35,110,128,51,209,239,103,128,51,210,109,4,181,50,181,54,181,59,181,63,103,128,51,142,233,108,128,51,213,109,128,51,156,243,241,245,225,242,229,100,128,51,161,239,242,244,232,239,231,239,238,225,236,227,242,239,243,243,232,225,244,227,232,230,233,236,108,128,37,166,245,240,240,229,114,2,181,110,181,133,236,229,230,244,244,239,236,239,247,229,242,242,233,231,232,244,230,233,236,108,128,37,167,242,233,231,232,244,244,239,236,239,247,229,242,236,229,230,244,230,233,236,108,128,37,168,246,229,242,244,233,227,225,236,230,233,236,108,128,37,165,247,232,233,244,229,247,233,244,232,243,237,225,236,236,226,236,225,227,107,128,37,163,242,243,241,245,225,242,101,128,51,219,115,2,181,209,182,123,97,4,181,219,181,229,181,236,181,247,226,229,238,231,225,236,105,128,9,183,228,229,246,97,128,9,55,231,245,234,225,242,225,244,105,128,10,183,238,103,8,182,10,182,24,182,38,182,52,182,67,182,81,182,95,182,108,227,233,229,245,227,235,239,242,229,225,110,128,49,73,232,233,229,245,232,235,239,242,229,225,110,128,49,133,233,229,245,238,231,235,239,242,229,225,110,128,49,128,235,233,249,229,239,235,235,239,242,229,225,110,128,49,50,238,233,229,245,238,235,239,242,229,225,110,128,49,101,240,233,229,245,240,235,239,242,229,225,110,128,49,67,243,233,239,243,235,239,242,229,225,110,128,49,70,244,233,235,229,245,244,235,239,242,229,225,110,128,49,56,245,240,229,242,233,239,114,128,246,242,116,2,182,139,182,162,229,242,236,233,238,103,129,0,163,182,150,237,239,238,239,243,240,225,227,101,128,255,225,242,239,235,101,2,182,171,182,188,236,239,238,231,239,246,229,242,236,225,249,227,237,98,128,3,54,243,232,239,242,244,239,246,229,242,236,225,249,227,237,98,128,3,53,117,7,182,222,182,254,183,20,183,31,183,72,183,82,183,86,226,243,229,116,130,34,130,182,233,182,244,238,239,244,229,241,245,225,108,128,34,138,239,242,229,241,245,225,108,128,34,134,99,2,183,4,183,12,227,229,229,228,115,128,34,123,232,244,232,225,116,128,34,11,232,233,242,225,231,225,238,97,128,48,89,107,2,183,37,183,61,225,244,225,235,225,238,97,129,48,185,183,49,232,225,236,230,247,233,228,244,104,128,255,125,245,238,225,242,225,226,233,99,128,6,82,237,237,225,244,233,239,110,128,34,17,110,128,38,60,240,229,242,243,229,116,130,34,131,183,99,183,110,238,239,244,229,241,245,225,108,128,34,139,239,242,229,241,245,225,108,128,34,135,246,243,241,245,225,242,101,128,51,220,249,239,245,247,225,229,242,225,243,241,245,225,242,101,128,51,124,116,144,0,116,183,183,184,192,184,213,185,100,185,140,187,188,191,70,192,145,192,157,192,169,193,202,193,227,194,57,194,237,195,165,195,255,97,10,183,205,183,215,183,236,183,243,184,12,184,90,184,107,184,132,184,146,184,150,226,229,238,231,225,236,105,128,9,164,227,107,2,183,222,183,229,228,239,247,110,128,34,164,236,229,230,116,128,34,163,228,229,246,97,128,9,36,231,117,2,183,250,184,3,234,225,242,225,244,105,128,10,164,242,237,245,235,232,105,128,10,36,104,4,184,22,184,31,184,45,184,75,225,242,225,226,233,99,128,6,55,230,233,238,225,236,225,242,225,226,233,99,128,254,194,105,2,184,51,184,66,238,233,244,233,225,236,225,242,225,226,233,99,128,254,195,242,225,231,225,238,97,128,48,95,237,229,228,233,225,236,225,242,225,226,233,99,128,254,196,233,243,249,239,245,229,242,225,243,241,245,225,242,101,128,51,125,235,225,244,225,235,225,238,97,129,48,191,184,120,232,225,236,230,247,233,228,244,104,128,255,128,244,247,229,229,236,225,242,225,226,233,99,128,6,64,117,128,3,196,118,130,5,234,184,158,184,183,228,225,231,229,115,129,251,74,184,168,104,129,251,74,184,174,232,229,226,242,229,119,128,251,74,232,229,226,242,229,119,128,5,234,98,2,184,198,184,203,225,114,128,1,103,239,240,239,237,239,230,111,128,49,10,99,6,184,227,184,234,184,241,184,250,185,60,185,87,225,242,239,110,128,1,101,227,245,242,108,128,2,168,229,228,233,236,236,97,128,1,99,232,229,104,4,185,6,185,15,185,29,185,45,225,242,225,226,233,99,128,6,134,230,233,238,225,236,225,242,225,226,233,99,128,251,123,233,238,233,244,233,225,236,225,242,225,226,233,99,128,251,124,237,229,228,233,225,236,225,242,225,226,233,99,128,251,125,233,242,99,2,185,68,185,73,236,101,128,36,227,245,237,230,236,229,248,226,229,236,239,119,128,30,113,239,237,237,225,225,227,227,229,238,116,128,1,99,100,2,185,106,185,116,233,229,242,229,243,233,115,128,30,151,239,116,2,185,123,185,132,225,227,227,229,238,116,128,30,107,226,229,236,239,119,128,30,109,101,9,185,160,185,171,185,191,186,201,186,226,187,34,187,101,187,106,187,158,227,249,242,233,236,236,233,99,128,4,66,228,229,243,227,229,238,228,229,242,227,249,242,233,236,236,233,99,128,4,173,104,7,185,207,185,216,185,230,186,14,186,44,186,85,186,183,225,242,225,226,233,99,128,6,42,230,233,238,225,236,225,242,225,226,233,99,128,254,150,232,225,232,105,2,185,239,185,254,238,233,244,233,225,236,225,242,225,226,233,99,128,252,162,243,239,236,225,244,229,228,225,242,225,226,233,99,128,252,12,105,2,186,20,186,35,238,233,244,233,225,236,225,242,225,226,233,99,128,254,151,242,225,231,225,238,97,128,48,102,234,229,229,237,105,2,186,54,186,69,238,233,244,233,225,236,225,242,225,226,233,99,128,252,161,243,239,236,225,244,229,228,225,242,225,226,233,99,128,252,11,109,2,186,91,186,125,225,242,226,245,244,97,2,186,102,186,111,225,242,225,226,233,99,128,6,41,230,233,238,225,236,225,242,225,226,233,99,128,254,148,101,2,186,131,186,144,228,233,225,236,225,242,225,226,233,99,128,254,152,229,237,105,2,186,152,186,167,238,233,244,233,225,236,225,242,225,226,233,99,128,252,164,243,239,236,225,244,229,228,225,242,225,226,233,99,128,252,14,238,239,239,238,230,233,238,225,236,225,242,225,226,233,99,128,252,115,235,225,244,225,235,225,238,97,129,48,198,186,214,232,225,236,230,247,233,228,244,104,128,255,131,108,2,186,232,186,251,229,240,232,239,238,101,129,33,33,186,243,226,236,225,227,107,128,38,14,233,243,232,97,2,187,4,187,19,231,229,228,239,236,225,232,229,226,242,229,119,128,5,160,241,229,244,225,238,225,232,229,226,242,229,119,128,5,169,110,4,187,44,187,53,187,72,187,93,227,233,242,227,236,101,128,36,105,233,228,229,239,231,242,225,240,232,233,227,240,225,242,229,110,128,50,41,112,2,187,78,187,85,225,242,229,110,128,36,125,229,242,233,239,100,128,36,145,242,239,237,225,110,128,33,121,243,104,128,2,167,116,131,5,216,187,116,187,136,187,145,228,225,231,229,243,104,129,251,56,187,127,232,229,226,242,229,119,128,251,56,232,229,226,242,229,119,128,5,216,243,229,227,249,242,233,236,236,233,99,128,4,181,246,233,114,2,187,166,187,175,232,229,226,242,229,119,128,5,155,236,229,230,244,232,229,226,242,229,119,128,5,155,104,6,187,202,188,98,188,220,189,96,190,3,191,60,97,5,187,214,187,224,187,231,188,0,188,29,226,229,238,231,225,236,105,128,9,165,228,229,246,97,128,9,37,231,117,2,187,238,187,247,234,225,242,225,244,105,128,10,165,242,237,245,235,232,105,128,10,37,108,2,188,6,188,15,225,242,225,226,233,99,128,6,48,230,233,238,225,236,225,242,225,226,233,99,128,254,172,238,244,232,225,235,232,225,116,3,188,44,188,75,188,82,236,239,119,2,188,52,188,63,236,229,230,244,244,232,225,105,128,248,152,242,233,231,232,244,244,232,225,105,128,248,151,244,232,225,105,128,14,76,245,240,240,229,242,236,229,230,244,244,232,225,105,128,248,150,101,3,188,106,188,170,188,193,104,4,188,116,188,125,188,139,188,155,225,242,225,226,233,99,128,6,43,230,233,238,225,236,225,242,225,226,233,99,128,254,154,233,238,233,244,233,225,236,225,242,225,226,233,99,128,254,155,237,229,228,233,225,236,225,242,225,226,233,99,128,254,156,242,101,2,188,177,188,186,229,248,233,243,244,115,128,34,3,230,239,242,101,128,34,52,244,97,130,3,184,188,202,188,206,49,128,3,209,243,249,237,226,239,236,231,242,229,229,107,128,3,209,105,2,188,226,189,56,229,245,244,104,4,188,239,189,18,189,33,189,42,97,2,188,245,189,4,227,233,242,227,236,229,235,239,242,229,225,110,128,50,121,240,225,242,229,238,235,239,242,229,225,110,128,50,25,227,233,242,227,236,229,235,239,242,229,225,110,128,50,107,235,239,242,229,225,110,128,49,76,240,225,242,229,238,235,239,242,229,225,110,128,50,11,242,244,229,229,110,2,189,66,189,75,227,233,242,227,236,101,128,36,108,112,2,189,81,189,88,225,242,229,110,128,36,128,229,242,233,239,100,128,36,148,111,6,189,110,189,127,189,132,189,146,189,151,189,204,238,225,238,231,237,239,238,244,232,239,244,232,225,105,128,14,17,239,107,128,1,173,240,232,245,244,232,225,239,244,232,225,105,128,14,18,242,110,128,0,254,244,104,3,189,160,189,184,189,194,97,2,189,166,189,176,232,225,238,244,232,225,105,128,14,23,238,244,232,225,105,128,14,16,239,238,231,244,232,225,105,128,14,24,245,238,231,244,232,225,105,128,14,22,245,243,225,238,100,2,189,214,189,225,227,249,242,233,236,236,233,99,128,4,130,243,243,229,240,225,242,225,244,239,114,2,189,240,189,249,225,242,225,226,233,99,128,6,108,240,229,242,243,233,225,110,128,6,108,242,229,101,144,0,51,190,41,190,50,190,60,190,90,190,97,190,107,190,132,190,159,190,193,190,205,190,224,190,235,191,12,191,34,191,42,191,53,225,242,225,226,233,99,128,6,99,226,229,238,231,225,236,105,128,9,233,227,233,242,227,236,101,129,36,98,190,71,233,238,246,229,242,243,229,243,225,238,243,243,229,242,233,102,128,39,140,228,229,246,97,128,9,105,229,233,231,232,244,232,115,128,33,92,231,117,2,190,114,190,123,234,225,242,225,244,105,128,10,233,242,237,245,235,232,105,128,10,105,232,97,2,190,139,190,150,227,235,225,242,225,226,233,99,128,6,99,238,231,250,232,239,117,128,48,35,105,2,190,165,190,183,228,229,239,231,242,225,240,232,233,227,240,225,242,229,110,128,50,34,238,230,229,242,233,239,114,128,32,131,237,239,238,239,243,240,225,227,101,128,255,19,238,245,237,229,242,225,244,239,242,226,229,238,231,225,236,105,128,9,246,239,236,228,243,244,249,236,101,128,247,51,112,2,190,241,190,248,225,242,229,110,128,36,118,229,114,2,190,255,191,5,233,239,100,128,36,138,243,233,225,110,128,6,243,241,245,225,242,244,229,242,115,129,0,190,191,25,229,237,228,225,243,104,128,246,222,242,239,237,225,110,128,33,114,243,245,240,229,242,233,239,114,128,0,179,244,232,225,105,128,14,83,250,243,241,245,225,242,101,128,51,148,105,7,191,86,191,97,191,212,192,54,192,66,192,115,192,132,232,233,242,225,231,225,238,97,128,48,97,107,2,191,103,191,127,225,244,225,235,225,238,97,129,48,193,191,115,232,225,236,230,247,233,228,244,104,128,255,129,229,245,116,4,191,139,191,174,191,189,191,198,97,2,191,145,191,160,227,233,242,227,236,229,235,239,242,229,225,110,128,50,112,240,225,242,229,238,235,239,242,229,225,110,128,50,16,227,233,242,227,236,229,235,239,242,229,225,110,128,50,98,235,239,242,229,225,110,128,49,55,240,225,242,229,238,235,239,242,229,225,110,128,50,2,236,228,101,133,2,220,191,228,191,239,192,0,192,12,192,40,226,229,236,239,247,227,237,98,128,3,48,99,2,191,245,191,250,237,98,128,3,3,239,237,98,128,3,3,228,239,245,226,236,229,227,237,98,128,3,96,111,2,192,18,192,28,240,229,242,225,244,239,114,128,34,60,246,229,242,236,225,249,227,237,98,128,3,52,246,229,242,244,233,227,225,236,227,237,98,128,3,62,237,229,243,227,233,242,227,236,101,128,34,151,112,2,192,72,192,102,229,232,97,2,192,80,192,89,232,229,226,242,229,119,128,5,150,236,229,230,244,232,229,226,242,229,119,128,5,150,240,233,231,245,242,237,245,235,232,105,128,10,112,244,236,239,227,249,242,233,236,236,233,227,227,237,98,128,4,131,247,238,225,242,237,229,238,233,225,110,128,5,127,236,233,238,229,226,229,236,239,119,128,30,111,237,239,238,239,243,240,225,227,101,128,255,84,111,7,192,185,192,196,192,207,192,232,193,96,193,108,193,192,225,242,237,229,238,233,225,110,128,5,105,232,233,242,225,231,225,238,97,128,48,104,235,225,244,225,235,225,238,97,129,48,200,192,220,232,225,236,230,247,233,228,244,104,128,255,132,110,3,192,240,193,82,193,87,101,4,192,250,193,63,193,70,193,76,226,225,114,4,193,6,193,35,193,45,193,54,229,248,244,242,97,2,193,16,193,26,232,233,231,232,237,239,100,128,2,229,236,239,247,237,239,100,128,2,233,232,233,231,232,237,239,100,128,2,230,236,239,247,237,239,100,128,2,232,237,233,228,237,239,100,128,2,231,230,233,246,101,128,1,189,243,233,120,128,1,133,244,247,111,128,1,168,239,115,128,3,132,243,241,245,225,242,101,128,51,39,240,225,244,225,235,244,232,225,105,128,14,15,242,244,239,233,243,229,243,232,229,236,236,226,242,225,227,235,229,116,2,193,131,193,161,236,229,230,116,130,48,20,193,142,193,150,243,237,225,236,108,128,254,93,246,229,242,244,233,227,225,108,128,254,57,242,233,231,232,116,130,48,21,193,173,193,181,243,237,225,236,108,128,254,94,246,229,242,244,233,227,225,108,128,254,58,244,225,239,244,232,225,105,128,14,21,240,97,2,193,209,193,221,236,225,244,225,236,232,239,239,107,128,1,171,242,229,110,128,36,175,114,3,193,235,194,10,194,25,225,228,229,237,225,242,107,129,33,34,193,247,115,2,193,253,194,3,225,238,115,128,248,234,229,242,233,102,128,246,219,229,244,242,239,230,236,229,248,232,239,239,107,128,2,136,233,225,103,4,194,37,194,42,194,47,194,52,228,110,128,37,188,236,102,128,37,196,242,116,128,37,186,245,112,128,37,178,115,132,2,166,194,69,194,108,194,214,194,227,225,228,105,130,5,230,194,79,194,99,228,225,231,229,243,104,129,251,70,194,90,232,229,226,242,229,119,128,251,70,232,229,226,242,229,119,128,5,230,101,2,194,114,194,125,227,249,242,233,236,236,233,99,128,4,70,242,101,134,5,181,194,142,194,156,194,161,194,170,194,185,194,201,49,2,194,148,194,152,50,128,5,181,101,128,5,181,178,98,128,5,181,232,229,226,242,229,119,128,5,181,238,225,242,242,239,247,232,229,226,242,229,119,128,5,181,241,245,225,242,244,229,242,232,229,226,242,229,119,128,5,181,247,233,228,229,232,229,226,242,229,119,128,5,181,232,229,227,249,242,233,236,236,233,99,128,4,91,245,240,229,242,233,239,114,128,246,243,116,4,194,247,195,41,195,106,195,157,97,3,194,255,195,9,195,16,226,229,238,231,225,236,105,128,9,159,228,229,246,97,128,9,31,231,117,2,195,23,195,32,234,225,242,225,244,105,128,10,159,242,237,245,235,232,105,128,10,31,229,104,4,195,52,195,61,195,75,195,91,225,242,225,226,233,99,128,6,121,230,233,238,225,236,225,242,225,226,233,99,128,251,103,233,238,233,244,233,225,236,225,242,225,226,233,99,128,251,104,237,229,228,233,225,236,225,242,225,226,233,99,128,251,105,232,97,3,195,115,195,125,195,132,226,229,238,231,225,236,105,128,9,160,228,229,246,97,128,9,32,231,117,2,195,139,195,148,234,225,242,225,244,105,128,10,160,242,237,245,235,232,105,128,10,32,245,242,238,229,100,128,2,135,117,3,195,173,195,184,195,209,232,233,242,225,231,225,238,97,128,48,100,235,225,244,225,235,225,238,97,129,48,196,195,197,232,225,236,230,247,233,228,244,104,128,255,130,243,237,225,236,108,2,195,219,195,230,232,233,242,225,231,225,238,97,128,48,99,235,225,244,225,235,225,238,97,129,48,195,195,243,232,225,236,230,247,233,228,244,104,128,255,111,119,2,196,5,196,110,101,2,196,11,196,59,236,246,101,3,196,21,196,30,196,51,227,233,242,227,236,101,128,36,107,112,2,196,36,196,43,225,242,229,110,128,36,127,229,242,233,239,100,128,36,147,242,239,237,225,110,128,33,123,238,244,121,3,196,69,196,78,196,89,227,233,242,227,236,101,128,36,115,232,225,238,231,250,232,239,117,128,83,68,112,2,196,95,196,102,225,242,229,110,128,36,135,229,242,233,239,100,128,36,155,111,142,0,50,196,142,196,151,196,161,196,191,196,243,197,12,197,39,197,73,197,85,197,104,197,115,197,148,197,156,197,180,225,242,225,226,233,99,128,6,98,226,229,238,231,225,236,105,128,9,232,227,233,242,227,236,101,129,36,97,196,172,233,238,246,229,242,243,229,243,225,238,243,243,229,242,233,102,128,39,139,100,2,196,197,196,203,229,246,97,128,9,104,239,116,2,196,210,196,221,229,238,236,229,225,228,229,114,128,32,37,236,229,225,228,229,114,129,32,37,196,232,246,229,242,244,233,227,225,108,128,254,48,231,117,2,196,250,197,3,234,225,242,225,244,105,128,10,232,242,237,245,235,232,105,128,10,104,232,97,2,197,19,197,30,227,235,225,242,225,226,233,99,128,6,98,238,231,250,232,239,117,128,48,34,105,2,197,45,197,63,228,229,239,231,242,225,240,232,233,227,240,225,242,229,110,128,50,33,238,230,229,242,233,239,114,128,32,130,237,239,238,239,243,240,225,227,101,128,255,18,238,245,237,229,242,225,244,239,242,226,229,238,231,225,236,105,128,9,245,239,236,228,243,244,249,236,101,128,247,50,112,2,197,121,197,128,225,242,229,110,128,36,117,229,114,2,197,135,197,141,233,239,100,128,36,137,243,233,225,110,128,6,242,242,239,237,225,110,128,33,113,115,2,197,162,197,170,244,242,239,235,101,128,1,187,245,240,229,242,233,239,114,128,0,178,244,104,2,197,187,197,192,225,105,128,14,82,233,242,228,115,128,33,84,117,145,0,117,197,237,197,245,198,30,198,87,198,225,199,6,199,129,199,145,199,196,200,10,200,91,200,100,200,219,200,243,201,95,201,123,201,237,225,227,245,244,101,128,0,250,98,4,197,255,198,4,198,13,198,23,225,114,128,2,137,229,238,231,225,236,105,128,9,137,239,240,239,237,239,230,111,128,49,40,242,229,246,101,128,1,109,99,3,198,38,198,45,198,77,225,242,239,110,128,1,212,233,242,99,2,198,53,198,58,236,101,128,36,228,245,237,230,236,229,120,129,0,251,198,69,226,229,236,239,119,128,30,119,249,242,233,236,236,233,99,128,4,67,100,5,198,99,198,110,198,133,198,139,198,215,225,244,244,225,228,229,246,97,128,9,81,226,108,2,198,117,198,125,225,227,245,244,101,128,1,113,231,242,225,246,101,128,2,21,229,246,97,128,9,9,233,229,242,229,243,233,115,133,0,252,198,159,198,167,198,175,198,198,198,206,225,227,245,244,101,128,1,216,226,229,236,239,119,128,30,115,99,2,198,181,198,188,225,242,239,110,128,1,218,249,242,233,236,236,233,99,128,4,241,231,242,225,246,101,128,1,220,237,225,227,242,239,110,128,1,214,239,244,226,229,236,239,119,128,30,229,103,2,198,231,198,238,242,225,246,101,128,0,249,117,2,198,244,198,253,234,225,242,225,244,105,128,10,137,242,237,245,235,232,105,128,10,9,104,3,199,14,199,24,199,102,233,242,225,231,225,238,97,128,48,70,111,2,199,30,199,40,239,235,225,226,239,246,101,128,30,231,242,110,133,1,176,199,55,199,63,199,74,199,82,199,94,225,227,245,244,101,128,30,233,228,239,244,226,229,236,239,119,128,30,241,231,242,225,246,101,128,30,235,232,239,239,235,225,226,239,246,101,128,30,237,244,233,236,228,101,128,30,239,245,238,231,225,242,245,237,236,225,245,116,129,1,113,199,118,227,249,242,233,236,236,233,99,128,4,243,233,238,246,229,242,244,229,228,226,242,229,246,101,128,2,23,107,3,199,153,199,177,199,188,225,244,225,235,225,238,97,129,48,166,199,165,232,225,236,230,247,233,228,244,104,128,255,115,227,249,242,233,236,236,233,99,128,4,121,239,242,229,225,110,128,49,92,109,2,199,202,199,255,97,2,199,208,199,241,227,242,239,110,130,1,107,199,219,199,230,227,249,242,233,236,236,233,99,128,4,239,228,233,229,242,229,243,233,115,128,30,123,244,242,225,231,245,242,237,245,235,232,105,128,10,65,239,238,239,243,240,225,227,101,128,255,85,110,2,200,16,200,71,228,229,242,243,227,239,242,101,132,0,95,200,35,200,41,200,53,200,64,228,226,108,128,32,23,237,239,238,239,243,240,225,227,101,128,255,63,246,229,242,244,233,227,225,108,128,254,51,247,225,246,121,128,254,79,105,2,200,77,200,82,239,110,128,34,42,246,229,242,243,225,108,128,34,0,239,231,239,238,229,107,128,1,115,112,5,200,112,200,119,200,127,200,142,200,193,225,242,229,110,128,36,176,226,236,239,227,107,128,37,128,240,229,242,228,239,244,232,229,226,242,229,119,128,5,196,243,233,236,239,110,131,3,197,200,156,200,177,200,185,228,233,229,242,229,243,233,115,129,3,203,200,169,244,239,238,239,115,128,3,176,236,225,244,233,110,128,2,138,244,239,238,239,115,128,3,205,244,225,227,107,2,200,202,200,213,226,229,236,239,247,227,237,98,128,3,29,237,239,100,128,2,212,114,2,200,225,200,237,225,231,245,242,237,245,235,232,105,128,10,115,233,238,103,128,1,111,115,3,200,251,201,10,201,55,232,239,242,244,227,249,242,233,236,236,233,99,128,4,94,237,225,236,108,2,201,19,201,30,232,233,242,225,231,225,238,97,128,48,69,235,225,244,225,235,225,238,97,129,48,165,201,43,232,225,236,230,247,233,228,244,104,128,255,105,244,242,225,233,231,232,116,2,201,67,201,78,227,249,242,233,236,236,233,99,128,4,175,243,244,242,239,235,229,227,249,242,233,236,236,233,99,128,4,177,244,233,236,228,101,130,1,105,201,107,201,115,225,227,245,244,101,128,30,121,226,229,236,239,119,128,30,117,117,5,201,135,201,145,201,152,201,177,201,193,226,229,238,231,225,236,105,128,9,138,228,229,246,97,128,9,10,231,117,2,201,159,201,168,234,225,242,225,244,105,128,10,138,242,237,245,235,232,105,128,10,10,237,225,244,242,225,231,245,242,237,245,235,232,105,128,10,66,246,239,247,229,236,243,233,231,110,3,201,209,201,219,201,226,226,229,238,231,225,236,105,128,9,194,228,229,246,97,128,9,66,231,245,234,225,242,225,244,105,128,10,194,246,239,247,229,236,243,233,231,110,3,201,253,202,7,202,14,226,229,238,231,225,236,105,128,9,193,228,229,246,97,128,9,65,231,245,234,225,242,225,244,105,128,10,193,118,139,0,118,202,51,202,199,202,208,202,219,203,148,203,155,203,253,204,9,204,109,204,117,204,138,97,4,202,61,202,68,202,93,202,104,228,229,246,97,128,9,53,231,117,2,202,75,202,84,234,225,242,225,244,105,128,10,181,242,237,245,235,232,105,128,10,53,235,225,244,225,235,225,238,97,128,48,247,118,132,5,213,202,116,202,143,202,175,202,187,228,225,231,229,243,104,130,251,53,202,129,202,134,182,53,128,251,53,232,229,226,242,229,119,128,251,53,104,2,202,149,202,157,229,226,242,229,119,128,5,213,239,236,225,109,129,251,75,202,166,232,229,226,242,229,119,128,251,75,246,225,246,232,229,226,242,229,119,128,5,240,249,239,228,232,229,226,242,229,119,128,5,241,227,233,242,227,236,101,128,36,229,228,239,244,226,229,236,239,119,128,30,127,101,6,202,233,202,244,203,52,203,63,203,69,203,136,227,249,242,233,236,236,233,99,128,4,50,104,4,202,254,203,7,203,21,203,37,225,242,225,226,233,99,128,6,164,230,233,238,225,236,225,242,225,226,233,99,128,251,107,233,238,233,244,233,225,236,225,242,225,226,233,99,128,251,108,237,229,228,233,225,236,225,242,225,226,233,99,128,251,109,235,225,244,225,235,225,238,97,128,48,249,238,245,115,128,38,64,242,244,233,227,225,108,2,203,80,203,86,226,225,114,128,0,124,236,233,238,101,4,203,99,203,110,203,121,203,130,225,226,239,246,229,227,237,98,128,3,13,226,229,236,239,247,227,237,98,128,3,41,236,239,247,237,239,100,128,2,204,237,239,100,128,2,200,247,225,242,237,229,238,233,225,110,128,5,126,232,239,239,107,128,2,139,105,3,203,163,203,174,203,213,235,225,244,225,235,225,238,97,128,48,248,242,225,237,97,3,203,185,203,195,203,202,226,229,238,231,225,236,105,128,9,205,228,229,246,97,128,9,77,231,245,234,225,242,225,244,105,128,10,205,243,225,242,231,97,3,203,225,203,235,203,242,226,229,238,231,225,236,105,128,9,131,228,229,246,97,128,9,3,231,245,234,225,242,225,244,105,128,10,131,237,239,238,239,243,240,225,227,101,128,255,86,111,3,204,17,204,28,204,98,225,242,237,229,238,233,225,110,128,5,120,233,227,229,100,2,204,37,204,73,233,244,229,242,225,244,233,239,110,2,204,51,204,62,232,233,242,225,231,225,238,97,128,48,158,235,225,244,225,235,225,238,97,128,48,254,237,225,242,235,235,225,238,97,129,48,155,204,86,232,225,236,230,247,233,228,244,104,128,255,158,235,225,244,225,235,225,238,97,128,48,250,240,225,242,229,110,128,36,177,116,2,204,123,204,130,233,236,228,101,128,30,125,245,242,238,229,100,128,2,140,117,2,204,144,204,155,232,233,242,225,231,225,238,97,128,48,148,235,225,244,225,235,225,238,97,128,48,244,119,143,0,119,204,200,205,177,205,187,205,210,205,250,206,61,206,69,208,40,208,81,208,93,208,168,208,176,208,183,208,194,208,203,97,8,204,218,204,225,204,235,204,246,205,28,205,60,205,72,205,108,227,245,244,101,128,30,131,229,235,239,242,229,225,110,128,49,89,232,233,242,225,231,225,238,97,128,48,143,107,2,204,252,205,20,225,244,225,235,225,238,97,129,48,239,205,8,232,225,236,230,247,233,228,244,104,128,255,156,239,242,229,225,110,128,49,88,243,237,225,236,108,2,205,38,205,49,232,233,242,225,231,225,238,97,128,48,142,235,225,244,225,235,225,238,97,128,48,238,244,244,239,243,241,245,225,242,101,128,51,87,118,2,205,78,205,86,229,228,225,243,104,128,48,28,249,245,238,228,229,242,243,227,239,242,229,246,229,242,244,233,227,225,108,128,254,52,119,3,205,116,205,125,205,139,225,242,225,226,233,99,128,6,72,230,233,238,225,236,225,242,225,226,233,99,128,254,238,232,225,237,250,225,225,226,239,246,101,2,205,154,205,163,225,242,225,226,233,99,128,6,36,230,233,238,225,236,225,242,225,226,233,99,128,254,134,226,243,241,245,225,242,101,128,51,221,227,233,242,99,2,205,196,205,201,236,101,128,36,230,245,237,230,236,229,120,128,1,117,100,2,205,216,205,226,233,229,242,229,243,233,115,128,30,133,239,116,2,205,233,205,242,225,227,227,229,238,116,128,30,135,226,229,236,239,119,128,30,137,101,4,206,4,206,15,206,27,206,51,232,233,242,225,231,225,238,97,128,48,145,233,229,242,243,244,242,225,243,115,128,33,24,107,2,206,33,206,43,225,244,225,235,225,238,97,128,48,241,239,242,229,225,110,128,49,94,239,235,239,242,229,225,110,128,49,93,231,242,225,246,101,128,30,129,232,233,244,101,8,206,90,206,99,206,183,207,17,207,101,207,146,207,198,207,254,226,245,236,236,229,116,128,37,230,99,2,206,105,206,125,233,242,227,236,101,129,37,203,206,115,233,238,246,229,242,243,101,128,37,217,239,242,238,229,242,226,242,225,227,235,229,116,2,206,142,206,162,236,229,230,116,129,48,14,206,151,246,229,242,244,233,227,225,108,128,254,67,242,233,231,232,116,129,48,15,206,172,246,229,242,244,233,227,225,108,128,254,68,100,2,206,189,206,230,233,225,237,239,238,100,129,37,199,206,200,227,239,238,244,225,233,238,233,238,231,226,236,225,227,235,243,237,225,236,236,228,233,225,237,239,238,100,128,37,200,239,247,238,240,239,233,238,244,233,238,103,2,206,246,207,6,243,237,225,236,236,244,242,233,225,238,231,236,101,128,37,191,244,242,233,225,238,231,236,101,128,37,189,236,101,2,207,24,207,66,230,244,240,239,233,238,244,233,238,103,2,207,39,207,55,243,237,225,236,236,244,242,233,225,238,231,236,101,128,37,195,244,242,233,225,238,231,236,101,128,37,193,238,244,233,227,245,236,225,242,226,242,225,227,235,229,116,2,207,86,207,93,236,229,230,116,128,48,22,242,233,231,232,116,128,48,23,242,233,231,232,244,240,239,233,238,244,233,238,103,2,207,119,207,135,243,237,225,236,236,244,242,233,225,238,231,236,101,128,37,185,244,242,233,225,238,231,236,101,128,37,183,115,3,207,154,207,184,207,192,109,2,207,160,207,172,225,236,236,243,241,245,225,242,101,128,37,171,233,236,233,238,231,230,225,227,101,128,38,58,241,245,225,242,101,128,37,161,244,225,114,128,38,6,116,2,207,204,207,215,229,236,229,240,232,239,238,101,128,38,15,239,242,244,239,233,243,229,243,232,229,236,236,226,242,225,227,235,229,116,2,207,239,207,246,236,229,230,116,128,48,24,242,233,231,232,116,128,48,25,245,240,240,239,233,238,244,233,238,103,2,208,13,208,29,243,237,225,236,236,244,242,233,225,238,231,236,101,128,37,181,244,242,233,225,238,231,236,101,128,37,179,105,2,208,46,208,57,232,233,242,225,231,225,238,97,128,48,144,107,2,208,63,208,73,225,244,225,235,225,238,97,128,48,240,239,242,229,225,110,128,49,95,237,239,238,239,243,240,225,227,101,128,255,87,111,4,208,103,208,114,208,139,208,157,232,233,242,225,231,225,238,97,128,48,146,235,225,244,225,235,225,238,97,129,48,242,208,127,232,225,236,230,247,233,228,244,104,128,255,102,110,129,32,169,208,145,237,239,238,239,243,240,225,227,101,128,255,230,247,225,229,238,244,232,225,105,128,14,39,240,225,242,229,110,128,36,178,242,233,238,103,128,30,152,243,245,240,229,242,233,239,114,128,2,183,244,245,242,238,229,100,128,2,141,249,238,110,128,1,191,120,137,0,120,208,231,208,242,208,253,209,6,209,33,209,46,209,50,209,62,209,70,225,226,239,246,229,227,237,98,128,3,61,226,239,240,239,237,239,230,111,128,49,18,227,233,242,227,236,101,128,36,231,100,2,209,12,209,22,233,229,242,229,243,233,115,128,30,141,239,244,225,227,227,229,238,116,128,30,139,229,232,225,242,237,229,238,233,225,110,128,5,109,105,128,3,190,237,239,238,239,243,240,225,227,101,128,255,88,240,225,242,229,110,128,36,179,243,245,240,229,242,233,239,114,128,2,227,121,143,0,121,209,115,210,74,210,97,210,137,212,103,212,111,212,128,212,192,212,204,213,201,213,241,213,253,214,8,214,29,215,2,97,11,209,139,209,151,209,161,209,168,209,175,209,185,209,210,209,221,210,3,210,16,210,62,225,228,239,243,241,245,225,242,101,128,51,78,226,229,238,231,225,236,105,128,9,175,227,245,244,101,128,0,253,228,229,246,97,128,9,47,229,235,239,242,229,225,110,128,49,82,231,117,2,209,192,209,201,234,225,242,225,244,105,128,10,175,242,237,245,235,232,105,128,10,47,232,233,242,225,231,225,238,97,128,48,132,107,2,209,227,209,251,225,244,225,235,225,238,97,129,48,228,209,239,232,225,236,230,247,233,228,244,104,128,255,148,239,242,229,225,110,128,49,81,237,225,235,235,225,238,244,232,225,105,128,14,78,243,237,225,236,108,2,210,26,210,37,232,233,242,225,231,225,238,97,128,48,131,235,225,244,225,235,225,238,97,129,48,227,210,50,232,225,236,230,247,233,228,244,104,128,255,108,244,227,249,242,233,236,236,233,99,128,4,99,227,233,242,99,2,210,83,210,88,236,101,128,36,232,245,237,230,236,229,120,128,1,119,100,2,210,103,210,113,233,229,242,229,243,233,115,128,0,255,239,116,2,210,120,210,129,225,227,227,229,238,116,128,30,143,226,229,236,239,119,128,30,245,101,7,210,153,211,161,211,170,211,188,211,220,212,40,212,91,104,8,210,171,210,180,210,214,210,228,211,45,211,61,211,120,211,138,225,242,225,226,233,99,128,6,74,226,225,242,242,229,101,2,210,191,210,200,225,242,225,226,233,99,128,6,210,230,233,238,225,236,225,242,225,226,233,99,128,251,175,230,233,238,225,236,225,242,225,226,233,99,128,254,242,232,225,237,250,225,225,226,239,246,101,4,210,247,211,0,211,14,211,30,225,242,225,226,233,99,128,6,38,230,233,238,225,236,225,242,225,226,233,99,128,254,138,233,238,233,244,233,225,236,225,242,225,226,233,99,128,254,139,237,229,228,233,225,236,225,242,225,226,233,99,128,254,140,233,238,233,244,233,225,236,225,242,225,226,233,99,128,254,243,237,101,2,211,68,211,81,228,233,225,236,225,242,225,226,233,99,128,254,244,229,237,105,2,211,89,211,104,238,233,244,233,225,236,225,242,225,226,233,99,128,252,221,243,239,236,225,244,229,228,225,242,225,226,233,99,128,252,88,238,239,239,238,230,233,238,225,236,225,242,225,226,233,99,128,252,148,244,232,242,229,229,228,239,244,243,226,229,236,239,247,225,242,225,226,233,99,128,6,209,235,239,242,229,225,110,128,49,86,110,129,0,165,211,176,237,239,238,239,243,240,225,227,101,128,255,229,111,2,211,194,211,203,235,239,242,229,225,110,128,49,85,242,233,238,232,233,229,245,232,235,239,242,229,225,110,128,49,134,114,3,211,228,212,8,212,20,225,232,226,229,238,249,239,237,111,2,211,242,211,251,232,229,226,242,229,119,128,5,170,236,229,230,244,232,229,226,242,229,119,128,5,170,233,227,249,242,233,236,236,233,99,128,4,75,245,228,233,229,242,229,243,233,243,227,249,242,233,236,236,233,99,128,4,249,243,233,229,245,238,103,3,212,53,212,62,212,78,235,239,242,229,225,110,128,49,129,240,225,238,243,233,239,243,235,239,242,229,225,110,128,49,131,243,233,239,243,235,239,242,229,225,110,128,49,130,244,233,246,232,229,226,242,229,119,128,5,154,231,242,225,246,101,128,30,243,232,239,239,107,129,1,180,212,120,225,226,239,246,101,128,30,247,105,5,212,140,212,151,212,162,212,171,212,179,225,242,237,229,238,233,225,110,128,5,117,227,249,242,233,236,236,233,99,128,4,87,235,239,242,229,225,110,128,49,98,238,249,225,238,103,128,38,47,247,238,225,242,237,229,238,233,225,110,128,5,130,237,239,238,239,243,240,225,227,101,128,255,89,111,7,212,220,213,34,213,45,213,55,213,93,213,139,213,148,100,131,5,217,212,230,212,250,213,3,228,225,231,229,243,104,129,251,57,212,241,232,229,226,242,229,119,128,251,57,232,229,226,242,229,119,128,5,217,249,239,100,2,213,11,213,20,232,229,226,242,229,119,128,5,242,240,225,244,225,232,232,229,226,242,229,119,128,251,31,232,233,242,225,231,225,238,97,128,48,136,233,235,239,242,229,225,110,128,49,137,107,2,213,61,213,85,225,244,225,235,225,238,97,129,48,232,213,73,232,225,236,230,247,233,228,244,104,128,255,150,239,242,229,225,110,128,49,91,243,237,225,236,108,2,213,103,213,114,232,233,242,225,231,225,238,97,128,48,135,235,225,244,225,235,225,238,97,129,48,231,213,127,232,225,236,230,247,233,228,244,104,128,255,110,244,231,242,229,229,107,128,3,243,121,2,213,154,213,191,97,2,213,160,213,170,229,235,239,242,229,225,110,128,49,136,107,2,213,176,213,184,239,242,229,225,110,128,49,135,244,232,225,105,128,14,34,233,238,231,244,232,225,105,128,14,13,112,2,213,207,213,214,225,242,229,110,128,36,180,239,231,229,231,242,225,237,237,229,238,105,129,3,122,213,230,231,242,229,229,235,227,237,98,128,3,69,114,129,1,166,213,247,233,238,103,128,30,153,243,245,240,229,242,233,239,114,128,2,184,116,2,214,14,214,21,233,236,228,101,128,30,249,245,242,238,229,100,128,2,142,117,5,214,41,214,52,214,62,214,100,214,232,232,233,242,225,231,225,238,97,128,48,134,233,235,239,242,229,225,110,128,49,140,107,2,214,68,214,92,225,244,225,235,225,238,97,129,48,230,214,80,232,225,236,230,247,233,228,244,104,128,255,149,239,242,229,225,110,128,49,96,115,3,214,108,214,146,214,187,226,233,103,2,214,116,214,127,227,249,242,233,236,236,233,99,128,4,107,233,239,244,233,230,233,229,228,227,249,242,233,236,236,233,99,128,4,109,236,233,244,244,236,101,2,214,157,214,168,227,249,242,233,236,236,233,99,128,4,103,233,239,244,233,230,233,229,228,227,249,242,233,236,236,233,99,128,4,105,237,225,236,108,2,214,196,214,207,232,233,242,225,231,225,238,97,128,48,133,235,225,244,225,235,225,238,97,129,48,229,214,220,232,225,236,230,247,233,228,244,104,128,255,109,249,101,2,214,239,214,248,235,239,242,229,225,110,128,49,139,239,235,239,242,229,225,110,128,49,138,249,97,2,215,9,215,19,226,229,238,231,225,236,105,128,9,223,228,229,246,97,128,9,95,122,142,0,122,215,58,216,66,216,77,216,120,216,147,217,182,218,34,218,76,218,88,218,100,218,128,218,136,218,152,218,161,97,10,215,80,215,91,215,98,215,105,215,116,215,194,215,224,215,235,216,15,216,27,225,242,237,229,238,233,225,110,128,5,102,227,245,244,101,128,1,122,228,229,246,97,128,9,91,231,245,242,237,245,235,232,105,128,10,91,104,4,215,126,215,135,215,149,215,179,225,242,225,226,233,99,128,6,56,230,233,238,225,236,225,242,225,226,233,99,128,254,198,105,2,215,155,215,170,238,233,244,233,225,236,225,242,225,226,233,99,128,254,199,242,225,231,225,238,97,128,48,86,237,229,228,233,225,236,225,242,225,226,233,99,128,254,200,233,110,2,215,201,215,210,225,242,225,226,233,99,128,6,50,230,233,238,225,236,225,242,225,226,233,99,128,254,176,235,225,244,225,235,225,238,97,128,48,182,241,229,102,2,215,243,216,1,231,225,228,239,236,232,229,226,242,229,119,128,5,149,241,225,244,225,238,232,229,226,242,229,119,128,5,148,242,241,225,232,229,226,242,229,119,128,5,152,249,233,110,130,5,214,216,37,216,57,228,225,231,229,243,104,129,251,54,216,48,232,229,226,242,229,119,128,251,54,232,229,226,242,229,119,128,5,214,226,239,240,239,237,239,230,111,128,49,23,99,3,216,85,216,92,216,114,225,242,239,110,128,1,126,233,242,99,2,216,100,216,105,236,101,128,36,233,245,237,230,236,229,120,128,30,145,245,242,108,128,2,145,228,239,116,130,1,124,216,130,216,139,225,227,227,229,238,116,128,1,124,226,229,236,239,119,128,30,147,101,6,216,161,216], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+81920);
/* memory initializer */ allocate([172,216,215,216,226,216,237,217,177,227,249,242,233,236,236,233,99,128,4,55,100,2,216,178,216,197,229,243,227,229,238,228,229,242,227,249,242,233,236,236,233,99,128,4,153,233,229,242,229,243,233,243,227,249,242,233,236,236,233,99,128,4,223,232,233,242,225,231,225,238,97,128,48,92,235,225,244,225,235,225,238,97,128,48,188,242,111,140,0,48,217,10,217,19,217,29,217,36,217,61,217,74,217,85,217,97,217,108,217,118,217,129,217,136,225,242,225,226,233,99,128,6,96,226,229,238,231,225,236,105,128,9,230,228,229,246,97,128,9,102,231,117,2,217,43,217,52,234,225,242,225,244,105,128,10,230,242,237,245,235,232,105,128,10,102,232,225,227,235,225,242,225,226,233,99,128,6,96,233,238,230,229,242,233,239,114,128,32,128,237,239,238,239,243,240,225,227,101,128,255,16,239,236,228,243,244,249,236,101,128,247,48,240,229,242,243,233,225,110,128,6,240,243,245,240,229,242,233,239,114,128,32,112,244,232,225,105,128,14,80,247,233,228,244,104,3,217,148,217,157,217,169,234,239,233,238,229,114,128,254,255,238,239,238,234,239,233,238,229,114,128,32,12,243,240,225,227,101,128,32,11,244,97,128,3,182,104,2,217,188,217,199,226,239,240,239,237,239,230,111,128,49,19,101,4,217,209,217,220,217,236,217,247,225,242,237,229,238,233,225,110,128,5,106,226,242,229,246,229,227,249,242,233,236,236,233,99,128,4,194,227,249,242,233,236,236,233,99,128,4,54,100,2,217,253,218,16,229,243,227,229,238,228,229,242,227,249,242,233,236,236,233,99,128,4,151,233,229,242,229,243,233,243,227,249,242,233,236,236,233,99,128,4,221,105,3,218,42,218,53,218,64,232,233,242,225,231,225,238,97,128,48,88,235,225,244,225,235,225,238,97,128,48,184,238,239,242,232,229,226,242,229,119,128,5,174,236,233,238,229,226,229,236,239,119,128,30,149,237,239,238,239,243,240,225,227,101,128,255,90,111,2,218,106,218,117,232,233,242,225,231,225,238,97,128,48,94,235,225,244,225,235,225,238,97,128,48,190,240,225,242,229,110,128,36,181,242,229,244,242,239,230,236,229,248,232,239,239,107,128,2,144,243,244,242,239,235,101,128,1,182,117,2,218,167,218,178,232,233,242,225,231,225,238,97,128,48,90,235,225,244,225,235,225,238,97,128,48,186,0,0,0,108,116,117,111,9,0,0,0,2,0,0,0,3,0,0,0,10,0,0,0,4,0,0,0,114,97,115,116,101,114,49,0,2,0,0,0,64,0,0,0,72,106,1,0,0,0,1,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,108,116,117,111,1,0,0,0,2,0,0,0,4,0,0,0,1,0,0,0,48,106,1,0,0,0,0,0,114,97,115,116,101,114,53,0,2,0,0,0,64,0,0,0,144,106,1,0,0,0,1,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,108,116,117,111,1,0,0,0,2,0,0,0,4,0,0,0,1,0,0,0,48,106,1,0,0,0,0,0,24,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,15,0,0,0,0,0,0,0,24,0,0,0,11,0,0,0,0,0,0,0,16,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,18,0,0,0,19,0,0,0,0,0,0,0,56,0,0,0,20,0,0,0,0,0,0,0,21,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,23,0,0,0,24,0,0,0,0,0,0,0,24,0,0,0,11,0,0,0,0,0,0,0,25,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,27,0,0,0,28,0,0,0,0,0,0,0,24,0,0,0,11,0,0,0,0,0,0,0,29,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,31,0,0,0,32,0,0,0,0,0,0,0,24,0,0,0,11,0,0,0,0,0,0,0,33,0,0,0,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,35,0,0,0,36,0,0,0,0,0,0,0,44,0,0,0,37,0,0,0,0,0,0,0,38,0,0,0,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,40,0,0,0,41,0,0,0,0,0,0,0,44,0,0,0,42,0,0,0,0,0,0,0,43,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,45,0,0,0,46,0,0,0,0,0,0,0,40,0,0,0,47,0,0,0,5,0,0,0,48,0,0,0,49,0,0,0,3,0,0,0,2,0,0,0,50,0,0,0,3,0,0,0,4,0,0,0,14,0,0,0,51,0,0,0,52,0,0,0,0,0,0,0,115,102,110,116,0,0,0,0,4,0,0,0,1,0,0,0,2,0,0,0,6,0,0,0,53,0,0,0,3,0,0,0,54,0,0,0,5,0,0,0,55,0,0,0,56,0,0,0,57,0,0,0,58,0,0,0,59,0,0,0,7,0,0,0,60,0,0,0,61,0,0,0,62,0,0,0,63,0,0,0,1,0,0,0,6,0,0,0,8,0,0,0,7,0,0,0,64,0,0,0,8,0,0,0,65,0,0,0,9,0,0,0,9,0,0,0,10,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,208,108,1,0,0,0,1,0,0,0,2,0,216,108,1,0,0,0,0,0,0,0,0,0,53,0,0,0,0,0,0,0,168,109,1,0,184,109,1,0,200,109,1,0,224,109,1,0,232,109,1,0,248,109,1,0,0,110,1,0,8,110,1,0,16,110,1,0,32,110,1,0,0,0,0,0,0,0,0,0,115,102,110,116,45,116,97,98,108,101,0,0,0,0,0,0,3,0,0,0,66,0,0,0,5,0,0,0,0,0,0,0,112,111,115,116,115,99,114,105,112,116,45,102,111,110,116,45,110,97,109,101,0,0,0,0,5,0,0,0,0,0,0,0,103,108,121,112,104,45,100,105,99,116,0,0,0,0,0,0,5,0,0,0,67,0,0,0,98,100,102,0,0,0,0,0,11,0,0,0,12,0,0,0,116,116,45,99,109,97,112,115,0,0,0,0,0,0,0,0,68,0,0,0,0,0,0,0,67,72,65,82,83,69,84,95,82,69,71,73,83,84,82,89,0,0,0,0,0,0,0,0,67,72,65,82,83,69,84,95,69,78,67,79,68,73,78,71,0,0,0,0,0,0,0,0,4,0,8,0,12,2,4,0,12,2,6,0,12,2,8,0,12,2,10,0,0,0,0,0,4,0,16,0,16,4,0,0,16,4,4,0,16,4,8,0,16,4,12,0,0,0,0,0,4,0,54,0,16,4,0,0,16,4,4,0,17,4,8,0,17,4,12,0,12,2,16,0,12,2,18,0,17,4,20,0,17,4,24,0,17,4,28,0,17,4,32,0,13,2,36,0,13,2,38,0,13,2,40,0,13,2,42,0,12,2,44,0,12,2,46,0,13,2,48,0,13,2,50,0,13,2,52,0,0,0,0,0,0,0,0,0,4,0,54,0,16,4,0,0,16,4,4,0,12,2,8,0,12,2,10,0,12,2,12,0,12,2,14,0,12,2,16,0,12,2,18,0,24,16,20,0,24,8,36,0,24,6,44,0,9,1,50,0,9,1,51,0,8,1,52,0,8,1,53,0,0,0,0,0,0,0,0,0,4,0,6,0,12,2,0,0,12,4,4,0,12,4,8,0,0,0,0,0,0,0,0,0,12,2,0,0,12,2,2,0,12,2,4,0,12,2,6,0,12,2,8,0,12,4,12,0,0,0,0,0,0,0,0,0,4,0,32,0,16,4,0,0,16,4,4,0,13,2,8,0,13,2,10,0,16,4,12,0,16,4,16,0,16,4,20,0,16,4,24,0,16,4,28,0,0,0,0,0,0,0,0,0,4,0,78,0,12,2,0,0,13,2,2,0,12,2,4,0,12,2,6,0,13,2,8,0,13,2,10,0,13,2,12,0,13,2,14,0,13,2,16,0,13,2,18,0,13,2,20,0,13,2,22,0,13,2,24,0,13,2,26,0,13,2,28,0,13,2,30,0,8,1,32,0,8,1,33,0,8,1,34,0,8,1,35,0,8,1,36,0,8,1,37,0,8,1,38,0,8,1,39,0,8,1,40,0,8,1,41,0,16,4,44,0,16,4,48,0,16,4,52,0,16,4,56,0,8,1,60,0,8,1,61,0,8,1,62,0,8,1,63,0,12,2,64,0,12,2,66,0,12,2,68,0,13,2,70,0,13,2,72,0,13,2,74,0,12,2,76,0,12,2,78,0,0,0,0,0,4,0,8,0,16,4,80,0,16,4,84,0,0,0,0,0,4,0,10,0,13,2,88,0,13,2,90,0,12,2,92,0,12,2,94,0,12,2,96,0,0,0,0,0,0,0,0,0,4,0,4,0,12,2,98,0,12,2,100,0,0,0,0,0,4,0,6,0,17,4,0,0,12,2,4,0,0,0,0,0,4,0,26,0,12,2,6,0,12,2,8,0,12,2,10,0,12,2,12,0,12,2,14,0,12,2,16,0,12,2,18,0,12,2,20,0,12,2,22,0,12,2,24,0,12,2,26,0,12,2,28,0,12,2,30,0,0,0,0,0,0,0,0,0,4,0,36,0,16,4,0,0,13,2,4,0,13,2,6,0,13,2,8,0,12,2,10,0,13,2,12,0,13,2,14,0,13,2,16,0,13,2,18,0,13,2,20,0,13,2,22,0,13,2,24,0,13,2,26,0,13,2,28,0,13,2,30,0,13,2,32,0,12,2,34,0,0,0,0,0,0,0,0,0,2,0,0,0,255,255,255,255,99,105,110,117,0,0,0,0,255,255,255,255,99,105,110,117,1,0,0,0,0,0,0,0,110,109,114,97,3,0,0,0,0,0,0,0,98,109,121,115,3,0,0,0,10,0,0,0,99,105,110,117,3,0,0,0,1,0,0,0,99,105,110,117,3,0,0,0,2,0,0,0,115,105,106,115,3,0,0,0,3,0,0,0,32,32,98,103,3,0,0,0,4,0,0,0,53,103,105,98,3,0,0,0,5,0,0,0,115,110,97,119,3,0,0,0,6,0,0,0,97,104,111,106,0,0,0,0,216,106,1,0,16,107,1,0,72,107,1,0,128,107,1,0,184,107,1,0,240,107,1,0,40,108,1,0,96,108,1,0,152,108,1,0,0,0,0,0,112,111,115,116,115,99,114,105,112,116,45,99,109,97,112,115,0,0,0,0,0,0,0,0,4,0,8,0,17,4,4,0,17,4,8,0,0,0,0,0,4,0,44,0,16,4,0,0,16,4,4,0,16,4,8,0,12,2,12,0,12,2,14,0,16,4,16,0,12,2,20,0,12,2,22,0,16,4,24,0,16,4,28,0,16,4,32,0,16,4,36,0,16,4,40,0,0,0,0,0,0,0,0,0,108,116,117,111,69,0,0,0,5,0,0,0,0,0,0,0,70,0,0,0,10,0,0,0,115,109,111,111,116,104,0,0,2,0,0,0,64,0,0,0,80,114,1,0,0,0,1,0,0,0,2,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,108,116,117,111,6,0,0,0,7,0,0,0,6,0,0,0,13,0,0,0,56,114,1,0,0,0,0,0,115,109,111,111,116,104,45,108,99,100,0,0,0,0,0,0,2,0,0,0,64,0,0,0,152,114,1,0,0,0,1,0,0,0,2,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,108,116,117,111,8,0,0,0,7,0,0,0,6,0,0,0,13,0,0,0,56,114,1,0,0,0,0,0,115,109,111,111,116,104,45,108,99,100,118,0,0,0,0,0,2,0,0,0,64,0,0,0,232,114,1,0,0,0,1,0,0,0,2,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,108,116,117,111,9,0,0,0,7,0,0,0,6,0,0,0,13,0,0,0,56,114,1,0,0,0,0,0,71,0,0,0,72,0,0,0,14,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,116,114,117,101,116,121,112,101,0,0,0,0,0,0,0,0,1,5,0,0,72,0,0,0,80,115,1,0,0,0,1,0,0,0,2,0,0,0,0,0,7,0,0,0,11,0,0,0,73,0,0,0,24,3,0,0,48,1,0,0,160,0,0,0,6,0,0,0,12,0,0,0,8,0,0,0,13,0,0,0,9,0,0,0,0,0,0,0,11,0,0,0,12,0,0,0,0,0,0,0,7,0,0,0,74,0,0,0,75,0,0,0,0,0,0,0,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,0,1,0,0,0,64,0,0,0,1,0,0,0,1,0,0,0,68,0,0,0,0,0,0,0,0,0,0,0,9,0,3,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,255,254,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,4,5,6,7,8,9,3,5,7,9,11,13,15,17,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,32,32,32,32,32,32,2,2,0,80,16,16,16,16,16,16,16,16,0,0,16,0,16,16,16,16,18,16,0,34,1,17,16,32,0,16,32,16,16,0,16,16,0,0,0,0,16,16,16,16,16,0,32,32,0,0,32,32,0,0,32,17,32,17,17,17,32,33,33,1,1,0,0,16,33,33,33,33,33,33,17,17,16,0,33,33,17,16,16,16,33,33,33,33,17,17,17,17,17,17,17,17,17,17,17,17,32,16,16,16,16,16,16,16,32,32,0,0,0,0,16,16,0,32,32,0,0,16,32,32,17,16,51,33,33,16,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,102,110,116,0,0,0,0,46,110,111,116,100,101,102,0,88,240,188,5,228,2,0,0,241,59,35,40,196,135,0,0,234,161,68,163,225,1,0,0,88,240,188,5,228,2,0,0,241,59,35,40,196,135,0,0,235,161,68,163,225,1,0,0,212,234,229,17,80,3,0,0,59,202,48,90,99,144,0,0,2,38,164,19,126,0,0,0,252,255,251,255,8,0,0,0,184,72,158,156,162,190,0,0,18,1,2,112,8,0,0,0,252,255,251,255,8,0,0,0,131,4,90,10,57,124,1,0,18,1,2,112,8,0,0,0,0,0,0,0,0,0,0,0,85,37,201,64,229,0,0,0,227,88,155,163,124,17,0,0,0,0,0,0,0,0,0,0,82,22,196,51,229,0,0,0,42,197,214,38,106,15,0,0,0,0,0,0,0,0,0,0,29,101,177,109,157,1,0,0,3,75,110,108,146,36,0,0,0,0,0,0,0,0,0,0,85,37,201,64,229,0,0,0,208,250,81,222,124,17,0,0,0,0,0,0,0,0,0,0,100,118,228,133,229,0,0,0,49,40,198,166,170,28,0,0,0,0,0,0,0,0,0,0,253,28,137,45,157,1,0,0,51,70,96,160,232,29,0,0,0,0,0,0,0,0,0,0,76,119,170,64,203,1,0,0,150,170,92,155,154,31,0,0,0,0,0,0,0,0,0,0,203,233,61,13,65,1,0,0,102,119,18,212,128,34,0,0,0,0,0,0,0,0,0,0,152,38,105,74,240,1,0,0,70,67,13,52,202,31,0,0,0,0,0,0,0,0,0,0,4,198,52,205,102,1,0,0,70,16,243,108,176,34,0,0,0,0,0,0,0,0,0,0,21,83,167,93,157,1,0,0,95,90,116,64,224,34,0,0,0,0,0,0,0,0,0,0,72,252,85,240,194,1,0,0,211,222,0,57,24,30,0,0,68,70,75,97,105,83,104,111,45,83,66,0,0,0,0,0,0,0,0,0,68,70,75,97,105,83,104,117,0,0,0,0,0,0,0,0,0,0,0,0,68,70,75,97,105,45,83,66,0,0,0,0,0,0,0,0,0,0,0,0,72,117,97,84,105,97,110,75,97,105,84,105,63,0,0,0,0,0,0,0,72,117,97,84,105,97,110,83,111,110,103,84,105,63,0,0,0,0,0,0,77,105,110,103,40,102,111,114,32,73,83,79,49,48,54,52,54,41,0,0,77,105,110,103,76,105,85,0,0,0,0,0,0,0,0,0,0,0,0,0,80,77,105,110,103,76,105,85,0,0,0,0,0,0,0,0,0,0,0,0,77,105,110,103,76,105,52,51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,120,1,0,176,120,1,0,192,120,1,0,208,120,1,0,232,120,1,0,248,120,1,0,0,121,1,0,8,121,1,0,16,121,1,0,32,121,1,0,0,0,0,0,0,0,0,0,120,102,56,54,45,100,114,105,118,101,114,45,110,97,109,101,0,0,0,0,0,0,0,0,84,114,117,101,84,121,112,101,0,0,0,0,0,0,0,0,109,117,108,116,105,45,109,97,115,116,101,114,115,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,76,0,0,0,16,0,0,0,0,0,0,0,116,114,117,101,116,121,112,101,45,101,110,103,105,110,101,0,2,0,0,0,0,0,0,0,116,116,45,103,108,121,102,0,17,0,0,0,0,0,0,0,112,114,111,112,101,114,116,105,101,115,0,0,0,0,0,0,18,0,0,0,19,0,0,0,105,110,116,101,114,112,114,101,116,101,114,45,118,101,114,115,105,111,110,0,0,0,0,0,4,0,16,0,17,4,0,0,12,2,4,0,12,2,6,0,12,2,8,0,12,2,10,0,12,2,12,0,12,2,14,0,0,0,0,0,0,0,0,0,4,0,20,0,16,4,0,0,16,4,4,0,16,4,8,0,16,4,12,0,12,2,16,0,12,2,18,0,0,0,0,0,87,101,105,103,104,116,0,0,87,105,100,116,104,0,0,0,79,112,116,105,99,97,108,83,105,122,101,0,0,0,0,0,83,108,97,110,116,0,0,0,4,0,20,0,17,4,0,0,12,2,4,0,12,2,6,0,16,4,8,0,12,2,12,0,12,2,14,0,16,4,16,0,0,0,0,0,0,0,0,0,112,115,104,105,110,116,101,114,0,0,0,0,0,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,168,0,0,0,216,121,1,0,0,0,1,0,0,0,2,0,232,121,1,0,13,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+92160);




var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}


  
  var GL={counter:1,lastError:0,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],currArrayBuffer:0,currElementArrayBuffer:0,byteSizeByTypeRoot:5120,byteSizeByType:[1,1,2,2,4,4,4,2,3,4,8],programInfos:{},stringCache:{},packAlignment:4,unpackAlignment:4,init:function () {
        GL.createLog2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);
        Browser.moduleContextCreatedCallbacks.push(GL.initExtensions);
      },recordError:function recordError(errorCode) {
        if (!GL.lastError) {
          GL.lastError = errorCode;
        }
      },getNewId:function (table) {
        var ret = GL.counter++;
        for (var i = table.length; i < ret; i++) {
          table[i] = null;
        }
        return ret;
      },MINI_TEMP_BUFFER_SIZE:16,miniTempBuffer:null,miniTempBufferViews:[0],MAX_TEMP_BUFFER_SIZE:2097152,tempVertexBuffers1:[],tempVertexBufferCounters1:[],tempVertexBuffers2:[],tempVertexBufferCounters2:[],numTempVertexBuffersPerSize:64,tempIndexBuffers:[],tempQuadIndexBuffer:null,log2ceilLookup:null,createLog2ceilLookup:function (maxValue) {
        GL.log2ceilLookup = new Uint8Array(maxValue+1);
        var log2 = 0;
        var pow2 = 1;
        GL.log2ceilLookup[0] = 0;
        for(var i = 1; i <= maxValue; ++i) {
          if (i > pow2) {
            pow2 <<= 1;
            ++log2;
          }
          GL.log2ceilLookup[i] = log2;
        }
      },generateTempBuffers:function (quads) {
        var largestIndex = GL.log2ceilLookup[GL.MAX_TEMP_BUFFER_SIZE];
        GL.tempVertexBufferCounters1.length = GL.tempVertexBufferCounters2.length = largestIndex+1;
        GL.tempVertexBuffers1.length = GL.tempVertexBuffers2.length = largestIndex+1;
        GL.tempIndexBuffers.length = largestIndex+1;
        for(var i = 0; i <= largestIndex; ++i) {
          GL.tempIndexBuffers[i] = null; // Created on-demand
          GL.tempVertexBufferCounters1[i] = GL.tempVertexBufferCounters2[i] = 0;
          var ringbufferLength = GL.numTempVertexBuffersPerSize;
          GL.tempVertexBuffers1[i] = [];
          GL.tempVertexBuffers2[i] = [];
          var ringbuffer1 = GL.tempVertexBuffers1[i];
          var ringbuffer2 = GL.tempVertexBuffers2[i];
          ringbuffer1.length = ringbuffer2.length = ringbufferLength;
          for(var j = 0; j < ringbufferLength; ++j) {
            ringbuffer1[j] = ringbuffer2[j] = null; // Created on-demand
          }
        }
  
        if (quads) {
          // GL_QUAD indexes can be precalculated
          GL.tempQuadIndexBuffer = GLctx.createBuffer();
          GLctx.bindBuffer(GLctx.ELEMENT_ARRAY_BUFFER, GL.tempQuadIndexBuffer);
          var numIndexes = GL.MAX_TEMP_BUFFER_SIZE >> 1;
          var quadIndexes = new Uint16Array(numIndexes);
          var i = 0, v = 0;
          while (1) {
            quadIndexes[i++] = v;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v+1;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v+2;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v+2;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v+3;
            if (i >= numIndexes) break;
            v += 4;
          }
          GLctx.bufferData(GLctx.ELEMENT_ARRAY_BUFFER, quadIndexes, GLctx.STATIC_DRAW);
          GLctx.bindBuffer(GLctx.ELEMENT_ARRAY_BUFFER, null);
        }
      },getTempVertexBuffer:function getTempVertexBuffer(sizeBytes) {
        var idx = GL.log2ceilLookup[sizeBytes];
        var ringbuffer = GL.tempVertexBuffers1[idx];
        var nextFreeBufferIndex = GL.tempVertexBufferCounters1[idx];
        GL.tempVertexBufferCounters1[idx] = (GL.tempVertexBufferCounters1[idx]+1) & (GL.numTempVertexBuffersPerSize-1);
        var vbo = ringbuffer[nextFreeBufferIndex];
        if (vbo) {
          return vbo;
        }
        var prevVBO = GLctx.getParameter(GLctx.ARRAY_BUFFER_BINDING);
        ringbuffer[nextFreeBufferIndex] = GLctx.createBuffer();
        GLctx.bindBuffer(GLctx.ARRAY_BUFFER, ringbuffer[nextFreeBufferIndex]);
        GLctx.bufferData(GLctx.ARRAY_BUFFER, 1 << idx, GLctx.DYNAMIC_DRAW);
        GLctx.bindBuffer(GLctx.ARRAY_BUFFER, prevVBO);
        return ringbuffer[nextFreeBufferIndex];
      },getTempIndexBuffer:function getTempIndexBuffer(sizeBytes) {
        var idx = GL.log2ceilLookup[sizeBytes];
        var ibo = GL.tempIndexBuffers[idx];
        if (ibo) {
          return ibo;
        }
        var prevIBO = GLctx.getParameter(GLctx.ELEMENT_ARRAY_BUFFER_BINDING);
        GL.tempIndexBuffers[idx] = GLctx.createBuffer();
        GLctx.bindBuffer(GLctx.ELEMENT_ARRAY_BUFFER, GL.tempIndexBuffers[idx]);
        GLctx.bufferData(GLctx.ELEMENT_ARRAY_BUFFER, 1 << idx, GLctx.DYNAMIC_DRAW);
        GLctx.bindBuffer(GLctx.ELEMENT_ARRAY_BUFFER, prevIBO);
        return GL.tempIndexBuffers[idx];
      },newRenderingFrameStarted:function newRenderingFrameStarted() {
        var vb = GL.tempVertexBuffers1;
        GL.tempVertexBuffers1 = GL.tempVertexBuffers2;
        GL.tempVertexBuffers2 = vb;
        vb = GL.tempVertexBufferCounters1;
        GL.tempVertexBufferCounters1 = GL.tempVertexBufferCounters2;
        GL.tempVertexBufferCounters2 = vb;
        var largestIndex = GL.log2ceilLookup[GL.MAX_TEMP_BUFFER_SIZE];
        for(var i = 0; i <= largestIndex; ++i) {
          GL.tempVertexBufferCounters1[i] = 0;
        }
      },findToken:function (source, token) {
        function isIdentChar(ch) {
          if (ch >= 48 && ch <= 57) // 0-9
            return true;
          if (ch >= 65 && ch <= 90) // A-Z
            return true;
          if (ch >= 97 && ch <= 122) // a-z
            return true;
          return false;
        }
        var i = -1;
        do {
          i = source.indexOf(token, i + 1);
          if (i < 0) {
            break;
          }
          if (i > 0 && isIdentChar(source[i - 1])) {
            continue;
          }
          i += token.length;
          if (i < source.length - 1 && isIdentChar(source[i + 1])) {
            continue;
          }
          return true;
        } while (true);
        return false;
      },getSource:function (shader, count, string, length) {
        var source = '';
        for (var i = 0; i < count; ++i) {
          var frag;
          if (length) {
            var len = HEAP32[(((length)+(i*4))>>2)];
            if (len < 0) {
              frag = Pointer_stringify(HEAP32[(((string)+(i*4))>>2)]);
            } else {
              frag = Pointer_stringify(HEAP32[(((string)+(i*4))>>2)], len);
            }
          } else {
            frag = Pointer_stringify(HEAP32[(((string)+(i*4))>>2)]);
          }
          source += frag;
        }
        // Let's see if we need to enable the standard derivatives extension
        type = GLctx.getShaderParameter(GL.shaders[shader], 0x8B4F /* GL_SHADER_TYPE */);
        if (type == 0x8B30 /* GL_FRAGMENT_SHADER */) {
          if (GL.findToken(source, "dFdx") ||
              GL.findToken(source, "dFdy") ||
              GL.findToken(source, "fwidth")) {
            source = "#extension GL_OES_standard_derivatives : enable\n" + source;
            var extension = GLctx.getExtension("OES_standard_derivatives");
          }
        }
        return source;
      },computeImageSize:function (width, height, sizePerPixel, alignment) {
        function roundedToNextMultipleOf(x, y) {
          return Math.floor((x + y - 1) / y) * y
        }
        var plainRowSize = width * sizePerPixel;
        var alignedRowSize = roundedToNextMultipleOf(plainRowSize, alignment);
        return (height <= 0) ? 0 :
                 ((height - 1) * alignedRowSize + plainRowSize);
      },get:function (name_, p, type) {
        // Guard against user passing a null pointer.
        // Note that GLES2 spec does not say anything about how passing a null pointer should be treated.
        // Testing on desktop core GL 3, the application crashes on glGetIntegerv to a null pointer, but
        // better to report an error instead of doing anything random.
        if (!p) {
          GL.recordError(0x0501 /* GL_INVALID_VALUE */);
          return;
        }
        var ret = undefined;
        switch(name_) { // Handle a few trivial GLES values
          case 0x8DFA: // GL_SHADER_COMPILER
            ret = 1;
            break;
          case 0x8DF8: // GL_SHADER_BINARY_FORMATS
            if (type !== 'Integer') {
              GL.recordError(0x0500); // GL_INVALID_ENUM
            }
            return; // Do not write anything to the out pointer, since no binary formats are supported.
          case 0x8DF9: // GL_NUM_SHADER_BINARY_FORMATS
            ret = 0;
            break;
          case 0x86A2: // GL_NUM_COMPRESSED_TEXTURE_FORMATS
            // WebGL doesn't have GL_NUM_COMPRESSED_TEXTURE_FORMATS (it's obsolete since GL_COMPRESSED_TEXTURE_FORMATS returns a JS array that can be queried for length),
            // so implement it ourselves to allow C++ GLES2 code get the length.
            var formats = GLctx.getParameter(0x86A3 /*GL_COMPRESSED_TEXTURE_FORMATS*/);
            ret = formats.length;
            break;
          case 0x8B9A: // GL_IMPLEMENTATION_COLOR_READ_TYPE
            ret = 0x1401; // GL_UNSIGNED_BYTE
            break;
          case 0x8B9B: // GL_IMPLEMENTATION_COLOR_READ_FORMAT
            ret = 0x1908; // GL_RGBA
            break;
        }
  
        if (ret === undefined) {
          var result = GLctx.getParameter(name_);
          switch (typeof(result)) {
            case "number":
              ret = result;
              break;
            case "boolean":
              ret = result ? 1 : 0;
              break;
            case "string":
              GL.recordError(0x0500); // GL_INVALID_ENUM
              return;
            case "object":
              if (result === null) {
                // null is a valid result for some (e.g., which buffer is bound - perhaps nothing is bound), but otherwise
                // can mean an invalid name_, which we need to report as an error
                switch(name_) {
                  case 0x8894: // ARRAY_BUFFER_BINDING
                  case 0x8B8D: // CURRENT_PROGRAM
                  case 0x8895: // ELEMENT_ARRAY_BUFFER_BINDING
                  case 0x8CA6: // FRAMEBUFFER_BINDING
                  case 0x8CA7: // RENDERBUFFER_BINDING
                  case 0x8069: // TEXTURE_BINDING_2D
                  case 0x8514: { // TEXTURE_BINDING_CUBE_MAP
                    ret = 0;
                    break;
                  }
                  default: {
                    GL.recordError(0x0500); // GL_INVALID_ENUM
                    return;
                  }
                }
              } else if (result instanceof Float32Array ||
                         result instanceof Uint32Array ||
                         result instanceof Int32Array ||
                         result instanceof Array) {
                for (var i = 0; i < result.length; ++i) {
                  switch (type) {
                    case 'Integer': HEAP32[(((p)+(i*4))>>2)]=result[i];   break;
                    case 'Float':   HEAPF32[(((p)+(i*4))>>2)]=result[i]; break;
                    case 'Boolean': HEAP8[(((p)+(i))|0)]=result[i] ? 1 : 0;    break;
                    default: throw 'internal glGet error, bad type: ' + type;
                  }
                }
                return;
              } else if (result instanceof WebGLBuffer ||
                         result instanceof WebGLProgram ||
                         result instanceof WebGLFramebuffer ||
                         result instanceof WebGLRenderbuffer ||
                         result instanceof WebGLTexture) {
                ret = result.name | 0;
              } else {
                GL.recordError(0x0500); // GL_INVALID_ENUM
                return;
              }
              break;
            default:
              GL.recordError(0x0500); // GL_INVALID_ENUM
              return;
          }
        }
  
        switch (type) {
          case 'Integer': HEAP32[((p)>>2)]=ret;    break;
          case 'Float':   HEAPF32[((p)>>2)]=ret;  break;
          case 'Boolean': HEAP8[(p)]=ret ? 1 : 0; break;
          default: throw 'internal glGet error, bad type: ' + type;
        }
      },getTexPixelData:function (type, format, width, height, pixels, internalFormat) {
        var sizePerPixel;
        switch (type) {
          case 0x1401 /* GL_UNSIGNED_BYTE */:
            switch (format) {
              case 0x1906 /* GL_ALPHA */:
              case 0x1909 /* GL_LUMINANCE */:
                sizePerPixel = 1;
                break;
              case 0x1907 /* GL_RGB */:
                sizePerPixel = 3;
                break;
              case 0x1908 /* GL_RGBA */:
                sizePerPixel = 4;
                break;
              case 0x190A /* GL_LUMINANCE_ALPHA */:
                sizePerPixel = 2;
                break;
              default:
                throw 'Invalid format (' + format + ')';
            }
            break;
          case 0x1403 /* GL_UNSIGNED_SHORT */:
            if (format == 0x1902 /* GL_DEPTH_COMPONENT */) {
              sizePerPixel = 2;
            } else {
              throw 'Invalid format (' + format + ')';
            }
            break;
          case 0x1405 /* GL_UNSIGNED_INT */:
            if (format == 0x1902 /* GL_DEPTH_COMPONENT */) {
              sizePerPixel = 4;
            } else {
              throw 'Invalid format (' + format + ')';
            }
            break;
          case 0x84FA /* UNSIGNED_INT_24_8_WEBGL */:
            sizePerPixel = 4;
            break;
          case 0x8363 /* GL_UNSIGNED_SHORT_5_6_5 */:
          case 0x8033 /* GL_UNSIGNED_SHORT_4_4_4_4 */:
          case 0x8034 /* GL_UNSIGNED_SHORT_5_5_5_1 */:
            sizePerPixel = 2;
            break;
          case 0x1406 /* GL_FLOAT */:
            switch (format) {
              case 0x1907 /* GL_RGB */:
                sizePerPixel = 3*4;
                break;
              case 0x1908 /* GL_RGBA */:
                sizePerPixel = 4*4;
                break;
              default:
                throw 'Invalid format (' + format + ')';
            }
            internalFormat = GLctx.RGBA;
            break;
          default:
            throw 'Invalid type (' + type + ')';
        }
        var bytes = GL.computeImageSize(width, height, sizePerPixel, GL.unpackAlignment);
        if (type == 0x1401 /* GL_UNSIGNED_BYTE */) {
          pixels = HEAPU8.subarray((pixels),(pixels+bytes));
        } else if (type == 0x1406 /* GL_FLOAT */) {
          pixels = HEAPF32.subarray((pixels)>>2,(pixels+bytes)>>2);
        } else if (type == 0x1405 /* GL_UNSIGNED_INT */ || type == 0x84FA /* UNSIGNED_INT_24_8_WEBGL */) {
          pixels = HEAPU32.subarray((pixels)>>2,(pixels+bytes)>>2);
        } else {
          pixels = HEAPU16.subarray((pixels)>>1,(pixels+bytes)>>1);
        }
        return {
          pixels: pixels,
          internalFormat: internalFormat
        }
      },initExtensions:function () {
        if (GL.initExtensions.done) return;
        GL.initExtensions.done = true;
  
        if (!Module.useWebGL) return; // an app might link both gl and 2d backends
  
        GL.miniTempBuffer = new Float32Array(GL.MINI_TEMP_BUFFER_SIZE);
        for (var i = 0; i < GL.MINI_TEMP_BUFFER_SIZE; i++) {
          GL.miniTempBufferViews[i] = GL.miniTempBuffer.subarray(0, i+1);
        }
  
        GL.maxVertexAttribs = GLctx.getParameter(GLctx.MAX_VERTEX_ATTRIBS);
  
        // Detect the presence of a few extensions manually, this GL interop layer itself will need to know if they exist. 
        GL.compressionExt = GLctx.getExtension('WEBGL_compressed_texture_s3tc') ||
                            GLctx.getExtension('MOZ_WEBGL_compressed_texture_s3tc') ||
                            GLctx.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');
  
        GL.anisotropicExt = GLctx.getExtension('EXT_texture_filter_anisotropic') ||
                            GLctx.getExtension('MOZ_EXT_texture_filter_anisotropic') ||
                            GLctx.getExtension('WEBKIT_EXT_texture_filter_anisotropic');
  
        GL.floatExt = GLctx.getExtension('OES_texture_float');
  
        // Extension available from Firefox 26 and Google Chrome 30
        GL.instancedArraysExt = GLctx.getExtension('ANGLE_instanced_arrays');
        
        // Extension available from Firefox 25 and WebKit
        GL.vaoExt = Module.ctx.getExtension('OES_vertex_array_object');
  
        // These are the 'safe' feature-enabling extensions that don't add any performance impact related to e.g. debugging, and
        // should be enabled by default so that client GLES2/GL code will not need to go through extra hoops to get its stuff working.
        // As new extensions are ratified at http://www.khronos.org/registry/webgl/extensions/ , feel free to add your new extensions
        // here, as long as they don't produce a performance impact for users that might not be using those extensions.
        // E.g. debugging-related extensions should probably be off by default.
        var automaticallyEnabledExtensions = [ "OES_texture_float", "OES_texture_half_float", "OES_standard_derivatives",
                                               "OES_vertex_array_object", "WEBGL_compressed_texture_s3tc", "WEBGL_depth_texture",
                                               "OES_element_index_uint", "EXT_texture_filter_anisotropic", "ANGLE_instanced_arrays",
                                               "OES_texture_float_linear", "OES_texture_half_float_linear", "WEBGL_compressed_texture_atc",
                                               "WEBGL_compressed_texture_pvrtc", "EXT_color_buffer_half_float", "WEBGL_color_buffer_float",
                                               "EXT_frag_depth", "EXT_sRGB", "WEBGL_draw_buffers", "WEBGL_shared_resources",
                                               "EXT_shader_texture_lod" ];
  
        function shouldEnableAutomatically(extension) {
          for(var i in automaticallyEnabledExtensions) {
            var include = automaticallyEnabledExtensions[i];
            if (ext.indexOf(include) != -1) {
              return true;
            }
          }
          return false;
        }
  
        var extensions = GLctx.getSupportedExtensions();
        for(var e in extensions) {
          var ext = extensions[e].replace('MOZ_', '').replace('WEBKIT_', '');
          if (automaticallyEnabledExtensions.indexOf(ext) != -1) {
            GLctx.getExtension(ext); // Calling .getExtension enables that extension permanently, no need to store the return value to be enabled.
          }
        }
      },populateUniformTable:function (program) {
        var p = GL.programs[program];
        GL.programInfos[program] = {
          uniforms: {},
          maxUniformLength: 0, // This is eagerly computed below, since we already enumerate all uniforms anyway.
          maxAttributeLength: -1 // This is lazily computed and cached, computed when/if first asked, "-1" meaning not computed yet.
        };
  
        var ptable = GL.programInfos[program];
        var utable = ptable.uniforms;
        // A program's uniform table maps the string name of an uniform to an integer location of that uniform.
        // The global GL.uniforms map maps integer locations to WebGLUniformLocations.
        var numUniforms = GLctx.getProgramParameter(p, GLctx.ACTIVE_UNIFORMS);
        for (var i = 0; i < numUniforms; ++i) {
          var u = GLctx.getActiveUniform(p, i);
  
          var name = u.name;
          ptable.maxUniformLength = Math.max(ptable.maxUniformLength, name.length+1);
  
          // Strip off any trailing array specifier we might have got, e.g. "[0]".
          if (name.indexOf(']', name.length-1) !== -1) {
            var ls = name.lastIndexOf('[');
            name = name.slice(0, ls);
          }
  
          // Optimize memory usage slightly: If we have an array of uniforms, e.g. 'vec3 colors[3];', then 
          // only store the string 'colors' in utable, and 'colors[0]', 'colors[1]' and 'colors[2]' will be parsed as 'colors'+i.
          // Note that for the GL.uniforms table, we still need to fetch the all WebGLUniformLocations for all the indices.
          var loc = GLctx.getUniformLocation(p, name);
          var id = GL.getNewId(GL.uniforms);
          utable[name] = [u.size, id];
          GL.uniforms[id] = loc;
  
          for (var j = 1; j < u.size; ++j) {
            var n = name + '['+j+']';
            loc = GLctx.getUniformLocation(p, n);
            id = GL.getNewId(GL.uniforms);
  
            GL.uniforms[id] = loc;
          }
        }
      }};function _glPopMatrix() {
      GLImmediate.matricesModified = true;
      GLImmediate.matrixVersion[GLImmediate.currentMatrix] = (GLImmediate.matrixVersion[GLImmediate.currentMatrix] + 1)|0;
      GLImmediate.matrix[GLImmediate.currentMatrix] = GLImmediate.matrixStack[GLImmediate.currentMatrix].pop();
    }

  var _UItoF=true;

  function _glClearColor(x0, x1, x2, x3) { GLctx.clearColor(x0, x1, x2, x3) }

   
  Module["_i64Add"] = _i64Add;

  function _setlocale(category, locale) {
      if (!_setlocale.ret) _setlocale.ret = allocate([0], 'i8', ALLOC_NORMAL);
      return _setlocale.ret;
    }

  
  
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value;
      return value;
    }
  
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            continue;
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          if (stream.tty.output.length) {
            stream.tty.ops.put_char(stream.tty, 10);
          }
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              result = process['stdin']['read']();
              if (!result) {
                if (process['stdin']['_readableState'] && process['stdin']['_readableState']['ended']) {
                  return null;  // EOF
                }
                return undefined;  // no data available
              }
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }}};
  
  var MEMFS={ops_table:null,CONTENT_OWNING:1,CONTENT_FLEXIBLE:2,CONTENT_FIXED:3,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            },
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.contents = [];
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },ensureFlexible:function (node) {
        if (node.contentMode !== MEMFS.CONTENT_FLEXIBLE) {
          var contents = node.contents;
          node.contents = Array.prototype.slice.call(contents);
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        }
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.contents.length;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.ensureFlexible(node);
            var contents = node.contents;
            if (attr.size < contents.length) contents.length = attr.size;
            else while (attr.size > contents.length) contents.push(0);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else
          {
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          var node = stream.node;
          node.timestamp = Date.now();
          var contents = node.contents;
          if (length && contents.length === 0 && position === 0 && buffer.subarray) {
            // just replace it with the new data
            if (canOwn && offset === 0) {
              node.contents = buffer; // this could be a subarray of Emscripten HEAP, or allocated from some other source.
              node.contentMode = (buffer.buffer === HEAP8.buffer) ? MEMFS.CONTENT_OWNING : MEMFS.CONTENT_FIXED;
            } else {
              node.contents = new Uint8Array(buffer.subarray(offset, offset+length));
              node.contentMode = MEMFS.CONTENT_FIXED;
            }
            return length;
          }
          MEMFS.ensureFlexible(node);
          var contents = node.contents;
          while (contents.length < position) contents.push(0);
          for (var i = 0; i < length; i++) {
            contents[position + i] = buffer[offset + i];
          }
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.contents.length;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.ungotten = [];
          stream.position = position;
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.ensureFlexible(stream.node);
          var contents = stream.node.contents;
          var limit = offset + length;
          while (limit > contents.length) contents.push(0);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < contents.length) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          fileStore.createIndex('timestamp', 'timestamp', { unique: false });
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function() {
          callback(this.error);
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function() { callback(this.error); };
  
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          var index = store.index('timestamp');
  
          index.openKeyCursor().onsuccess = function(event) {
            var cursor = event.target.result;
  
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, entries: entries });
            }
  
            entries[cursor.primaryKey] = { timestamp: cursor.key };
  
            cursor.continue();
          };
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { encoding: 'binary', canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function() { callback(this.error); };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function() { done(this.error); };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so 
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          return flags;
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
  
          stream.position = position;
          return position;
        }}};
  
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
      // we don't currently perform any user-space buffering of data
    }var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
              
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); },
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); },
            },
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 2097155;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        return FS.nodePermissions(dir, 'x');
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        // clone it, so we can return an instance of FSStream
        var newStream = new FS.FSStream();
        for (var p in stream) {
          newStream[p] = stream[p];
        }
        stream = newStream;
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },getStreamFromPtr:function (ptr) {
        return FS.streams[ptr - 1];
      },getPtrForStream:function (stream) {
        return stream ? stream.fd + 1 : 0;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            callback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return link.node_ops.readlink(link);
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // check permissions
        var err = FS.mayOpen(node, flags);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        return stream;
      },close:function (stream) {
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        return stream.stream_ops.llseek(stream, offset, whence);
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = '';
          var utf8 = new Runtime.UTF8Processor();
          for (var i = 0; i < length; i++) {
            ret += utf8.processCChar(buf[i]);
          }
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var utf8 = new Runtime.UTF8Processor();
          var buf = new Uint8Array(utf8.processJSString(data));
          FS.write(stream, buf, 0, buf.length, 0, opts.canOwn);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0, opts.canOwn);
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function() { return 0; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        HEAP32[((_stdin)>>2)]=FS.getPtrForStream(stdin);
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
  
        var stdout = FS.open('/dev/stdout', 'w');
        HEAP32[((_stdout)>>2)]=FS.getPtrForStream(stdout);
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
  
        var stderr = FS.open('/dev/stderr', 'w');
        HEAP32[((_stderr)>>2)]=FS.getPtrForStream(stderr);
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno) {
          this.errno = errno;
          for (var key in ERRNO_CODES) {
            if (ERRNO_CODES[key] === errno) {
              this.code = key;
              break;
            }
          }
          this.message = ERRNO_MESSAGES[errno];
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
        function LazyUint8Array() {
          this.lengthKnown = false;
          this.chunks = []; // Loaded chunks. Index is the chunk number
        }
        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
          if (idx > this.length-1 || idx < 0) {
            return undefined;
          }
          var chunkOffset = idx % this.chunkSize;
          var chunkNum = Math.floor(idx / this.chunkSize);
          return this.getter(chunkNum)[chunkOffset];
        }
        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
          this.getter = getter;
        }
        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
            // Find length
            var xhr = new XMLHttpRequest();
            xhr.open('HEAD', url, false);
            xhr.send(null);
            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
            var datalength = Number(xhr.getResponseHeader("Content-length"));
            var header;
            var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
            var chunkSize = 1024*1024; // Chunk size in bytes
  
            if (!hasByteServing) chunkSize = datalength;
  
            // Function to get a range from the remote URL.
            var doXHR = (function(from, to) {
              if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
              if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
              // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
              var xhr = new XMLHttpRequest();
              xhr.open('GET', url, false);
              if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
              // Some hints to the browser that we want binary data.
              if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
              if (xhr.overrideMimeType) {
                xhr.overrideMimeType('text/plain; charset=x-user-defined');
              }
  
              xhr.send(null);
              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
              if (xhr.response !== undefined) {
                return new Uint8Array(xhr.response || []);
              } else {
                return intArrayFromString(xhr.responseText || '', true);
              }
            });
            var lazyArray = this;
            lazyArray.setDataGetter(function(chunkNum) {
              var start = chunkNum * chunkSize;
              var end = (chunkNum+1) * chunkSize - 1; // including this byte
              end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
              if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
                lazyArray.chunks[chunkNum] = doXHR(start, end);
              }
              if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
              return lazyArray.chunks[chunkNum];
            });
  
            this._length = datalength;
            this._chunkSize = chunkSize;
            this.lengthKnown = true;
        }
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};function _close(fildes) {
      // int close(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/close.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        FS.close(stream);
        return 0;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  
  function _fsync(fildes) {
      // int fsync(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fsync.html
      var stream = FS.getStream(fildes);
      if (stream) {
        // We write directly to the file system, so there's nothing to do here.
        return 0;
      } else {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
    }
  
  function _fileno(stream) {
      // int fileno(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fileno.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) return -1;
      return stream.fd;
    }function _fclose(stream) {
      // int fclose(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fclose.html
      var fd = _fileno(stream);
      _fsync(fd);
      return _close(fd);
    }

  var _FtoIHigh=true;

  
  
  var Browser={mainLoop:{scheduler:null,method:"",shouldPause:false,paused:false,queue:[],pause:function () {
          Browser.mainLoop.shouldPause = true;
        },resume:function () {
          if (Browser.mainLoop.paused) {
            Browser.mainLoop.paused = false;
            Browser.mainLoop.scheduler();
          }
          Browser.mainLoop.shouldPause = false;
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
  
        if (Browser.initted || ENVIRONMENT_IS_WORKER) return;
        Browser.initted = true;
  
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
  
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
  
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
  
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
  
        // Canvas event setup
  
        var canvas = Module['canvas'];
        
        // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module
        // Module['forcedAspectRatio'] = 4 / 3;
        
        canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                    canvas['mozRequestPointerLock'] ||
                                    canvas['webkitRequestPointerLock'] ||
                                    canvas['msRequestPointerLock'] ||
                                    function(){};
        canvas.exitPointerLock = document['exitPointerLock'] ||
                                 document['mozExitPointerLock'] ||
                                 document['webkitExitPointerLock'] ||
                                 document['msExitPointerLock'] ||
                                 function(){}; // no-op if function does not exist
        canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
  
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas ||
                                document['msPointerLockElement'] === canvas;
        }
  
        document.addEventListener('pointerlockchange', pointerLockChange, false);
        document.addEventListener('mozpointerlockchange', pointerLockChange, false);
        document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
        document.addEventListener('mspointerlockchange', pointerLockChange, false);
  
        if (Module['elementPointerLock']) {
          canvas.addEventListener("click", function(ev) {
            if (!Browser.pointerLock && canvas.requestPointerLock) {
              canvas.requestPointerLock();
              ev.preventDefault();
            }
          }, false);
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        var ctx;
        var errorInfo = '?';
        function onContextCreationError(event) {
          errorInfo = event.statusMessage || errorInfo;
        }
        try {
          if (useWebGL) {
            var contextAttributes = {
              antialias: false,
              alpha: false
            };
  
            if (webGLContextAttributes) {
              for (var attribute in webGLContextAttributes) {
                contextAttributes[attribute] = webGLContextAttributes[attribute];
              }
            }
  
  
            canvas.addEventListener('webglcontextcreationerror', onContextCreationError, false);
            try {
              ['experimental-webgl', 'webgl'].some(function(webglId) {
                return ctx = canvas.getContext(webglId, contextAttributes);
              });
            } finally {
              canvas.removeEventListener('webglcontextcreationerror', onContextCreationError, false);
            }
          } else {
            ctx = canvas.getContext('2d');
          }
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas: ' + [errorInfo, e]);
          return null;
        }
        if (useWebGL) {
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
  
          // Warn on context loss
          canvas.addEventListener('webglcontextlost', function(event) {
            alert('WebGL context lost. You will need to reload the page.');
          }, false);
        }
        if (setInModule) {
          GLctx = Module.ctx = ctx;
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
  
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          var canvasContainer = canvas.parentNode;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement'] ||
               document['msFullScreenElement'] || document['msFullscreenElement'] ||
               document['webkitCurrentFullScreenElement']) === canvasContainer) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'] ||
                                      document['msExitFullscreen'] ||
                                      document['exitFullscreen'] ||
                                      function() {};
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else {
            
            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen
            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);
            canvasContainer.parentNode.removeChild(canvasContainer);
            
            if (Browser.resizeCanvas) Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
          Browser.updateCanvasDimensions(canvas);
        }
  
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
          document.addEventListener('MSFullscreenChange', fullScreenChange, false);
        }
  
        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root
        var canvasContainer = document.createElement("div");
        canvas.parentNode.insertBefore(canvasContainer, canvas);
        canvasContainer.appendChild(canvas);
        
        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)
        canvasContainer.requestFullScreen = canvasContainer['requestFullScreen'] ||
                                            canvasContainer['mozRequestFullScreen'] ||
                                            canvasContainer['msRequestFullscreen'] ||
                                           (canvasContainer['webkitRequestFullScreen'] ? function() { canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvasContainer.requestFullScreen();
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          setTimeout(func, 1000/60);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           window['setTimeout'];
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (!ABORT) func();
        });
      },safeSetTimeout:function (func, timeout) {
        return setTimeout(function() {
          if (!ABORT) func();
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        return setInterval(function() {
          if (!ABORT) func();
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },getMouseWheelDelta:function (event) {
        return Math.max(-1, Math.min(1, event.type === 'DOMMouseScroll' ? event.detail : -event.wheelDelta));
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
  
          // Neither .scrollX or .pageXOffset are defined in a spec, but
          // we prefer .scrollX because it is currently in a spec draft.
          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
          var scrollX = ((typeof window.scrollX !== 'undefined') ? window.scrollX : window.pageXOffset);
          var scrollY = ((typeof window.scrollY !== 'undefined') ? window.scrollY : window.pageYOffset);
  
          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {
            var touch = event.touch;
            if (touch === undefined) {
              return; // the "touch" property is only defined in SDL
  
            }
            var adjustedX = touch.pageX - (scrollX + rect.left);
            var adjustedY = touch.pageY - (scrollY + rect.top);
  
            adjustedX = adjustedX * (cw / rect.width);
            adjustedY = adjustedY * (ch / rect.height);
  
            var coords = { x: adjustedX, y: adjustedY };
            
            if (event.type === 'touchstart') {
              Browser.lastTouches[touch.identifier] = coords;
              Browser.touches[touch.identifier] = coords;
            } else if (event.type === 'touchend' || event.type === 'touchmove') {
              Browser.lastTouches[touch.identifier] = Browser.touches[touch.identifier];
              Browser.touches[touch.identifier] = { x: adjustedX, y: adjustedY };
            } 
            return;
          }
  
          var x = event.pageX - (scrollX + rect.left);
          var y = event.pageY - (scrollY + rect.top);
  
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
  
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        Browser.updateCanvasDimensions(canvas, width, height);
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },updateCanvasDimensions:function (canvas, wNative, hNative) {
        if (wNative && hNative) {
          canvas.widthNative = wNative;
          canvas.heightNative = hNative;
        } else {
          wNative = canvas.widthNative;
          hNative = canvas.heightNative;
        }
        var w = wNative;
        var h = hNative;
        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {
          if (w/h < Module['forcedAspectRatio']) {
            w = Math.round(h * Module['forcedAspectRatio']);
          } else {
            h = Math.round(w / Module['forcedAspectRatio']);
          }
        }
        if (((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
             document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
             document['fullScreenElement'] || document['fullscreenElement'] ||
             document['msFullScreenElement'] || document['msFullscreenElement'] ||
             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {
           var factor = Math.min(screen.width / w, screen.height / h);
           w = Math.round(w * factor);
           h = Math.round(h * factor);
        }
        if (Browser.resizeCanvas) {
          if (canvas.width  != w) canvas.width  = w;
          if (canvas.height != h) canvas.height = h;
          if (typeof canvas.style != 'undefined') {
            canvas.style.removeProperty( "width");
            canvas.style.removeProperty("height");
          }
        } else {
          if (canvas.width  != wNative) canvas.width  = wNative;
          if (canvas.height != hNative) canvas.height = hNative;
          if (typeof canvas.style != 'undefined') {
            if (w != wNative || h != hNative) {
              canvas.style.setProperty( "width", w + "px", "important");
              canvas.style.setProperty("height", h + "px", "important");
            } else {
              canvas.style.removeProperty( "width");
              canvas.style.removeProperty("height");
            }
          }
        }
      }};var AL={contexts:[],currentContext:null,stringCache:{},alcStringCache:{},QUEUE_INTERVAL:25,QUEUE_LOOKAHEAD:100,updateSources:function updateSources(context) {
        for (var i = 0; i < context.src.length; i++) {
          AL.updateSource(context.src[i]);
        }
      },updateSource:function updateSource(src) {
        if (src.state !== 0x1012 /* AL_PLAYING */) {
          return;
        }
  
        var currentTime = AL.currentContext.ctx.currentTime;
        var startTime = src.bufferPosition;
  
        for (var i = src.buffersPlayed; i < src.queue.length; i++) {
          var entry = src.queue[i];
  
          var startOffset = startTime - currentTime;
          var endTime = startTime + entry.buffer.duration;
  
          // Clean up old buffers.
          if (currentTime >= endTime) {
            // Update our location in the queue.
            src.bufferPosition = endTime;
            src.buffersPlayed = i + 1;
  
            // Stop / restart the source when we hit the end.
            if (src.buffersPlayed >= src.queue.length) {
              if (src.loop) {
                AL.setSourceState(src, 0x1012 /* AL_PLAYING */);
              } else {
                AL.setSourceState(src, 0x1014 /* AL_STOPPED */);
              }
            }
          }
          // Process all buffers that'll be played before the next tick.
          else if (startOffset < (AL.QUEUE_LOOKAHEAD / 1000) && !entry.src) {
            // If the start offset is negative, we need to offset the actual buffer.
            var offset = Math.abs(Math.min(startOffset, 0));
  
            entry.src = AL.currentContext.ctx.createBufferSource();
            entry.src.buffer = entry.buffer;
            entry.src.connect(src.gain);
            if (typeof(entry.src.start) !== 'undefined') {
              entry.src.start(startTime, offset);
            } else if (typeof(entry.src.noteOn) !== 'undefined') {
              entry.src.noteOn(startTime);
            }
          }
  
          startTime = endTime;
        }
      },setSourceState:function setSourceState(src, state) {
        if (state === 0x1012 /* AL_PLAYING */) {
          if (src.state !== 0x1013 /* AL_PAUSED */) {
            src.state = 0x1012 /* AL_PLAYING */;
            // Reset our position.
            src.bufferPosition = AL.currentContext.ctx.currentTime;
            src.buffersPlayed = 0;
          } else {
            src.state = 0x1012 /* AL_PLAYING */;
            // Use the current offset from src.bufferPosition to resume at the correct point.
            src.bufferPosition = AL.currentContext.ctx.currentTime - src.bufferPosition;
          }
          AL.stopSourceQueue(src);
          AL.updateSource(src);
        } else if (state === 0x1013 /* AL_PAUSED */) {
          if (src.state === 0x1012 /* AL_PLAYING */) {
            src.state = 0x1013 /* AL_PAUSED */;
            // Store off the current offset to restore with on resume.
            src.bufferPosition = AL.currentContext.ctx.currentTime - src.bufferPosition;
            AL.stopSourceQueue(src);
          }
        } else if (state === 0x1014 /* AL_STOPPED */) {
          if (src.state !== 0x1011 /* AL_INITIAL */) {
            src.state = 0x1014 /* AL_STOPPED */;
            src.buffersPlayed = src.queue.length;
            AL.stopSourceQueue(src);
          }
        } else if (state == 0x1011 /* AL_INITIAL */) {
          if (src.state !== 0x1011 /* AL_INITIAL */) {
            src.state = 0x1011 /* AL_INITIAL */;
            src.bufferPosition = 0;
            src.buffersPlayed = 0;
          }
        }
      },stopSourceQueue:function stopSourceQueue(src) {
        for (var i = 0; i < src.queue.length; i++) {
          var entry = src.queue[i];
          if (entry.src) {
            entry.src.stop(0);
            entry.src = null;
          }
        }
      }};function _alGetSourcef(source, param, value) {
      if (!AL.currentContext) {
        return;
      }
      var src = AL.currentContext.src[source - 1];
      if (!src) {
        AL.currentContext.err = 0xA001 /* AL_INVALID_NAME */;
        return;
      }
      switch (param) {
      // case 0x1003 /* AL_PITCH */:
      //   break;
      case 0x100A /* AL_GAIN */:
        HEAPF32[((value)>>2)]=src.gain.gain.value
        break;
      // case 0x100D /* AL_MIN_GAIN */:
      //   break;
      // case 0x100E /* AL_MAX_GAIN */:
      //   break;
      case 0x1023 /* AL_MAX_DISTANCE */:
        HEAPF32[((value)>>2)]=src.maxDistance
        break;
      case 0x1021 /* AL_ROLLOFF_FACTOR */:
        HEAPF32[((value)>>2)]=src.rolloffFactor
        break;
      case 0x1022 /* AL_CONE_OUTER_GAIN */:
        HEAPF32[((value)>>2)]=src.coneOuterGain
        break;
      case 0x1001 /* AL_CONE_INNER_ANGLE */:
        HEAPF32[((value)>>2)]=src.coneInnerAngle
        break;
      case 0x1002 /* AL_CONE_OUTER_ANGLE */:
        HEAPF32[((value)>>2)]=src.coneOuterAngle
        break;
      case 0x1020 /* AL_REFERENCE_DISTANCE */:
        HEAPF32[((value)>>2)]=src.refDistance
        break;
      // case 0x1024 /* AL_SEC_OFFSET */:
      //   break;
      // case 0x1025 /* AL_SAMPLE_OFFSET */:
      //   break;
      // case 0x1026 /* AL_BYTE_OFFSET */:
      //   break;
      default:
        AL.currentContext.err = 0xA002 /* AL_INVALID_ENUM */;
        break;
      }
    }

  
  var GLFW={keyFunc:null,charFunc:null,mouseButtonFunc:null,mousePosFunc:null,mouseWheelFunc:null,resizeFunc:null,closeFunc:null,refreshFunc:null,params:null,initTime:null,wheelPos:0,buttons:0,keys:0,initWindowWidth:640,initWindowHeight:480,windowX:0,windowY:0,windowWidth:0,windowHeight:0,DOMToGLFWKeyCode:function (keycode) {
        switch (keycode) {
          case 0x08: return 295 ; // DOM_VK_BACKSPACE -> GLFW_KEY_BACKSPACE
          case 0x09: return 293 ; // DOM_VK_TAB -> GLFW_KEY_TAB
          case 0x0D: return 294 ; // DOM_VK_ENTER -> GLFW_KEY_ENTER
          case 0x1B: return 257 ; // DOM_VK_ESCAPE -> GLFW_KEY_ESC
          case 0x6A: return 313 ; // DOM_VK_MULTIPLY -> GLFW_KEY_KP_MULTIPLY
          case 0x6B: return 315 ; // DOM_VK_ADD -> GLFW_KEY_KP_ADD
          case 0x6D: return 314 ; // DOM_VK_SUBTRACT -> GLFW_KEY_KP_SUBTRACT
          case 0x6E: return 316 ; // DOM_VK_DECIMAL -> GLFW_KEY_KP_DECIMAL
          case 0x6F: return 312 ; // DOM_VK_DIVIDE -> GLFW_KEY_KP_DIVIDE
          case 0x70: return 258 ; // DOM_VK_F1 -> GLFW_KEY_F1
          case 0x71: return 259 ; // DOM_VK_F2 -> GLFW_KEY_F2
          case 0x72: return 260 ; // DOM_VK_F3 -> GLFW_KEY_F3
          case 0x73: return 261 ; // DOM_VK_F4 -> GLFW_KEY_F4
          case 0x74: return 262 ; // DOM_VK_F5 -> GLFW_KEY_F5
          case 0x75: return 263 ; // DOM_VK_F6 -> GLFW_KEY_F6
          case 0x76: return 264 ; // DOM_VK_F7 -> GLFW_KEY_F7
          case 0x77: return 265 ; // DOM_VK_F8 -> GLFW_KEY_F8
          case 0x78: return 266 ; // DOM_VK_F9 -> GLFW_KEY_F9
          case 0x79: return 267 ; // DOM_VK_F10 -> GLFW_KEY_F10
          case 0x7a: return 268 ; // DOM_VK_F11 -> GLFW_KEY_F11
          case 0x7b: return 269 ; // DOM_VK_F12 -> GLFW_KEY_F12
          case 0x25: return 285 ; // DOM_VK_LEFT -> GLFW_KEY_LEFT
          case 0x26: return 283 ; // DOM_VK_UP -> GLFW_KEY_UP
          case 0x27: return 286 ; // DOM_VK_RIGHT -> GLFW_KEY_RIGHT
          case 0x28: return 284 ; // DOM_VK_DOWN -> GLFW_KEY_DOWN
          case 0x21: return 298 ; // DOM_VK_PAGE_UP -> GLFW_KEY_PAGEUP
          case 0x22: return 299 ; // DOM_VK_PAGE_DOWN -> GLFW_KEY_PAGEDOWN
          case 0x24: return 300 ; // DOM_VK_HOME -> GLFW_KEY_HOME
          case 0x23: return 301 ; // DOM_VK_END -> GLFW_KEY_END
          case 0x2d: return 296 ; // DOM_VK_INSERT -> GLFW_KEY_INSERT
          case 16  : return 287 ; // DOM_VK_SHIFT -> GLFW_KEY_LSHIFT
          case 0x05: return 287 ; // DOM_VK_LEFT_SHIFT -> GLFW_KEY_LSHIFT
          case 0x06: return 288 ; // DOM_VK_RIGHT_SHIFT -> GLFW_KEY_RSHIFT
          case 17  : return 289 ; // DOM_VK_CONTROL -> GLFW_KEY_LCTRL
          case 0x03: return 289 ; // DOM_VK_LEFT_CONTROL -> GLFW_KEY_LCTRL
          case 0x04: return 290 ; // DOM_VK_RIGHT_CONTROL -> GLFW_KEY_RCTRL
          case 18  : return 291 ; // DOM_VK_ALT -> GLFW_KEY_LALT
          case 0x02: return 291 ; // DOM_VK_LEFT_ALT -> GLFW_KEY_LALT
          case 0x01: return 292 ; // DOM_VK_RIGHT_ALT -> GLFW_KEY_RALT
          case 96  : return 302 ; // GLFW_KEY_KP_0
          case 97  : return 303 ; // GLFW_KEY_KP_1
          case 98  : return 304 ; // GLFW_KEY_KP_2
          case 99  : return 305 ; // GLFW_KEY_KP_3
          case 100 : return 306 ; // GLFW_KEY_KP_4
          case 101 : return 307 ; // GLFW_KEY_KP_5
          case 102 : return 308 ; // GLFW_KEY_KP_6
          case 103 : return 309 ; // GLFW_KEY_KP_7
          case 104 : return 310 ; // GLFW_KEY_KP_8
          case 105 : return 311 ; // GLFW_KEY_KP_9
          default  : return keycode;
        };
      },getUnicodeChar:function (value) {
        var output = '';
        if (value > 0xFFFF) {
          value -= 0x10000;
          output += String.fromCharCode(value >>> 10 & 0x3FF | 0xD800);
          value = 0xDC00 | value & 0x3FF;
        }
        output += String.fromCharCode(value);
        return output;
      },onKeyPress:function (event) {
        // charCode is only available whith onKeyPress event
        var char = GLFW.getUnicodeChar(event.charCode);
  
        if (event.charCode) {
          var char = GLFW.getUnicodeChar(event.charCode);
          if (char !== null && GLFW.charFunc) {
            Runtime.dynCall('vii', GLFW.charFunc, [event.charCode, 1]);
          }
        }
      },onKeyChanged:function (event, status) {
        var key = GLFW.DOMToGLFWKeyCode(event.keyCode);
        if (key && GLFW.keyFunc) {
          GLFW.keys[key] = status;
          Runtime.dynCall('vii', GLFW.keyFunc, [key, status]);
        }
      },onKeydown:function (event) {
        GLFW.onKeyChanged(event, 1);// GLFW_PRESS
        // This logic comes directly from the sdl implementation. We cannot
        // call preventDefault on all keydown events otherwise onKeyPress will
        // not get called
        if (event.keyCode === 8 /* backspace */ || event.keyCode === 9 /* tab */) {
          event.preventDefault();
        }
      },onKeyup:function (event) {
        GLFW.onKeyChanged(event, 0);// GLFW_RELEASE
      },onMousemove:function (event) {
        /* Send motion event only if the motion changed, prevents
         * spamming our app with uncessary callback call. It does happen in
         * Chrome on Windows.
         */
        var lastX = Browser.mouseX;
        var lastY = Browser.mouseY;
        Browser.calculateMouseEvent(event);
        var newX = Browser.mouseX;
        var newY = Browser.mouseY;
  
        if (event.target == Module["canvas"] && GLFW.mousePosFunc) {
          event.preventDefault();
          Runtime.dynCall('vii', GLFW.mousePosFunc, [lastX, lastY]);
        }
      },onMouseButtonChanged:function (event, status) {
        if (GLFW.mouseButtonFunc == null) {
          return;
        }
  
        Browser.calculateMouseEvent(event);
  
        if (event.target != Module["canvas"]) {
          return;
        }
  
        if (status == 1) {// GLFW_PRESS
          try {
            event.target.setCapture();
          } catch (e) {}
        }
  
        event.preventDefault();
  
        // DOM and glfw have different button codes
        var eventButton = event['button'];
        if (eventButton > 0) {
          if (eventButton == 1) {
            eventButton = 2;
          } else {
            eventButton = 1;
          }
        }
        Runtime.dynCall('vii', GLFW.mouseButtonFunc, [eventButton, status]);
      },onMouseButtonDown:function (event) {
        GLFW.buttons |= (1 << event['button']);
        GLFW.onMouseButtonChanged(event, 1);// GLFW_PRESS
      },onMouseButtonUp:function (event) {
        GLFW.buttons &= ~(1 << event['button']);
        GLFW.onMouseButtonChanged(event, 0);// GLFW_RELEASE
      },onMouseWheel:function (event) {
        GLFW.wheelPos += Browser.getMouseWheelDelta(event);
  
        if (GLFW.mouseWheelFunc && event.target == Module["canvas"]) {
          Runtime.dynCall('vi', GLFW.mouseWheelFunc, [GLFW.wheelPos]);
          event.preventDefault();
        }
      },onFullScreenEventChange:function (event) {
        var width;
        var height;
        if (document["fullScreen"] || document["mozFullScreen"] || document["webkitIsFullScreen"]) {
          width = screen["width"];
          height = screen["height"];
        } else {
          width = GLFW.windowWidth;
          height = GLFW.windowHeight;
          // TODO set position
          document.removeEventListener('fullscreenchange', GLFW.onFullScreenEventChange, true);
          document.removeEventListener('mozfullscreenchange', GLFW.onFullScreenEventChange, true);
          document.removeEventListener('webkitfullscreenchange', GLFW.onFullScreenEventChange, true);
        }
        Browser.setCanvasSize(width, height);
  
        if (GLFW.resizeFunc) {
          Runtime.dynCall('vii', GLFW.resizeFunc, [width, height]);
        }
      },requestFullScreen:function () {
        var RFS = Module["canvas"]['requestFullscreen'] ||
                  Module["canvas"]['requestFullScreen'] ||
                  Module["canvas"]['mozRequestFullScreen'] ||
                  Module["canvas"]['webkitRequestFullScreen'] ||
                  (function() {});
        RFS.apply(Module["canvas"], []);
      },cancelFullScreen:function () {
        var CFS = document['exitFullscreen'] ||
                  document['cancelFullScreen'] ||
                  document['mozCancelFullScreen'] ||
                  document['webkitCancelFullScreen'] ||
            (function() {});
        CFS.apply(document, []);
      }};function _glfwTerminate() {}

  function _alcCreateContext(device, attrList) {
      if (device != 1) {
        return 0;
      }
  
      if (attrList) {
        return 0;
      }
  
      var ctx;
      try {
        ctx = new AudioContext();
      } catch (e) {
        try {
          ctx = new webkitAudioContext();
        } catch (e) {}
      }
  
      if (ctx) {
        // Old Web Audio API (e.g. Safari 6.0.5) had an inconsistently named createGainNode function.
        if (typeof(ctx.createGain) === 'undefined') ctx.createGain = ctx.createGainNode;
  
        var gain = ctx.createGain();
        gain.connect(ctx.destination);
        var context = {
          ctx: ctx,
          err: 0,
          src: [],
          buf: [],
          interval: setInterval(function() { AL.updateSources(context); }, AL.QUEUE_INTERVAL),
          gain: gain
        };
        AL.contexts.push(context);
        return AL.contexts.length;
      } else {
        return 0;
      }
    }

  
  var _setSourceState=undefined;function _alSourceStop(source) {
      if (!AL.currentContext) {
        return;
      }
      var src = AL.currentContext.src[source - 1];
      if (!src) {
        AL.currentContext.err = 0xA001 /* AL_INVALID_NAME */;
        return;
      }
      AL.setSourceState(src, 0x1014 /* AL_STOPPED */);
    }

  function _alcCloseDevice(device) {
      // Stop playback, etc
    }

  
  
  
  
  
  
  function _mkport() { throw 'TODO' }var SOCKFS={mount:function (mount) {
        return FS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createSocket:function (family, type, protocol) {
        var streaming = type == 1;
        if (protocol) {
          assert(streaming == (protocol == 6)); // if SOCK_STREAM, must be tcp
        }
  
        // create our internal socket structure
        var sock = {
          family: family,
          type: type,
          protocol: protocol,
          server: null,
          peers: {},
          pending: [],
          recv_queue: [],
          sock_ops: SOCKFS.websocket_sock_ops
        };
  
        // create the filesystem node to store the socket structure
        var name = SOCKFS.nextname();
        var node = FS.createNode(SOCKFS.root, name, 49152, 0);
        node.sock = sock;
  
        // and the wrapping stream that enables library functions such
        // as read and write to indirectly interact with the socket
        var stream = FS.createStream({
          path: name,
          node: node,
          flags: FS.modeStringToFlags('r+'),
          seekable: false,
          stream_ops: SOCKFS.stream_ops
        });
  
        // map the new stream to the socket structure (sockets have a 1:1
        // relationship with a stream)
        sock.stream = stream;
  
        return sock;
      },getSocket:function (fd) {
        var stream = FS.getStream(fd);
        if (!stream || !FS.isSocket(stream.node.mode)) {
          return null;
        }
        return stream.node.sock;
      },stream_ops:{poll:function (stream) {
          var sock = stream.node.sock;
          return sock.sock_ops.poll(sock);
        },ioctl:function (stream, request, varargs) {
          var sock = stream.node.sock;
          return sock.sock_ops.ioctl(sock, request, varargs);
        },read:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          var msg = sock.sock_ops.recvmsg(sock, length);
          if (!msg) {
            // socket is closed
            return 0;
          }
          buffer.set(msg.buffer, offset);
          return msg.buffer.length;
        },write:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          return sock.sock_ops.sendmsg(sock, buffer, offset, length);
        },close:function (stream) {
          var sock = stream.node.sock;
          sock.sock_ops.close(sock);
        }},nextname:function () {
        if (!SOCKFS.nextname.current) {
          SOCKFS.nextname.current = 0;
        }
        return 'socket[' + (SOCKFS.nextname.current++) + ']';
      },websocket_sock_ops:{createPeer:function (sock, addr, port) {
          var ws;
  
          if (typeof addr === 'object') {
            ws = addr;
            addr = null;
            port = null;
          }
  
          if (ws) {
            // for sockets that've already connected (e.g. we're the server)
            // we can inspect the _socket property for the address
            if (ws._socket) {
              addr = ws._socket.remoteAddress;
              port = ws._socket.remotePort;
            }
            // if we're just now initializing a connection to the remote,
            // inspect the url property
            else {
              var result = /ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);
              if (!result) {
                throw new Error('WebSocket URL must be in the format ws(s)://address:port');
              }
              addr = result[1];
              port = parseInt(result[2], 10);
            }
          } else {
            // create the actual websocket object and connect
            try {
              // runtimeConfig gets set to true if WebSocket runtime configuration is available.
              var runtimeConfig = (Module['websocket'] && ('object' === typeof Module['websocket']));
  
              // The default value is 'ws://' the replace is needed because the compiler replaces "//" comments with '#'
              // comments without checking context, so we'd end up with ws:#, the replace swaps the "#" for "//" again.
              var url = 'ws:#'.replace('#', '//');
  
              if (runtimeConfig) {
                if ('string' === typeof Module['websocket']['url']) {
                  url = Module['websocket']['url']; // Fetch runtime WebSocket URL config.
                }
              }
  
              if (url === 'ws://' || url === 'wss://') { // Is the supplied URL config just a prefix, if so complete it.
                url = url + addr + ':' + port;
              }
  
              // Make the WebSocket subprotocol (Sec-WebSocket-Protocol) default to binary if no configuration is set.
              var subProtocols = 'binary'; // The default value is 'binary'
  
              if (runtimeConfig) {
                if ('string' === typeof Module['websocket']['subprotocol']) {
                  subProtocols = Module['websocket']['subprotocol']; // Fetch runtime WebSocket subprotocol config.
                }
              }
  
              // The regex trims the string (removes spaces at the beginning and end, then splits the string by
              // <any space>,<any space> into an Array. Whitespace removal is important for Websockify and ws.
              subProtocols = subProtocols.replace(/^ +| +$/g,"").split(/ *, */);
  
              // The node ws library API for specifying optional subprotocol is slightly different than the browser's.
              var opts = ENVIRONMENT_IS_NODE ? {'protocol': subProtocols.toString()} : subProtocols;
  
              // If node we use the ws library.
              var WebSocket = ENVIRONMENT_IS_NODE ? require('ws') : window['WebSocket'];
              ws = new WebSocket(url, opts);
              ws.binaryType = 'arraybuffer';
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);
            }
          }
  
  
          var peer = {
            addr: addr,
            port: port,
            socket: ws,
            dgram_send_queue: []
          };
  
          SOCKFS.websocket_sock_ops.addPeer(sock, peer);
          SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer);
  
          // if this is a bound dgram socket, send the port number first to allow
          // us to override the ephemeral port reported to us by remotePort on the
          // remote end.
          if (sock.type === 2 && typeof sock.sport !== 'undefined') {
            peer.dgram_send_queue.push(new Uint8Array([
                255, 255, 255, 255,
                'p'.charCodeAt(0), 'o'.charCodeAt(0), 'r'.charCodeAt(0), 't'.charCodeAt(0),
                ((sock.sport & 0xff00) >> 8) , (sock.sport & 0xff)
            ]));
          }
  
          return peer;
        },getPeer:function (sock, addr, port) {
          return sock.peers[addr + ':' + port];
        },addPeer:function (sock, peer) {
          sock.peers[peer.addr + ':' + peer.port] = peer;
        },removePeer:function (sock, peer) {
          delete sock.peers[peer.addr + ':' + peer.port];
        },handlePeerEvents:function (sock, peer) {
          var first = true;
  
          var handleOpen = function () {
            try {
              var queued = peer.dgram_send_queue.shift();
              while (queued) {
                peer.socket.send(queued);
                queued = peer.dgram_send_queue.shift();
              }
            } catch (e) {
              // not much we can do here in the way of proper error handling as we've already
              // lied and said this data was sent. shut it down.
              peer.socket.close();
            }
          };
  
          function handleMessage(data) {
            assert(typeof data !== 'string' && data.byteLength !== undefined);  // must receive an ArrayBuffer
            data = new Uint8Array(data);  // make a typed array view on the array buffer
  
  
            // if this is the port message, override the peer's port with it
            var wasfirst = first;
            first = false;
            if (wasfirst &&
                data.length === 10 &&
                data[0] === 255 && data[1] === 255 && data[2] === 255 && data[3] === 255 &&
                data[4] === 'p'.charCodeAt(0) && data[5] === 'o'.charCodeAt(0) && data[6] === 'r'.charCodeAt(0) && data[7] === 't'.charCodeAt(0)) {
              // update the peer's port and it's key in the peer map
              var newport = ((data[8] << 8) | data[9]);
              SOCKFS.websocket_sock_ops.removePeer(sock, peer);
              peer.port = newport;
              SOCKFS.websocket_sock_ops.addPeer(sock, peer);
              return;
            }
  
            sock.recv_queue.push({ addr: peer.addr, port: peer.port, data: data });
          };
  
          if (ENVIRONMENT_IS_NODE) {
            peer.socket.on('open', handleOpen);
            peer.socket.on('message', function(data, flags) {
              if (!flags.binary) {
                return;
              }
              handleMessage((new Uint8Array(data)).buffer);  // copy from node Buffer -> ArrayBuffer
            });
            peer.socket.on('error', function() {
              // don't throw
            });
          } else {
            peer.socket.onopen = handleOpen;
            peer.socket.onmessage = function peer_socket_onmessage(event) {
              handleMessage(event.data);
            };
          }
        },poll:function (sock) {
          if (sock.type === 1 && sock.server) {
            // listen sockets should only say they're available for reading
            // if there are pending clients.
            return sock.pending.length ? (64 | 1) : 0;
          }
  
          var mask = 0;
          var dest = sock.type === 1 ?  // we only care about the socket state for connection-based sockets
            SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) :
            null;
  
          if (sock.recv_queue.length ||
              !dest ||  // connection-less sockets are always ready to read
              (dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {  // let recv return 0 once closed
            mask |= (64 | 1);
          }
  
          if (!dest ||  // connection-less sockets are always ready to write
              (dest && dest.socket.readyState === dest.socket.OPEN)) {
            mask |= 4;
          }
  
          if ((dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {
            mask |= 16;
          }
  
          return mask;
        },ioctl:function (sock, request, arg) {
          switch (request) {
            case 21531:
              var bytes = 0;
              if (sock.recv_queue.length) {
                bytes = sock.recv_queue[0].data.length;
              }
              HEAP32[((arg)>>2)]=bytes;
              return 0;
            default:
              return ERRNO_CODES.EINVAL;
          }
        },close:function (sock) {
          // if we've spawned a listen server, close it
          if (sock.server) {
            try {
              sock.server.close();
            } catch (e) {
            }
            sock.server = null;
          }
          // close any peer connections
          var peers = Object.keys(sock.peers);
          for (var i = 0; i < peers.length; i++) {
            var peer = sock.peers[peers[i]];
            try {
              peer.socket.close();
            } catch (e) {
            }
            SOCKFS.websocket_sock_ops.removePeer(sock, peer);
          }
          return 0;
        },bind:function (sock, addr, port) {
          if (typeof sock.saddr !== 'undefined' || typeof sock.sport !== 'undefined') {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already bound
          }
          sock.saddr = addr;
          sock.sport = port || _mkport();
          // in order to emulate dgram sockets, we need to launch a listen server when
          // binding on a connection-less socket
          // note: this is only required on the server side
          if (sock.type === 2) {
            // close the existing server if it exists
            if (sock.server) {
              sock.server.close();
              sock.server = null;
            }
            // swallow error operation not supported error that occurs when binding in the
            // browser where this isn't supported
            try {
              sock.sock_ops.listen(sock, 0);
            } catch (e) {
              if (!(e instanceof FS.ErrnoError)) throw e;
              if (e.errno !== ERRNO_CODES.EOPNOTSUPP) throw e;
            }
          }
        },connect:function (sock, addr, port) {
          if (sock.server) {
            throw new FS.ErrnoError(ERRNO_CODS.EOPNOTSUPP);
          }
  
          // TODO autobind
          // if (!sock.addr && sock.type == 2) {
          // }
  
          // early out if we're already connected / in the middle of connecting
          if (typeof sock.daddr !== 'undefined' && typeof sock.dport !== 'undefined') {
            var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
            if (dest) {
              if (dest.socket.readyState === dest.socket.CONNECTING) {
                throw new FS.ErrnoError(ERRNO_CODES.EALREADY);
              } else {
                throw new FS.ErrnoError(ERRNO_CODES.EISCONN);
              }
            }
          }
  
          // add the socket to our peer list and set our
          // destination address / port to match
          var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
          sock.daddr = peer.addr;
          sock.dport = peer.port;
  
          // always "fail" in non-blocking mode
          throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS);
        },listen:function (sock, backlog) {
          if (!ENVIRONMENT_IS_NODE) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
          if (sock.server) {
             throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already listening
          }
          var WebSocketServer = require('ws').Server;
          var host = sock.saddr;
          sock.server = new WebSocketServer({
            host: host,
            port: sock.sport
            // TODO support backlog
          });
  
          sock.server.on('connection', function(ws) {
            if (sock.type === 1) {
              var newsock = SOCKFS.createSocket(sock.family, sock.type, sock.protocol);
  
              // create a peer on the new socket
              var peer = SOCKFS.websocket_sock_ops.createPeer(newsock, ws);
              newsock.daddr = peer.addr;
              newsock.dport = peer.port;
  
              // push to queue for accept to pick up
              sock.pending.push(newsock);
            } else {
              // create a peer on the listen socket so calling sendto
              // with the listen socket and an address will resolve
              // to the correct client
              SOCKFS.websocket_sock_ops.createPeer(sock, ws);
            }
          });
          sock.server.on('closed', function() {
            sock.server = null;
          });
          sock.server.on('error', function() {
            // don't throw
          });
        },accept:function (listensock) {
          if (!listensock.server) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          var newsock = listensock.pending.shift();
          newsock.stream.flags = listensock.stream.flags;
          return newsock;
        },getname:function (sock, peer) {
          var addr, port;
          if (peer) {
            if (sock.daddr === undefined || sock.dport === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            }
            addr = sock.daddr;
            port = sock.dport;
          } else {
            // TODO saddr and sport will be set for bind()'d UDP sockets, but what
            // should we be returning for TCP sockets that've been connect()'d?
            addr = sock.saddr || 0;
            port = sock.sport || 0;
          }
          return { addr: addr, port: port };
        },sendmsg:function (sock, buffer, offset, length, addr, port) {
          if (sock.type === 2) {
            // connection-less sockets will honor the message address,
            // and otherwise fall back to the bound destination address
            if (addr === undefined || port === undefined) {
              addr = sock.daddr;
              port = sock.dport;
            }
            // if there was no address to fall back to, error out
            if (addr === undefined || port === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);
            }
          } else {
            // connection-based sockets will only use the bound
            addr = sock.daddr;
            port = sock.dport;
          }
  
          // find the peer for the destination address
          var dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);
  
          // early out if not connected with a connection-based socket
          if (sock.type === 1) {
            if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            } else if (dest.socket.readyState === dest.socket.CONNECTING) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // create a copy of the incoming data to send, as the WebSocket API
          // doesn't work entirely with an ArrayBufferView, it'll just send
          // the entire underlying buffer
          var data;
          if (buffer instanceof Array || buffer instanceof ArrayBuffer) {
            data = buffer.slice(offset, offset + length);
          } else {  // ArrayBufferView
            data = buffer.buffer.slice(buffer.byteOffset + offset, buffer.byteOffset + offset + length);
          }
  
          // if we're emulating a connection-less dgram socket and don't have
          // a cached connection, queue the buffer to send upon connect and
          // lie, saying the data was sent now.
          if (sock.type === 2) {
            if (!dest || dest.socket.readyState !== dest.socket.OPEN) {
              // if we're not connected, open a new connection
              if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
              }
              dest.dgram_send_queue.push(data);
              return length;
            }
          }
  
          try {
            // send the actual data
            dest.socket.send(data);
            return length;
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
        },recvmsg:function (sock, length) {
          // http://pubs.opengroup.org/onlinepubs/7908799/xns/recvmsg.html
          if (sock.type === 1 && sock.server) {
            // tcp servers should not be recv()'ing on the listen socket
            throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
          }
  
          var queued = sock.recv_queue.shift();
          if (!queued) {
            if (sock.type === 1) {
              var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
  
              if (!dest) {
                // if we have a destination address but are not connected, error out
                throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
              }
              else if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                // return null if the socket has closed
                return null;
              }
              else {
                // else, our socket is in a valid state but truly has nothing available
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
            } else {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // queued.data will be an ArrayBuffer if it's unadulterated, but if it's
          // requeued TCP data it'll be an ArrayBufferView
          var queuedLength = queued.data.byteLength || queued.data.length;
          var queuedOffset = queued.data.byteOffset || 0;
          var queuedBuffer = queued.data.buffer || queued.data;
          var bytesRead = Math.min(length, queuedLength);
          var res = {
            buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead),
            addr: queued.addr,
            port: queued.port
          };
  
  
          // push back any unread data for TCP connections
          if (sock.type === 1 && bytesRead < queuedLength) {
            var bytesRemaining = queuedLength - bytesRead;
            queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining);
            sock.recv_queue.unshift(queued);
          }
  
          return res;
        }}};function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var fd = _fileno(stream);
      var bytesWritten = _write(fd, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return Math.floor(bytesWritten / size);
      }
    }
  
  
   
  Module["_strlen"] = _strlen;
  
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        if (type === 'double') {
          ret = (HEAP32[((tempDoublePtr)>>2)]=HEAP32[(((varargs)+(argIndex))>>2)],HEAP32[(((tempDoublePtr)+(4))>>2)]=HEAP32[(((varargs)+((argIndex)+(4)))>>2)],(+(HEAPF64[(tempDoublePtr)>>3])));
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+4))>>2)]];
  
        } else {
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
        }
        argIndex += Runtime.getNativeFieldSize(type);
        return ret;
      }
  
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[(textIndex)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)|0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          }
  
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)|0)];
            }
          }
  
          // Handle precision.
          var precisionSet = false, precision = -1;
          if (next == 46) {
            precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)|0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)|0)];
          }
          if (precision < 0) {
            precision = 6; // Standard default.
            precisionSet = false;
          }
  
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)|0)];
  
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
  
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
  
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
  
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
  
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
  
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
  
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
  
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
  
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
  
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
  
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
  
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
  
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)|0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length;
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[(i)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }function _printf(format, varargs) {
      // int printf(const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var stdout = HEAP32[((_stdout)>>2)];
      return _fprintf(stdout, format, varargs);
    }

  function _glBindTexture(target, texture) {
      GLctx.bindTexture(target, texture ? GL.textures[texture] : null);
    }

   
  Module["_i64Subtract"] = _i64Subtract;

  
  
  function _recv(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _read(fd, buf, len);
    }
  
  function _pread(fildes, buf, nbyte, offset) {
      // ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _read(fildes, buf, nbyte) {
      // ssize_t read(int fildes, void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fread(ptr, size, nitems, stream) {
      // size_t fread(void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fread.html
      var bytesToRead = nitems * size;
      if (bytesToRead == 0) {
        return 0;
      }
      var bytesRead = 0;
      var streamObj = FS.getStreamFromPtr(stream);
      if (!streamObj) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return 0;
      }
      while (streamObj.ungotten.length && bytesToRead > 0) {
        HEAP8[((ptr++)|0)]=streamObj.ungotten.pop();
        bytesToRead--;
        bytesRead++;
      }
      var err = _read(streamObj.fd, ptr, bytesToRead);
      if (err == -1) {
        if (streamObj) streamObj.error = true;
        return 0;
      }
      bytesRead += err;
      if (bytesRead < bytesToRead) streamObj.eof = true;
      return Math.floor(bytesRead / size);
    }

  
  function _open(path, oflag, varargs) {
      // int open(const char *path, int oflag, ...);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/open.html
      var mode = HEAP32[((varargs)>>2)];
      path = Pointer_stringify(path);
      try {
        var stream = FS.open(path, oflag, mode);
        return stream.fd;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fopen(filename, mode) {
      // FILE *fopen(const char *restrict filename, const char *restrict mode);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fopen.html
      var flags;
      mode = Pointer_stringify(mode);
      if (mode[0] == 'r') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 0;
        }
      } else if (mode[0] == 'w') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 512;
      } else if (mode[0] == 'a') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 1024;
      } else {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return 0;
      }
      var fd = _open(filename, flags, allocate([0x1FF, 0, 0, 0], 'i32', ALLOC_STACK));  // All creation permissions.
      return fd === -1 ? 0 : FS.getPtrForStream(FS.getStream(fd));
    }

  function _glDeleteFramebuffers(n, framebuffers) {
      for (var i = 0; i < n; ++i) {
        var id = HEAP32[(((framebuffers)+(i*4))>>2)];
        var framebuffer = GL.framebuffers[id];
        GLctx.deleteFramebuffer(framebuffer);
        framebuffer.name = 0;
        GL.framebuffers[id] = null;
      }
    }

  var _emscripten_check_longjmp=true;

   
  Module["_strncpy"] = _strncpy;

  function _glFramebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer) {
      GLctx.framebufferRenderbuffer(target, attachment, renderbuffertarget,
                                         GL.renderbuffers[renderbuffer]);
    }

  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: return 1;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  var _emscripten_postinvoke=true;


  function _glClear(x0) { GLctx.clear(x0) }

  
  
  function _fputc(c, stream) {
      // int fputc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputc.html
      var chr = unSign(c & 0xFF);
      HEAP8[((_fputc.ret)|0)]=chr;
      var fd = _fileno(stream);
      var ret = _write(fd, _fputc.ret, 1);
      if (ret == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return -1;
      } else {
        return chr;
      }
    }function _putchar(c) {
      // int putchar(int c);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/putchar.html
      return _fputc(c, HEAP32[((_stdout)>>2)]);
    } 
  Module["_saveSetjmp"] = _saveSetjmp;

  function _glLineWidth(x0) { GLctx.lineWidth(x0) }

  
  
  function __getFloat(text) {
      return /^[+-]?[0-9]*\.?[0-9]+([eE][+-]?[0-9]+)?/.exec(text);
    }function __scanString(format, get, unget, varargs) {
      if (!__scanString.whiteSpace) {
        __scanString.whiteSpace = {};
        __scanString.whiteSpace[32] = 1;
        __scanString.whiteSpace[9] = 1;
        __scanString.whiteSpace[10] = 1;
        __scanString.whiteSpace[11] = 1;
        __scanString.whiteSpace[12] = 1;
        __scanString.whiteSpace[13] = 1;
      }
      // Supports %x, %4x, %d.%d, %lld, %s, %f, %lf.
      // TODO: Support all format specifiers.
      format = Pointer_stringify(format);
      var soFar = 0;
      if (format.indexOf('%n') >= 0) {
        // need to track soFar
        var _get = get;
        get = function get() {
          soFar++;
          return _get();
        }
        var _unget = unget;
        unget = function unget() {
          soFar--;
          return _unget();
        }
      }
      var formatIndex = 0;
      var argsi = 0;
      var fields = 0;
      var argIndex = 0;
      var next;
  
      mainLoop:
      for (var formatIndex = 0; formatIndex < format.length;) {
        if (format[formatIndex] === '%' && format[formatIndex+1] == 'n') {
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          HEAP32[((argPtr)>>2)]=soFar;
          formatIndex += 2;
          continue;
        }
  
        if (format[formatIndex] === '%') {
          var nextC = format.indexOf('c', formatIndex+1);
          if (nextC > 0) {
            var maxx = 1;
            if (nextC > formatIndex+1) {
              var sub = format.substring(formatIndex+1, nextC);
              maxx = parseInt(sub);
              if (maxx != sub) maxx = 0;
            }
            if (maxx) {
              var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
              argIndex += Runtime.getAlignSize('void*', null, true);
              fields++;
              for (var i = 0; i < maxx; i++) {
                next = get();
                HEAP8[((argPtr++)|0)]=next;
                if (next === 0) return i > 0 ? fields : fields-1; // we failed to read the full length of this field
              }
              formatIndex += nextC - formatIndex + 1;
              continue;
            }
          }
        }
  
        // handle %[...]
        if (format[formatIndex] === '%' && format.indexOf('[', formatIndex+1) > 0) {
          var match = /\%([0-9]*)\[(\^)?(\]?[^\]]*)\]/.exec(format.substring(formatIndex));
          if (match) {
            var maxNumCharacters = parseInt(match[1]) || Infinity;
            var negateScanList = (match[2] === '^');
            var scanList = match[3];
  
            // expand "middle" dashs into character sets
            var middleDashMatch;
            while ((middleDashMatch = /([^\-])\-([^\-])/.exec(scanList))) {
              var rangeStartCharCode = middleDashMatch[1].charCodeAt(0);
              var rangeEndCharCode = middleDashMatch[2].charCodeAt(0);
              for (var expanded = ''; rangeStartCharCode <= rangeEndCharCode; expanded += String.fromCharCode(rangeStartCharCode++));
              scanList = scanList.replace(middleDashMatch[1] + '-' + middleDashMatch[2], expanded);
            }
  
            var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
            argIndex += Runtime.getAlignSize('void*', null, true);
            fields++;
  
            for (var i = 0; i < maxNumCharacters; i++) {
              next = get();
              if (negateScanList) {
                if (scanList.indexOf(String.fromCharCode(next)) < 0) {
                  HEAP8[((argPtr++)|0)]=next;
                } else {
                  unget();
                  break;
                }
              } else {
                if (scanList.indexOf(String.fromCharCode(next)) >= 0) {
                  HEAP8[((argPtr++)|0)]=next;
                } else {
                  unget();
                  break;
                }
              }
            }
  
            // write out null-terminating character
            HEAP8[((argPtr++)|0)]=0;
            formatIndex += match[0].length;
            
            continue;
          }
        }      
        // remove whitespace
        while (1) {
          next = get();
          if (next == 0) return fields;
          if (!(next in __scanString.whiteSpace)) break;
        }
        unget();
  
        if (format[formatIndex] === '%') {
          formatIndex++;
          var suppressAssignment = false;
          if (format[formatIndex] == '*') {
            suppressAssignment = true;
            formatIndex++;
          }
          var maxSpecifierStart = formatIndex;
          while (format[formatIndex].charCodeAt(0) >= 48 &&
                 format[formatIndex].charCodeAt(0) <= 57) {
            formatIndex++;
          }
          var max_;
          if (formatIndex != maxSpecifierStart) {
            max_ = parseInt(format.slice(maxSpecifierStart, formatIndex), 10);
          }
          var long_ = false;
          var half = false;
          var longLong = false;
          if (format[formatIndex] == 'l') {
            long_ = true;
            formatIndex++;
            if (format[formatIndex] == 'l') {
              longLong = true;
              formatIndex++;
            }
          } else if (format[formatIndex] == 'h') {
            half = true;
            formatIndex++;
          }
          var type = format[formatIndex];
          formatIndex++;
          var curr = 0;
          var buffer = [];
          // Read characters according to the format. floats are trickier, they may be in an unfloat state in the middle, then be a valid float later
          if (type == 'f' || type == 'e' || type == 'g' ||
              type == 'F' || type == 'E' || type == 'G') {
            next = get();
            while (next > 0 && (!(next in __scanString.whiteSpace)))  {
              buffer.push(String.fromCharCode(next));
              next = get();
            }
            var m = __getFloat(buffer.join(''));
            var last = m ? m[0].length : 0;
            for (var i = 0; i < buffer.length - last + 1; i++) {
              unget();
            }
            buffer.length = last;
          } else {
            next = get();
            var first = true;
            
            // Strip the optional 0x prefix for %x.
            if ((type == 'x' || type == 'X') && (next == 48)) {
              var peek = get();
              if (peek == 120 || peek == 88) {
                next = get();
              } else {
                unget();
              }
            }
            
            while ((curr < max_ || isNaN(max_)) && next > 0) {
              if (!(next in __scanString.whiteSpace) && // stop on whitespace
                  (type == 's' ||
                   ((type === 'd' || type == 'u' || type == 'i') && ((next >= 48 && next <= 57) ||
                                                                     (first && next == 45))) ||
                   ((type === 'x' || type === 'X') && (next >= 48 && next <= 57 ||
                                     next >= 97 && next <= 102 ||
                                     next >= 65 && next <= 70))) &&
                  (formatIndex >= format.length || next !== format[formatIndex].charCodeAt(0))) { // Stop when we read something that is coming up
                buffer.push(String.fromCharCode(next));
                next = get();
                curr++;
                first = false;
              } else {
                break;
              }
            }
            unget();
          }
          if (buffer.length === 0) return 0;  // Failure.
          if (suppressAssignment) continue;
  
          var text = buffer.join('');
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          switch (type) {
            case 'd': case 'u': case 'i':
              if (half) {
                HEAP16[((argPtr)>>1)]=parseInt(text, 10);
              } else if (longLong) {
                (tempI64 = [parseInt(text, 10)>>>0,(tempDouble=parseInt(text, 10),(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((argPtr)>>2)]=tempI64[0],HEAP32[(((argPtr)+(4))>>2)]=tempI64[1]);
              } else {
                HEAP32[((argPtr)>>2)]=parseInt(text, 10);
              }
              break;
            case 'X':
            case 'x':
              HEAP32[((argPtr)>>2)]=parseInt(text, 16);
              break;
            case 'F':
            case 'f':
            case 'E':
            case 'e':
            case 'G':
            case 'g':
            case 'E':
              // fallthrough intended
              if (long_) {
                HEAPF64[((argPtr)>>3)]=parseFloat(text);
              } else {
                HEAPF32[((argPtr)>>2)]=parseFloat(text);
              }
              break;
            case 's':
              var array = intArrayFromString(text);
              for (var j = 0; j < array.length; j++) {
                HEAP8[(((argPtr)+(j))|0)]=array[j];
              }
              break;
          }
          fields++;
        } else if (format[formatIndex].charCodeAt(0) in __scanString.whiteSpace) {
          next = get();
          while (next in __scanString.whiteSpace) {
            if (next <= 0) break mainLoop;  // End of input.
            next = get();
          }
          unget(next);
          formatIndex++;
        } else {
          // Not a specifier.
          next = get();
          if (format[formatIndex].charCodeAt(0) !== next) {
            unget(next);
            break mainLoop;
          }
          formatIndex++;
        }
      }
      return fields;
    }function _sscanf(s, format, varargs) {
      // int sscanf(const char *restrict s, const char *restrict format, ... );
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/scanf.html
      var index = 0;
      function get() { return HEAP8[(((s)+(index++))|0)]; };
      function unget() { index--; };
      return __scanString(format, get, unget, varargs);
    }

  function _time(ptr) {
      var ret = Math.floor(Date.now()/1000);
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  function _glLoadMatrixf(matrix) {
      GLImmediate.matricesModified = true;
      GLImmediate.matrixVersion[GLImmediate.currentMatrix] = (GLImmediate.matrixVersion[GLImmediate.currentMatrix] + 1)|0;
      GLImmediate.matrixLib.mat4.set(HEAPF32.subarray((matrix)>>2,(matrix+64)>>2), GLImmediate.matrix[GLImmediate.currentMatrix]);
    }


  function _alGenSources(count, sources) {
      if (!AL.currentContext) {
        return;
      }
      for (var i = 0; i < count; ++i) {
        var gain = AL.currentContext.ctx.createGain();
        gain.connect(AL.currentContext.gain);
        AL.currentContext.src.push({
          state: 0x1011 /* AL_INITIAL */,
          queue: [],
          loop: false,
          get refDistance() {
            return this._refDistance || 1;
          },
          set refDistance(val) {
            this._refDistance = val;
            if (this.panner) this.panner.refDistance = val;
          },
          get maxDistance() {
            return this._maxDistance || 10000;
          },
          set maxDistance(val) {
            this._maxDistance = val;
            if (this.panner) this.panner.maxDistance = val;
          },
          get rolloffFactor() {
            return this._rolloffFactor || 1;
          },
          set rolloffFactor(val) {
            this._rolloffFactor = val;
            if (this.panner) this.panner.rolloffFactor = val;
          },
          get position() {
            return this._position || [0, 0, 0];
          },
          set position(val) {
            this._position = val;
            if (this.panner) this.panner.setPosition(val[0], val[1], val[2]);
          },
          get velocity() {
            return this._velocity || [0, 0, 0];
          },
          set velocity(val) {
            this._velocity = val;
            if (this.panner) this.panner.setVelocity(val[0], val[1], val[2]);
          },
          get direction() {
            return this._direction || [0, 0, 0];
          },
          set direction(val) {
            this._direction = val;
            if (this.panner) this.panner.setOrientation(val[0], val[1], val[2]);
          },
          get coneOuterGain() {
            return this._coneOuterGain || 0.0;
          },
          set coneOuterGain(val) {
            this._coneOuterGain = val;
            if (this.panner) this.panner.coneOuterGain = val;
          },
          get coneInnerAngle() {
            return this._coneInnerAngle || 360.0;
          },
          set coneInnerAngle(val) {
            this._coneInnerAngle = val;
            if (this.panner) this.panner.coneInnerAngle = val;
          },
          get coneOuterAngle() {
            return this._coneOuterAngle || 360.0;
          },
          set coneOuterAngle(val) {
            this._coneOuterAngle = val;
            if (this.panner) this.panner.coneOuterAngle = val;
          },
          gain: gain,
          panner: null,
          buffersPlayed: 0,
          bufferPosition: 0
        });
        HEAP32[(((sources)+(i*4))>>2)]=AL.currentContext.src.length;
      }
    }

  function _log10(x) {
      return Math.log(x) / Math.LN10;
    }

  function _emscripten_cancel_main_loop() {
      Browser.mainLoop.scheduler = null;
      Browser.mainLoop.shouldPause = true;
    }

  function _glDeleteTextures(n, textures) {
      for (var i = 0; i < n; i++) {
        var id = HEAP32[(((textures)+(i*4))>>2)];
        var texture = GL.textures[id];
        GLctx.deleteTexture(texture);
        texture.name = 0;
        GL.textures[id] = null;
      }
    }

  function _glTranslatef(x, y, z) {
      GLImmediate.matricesModified = true;
      GLImmediate.matrixVersion[GLImmediate.currentMatrix] = (GLImmediate.matrixVersion[GLImmediate.currentMatrix] + 1)|0;
      GLImmediate.matrixLib.mat4.translate(GLImmediate.matrix[GLImmediate.currentMatrix], [x, y, z]);
    }

  function _glfwOpenWindow(width, height, redbits, greenbits, bluebits, alphabits, depthbits, stencilbits, mode) {
      if (width == 0 && height > 0) {
        width = 4 * height / 3;
      }
      if (width > 0 && height == 0) {
        height = 3 * width / 4;
      }
      GLFW.params[0x00020005] = redbits; // GLFW_RED_BITS
      GLFW.params[0x00020006] = greenbits; // GLFW_GREEN_BITS
      GLFW.params[0x00020007] = bluebits; // GLFW_BLUE_BITS
      GLFW.params[0x00020008] = alphabits; // GLFW_ALPHA_BITS
      GLFW.params[0x00020009] = depthbits; // GLFW_DEPTH_BITS
      GLFW.params[0x0002000A] = stencilbits; // GLFW_STENCIL_BITS
  
      if (mode == 0x00010001) {// GLFW_WINDOW
        Browser.setCanvasSize(GLFW.initWindowWidth = width,
                              GLFW.initWindowHeight = height);
        GLFW.params[0x00030003] = true; // GLFW_STICKY_MOUSE_BUTTONS
      } else if (mode == 0x00010002) {// GLFW_FULLSCREEN
        GLFW.requestFullScreen();
        GLFW.params[0x00030003] = false; // GLFW_STICKY_MOUSE_BUTTONS
      } else {
        throw "Invalid glfwOpenWindow mode.";
      }
  
      var contextAttributes = {
        antialias: (GLFW.params[0x00020013] > 1), // GLFW_FSAA_SAMPLES
        depth: (GLFW.params[0x00020009] > 0), // GLFW_DEPTH_BITS
        stencil: (GLFW.params[0x0002000A] > 0) // GLFW_STENCIL_BITS
      }
      Module.ctx = Browser.createContext(Module['canvas'], true, true, contextAttributes);
      return 1; // GL_TRUE
    }

  var _log10f=_log10;

  var _emscripten_prep_setjmp=true;

  function _glDisableClientState(cap) {
      var attrib = GLEmulation.getAttributeFromCapability(cap);
      if (attrib === null) {
        return;
      }
      if (GLImmediate.enabledClientAttributes[attrib]) {
        GLImmediate.enabledClientAttributes[attrib] = false;
        GLImmediate.totalEnabledClientAttributes--;
        GLImmediate.currentRenderer = null; // Will need to change current renderer, since the set of active vertex pointers changed.
        if (GLEmulation.currentVao) delete GLEmulation.currentVao.enabledClientStates[cap];
        GLImmediate.modifiedClientAttributes = true;
      }
    }

  
  
   
  Module["_testSetjmp"] = _testSetjmp;function _longjmp(env, value) {
      asm['setThrew'](env, value || 1);
      throw 'longjmp';
    }function _emscripten_longjmp(env, value) {
      _longjmp(env, value);
    }

  function _alGetSourcei(source, param, value) {
      if (!AL.currentContext) {
        return;
      }
      var src = AL.currentContext.src[source - 1];
      if (!src) {
        AL.currentContext.err = 0xA001 /* AL_INVALID_NAME */;
        return;
      }
  
      // Being that we have no way to receive end events from buffer nodes,
      // we currently proccess and update a source's buffer queue every
      // ~QUEUE_INTERVAL milliseconds. However, this interval is not precise,
      // so we also forcefully update the source when alGetSourcei is queried
      // to aid in the common scenario of application calling alGetSourcei(AL_BUFFERS_PROCESSED)
      // to recycle buffers.
      AL.updateSource(src);
  
      switch (param) {
      case 0x202 /* AL_SOURCE_RELATIVE */:
        HEAP32[((value)>>2)]=src.panner ? 1 : 0;
        break;
      case 0x1001 /* AL_CONE_INNER_ANGLE */:
        HEAP32[((value)>>2)]=src.coneInnerAngle;
        break;
      case 0x1002 /* AL_CONE_OUTER_ANGLE */:
        HEAP32[((value)>>2)]=src.coneOuterAngle;
        break;
      case 0x1009 /* AL_BUFFER */:
        if (!src.queue.length) {
          HEAP32[((value)>>2)]=0;
        } else {
          // Find the first unprocessed buffer.
          var buffer = src.queue[src.buffersPlayed].buffer;
          // Return its index.
          for (var i = 0; i < AL.currentContext.buf.length; ++i) {
            if (buffer == AL.currentContext.buf[i]) {
              HEAP32[((value)>>2)]=i+1;
              return;
            }
          }
          HEAP32[((value)>>2)]=0;
        }
        break;
      case 0x1010 /* AL_SOURCE_STATE */:
        HEAP32[((value)>>2)]=src.state;
        break;
      case 0x1015 /* AL_BUFFERS_QUEUED */:
        HEAP32[((value)>>2)]=src.queue.length
        break;
      case 0x1016 /* AL_BUFFERS_PROCESSED */:
        if (src.loop) {
          HEAP32[((value)>>2)]=0
        } else {
          HEAP32[((value)>>2)]=src.buffersPlayed
        }
        break;
      default:
        AL.currentContext.err = 0xA002 /* AL_INVALID_ENUM */;
        break;
      }
    }

  function _alSourcei(source, param, value) {
      if (!AL.currentContext) {
        return;
      }
      var src = AL.currentContext.src[source - 1];
      if (!src) {
        AL.currentContext.err = 0xA001 /* AL_INVALID_NAME */;
        return;
      }
      switch (param) {
      case 0x1001 /* AL_CONE_INNER_ANGLE */:
        src.coneInnerAngle = value;
        break;
      case 0x1002 /* AL_CONE_OUTER_ANGLE */:
        src.coneOuterAngle = value;
        break;
      case 0x1007 /* AL_LOOPING */:
        src.loop = (value === 1 /* AL_TRUE */);
        break;
      case 0x1009 /* AL_BUFFER */:
        var buffer = AL.currentContext.buf[value - 1];
        if (value == 0) {
          src.queue = [];
        } else {
          src.queue = [{ buffer: buffer }];
        }
        AL.updateSource(src);
        break;
      case 0x202 /* AL_SOURCE_RELATIVE */:
        if (value === 1 /* AL_TRUE */) {
          if (src.panner) {
            src.panner = null;
              
            // Disconnect from the panner.
            src.gain.disconnect();
  
            src.gain.connect(AL.currentContext.ctx.destination);
          }
        } else if (value === 0 /* AL_FALSE */) {
          if (!src.panner) {
            var panner = src.panner = AL.currentContext.ctx.createPanner();
            panner.panningModel = "equalpower";
            panner.distanceModel = "linear";
            panner.refDistance = src.refDistance;
            panner.maxDistance = src.maxDistance;
            panner.rolloffFactor = src.rolloffFactor;
            panner.setPosition(src.position[0], src.position[1], src.position[2]);
            panner.setVelocity(src.velocity[0], src.velocity[1], src.velocity[2]);
            panner.connect(AL.currentContext.ctx.destination);
  
            // Disconnect from the default source.
            src.gain.disconnect();
  
            src.gain.connect(panner);
          }
        } else {
          AL.currentContext.err = 0xA003 /* AL_INVALID_VALUE */;
        }
        break;
      default:
        AL.currentContext.err = 0xA002 /* AL_INVALID_ENUM */;
        break;
      }
    }

  function _alSourceQueueBuffers(source, count, buffers) {
      if (!AL.currentContext) {
        return;
      }
      var src = AL.currentContext.src[source - 1];
      if (!src) {
        AL.currentContext.err = 0xA001 /* AL_INVALID_NAME */;
        return;
      }
      for (var i = 0; i < count; ++i) {
        var bufferIdx = HEAP32[(((buffers)+(i*4))>>2)];
        if (bufferIdx > AL.currentContext.buf.length) {
          AL.currentContext.err = 0xA001 /* AL_INVALID_NAME */;
          return;
        }
      }
  
      for (var i = 0; i < count; ++i) {
        var bufferIdx = HEAP32[(((buffers)+(i*4))>>2)];
        var buffer = AL.currentContext.buf[bufferIdx - 1];
        src.queue.push({ buffer: buffer, src: null });
      }
  
      AL.updateSource(src);
    }

  function _alSourceUnqueueBuffers(source, count, buffers) {
      if (!AL.currentContext) {
        return;
      }
      var src = AL.currentContext.src[source - 1];
      if (!src) {
        AL.currentContext.err = 0xA001 /* AL_INVALID_NAME */;
        return;
      }
  
      if (count > src.buffersPlayed) {
        AL.currentContext.err = 0xA003 /* AL_INVALID_VALUE */;
        return;
      }
  
      for (var i = 0; i < count; i++) {
        var entry = src.queue.shift();
        // Write the buffers index out to the return list.
        for (var j = 0; j < AL.currentContext.buf.length; j++) {
          var b = AL.currentContext.buf[j];
          if (b && b == entry.buffer) {
            HEAP32[(((buffers)+(i*4))>>2)]=j+1;
            break;
          }
        }
        src.buffersPlayed--;
      }
  
      AL.updateSource(src);
    }

  function _alcGetIntegerv(device, param, size, data) {
      if (size == 0 || !data) {
        AL.currentContext.err = 0xA003 /* AL_INVALID_VALUE */;
        return;
      }
  
      switch(param) {
      case 0x1000 /* ALC_MAJOR_VERSION */:
        HEAP32[((data)>>2)]=1;
        break;
      case 0x1001 /* ALC_MINOR_VERSION */:
        HEAP32[((data)>>2)]=1;
        break;
      case 0x1002 /* ALC_ATTRIBUTES_SIZE */:
        if (!device) {
          AL.currentContext.err = 0xA001 /* ALC_INVALID_DEVICE */;
          return 0;
        }
        HEAP32[((data)>>2)]=1;
        break;
      case 0x1003 /* ALC_ALL_ATTRIBUTES */:
        if (!device) {
          AL.currentContext.err = 0xA001 /* ALC_INVALID_DEVICE */;
          return 0;
        }
        HEAP32[((data)>>2)]=0;
        break;
      default:
        AL.currentContext.err = 0xA003 /* ALC_INVALID_ENUM */;
        break;
      }
    }

  function _glDeleteRenderbuffers(n, renderbuffers) {
      for (var i = 0; i < n; i++) {
        var id = HEAP32[(((renderbuffers)+(i*4))>>2)];
        var renderbuffer = GL.renderbuffers[id];
        GLctx.deleteRenderbuffer(renderbuffer);
        renderbuffer.name = 0;
        GL.renderbuffers[id] = null;
      }
    }

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

  function _alSourcef(source, param, value) {
      if (!AL.currentContext) {
        return;
      }
      var src = AL.currentContext.src[source - 1];
      if (!src) {
        AL.currentContext.err = 0xA001 /* AL_INVALID_NAME */;
        return;
      }
      switch (param) {
      case 0x1003 /* AL_PITCH */:
        break;
      case 0x100A /* AL_GAIN */:
        src.gain.gain.value = value;
        break;
      // case 0x100D /* AL_MIN_GAIN */:
      //   break;
      // case 0x100E /* AL_MAX_GAIN */:
      //   break;
      case 0x1023 /* AL_MAX_DISTANCE */:
        src.maxDistance = value;
        break;
      case 0x1021 /* AL_ROLLOFF_FACTOR */:
        src.rolloffFactor = value;
        break;
      case 0x1022 /* AL_CONE_OUTER_GAIN */:
        src.coneOuterGain = value;
        break;
      case 0x1001 /* AL_CONE_INNER_ANGLE */:
        src.coneInnerAngle = value;
        break;
      case 0x1002 /* AL_CONE_OUTER_ANGLE */:
        src.coneOuterAngle = value;
        break;
      case 0x1020 /* AL_REFERENCE_DISTANCE */:
        src.refDistance = value;
        break;
      default:
        AL.currentContext.err = 0xA002 /* AL_INVALID_ENUM */;
        break;
      }
    }

  function _glGenFramebuffers(n, ids) {
      for (var i = 0; i < n; ++i) {
        var id = GL.getNewId(GL.framebuffers);
        var framebuffer = GLctx.createFramebuffer();
        framebuffer.name = id;
        GL.framebuffers[id] = framebuffer;
        HEAP32[(((ids)+(i*4))>>2)]=id;
      }
    }

  var _llvm_pow_f64=Math_pow;

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) self.alloc(bytes);
      return ret;  // Previous break location.
    }

   
  Module["_memmove"] = _memmove;

  function _glGenTextures(n, textures) {
      for (var i = 0; i < n; i++) {
        var id = GL.getNewId(GL.textures);
        var texture = GLctx.createTexture();
        texture.name = id;
        GL.textures[id] = texture;
        HEAP32[(((textures)+(i*4))>>2)]=id;
      }
    }

  function _alGetListenerf(pname, values) {
      if (!AL.currentContext) {
        return;
      }
      switch (pname) {
      case 0x100A /* AL_GAIN */:
        HEAPF32[((value)>>2)]=AL.currentContext.gain.gain
        break;
      default:
        AL.currentContext.err = 0xA002 /* AL_INVALID_ENUM */;
        break;
      }
  
    }

  var _emscripten_preinvoke=true;

  function _glGetIntegerv(name_, p) {
      return GL.get(name_, p, 'Integer');
    }

  function _alDeleteSources(count, sources) {
      if (!AL.currentContext) {
        return;
      }
      for (var i = 0; i < count; ++i) {
        var sourceIdx = HEAP32[(((sources)+(i*4))>>2)] - 1;
        delete AL.currentContext.src[sourceIdx];
      }
    }

  function _alListenerf(param, value) {
      if (!AL.currentContext) {
        return;
      }
      switch (param) {
      case 0x100A /* AL_GAIN */:
        AL.currentContext.gain.value = value;
        break;
      default:
        AL.currentContext.err = 0xA002 /* AL_INVALID_ENUM */;
        break;
      }
    }

  
  function _emscripten_get_now() {
      if (!_emscripten_get_now.actual) {
        if (ENVIRONMENT_IS_NODE) {
          _emscripten_get_now.actual = function _emscripten_get_now_actual() {
            var t = process['hrtime']();
            return t[0] * 1e3 + t[1] / 1e6;
          }
        } else if (typeof dateNow !== 'undefined') {
          _emscripten_get_now.actual = dateNow;
        } else if (ENVIRONMENT_IS_WEB && window['performance'] && window['performance']['now']) {
          _emscripten_get_now.actual = function _emscripten_get_now_actual() { return window['performance']['now'](); };
        } else {
          _emscripten_get_now.actual = Date.now;
        }
      }
      return _emscripten_get_now.actual();
    }function _clock_gettime(clk_id, tp) {
      // int clock_gettime(clockid_t clk_id, struct timespec *tp);
      var now;
      if (clk_id === 0) {
        now = Date.now();
      } else {
        now = _emscripten_get_now();
      }
      HEAP32[((tp)>>2)]=Math.floor(now/1000); // seconds
      HEAP32[(((tp)+(4))>>2)]=Math.floor((now % 1000)*1000*1000); // nanoseconds
      return 0;
    }

  function _glfwGetMousePos(xpos, ypos) {
      setValue(xpos, Browser.mouseX, 'i32');
      setValue(ypos, Browser.mouseY, 'i32');
    }

  function _glTexCoordPointer(size, type, stride, pointer) {
      GLImmediate.setClientAttribute(GLImmediate.TEXTURE0 + GLImmediate.clientActiveTexture, size, type, stride, pointer);
    }

  function _alcDestroyContext(context) {
      // Stop playback, etc
      clearInterval(AL.contexts[context - 1].interval);
    }

  function _glBindRenderbuffer(target, renderbuffer) {
      GLctx.bindRenderbuffer(target, renderbuffer ? GL.renderbuffers[renderbuffer] : null);
    }

  function _alGetError() {
      if (!AL.currentContext) {
        return 0xA004 /* AL_INVALID_OPERATION */;
      } else {
        // Reset error on get.
        var err = AL.currentContext.err;
        AL.currentContext.err = 0 /* AL_NO_ERROR */;
        return err;
      }
    }

  function _glGenRenderbuffers(n, renderbuffers) {
      for (var i = 0; i < n; i++) {
        var id = GL.getNewId(GL.renderbuffers);
        var renderbuffer = GLctx.createRenderbuffer();
        renderbuffer.name = id;
        GL.renderbuffers[id] = renderbuffer;
        HEAP32[(((renderbuffers)+(i*4))>>2)]=id;
      }
    }

  var _cosf=Math_cos;

  
  
  function _malloc(bytes) {
      /* Over-allocate to make sure it is byte-aligned by 8.
       * This will leak memory, but this is only the dummy
       * implementation (replaced by dlmalloc normally) so
       * not an issue.
       */
      var ptr = Runtime.dynamicAlloc(bytes + 8);
      return (ptr+8) & 0xFFFFFFF8;
    }
  Module["_malloc"] = _malloc;function _tmpnam(s, dir, prefix) {
      // char *tmpnam(char *s);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/tmpnam.html
      // NOTE: The dir and prefix arguments are for internal use only.
      var folder = FS.findObject(dir || '/tmp');
      if (!folder || !folder.isFolder) {
        dir = '/tmp';
        folder = FS.findObject(dir);
        if (!folder || !folder.isFolder) return 0;
      }
      var name = prefix || 'file';
      do {
        name += String.fromCharCode(65 + Math.floor(Math.random() * 25));
      } while (name in folder.contents);
      var result = dir + '/' + name;
      if (!_tmpnam.buffer) _tmpnam.buffer = _malloc(256);
      if (!s) s = _tmpnam.buffer;
      writeAsciiToMemory(result, s);
      return s;
    }function _tmpfile() {
      // FILE *tmpfile(void);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/tmpfile.html
      // TODO: Delete the created file on closing.
      if (_tmpfile.mode) {
        _tmpfile.mode = allocate(intArrayFromString('w+'), 'i8', ALLOC_NORMAL);
      }
      return _fopen(_tmpnam(0), _tmpfile.mode);
    }

  function _glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels) {
      if (pixels) {
        var data = GL.getTexPixelData(type, format, width, height, pixels, -1);
        pixels = data.pixels;
      } else {
        pixels = null;
      }
      GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels);
    }

  function _glTexImage2D(target, level, internalFormat, width, height, border, format, type, pixels) {
      if (pixels) {
        var data = GL.getTexPixelData(type, format, width, height, pixels, internalFormat);
        pixels = data.pixels;
        internalFormat = data.internalFormat;
      } else {
        pixels = null;
      }
      GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels);
    }

  function _glDisable(x0) { GLctx.disable(x0) }

  function _glfwGetMouseButton(button) {
      return (GLFW.buttons & (1 << button)) > 0;
    }

  function ___errno_location() {
      return ___errno_state;
    }

   
  Module["_memset"] = _memset;

  function _alcOpenDevice(deviceName) {
      if (typeof(AudioContext) !== "undefined" ||
          typeof(webkitAudioContext) !== "undefined") {
        return 1; // non-null pointer -- we just simulate one device
      } else {
        return 0;
      }
    }

  function _alDeleteBuffers(count, buffers)
    {
      if (!AL.currentContext) {
        return;
      }
      if (count > AL.currentContext.buf.length) {
        AL.currentContext.err = 0xA003 /* AL_INVALID_VALUE */;
        return;
      }
  
      for (var i = 0; i < count; ++i) {
        var bufferIdx = HEAP32[(((buffers)+(i*4))>>2)] - 1;
  
        // Make sure the buffer index is valid.
        if (bufferIdx >= AL.currentContext.buf.length || !AL.currentContext.buf[bufferIdx]) {
          AL.currentContext.err = 0xA001 /* AL_INVALID_NAME */;
          return;
        }
  
        // Make sure the buffer is no longer in use.
        var buffer = AL.currentContext.buf[bufferIdx];
        for (var j = 0; j < AL.currentContext.src.length; ++j) {
          var src = AL.currentContext.src[j];
          if (!src) {
            continue;
          }
          for (var k = 0; k < src.queue.length; k++) {
            if (buffer === src.queue[k].buffer) {
              AL.currentContext.err = 0xA004 /* AL_INVALID_OPERATION */;
              return;
            }
          }
        }
      }
  
      for (var i = 0; i < count; ++i) {
        var bufferIdx = HEAP32[(((buffers)+(i*4))>>2)] - 1;
        delete AL.currentContext.buf[bufferIdx];
      }
    }

  function _alcMakeContextCurrent(context) {
      if (context == 0) {
        AL.currentContext = null;
        return 0;
      } else {
        AL.currentContext = AL.contexts[context - 1];
        return 1;
      }
    }

  function _abort() {
      Module['abort']();
    }


  function _glfwInit() {
      GLFW.initTime = Date.now() / 1000;
  
      window.addEventListener("keydown", GLFW.onKeydown, true);
      window.addEventListener("keypress", GLFW.onKeyPress, true);
      window.addEventListener("keyup", GLFW.onKeyup, true);
      window.addEventListener("mousemove", GLFW.onMousemove, true);
      window.addEventListener("mousedown", GLFW.onMouseButtonDown, true);
      window.addEventListener("mouseup", GLFW.onMouseButtonUp, true);
      window.addEventListener('DOMMouseScroll', GLFW.onMouseWheel, true);
      window.addEventListener('mousewheel', GLFW.onMouseWheel, true);
  
      __ATEXIT__.push({ func: function() {
        window.removeEventListener("keydown", GLFW.onKeydown, true);
        window.removeEventListener("keypress", GLFW.onKeyPress, true);
        window.removeEventListener("keyup", GLFW.onKeyup, true);
        window.removeEventListener("mousemove", GLFW.onMousemove, true);
        window.removeEventListener("mousedown", GLFW.onMouseButtonDown, true);
        window.removeEventListener("mouseup", GLFW.onMouseButtonUp, true);
        window.removeEventListener('DOMMouseScroll', GLFW.onMouseWheel, true);
        window.removeEventListener('mousewheel', GLFW.onMouseWheel, true);
        Module["canvas"].width = Module["canvas"].height = 1;
      }});
  
      //TODO: Init with correct values
      GLFW.params = new Array();
      GLFW.params[0x00030001] = true; // GLFW_MOUSE_CURSOR
      GLFW.params[0x00030002] = false; // GLFW_STICKY_KEYS
      GLFW.params[0x00030003] = true; // GLFW_STICKY_MOUSE_BUTTONS
      GLFW.params[0x00030004] = false; // GLFW_SYSTEM_KEYS
      GLFW.params[0x00030005] = false; // GLFW_KEY_REPEAT
      GLFW.params[0x00030006] = true; // GLFW_AUTO_POLL_EVENTS
      GLFW.params[0x00020001] = true; // GLFW_OPENED
      GLFW.params[0x00020002] = true; // GLFW_ACTIVE
      GLFW.params[0x00020003] = false; // GLFW_ICONIFIED
      GLFW.params[0x00020004] = true; // GLFW_ACCELERATED
      GLFW.params[0x00020005] = 0; // GLFW_RED_BITS
      GLFW.params[0x00020006] = 0; // GLFW_GREEN_BITS
      GLFW.params[0x00020007] = 0; // GLFW_BLUE_BITS
      GLFW.params[0x00020008] = 0; // GLFW_ALPHA_BITS
      GLFW.params[0x00020009] = 0; // GLFW_DEPTH_BITS
      GLFW.params[0x0002000A] = 0; // GLFW_STENCIL_BITS
      GLFW.params[0x0002000B] = 0; // GLFW_REFRESH_RATE
      GLFW.params[0x0002000C] = 0; // GLFW_ACCUM_RED_BITS
      GLFW.params[0x0002000D] = 0; // GLFW_ACCUM_GREEN_BITS
      GLFW.params[0x0002000E] = 0; // GLFW_ACCUM_BLUE_BITS
      GLFW.params[0x0002000F] = 0; // GLFW_ACCUM_ALPHA_BITS
      GLFW.params[0x00020010] = 0; // GLFW_AUX_BUFFERS
      GLFW.params[0x00020011] = 0; // GLFW_STEREO
      GLFW.params[0x00020012] = 0; // GLFW_WINDOW_NO_RESIZE
      GLFW.params[0x00020013] = 0; // GLFW_FSAA_SAMPLES
      GLFW.params[0x00020014] = 0; // GLFW_OPENGL_VERSION_MAJOR
      GLFW.params[0x00020015] = 0; // GLFW_OPENGL_VERSION_MINOR
      GLFW.params[0x00020016] = 0; // GLFW_OPENGL_FORWARD_COMPAT
      GLFW.params[0x00020017] = 0; // GLFW_OPENGL_DEBUG_CONTEXT
      GLFW.params[0x00020018] = 0; // GLFW_OPENGL_PROFILE
  
      GLFW.keys = new Array();
  
      return 1; // GL_TRUE
    }

  
  
  
  var GLImmediate={MapTreeLib:null,spawnMapTreeLib:function () {
        /* A naive implementation of a map backed by an array, and accessed by
         * naive iteration along the array. (hashmap with only one bucket)
         */
        function CNaiveListMap() {
          var list = [];
  
          this.insert = function CNaiveListMap_insert(key, val) {
            if (this.contains(key|0)) return false;
            list.push([key, val]);
            return true;
          };
  
          var __contains_i;
          this.contains = function CNaiveListMap_contains(key) {
            for (__contains_i = 0; __contains_i < list.length; ++__contains_i) {
              if (list[__contains_i][0] === key) return true;
            }
            return false;
          };
  
          var __get_i;
          this.get = function CNaiveListMap_get(key) {
            for (__get_i = 0; __get_i < list.length; ++__get_i) {
              if (list[__get_i][0] === key) return list[__get_i][1];
            }
            return undefined;
          };
        };
  
        /* A tree of map nodes.
          Uses `KeyView`s to allow descending the tree without garbage.
          Example: {
            // Create our map object.
            var map = new ObjTreeMap();
  
            // Grab the static keyView for the map.
            var keyView = map.GetStaticKeyView();
  
            // Let's make a map for:
            // root: <undefined>
            //   1: <undefined>
            //     2: <undefined>
            //       5: "Three, sir!"
            //       3: "Three!"
  
            // Note how we can chain together `Reset` and `Next` to
            // easily descend based on multiple key fragments.
            keyView.Reset().Next(1).Next(2).Next(5).Set("Three, sir!");
            keyView.Reset().Next(1).Next(2).Next(3).Set("Three!");
          }
        */
        function CMapTree() {
          function CNLNode() {
            var map = new CNaiveListMap();
  
            this.child = function CNLNode_child(keyFrag) {
              if (!map.contains(keyFrag|0)) {
                map.insert(keyFrag|0, new CNLNode());
              }
              return map.get(keyFrag|0);
            };
  
            this.value = undefined;
            this.get = function CNLNode_get() {
              return this.value;
            };
  
            this.set = function CNLNode_set(val) {
              this.value = val;
            };
          }
  
          function CKeyView(root) {
            var cur;
  
            this.reset = function CKeyView_reset() {
              cur = root;
              return this;
            };
            this.reset();
  
            this.next = function CKeyView_next(keyFrag) {
              cur = cur.child(keyFrag);
              return this;
            };
  
            this.get = function CKeyView_get() {
              return cur.get();
            };
  
            this.set = function CKeyView_set(val) {
              cur.set(val);
            };
          };
  
          var root;
          var staticKeyView;
  
          this.createKeyView = function CNLNode_createKeyView() {
            return new CKeyView(root);
          }
  
          this.clear = function CNLNode_clear() {
            root = new CNLNode();
            staticKeyView = this.createKeyView();
          };
          this.clear();
  
          this.getStaticKeyView = function CNLNode_getStaticKeyView() {
            staticKeyView.reset();
            return staticKeyView;
          };
        };
  
        // Exports:
        return {
          create: function() {
            return new CMapTree();
          },
        };
      },TexEnvJIT:null,spawnTexEnvJIT:function () {
        // GL defs:
        var GL_TEXTURE0 = 0x84C0;
        var GL_TEXTURE_1D = 0x0DE0;
        var GL_TEXTURE_2D = 0x0DE1;
        var GL_TEXTURE_3D = 0x806f;
        var GL_TEXTURE_CUBE_MAP = 0x8513;
        var GL_TEXTURE_ENV = 0x2300;
        var GL_TEXTURE_ENV_MODE = 0x2200;
        var GL_TEXTURE_ENV_COLOR = 0x2201;
        var GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515;
        var GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516;
        var GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517;
        var GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518;
        var GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519;
        var GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A;
  
        var GL_SRC0_RGB = 0x8580;
        var GL_SRC1_RGB = 0x8581;
        var GL_SRC2_RGB = 0x8582;
  
        var GL_SRC0_ALPHA = 0x8588;
        var GL_SRC1_ALPHA = 0x8589;
        var GL_SRC2_ALPHA = 0x858A;
  
        var GL_OPERAND0_RGB = 0x8590;
        var GL_OPERAND1_RGB = 0x8591;
        var GL_OPERAND2_RGB = 0x8592;
  
        var GL_OPERAND0_ALPHA = 0x8598;
        var GL_OPERAND1_ALPHA = 0x8599;
        var GL_OPERAND2_ALPHA = 0x859A;
  
        var GL_COMBINE_RGB = 0x8571;
        var GL_COMBINE_ALPHA = 0x8572;
  
        var GL_RGB_SCALE = 0x8573;
        var GL_ALPHA_SCALE = 0x0D1C;
  
        // env.mode
        var GL_ADD      = 0x0104;
        var GL_BLEND    = 0x0BE2;
        var GL_REPLACE  = 0x1E01;
        var GL_MODULATE = 0x2100;
        var GL_DECAL    = 0x2101;
        var GL_COMBINE  = 0x8570;
  
        // env.color/alphaCombiner
        //var GL_ADD         = 0x0104;
        //var GL_REPLACE     = 0x1E01;
        //var GL_MODULATE    = 0x2100;
        var GL_SUBTRACT    = 0x84E7;
        var GL_INTERPOLATE = 0x8575;
  
        // env.color/alphaSrc
        var GL_TEXTURE       = 0x1702;
        var GL_CONSTANT      = 0x8576;
        var GL_PRIMARY_COLOR = 0x8577;
        var GL_PREVIOUS      = 0x8578;
  
        // env.color/alphaOp
        var GL_SRC_COLOR           = 0x0300;
        var GL_ONE_MINUS_SRC_COLOR = 0x0301;
        var GL_SRC_ALPHA           = 0x0302;
        var GL_ONE_MINUS_SRC_ALPHA = 0x0303;
  
        var GL_RGB  = 0x1907;
        var GL_RGBA = 0x1908;
  
        // Our defs:
        var TEXENVJIT_NAMESPACE_PREFIX = "tej_";
        // Not actually constant, as they can be changed between JIT passes:
        var TEX_UNIT_UNIFORM_PREFIX = "uTexUnit";
        var TEX_COORD_VARYING_PREFIX = "vTexCoord";
        var PRIM_COLOR_VARYING = "vPrimColor";
        var TEX_MATRIX_UNIFORM_PREFIX = "uTexMatrix";
  
        // Static vars:
        var s_texUnits = null; //[];
        var s_activeTexture = 0;
  
        var s_requiredTexUnitsForPass = [];
  
        // Static funcs:
        function abort(info) {
          assert(false, "[TexEnvJIT] ABORT: " + info);
        }
  
        function abort_noSupport(info) {
          abort("No support: " + info);
        }
  
        function abort_sanity(info) {
          abort("Sanity failure: " + info);
        }
  
        function genTexUnitSampleExpr(texUnitID) {
          var texUnit = s_texUnits[texUnitID];
          var texType = texUnit.getTexType();
  
          var func = null;
          switch (texType) {
            case GL_TEXTURE_1D:
              func = "texture2D";
              break;
            case GL_TEXTURE_2D:
              func = "texture2D";
              break;
            case GL_TEXTURE_3D:
              return abort_noSupport("No support for 3D textures.");
            case GL_TEXTURE_CUBE_MAP:
              func = "textureCube";
              break;
            default:
              return abort_sanity("Unknown texType: 0x" + texType.toString(16));
          }
  
          var texCoordExpr = TEX_COORD_VARYING_PREFIX + texUnitID;
          if (TEX_MATRIX_UNIFORM_PREFIX != null) {
            texCoordExpr = "(" + TEX_MATRIX_UNIFORM_PREFIX + texUnitID + " * " + texCoordExpr + ")";
          }
          return func + "(" + TEX_UNIT_UNIFORM_PREFIX + texUnitID + ", " + texCoordExpr + ".xy)";
        }
  
        function getTypeFromCombineOp(op) {
          switch (op) {
            case GL_SRC_COLOR:
            case GL_ONE_MINUS_SRC_COLOR:
              return "vec3";
            case GL_SRC_ALPHA:
            case GL_ONE_MINUS_SRC_ALPHA:
              return "float";
          }
  
          return abort_noSupport("Unsupported combiner op: 0x" + op.toString(16));
        }
  
        function getCurTexUnit() {
          return s_texUnits[s_activeTexture];
        }
  
        function genCombinerSourceExpr(texUnitID, constantExpr, previousVar,
                                       src, op)
        {
          var srcExpr = null;
          switch (src) {
            case GL_TEXTURE:
              srcExpr = genTexUnitSampleExpr(texUnitID);
              break;
            case GL_CONSTANT:
              srcExpr = constantExpr;
              break;
            case GL_PRIMARY_COLOR:
              srcExpr = PRIM_COLOR_VARYING;
              break;
            case GL_PREVIOUS:
              srcExpr = previousVar;
              break;
            default:
                return abort_noSupport("Unsupported combiner src: 0x" + src.toString(16));
          }
  
          var expr = null;
          switch (op) {
            case GL_SRC_COLOR:
              expr = srcExpr + ".rgb";
              break;
            case GL_ONE_MINUS_SRC_COLOR:
              expr = "(vec3(1.0) - " + srcExpr + ".rgb)";
              break;
            case GL_SRC_ALPHA:
              expr = srcExpr + ".a";
              break;
            case GL_ONE_MINUS_SRC_ALPHA:
              expr = "(1.0 - " + srcExpr + ".a)";
              break;
            default:
              return abort_noSupport("Unsupported combiner op: 0x" + op.toString(16));
          }
  
          return expr;
        }
  
        function valToFloatLiteral(val) {
          if (val == Math.round(val)) return val + '.0';
          return val;
        }
  
  
        // Classes:
        function CTexEnv() {
          this.mode = GL_MODULATE;
          this.colorCombiner = GL_MODULATE;
          this.alphaCombiner = GL_MODULATE;
          this.colorScale = 1;
          this.alphaScale = 1;
          this.envColor = [0, 0, 0, 0];
  
          this.colorSrc = [
            GL_TEXTURE,
            GL_PREVIOUS,
            GL_CONSTANT
          ];
          this.alphaSrc = [
            GL_TEXTURE,
            GL_PREVIOUS,
            GL_CONSTANT
          ];
          this.colorOp = [
            GL_SRC_COLOR,
            GL_SRC_COLOR,
            GL_SRC_ALPHA
          ];
          this.alphaOp = [
            GL_SRC_ALPHA,
            GL_SRC_ALPHA,
            GL_SRC_ALPHA
          ];
  
          // Map GLenums to small values to efficiently pack the enums to bits for tighter access.
          this.traverseKey = {
            // mode
            0x1E01 /* GL_REPLACE */: 0,
            0x2100 /* GL_MODULATE */: 1,
            0x0104 /* GL_ADD */: 2,
            0x0BE2 /* GL_BLEND */: 3,
            0x2101 /* GL_DECAL */: 4,
            0x8570 /* GL_COMBINE */: 5,
  
            // additional color and alpha combiners
            0x84E7 /* GL_SUBTRACT */: 3,
            0x8575 /* GL_INTERPOLATE */: 4,
  
            // color and alpha src
            0x1702 /* GL_TEXTURE */: 0,
            0x8576 /* GL_CONSTANT */: 1,
            0x8577 /* GL_PRIMARY_COLOR */: 2,
            0x8578 /* GL_PREVIOUS */: 3,
  
            // color and alpha op
            0x0300 /* GL_SRC_COLOR */: 0,
            0x0301 /* GL_ONE_MINUS_SRC_COLOR */: 1,
            0x0302 /* GL_SRC_ALPHA */: 2,
            0x0300 /* GL_ONE_MINUS_SRC_ALPHA */: 3
          };
  
          // The tuple (key0,key1,key2) uniquely identifies the state of the variables in CTexEnv.
          // -1 on key0 denotes 'the whole cached key is dirty'
          this.key0 = -1;
          this.key1 = 0;
          this.key2 = 0;
  
          this.computeKey0 = function() {
            var k = this.traverseKey;
            var key = k[this.mode] * 1638400; // 6 distinct values.
            key += k[this.colorCombiner] * 327680; // 5 distinct values.
            key += k[this.alphaCombiner] * 65536; // 5 distinct values.
            // The above three fields have 6*5*5=150 distinct values -> 8 bits.
            key += (this.colorScale-1) * 16384; // 10 bits used.
            key += (this.alphaScale-1) * 4096; // 12 bits used.
            key += k[this.colorSrc[0]] * 1024; // 14
            key += k[this.colorSrc[1]] * 256; // 16
            key += k[this.colorSrc[2]] * 64; // 18
            key += k[this.alphaSrc[0]] * 16; // 20
            key += k[this.alphaSrc[1]] * 4; // 22
            key += k[this.alphaSrc[2]]; // 24 bits used total.
            return key;
          }
          this.computeKey1 = function() {
            var k = this.traverseKey;
            key = k[this.colorOp[0]] * 4096;
            key += k[this.colorOp[1]] * 1024;             
            key += k[this.colorOp[2]] * 256;
            key += k[this.alphaOp[0]] * 16;
            key += k[this.alphaOp[1]] * 4;
            key += k[this.alphaOp[2]];
            return key;            
          }
          // TODO: remove this. The color should not be part of the key!
          this.computeKey2 = function() {
            return this.envColor[0] * 16777216 + this.envColor[1] * 65536 + this.envColor[2] * 256 + 1 + this.envColor[3];
          }
          this.recomputeKey = function() {
            this.key0 = this.computeKey0();
            this.key1 = this.computeKey1();
            this.key2 = this.computeKey2();
          }
          this.invalidateKey = function() {
            this.key0 = -1; // The key of this texture unit must be recomputed when rendering the next time.
            GLImmediate.currentRenderer = null; // The currently used renderer must be re-evaluated at next render.
          }
        }
  
        function CTexUnit() {
          this.env = new CTexEnv();
          this.enabled_tex1D   = false;
          this.enabled_tex2D   = false;
          this.enabled_tex3D   = false;
          this.enabled_texCube = false;
          this.texTypesEnabled = 0; // A bitfield combination of the four flags above, used for fast access to operations.
  
          this.traverseState = function CTexUnit_traverseState(keyView) {
            if (this.texTypesEnabled) {
              if (this.env.key0 == -1) {
                this.env.recomputeKey();
              }
              keyView.next(this.texTypesEnabled | (this.env.key0 << 4));
              keyView.next(this.env.key1);
              keyView.next(this.env.key2);
            } else {
              // For correctness, must traverse a zero value, theoretically a subsequent integer key could collide with this value otherwise.
              keyView.next(0);
            }
          };
        };
  
        // Class impls:
        CTexUnit.prototype.enabled = function CTexUnit_enabled() {
          return this.texTypesEnabled;
        }
  
        CTexUnit.prototype.genPassLines = function CTexUnit_genPassLines(passOutputVar, passInputVar, texUnitID) {
          if (!this.enabled()) {
            return ["vec4 " + passOutputVar + " = " + passInputVar + ";"];
          }
          var lines = this.env.genPassLines(passOutputVar, passInputVar, texUnitID).join('\n');
  
          var texLoadLines = '';
          var texLoadRegex = /(texture.*?\(.*?\))/g;
          var loadCounter = 0;
          var load;
  
          // As an optimization, merge duplicate identical texture loads to one var.
          while(load = texLoadRegex.exec(lines)) {
            var texLoadExpr = load[1];
            var secondOccurrence = lines.slice(load.index+1).indexOf(texLoadExpr);
            if (secondOccurrence != -1) { // And also has a second occurrence of same load expression..
              // Create new var to store the common load.
              var prefix = TEXENVJIT_NAMESPACE_PREFIX + 'env' + texUnitID + "_";
              var texLoadVar = prefix + 'texload' + loadCounter++;
              var texLoadLine = 'vec4 ' + texLoadVar + ' = ' + texLoadExpr + ';\n';
              texLoadLines += texLoadLine + '\n'; // Store the generated texture load statements in a temp string to not confuse regex search in progress.
              lines = lines.split(texLoadExpr).join(texLoadVar);
              // Reset regex search, since we modified the string.
              texLoadRegex = /(texture.*\(.*\))/g;
            }
          }
          return [texLoadLines + lines];
        }
  
        CTexUnit.prototype.getTexType = function CTexUnit_getTexType() {
          if (this.enabled_texCube) {
            return GL_TEXTURE_CUBE_MAP;
          } else if (this.enabled_tex3D) {
            return GL_TEXTURE_3D;
          } else if (this.enabled_tex2D) {
            return GL_TEXTURE_2D;
          } else if (this.enabled_tex1D) {
            return GL_TEXTURE_1D;
          }
          return 0;
        }
  
        CTexEnv.prototype.genPassLines = function CTexEnv_genPassLines(passOutputVar, passInputVar, texUnitID) {
          switch (this.mode) {
            case GL_REPLACE: {
              /* RGB:
               * Cv = Cs
               * Av = Ap // Note how this is different, and that we'll
               *            need to track the bound texture internalFormat
               *            to get this right.
               *
               * RGBA:
               * Cv = Cs
               * Av = As
               */
              return [
                "vec4 " + passOutputVar + " = " + genTexUnitSampleExpr(texUnitID) + ";",
              ];
            }
            case GL_ADD: {
              /* RGBA:
               * Cv = Cp + Cs
               * Av = ApAs
               */
              var prefix = TEXENVJIT_NAMESPACE_PREFIX + 'env' + texUnitID + "_";
              var texVar = prefix + "tex";
              var colorVar = prefix + "color";
              var alphaVar = prefix + "alpha";
  
              return [
                "vec4 " + texVar + " = " + genTexUnitSampleExpr(texUnitID) + ";",
                "vec3 " + colorVar + " = " + passInputVar + ".rgb + " + texVar + ".rgb;",
                "float " + alphaVar + " = " + passInputVar + ".a * " + texVar + ".a;",
                "vec4 " + passOutputVar + " = vec4(" + colorVar + ", " + alphaVar + ");",
              ];
            }
            case GL_MODULATE: {
              /* RGBA:
               * Cv = CpCs
               * Av = ApAs
               */
              var line = [
                "vec4 " + passOutputVar,
                " = ",
                  passInputVar,
                  " * ",
                  genTexUnitSampleExpr(texUnitID),
                ";",
              ];
              return [line.join("")];
            }
            case GL_DECAL: {
              /* RGBA:
               * Cv = Cp(1 - As) + CsAs
               * Av = Ap
               */
              var prefix = TEXENVJIT_NAMESPACE_PREFIX + 'env' + texUnitID + "_";
              var texVar = prefix + "tex";
              var colorVar = prefix + "color";
              var alphaVar = prefix + "alpha";
  
              return [
                "vec4 " + texVar + " = " + genTexUnitSampleExpr(texUnitID) + ";",
                [
                  "vec3 " + colorVar + " = ",
                    passInputVar + ".rgb * (1.0 - " + texVar + ".a)",
                      " + ",
                    texVar + ".rgb * " + texVar + ".a",
                  ";"
                ].join(""),
                "float " + alphaVar + " = " + passInputVar + ".a;",
                "vec4 " + passOutputVar + " = vec4(" + colorVar + ", " + alphaVar + ");",
              ];
            }
            case GL_BLEND: {
              /* RGBA:
               * Cv = Cp(1 - Cs) + CcCs
               * Av = As
               */
              var prefix = TEXENVJIT_NAMESPACE_PREFIX + 'env' + texUnitID + "_";
              var texVar = prefix + "tex";
              var colorVar = prefix + "color";
              var alphaVar = prefix + "alpha";
  
              return [
                "vec4 " + texVar + " = " + genTexUnitSampleExpr(texUnitID) + ";",
                [
                  "vec3 " + colorVar + " = ",
                    passInputVar + ".rgb * (1.0 - " + texVar + ".rgb)",
                      " + ",
                    PRIM_COLOR_VARYING + ".rgb * " + texVar + ".rgb",
                  ";"
                ].join(""),
                "float " + alphaVar + " = " + texVar + ".a;",
                "vec4 " + passOutputVar + " = vec4(" + colorVar + ", " + alphaVar + ");",
              ];
            }
            case GL_COMBINE: {
              var prefix = TEXENVJIT_NAMESPACE_PREFIX + 'env' + texUnitID + "_";
              var colorVar = prefix + "color";
              var alphaVar = prefix + "alpha";
              var colorLines = this.genCombinerLines(true, colorVar,
                                                     passInputVar, texUnitID,
                                                     this.colorCombiner, this.colorSrc, this.colorOp);
              var alphaLines = this.genCombinerLines(false, alphaVar,
                                                     passInputVar, texUnitID,
                                                     this.alphaCombiner, this.alphaSrc, this.alphaOp);
  
              // Generate scale, but avoid generating an identity op that multiplies by one.
              var scaledColor = (this.colorScale == 1) ? colorVar : (colorVar + " * " + valToFloatLiteral(this.colorScale));
              var scaledAlpha = (this.alphaScale == 1) ? alphaVar : (alphaVar + " * " + valToFloatLiteral(this.alphaScale));
  
              var line = [
                "vec4 " + passOutputVar,
                " = ",
                  "vec4(",
                      scaledColor,
                      ", ",
                      scaledAlpha,
                  ")",
                ";",
              ].join("");
              return [].concat(colorLines, alphaLines, [line]);
            }
          }
  
          return abort_noSupport("Unsupported TexEnv mode: 0x" + this.mode.toString(16));
        }
  
        CTexEnv.prototype.genCombinerLines = function CTexEnv_getCombinerLines(isColor, outputVar,
                                                                               passInputVar, texUnitID,
                                                                               combiner, srcArr, opArr)
        {
          var argsNeeded = null;
          switch (combiner) {
            case GL_REPLACE:
              argsNeeded = 1;
              break;
  
            case GL_MODULATE:
            case GL_ADD:
            case GL_SUBTRACT:
              argsNeeded = 2;
              break;
  
            case GL_INTERPOLATE:
              argsNeeded = 3;
              break;
  
            default:
              return abort_noSupport("Unsupported combiner: 0x" + combiner.toString(16));
          }
  
          var constantExpr = [
            "vec4(",
              valToFloatLiteral(this.envColor[0]),
              ", ",
              valToFloatLiteral(this.envColor[1]),
              ", ",
              valToFloatLiteral(this.envColor[2]),
              ", ",
              valToFloatLiteral(this.envColor[3]),
            ")",
          ].join("");
          var src0Expr = (argsNeeded >= 1) ? genCombinerSourceExpr(texUnitID, constantExpr, passInputVar, srcArr[0], opArr[0])
                                           : null;
          var src1Expr = (argsNeeded >= 2) ? genCombinerSourceExpr(texUnitID, constantExpr, passInputVar, srcArr[1], opArr[1])
                                           : null;
          var src2Expr = (argsNeeded >= 3) ? genCombinerSourceExpr(texUnitID, constantExpr, passInputVar, srcArr[2], opArr[2])
                                           : null;
  
          var outputType = isColor ? "vec3" : "float";
          var lines = null;
          switch (combiner) {
            case GL_REPLACE: {
              var line = [
                outputType + " " + outputVar,
                " = ",
                  src0Expr,
                ";",
              ];
              lines = [line.join("")];
              break;
            }
            case GL_MODULATE: {
              var line = [
                outputType + " " + outputVar + " = ",
                  src0Expr + " * " + src1Expr,
                ";",
              ];
              lines = [line.join("")];
              break;
            }
            case GL_ADD: {
              var line = [
                outputType + " " + outputVar + " = ",
                  src0Expr + " + " + src1Expr,
                ";",
              ];
              lines = [line.join("")];
              break;
            }
            case GL_SUBTRACT: {
              var line = [
                outputType + " " + outputVar + " = ",
                  src0Expr + " - " + src1Expr,
                ";",
              ];
              lines = [line.join("")];
              break;
            }
            case GL_INTERPOLATE: {
              var prefix = TEXENVJIT_NAMESPACE_PREFIX + 'env' + texUnitID + "_";
              var arg2Var = prefix + "colorSrc2";
              var arg2Line = getTypeFromCombineOp(this.colorOp[2]) + " " + arg2Var + " = " + src2Expr + ";";
  
              var line = [
                outputType + " " + outputVar,
                " = ",
                  src0Expr + " * " + arg2Var,
                  " + ",
                  src1Expr + " * (1.0 - " + arg2Var + ")",
                ";",
              ];
              lines = [
                arg2Line,
                line.join(""),
              ];
              break;
            }
  
            default:
              return abort_sanity("Unmatched TexEnv.colorCombiner?");
          }
  
          return lines;
        }
  
        return {
          // Exports:
          init: function(gl, specifiedMaxTextureImageUnits) {
            var maxTexUnits = 0;
            if (specifiedMaxTextureImageUnits) {
              maxTexUnits = specifiedMaxTextureImageUnits;
            } else if (gl) {
              maxTexUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);
            }
            s_texUnits = [];
            for (var i = 0; i < maxTexUnits; i++) {
              s_texUnits.push(new CTexUnit());
            }
          },
  
          setGLSLVars: function(uTexUnitPrefix, vTexCoordPrefix, vPrimColor, uTexMatrixPrefix) {
            TEX_UNIT_UNIFORM_PREFIX   = uTexUnitPrefix;
            TEX_COORD_VARYING_PREFIX  = vTexCoordPrefix;
            PRIM_COLOR_VARYING        = vPrimColor;
            TEX_MATRIX_UNIFORM_PREFIX = uTexMatrixPrefix;
          },
  
          genAllPassLines: function(resultDest, indentSize) {
            indentSize = indentSize || 0;
  
            s_requiredTexUnitsForPass.length = 0; // Clear the list.
            var lines = [];
            var lastPassVar = PRIM_COLOR_VARYING;
            for (var i = 0; i < s_texUnits.length; i++) {
              if (!s_texUnits[i].enabled()) continue;
  
              s_requiredTexUnitsForPass.push(i);
  
              var prefix = TEXENVJIT_NAMESPACE_PREFIX + 'env' + i + "_";
              var passOutputVar = prefix + "result";
  
              var newLines = s_texUnits[i].genPassLines(passOutputVar, lastPassVar, i);
              lines = lines.concat(newLines, [""]);
  
              lastPassVar = passOutputVar;
            }
            lines.push(resultDest + " = " + lastPassVar + ";");
  
            var indent = "";
            for (var i = 0; i < indentSize; i++) indent += " ";
  
            var output = indent + lines.join("\n" + indent);
  
            return output;
          },
  
          getUsedTexUnitList: function() {
            return s_requiredTexUnitsForPass;
          },
  
          traverseState: function(keyView) {
            for (var i = 0; i < s_texUnits.length; i++) {
              s_texUnits[i].traverseState(keyView);
            }
          },
  
          getTexUnitType: function(texUnitID) {
            return s_texUnits[texUnitID].getTexType();
          },
  
          // Hooks:
          hook_activeTexture: function(texture) {
            s_activeTexture = texture - GL_TEXTURE0;
          },
  
          hook_enable: function(cap) {
            var cur = getCurTexUnit();
            switch (cap) {
              case GL_TEXTURE_1D:
                if (!cur.enabled_tex1D) {
                  GLImmediate.currentRenderer = null; // Renderer state changed, and must be recreated or looked up again.
                  cur.enabled_tex1D = true;
                  cur.texTypesEnabled |= 1;
                }
                break;
              case GL_TEXTURE_2D:
                if (!cur.enabled_tex2D) {
                  GLImmediate.currentRenderer = null;
                  cur.enabled_tex2D = true;
                  cur.texTypesEnabled |= 2;
                }
                break;
              case GL_TEXTURE_3D:
                if (!cur.enabled_tex3D) {
                  GLImmediate.currentRenderer = null;
                  cur.enabled_tex3D = true;
                  cur.texTypesEnabled |= 4;
                }
                break;
              case GL_TEXTURE_CUBE_MAP:
                if (!cur.enabled_texCube) {
                  GLImmediate.currentRenderer = null;
                  cur.enabled_texCube = true;
                  cur.texTypesEnabled |= 8;
                }
                break;
            }
          },
  
          hook_disable: function(cap) {
            var cur = getCurTexUnit();
            switch (cap) {
              case GL_TEXTURE_1D:
                if (cur.enabled_tex1D) {
                  GLImmediate.currentRenderer = null; // Renderer state changed, and must be recreated or looked up again.
                  cur.enabled_tex1D = false;
                  cur.texTypesEnabled &= ~1;
                }
                break;
              case GL_TEXTURE_2D:
                if (cur.enabled_tex2D) {
                  GLImmediate.currentRenderer = null;
                  cur.enabled_tex2D = false;
                  cur.texTypesEnabled &= ~2;
                }
                break;
              case GL_TEXTURE_3D:
                if (cur.enabled_tex3D) {
                  GLImmediate.currentRenderer = null;
                  cur.enabled_tex3D = false;
                  cur.texTypesEnabled &= ~4;
                }
                break;
              case GL_TEXTURE_CUBE_MAP:
                if (cur.enabled_texCube) {
                  GLImmediate.currentRenderer = null;
                  cur.enabled_texCube = false;
                  cur.texTypesEnabled &= ~8;
                }
                break;
            }
          },
  
          hook_texEnvf: function(target, pname, param) {
            if (target != GL_TEXTURE_ENV)
              return;
  
            var env = getCurTexUnit().env;
            switch (pname) {
              case GL_RGB_SCALE:
                if (env.colorScale != param) {
                  env.invalidateKey(); // We changed FFP emulation renderer state.
                  env.colorScale = param;
                }
                break;
              case GL_ALPHA_SCALE:
                if (env.alphaScale != param) {
                  env.invalidateKey();
                  env.alphaScale = param;
                }
                break;
  
              default:
                Module.printErr('WARNING: Unhandled `pname` in call to `glTexEnvf`.');
            }
          },
  
          hook_texEnvi: function(target, pname, param) {
            if (target != GL_TEXTURE_ENV)
              return;
  
            var env = getCurTexUnit().env;
            switch (pname) {
              case GL_TEXTURE_ENV_MODE:
                if (env.mode != param) {
                  env.invalidateKey(); // We changed FFP emulation renderer state.
                  env.mode = param;
                }
                break;
  
              case GL_COMBINE_RGB:
                if (env.colorCombiner != param) {
                  env.invalidateKey();
                  env.colorCombiner = param;
                }
                break;
              case GL_COMBINE_ALPHA:
                if (env.alphaCombiner != param) {
                  env.invalidateKey();
                  env.alphaCombiner = param;
                }
                break;
  
              case GL_SRC0_RGB:
                if (env.colorSrc[0] != param) {
                  env.invalidateKey();
                  env.colorSrc[0] = param;
                }
                break;
              case GL_SRC1_RGB:
                if (env.colorSrc[1] != param) {
                  env.invalidateKey();
                  env.colorSrc[1] = param;
                }
                break;
              case GL_SRC2_RGB:
                if (env.colorSrc[2] != param) {
                  env.invalidateKey();
                  env.colorSrc[2] = param;
                }
                break;
  
              case GL_SRC0_ALPHA:
                if (env.alphaSrc[0] != param) {
                  env.invalidateKey();
                  env.alphaSrc[0] = param;
                }
                break;
              case GL_SRC1_ALPHA:
                if (env.alphaSrc[1] != param) {
                  env.invalidateKey();
                  env.alphaSrc[1] = param;
                }
                break;
              case GL_SRC2_ALPHA:
                if (env.alphaSrc[2] != param) {
                  env.invalidateKey();
                  env.alphaSrc[2] = param;
                }
                break;
  
              case GL_OPERAND0_RGB:
                if (env.colorOp[0] != param) {
                  env.invalidateKey();
                  env.colorOp[0] = param;
                }
                break;
              case GL_OPERAND1_RGB:
                if (env.colorOp[1] != param) {
                  env.invalidateKey();
                  env.colorOp[1] = param;
                }
                break;
              case GL_OPERAND2_RGB:
                if (env.colorOp[2] != param) {
                  env.invalidateKey();
                  env.colorOp[2] = param;
                }
                break;
  
              case GL_OPERAND0_ALPHA:
                if (env.alphaOp[0] != param) {
                  env.invalidateKey();
                  env.alphaOp[0] = param;
                }
                break;
              case GL_OPERAND1_ALPHA:
                if (env.alphaOp[1] != param) {
                  env.invalidateKey();
                  env.alphaOp[1] = param;
                }
                break;
              case GL_OPERAND2_ALPHA:
                if (env.alphaOp[2] != param) {
                  env.invalidateKey();
                  env.alphaOp[2] = param;
                }
                break;
  
              case GL_RGB_SCALE:
                if (env.colorScale != param) {
                  env.invalidateKey();
                  env.colorScale = param;
                }
                break;
              case GL_ALPHA_SCALE:
                if (env.alphaScale != param) {
                  env.invalidateKey();
                  env.alphaScale = param;
                }
                break;
  
              default:
                Module.printErr('WARNING: Unhandled `pname` in call to `glTexEnvi`.');
            }
          },
  
          hook_texEnvfv: function(target, pname, params) {
            if (target != GL_TEXTURE_ENV) return;
  
            var env = getCurTexUnit().env;
            switch (pname) {
              case GL_TEXTURE_ENV_COLOR: {
                for (var i = 0; i < 4; i++) {
                  var param = HEAPF32[(((params)+(i*4))>>2)];
                  if (env.envColor[i] != param) {
                    env.invalidateKey(); // We changed FFP emulation renderer state.
                    env.envColor[i] = param;
                  }
                }
                break
              }
              default:
                Module.printErr('WARNING: Unhandled `pname` in call to `glTexEnvfv`.');
            }
          },
  
          hook_getTexEnviv: function(target, pname, param) {
            if (target != GL_TEXTURE_ENV)
              return;
  
            var env = getCurTexUnit().env;
            switch (pname) {
              case GL_TEXTURE_ENV_MODE:
                HEAP32[((param)>>2)]=env.mode;
                return;
  
              case GL_TEXTURE_ENV_COLOR:
                HEAP32[((param)>>2)]=Math.max(Math.min(env.envColor[0]*255, 255, -255));
                HEAP32[(((param)+(1))>>2)]=Math.max(Math.min(env.envColor[1]*255, 255, -255));
                HEAP32[(((param)+(2))>>2)]=Math.max(Math.min(env.envColor[2]*255, 255, -255));
                HEAP32[(((param)+(3))>>2)]=Math.max(Math.min(env.envColor[3]*255, 255, -255));
                return;
  
              case GL_COMBINE_RGB:
                HEAP32[((param)>>2)]=env.colorCombiner;
                return;
  
              case GL_COMBINE_ALPHA:
                HEAP32[((param)>>2)]=env.alphaCombiner;
                return;
  
              case GL_SRC0_RGB:
                HEAP32[((param)>>2)]=env.colorSrc[0];
                return;
  
              case GL_SRC1_RGB:
                HEAP32[((param)>>2)]=env.colorSrc[1];
                return;
  
              case GL_SRC2_RGB:
                HEAP32[((param)>>2)]=env.colorSrc[2];
                return;
  
              case GL_SRC0_ALPHA:
                HEAP32[((param)>>2)]=env.alphaSrc[0];
                return;
  
              case GL_SRC1_ALPHA:
                HEAP32[((param)>>2)]=env.alphaSrc[1];
                return;
  
              case GL_SRC2_ALPHA:
                HEAP32[((param)>>2)]=env.alphaSrc[2];
                return;
  
              case GL_OPERAND0_RGB:
                HEAP32[((param)>>2)]=env.colorOp[0];
                return;
  
              case GL_OPERAND1_RGB:
                HEAP32[((param)>>2)]=env.colorOp[1];
                return;
  
              case GL_OPERAND2_RGB:
                HEAP32[((param)>>2)]=env.colorOp[2];
                return;
  
              case GL_OPERAND0_ALPHA:
                HEAP32[((param)>>2)]=env.alphaOp[0];
                return;
  
              case GL_OPERAND1_ALPHA:
                HEAP32[((param)>>2)]=env.alphaOp[1];
                return;
  
              case GL_OPERAND2_ALPHA:
                HEAP32[((param)>>2)]=env.alphaOp[2];
                return;
  
              case GL_RGB_SCALE:
                HEAP32[((param)>>2)]=env.colorScale;
                return;
  
              case GL_ALPHA_SCALE:
                HEAP32[((param)>>2)]=env.alphaScale;
                return;
  
              default:
                Module.printErr('WARNING: Unhandled `pname` in call to `glGetTexEnvi`.');
            }
          },
  
          hook_getTexEnvfv: function(target, pname, param) {
            if (target != GL_TEXTURE_ENV)
              return;
  
            var env = getCurTexUnit().env;
            switch (pname) {
              case GL_TEXTURE_ENV_COLOR:
                HEAPF32[((param)>>2)]=env.envColor[0];
                HEAPF32[(((param)+(4))>>2)]=env.envColor[1];
                HEAPF32[(((param)+(8))>>2)]=env.envColor[2];
                HEAPF32[(((param)+(12))>>2)]=env.envColor[3];
                return;
            }
          }
        };
      },vertexData:null,vertexDataU8:null,tempData:null,indexData:null,vertexCounter:0,mode:-1,rendererCache:null,rendererComponents:[],rendererComponentPointer:0,lastRenderer:null,lastArrayBuffer:null,lastProgram:null,lastStride:-1,matrix:[],matrixStack:[],currentMatrix:0,tempMatrix:null,matricesModified:false,useTextureMatrix:false,VERTEX:0,NORMAL:1,COLOR:2,TEXTURE0:3,NUM_ATTRIBUTES:-1,MAX_TEXTURES:-1,totalEnabledClientAttributes:0,enabledClientAttributes:[0,0],clientAttributes:[],liveClientAttributes:[],currentRenderer:null,modifiedClientAttributes:false,clientActiveTexture:0,clientColor:null,usedTexUnitList:[],fixedFunctionProgram:null,setClientAttribute:function setClientAttribute(name, size, type, stride, pointer) {
        var attrib = GLImmediate.clientAttributes[name];
        if (!attrib) {
          for (var i = 0; i <= name; i++) { // keep flat
            if (!GLImmediate.clientAttributes[i]) {
              GLImmediate.clientAttributes[i] = {
                name: name,
                size: size,
                type: type,
                stride: stride,
                pointer: pointer,
                offset: 0
              };
            }
          }
        } else {
          attrib.name = name;
          attrib.size = size;
          attrib.type = type;
          attrib.stride = stride;
          attrib.pointer = pointer;
          attrib.offset = 0;
        }
        GLImmediate.modifiedClientAttributes = true;
      },addRendererComponent:function addRendererComponent(name, size, type) {
        if (!GLImmediate.rendererComponents[name]) {
          GLImmediate.rendererComponents[name] = 1;
          GLImmediate.enabledClientAttributes[name] = true;
          GLImmediate.setClientAttribute(name, size, type, 0, GLImmediate.rendererComponentPointer);
          GLImmediate.rendererComponentPointer += size * GL.byteSizeByType[type - GL.byteSizeByTypeRoot];
        } else {
          GLImmediate.rendererComponents[name]++;
        }
      },disableBeginEndClientAttributes:function disableBeginEndClientAttributes() {
        for (var i = 0; i < GLImmediate.NUM_ATTRIBUTES; i++) {
          if (GLImmediate.rendererComponents[i]) GLImmediate.enabledClientAttributes[i] = false;
        }
      },getRenderer:function getRenderer() {
        // If no FFP state has changed that would have forced to re-evaluate which FFP emulation shader to use,
        // we have the currently used renderer in cache, and can immediately return that.
        if (GLImmediate.currentRenderer) {
          return GLImmediate.currentRenderer;
        }
        // return a renderer object given the liveClientAttributes
        // we maintain a cache of renderers, optimized to not generate garbage
        var attributes = GLImmediate.liveClientAttributes;
        var cacheMap = GLImmediate.rendererCache;
        var keyView = cacheMap.getStaticKeyView().reset();
  
        // By attrib state:
        var enabledAttributesKey = 0;
        for (var i = 0; i < attributes.length; i++) {
          enabledAttributesKey |= 1 << attributes[i].name;
        }
  
        // By fog state:
        var fogParam = 0;
        if (GLEmulation.fogEnabled) {
          switch (GLEmulation.fogMode) {
            case 0x0801: // GL_EXP2
              fogParam = 1;
              break;
            case 0x2601: // GL_LINEAR
              fogParam = 2;
              break;
            default: // default to GL_EXP
              fogParam = 3;
              break;
          }
        }
        keyView.next((enabledAttributesKey << 2) | fogParam);
  
        // By cur program:
        keyView.next(GL.currProgram);
        if (!GL.currProgram) {
          GLImmediate.TexEnvJIT.traverseState(keyView);
        }
  
        // If we don't already have it, create it.
        var renderer = keyView.get();
        if (!renderer) {
          renderer = GLImmediate.createRenderer();
          GLImmediate.currentRenderer = renderer;
          keyView.set(renderer);
          return renderer;
        }
        GLImmediate.currentRenderer = renderer; // Cache the currently used renderer, so later lookups without state changes can get this fast.
        return renderer;
      },createRenderer:function createRenderer(renderer) {
        var useCurrProgram = !!GL.currProgram;
        var hasTextures = false;
        for (var i = 0; i < GLImmediate.MAX_TEXTURES; i++) {
          var texAttribName = GLImmediate.TEXTURE0 + i;
          if (!GLImmediate.enabledClientAttributes[texAttribName])
            continue;
  
  
          hasTextures = true;
        }
  
        var ret = {
          init: function init() {
            // For fixed-function shader generation.
            var uTexUnitPrefix = 'u_texUnit';
            var aTexCoordPrefix = 'a_texCoord';
            var vTexCoordPrefix = 'v_texCoord';
            var vPrimColor = 'v_color';
            var uTexMatrixPrefix = GLImmediate.useTextureMatrix ? 'u_textureMatrix' : null;
  
            if (useCurrProgram) {
              if (GL.shaderInfos[GL.programShaders[GL.currProgram][0]].type == GLctx.VERTEX_SHADER) {
                this.vertexShader = GL.shaders[GL.programShaders[GL.currProgram][0]];
                this.fragmentShader = GL.shaders[GL.programShaders[GL.currProgram][1]];
              } else {
                this.vertexShader = GL.shaders[GL.programShaders[GL.currProgram][1]];
                this.fragmentShader = GL.shaders[GL.programShaders[GL.currProgram][0]];
              }
              this.program = GL.programs[GL.currProgram];
              this.usedTexUnitList = [];
            } else {
              // IMPORTANT NOTE: If you parameterize the shader source based on any runtime values
              // in order to create the least expensive shader possible based on the features being
              // used, you should also update the code in the beginning of getRenderer to make sure
              // that you cache the renderer based on the said parameters.
              if (GLEmulation.fogEnabled) {
                switch (GLEmulation.fogMode) {
                  case 0x0801: // GL_EXP2
                    // fog = exp(-(gl_Fog.density * gl_FogFragCoord)^2)
                    var fogFormula = '  float fog = exp(-u_fogDensity * u_fogDensity * ecDistance * ecDistance); \n';
                    break;
                  case 0x2601: // GL_LINEAR
                    // fog = (gl_Fog.end - gl_FogFragCoord) * gl_fog.scale
                    var fogFormula = '  float fog = (u_fogEnd - ecDistance) * u_fogScale; \n';
                    break;
                  default: // default to GL_EXP
                    // fog = exp(-gl_Fog.density * gl_FogFragCoord)
                    var fogFormula = '  float fog = exp(-u_fogDensity * ecDistance); \n';
                    break;
                }
              }
  
              GLImmediate.TexEnvJIT.setGLSLVars(uTexUnitPrefix, vTexCoordPrefix, vPrimColor, uTexMatrixPrefix);
              var fsTexEnvPass = GLImmediate.TexEnvJIT.genAllPassLines('gl_FragColor', 2);
  
              var texUnitAttribList = '';
              var texUnitVaryingList = '';
              var texUnitUniformList = '';
              var vsTexCoordInits = '';
              this.usedTexUnitList = GLImmediate.TexEnvJIT.getUsedTexUnitList();
              for (var i = 0; i < this.usedTexUnitList.length; i++) {
                var texUnit = this.usedTexUnitList[i];
                texUnitAttribList += 'attribute vec4 ' + aTexCoordPrefix + texUnit + ';\n';
                texUnitVaryingList += 'varying vec4 ' + vTexCoordPrefix + texUnit + ';\n';
                texUnitUniformList += 'uniform sampler2D ' + uTexUnitPrefix + texUnit + ';\n';
                vsTexCoordInits += '  ' + vTexCoordPrefix + texUnit + ' = ' + aTexCoordPrefix + texUnit + ';\n';
  
                if (GLImmediate.useTextureMatrix) {
                  texUnitUniformList += 'uniform mat4 ' + uTexMatrixPrefix + texUnit + ';\n';
                }
              }
  
              var vsFogVaryingInit = null;
              if (GLEmulation.fogEnabled) {
                vsFogVaryingInit = '  v_fogFragCoord = abs(ecPosition.z);\n';
              }
  
              var vsSource = [
                'attribute vec4 a_position;',
                'attribute vec4 a_color;',
                'varying vec4 v_color;',
                texUnitAttribList,
                texUnitVaryingList,
                (GLEmulation.fogEnabled ? 'varying float v_fogFragCoord;' : null),
                'uniform mat4 u_modelView;',
                'uniform mat4 u_projection;',
                'void main()',
                '{',
                '  vec4 ecPosition = u_modelView * a_position;', // eye-coordinate position
                '  gl_Position = u_projection * ecPosition;',
                '  v_color = a_color;',
                vsTexCoordInits,
                vsFogVaryingInit,
                '}',
                ''
              ].join('\n').replace(/\n\n+/g, '\n');
  
              this.vertexShader = GLctx.createShader(GLctx.VERTEX_SHADER);
              GLctx.shaderSource(this.vertexShader, vsSource);
              GLctx.compileShader(this.vertexShader);
  
              var fogHeaderIfNeeded = null;
              if (GLEmulation.fogEnabled) {
                fogHeaderIfNeeded = [
                  '',
                  'varying float v_fogFragCoord; ',
                  'uniform vec4 u_fogColor;      ',
                  'uniform float u_fogEnd;       ',
                  'uniform float u_fogScale;     ',
                  'uniform float u_fogDensity;   ',
                  'float ffog(in float ecDistance) { ',
                  fogFormula,
                  '  fog = clamp(fog, 0.0, 1.0); ',
                  '  return fog;                 ',
                  '}',
                  '',
                ].join("\n");
              }
  
              var fogPass = null;
              if (GLEmulation.fogEnabled) {
                fogPass = 'gl_FragColor = vec4(mix(u_fogColor.rgb, gl_FragColor.rgb, ffog(v_fogFragCoord)), gl_FragColor.a);\n';
              }
  
              var fsSource = [
                'precision mediump float;',
                texUnitVaryingList,
                texUnitUniformList,
                'varying vec4 v_color;',
                fogHeaderIfNeeded,
                'void main()',
                '{',
                fsTexEnvPass,
                fogPass,
                '}',
                ''
              ].join("\n").replace(/\n\n+/g, '\n');
  
              this.fragmentShader = GLctx.createShader(GLctx.FRAGMENT_SHADER);
              GLctx.shaderSource(this.fragmentShader, fsSource);
              GLctx.compileShader(this.fragmentShader);
  
              this.program = GLctx.createProgram();
              GLctx.attachShader(this.program, this.vertexShader);
              GLctx.attachShader(this.program, this.fragmentShader);
  
              // As optimization, bind all attributes to prespecified locations, so that the FFP emulation
              // code can submit attributes to any generated FFP shader without having to examine each shader in turn.
              // These prespecified locations are only assumed if GL_FFP_ONLY is specified, since user could also create their
              // own shaders that didn't have attributes in the same locations.
              GLctx.bindAttribLocation(this.program, GLImmediate.VERTEX, 'a_position');
              GLctx.bindAttribLocation(this.program, GLImmediate.COLOR, 'a_color');
              GLctx.bindAttribLocation(this.program, GLImmediate.NORMAL, 'a_normal');
              var maxVertexAttribs = GLctx.getParameter(GLctx.MAX_VERTEX_ATTRIBS);
              for (var i = 0; i < GLImmediate.MAX_TEXTURES && GLImmediate.TEXTURE0 + i < maxVertexAttribs; i++) {
                GLctx.bindAttribLocation(this.program, GLImmediate.TEXTURE0 + i, 'a_texCoord'+i);
                GLctx.bindAttribLocation(this.program, GLImmediate.TEXTURE0 + i, aTexCoordPrefix+i);
              }
              GLctx.linkProgram(this.program);
            }
  
            // Stores an array that remembers which matrix uniforms are up-to-date in this FFP renderer, so they don't need to be resubmitted
            // each time we render with this program.
            this.textureMatrixVersion = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ];
  
            this.positionLocation = GLctx.getAttribLocation(this.program, 'a_position');
  
            this.texCoordLocations = [];
  
            for (var i = 0; i < GLImmediate.MAX_TEXTURES; i++) {
              if (!GLImmediate.enabledClientAttributes[GLImmediate.TEXTURE0 + i]) {
                this.texCoordLocations[i] = -1;
                continue;
              }
  
              if (useCurrProgram) {
                this.texCoordLocations[i] = GLctx.getAttribLocation(this.program, 'a_texCoord' + i);
              } else {
                this.texCoordLocations[i] = GLctx.getAttribLocation(this.program, aTexCoordPrefix + i);
              }
            }
            this.colorLocation = GLctx.getAttribLocation(this.program, 'a_color');
            if (!useCurrProgram) {
              // Temporarily switch to the program so we can set our sampler uniforms early.
              var prevBoundProg = GLctx.getParameter(GLctx.CURRENT_PROGRAM);
              GLctx.useProgram(this.program);
              {
                for (var i = 0; i < this.usedTexUnitList.length; i++) {
                  var texUnitID = this.usedTexUnitList[i];
                  var texSamplerLoc = GLctx.getUniformLocation(this.program, uTexUnitPrefix + texUnitID);
                  GLctx.uniform1i(texSamplerLoc, texUnitID);
                }
              }
              // The default color attribute value is not the same as the default for all other attribute streams (0,0,0,1) but (1,1,1,1),
              // so explicitly set it right at start.
              GLctx.vertexAttrib4fv(this.colorLocation, [1,1,1,1]);
              GLctx.useProgram(prevBoundProg);
            }
  
            this.textureMatrixLocations = [];
            for (var i = 0; i < GLImmediate.MAX_TEXTURES; i++) {
              this.textureMatrixLocations[i] = GLctx.getUniformLocation(this.program, 'u_textureMatrix' + i);
            }
            this.normalLocation = GLctx.getAttribLocation(this.program, 'a_normal');
  
            this.modelViewLocation = GLctx.getUniformLocation(this.program, 'u_modelView');
            this.projectionLocation = GLctx.getUniformLocation(this.program, 'u_projection');
  
            this.hasTextures = hasTextures;
            this.hasNormal = GLImmediate.enabledClientAttributes[GLImmediate.NORMAL] &&
                             GLImmediate.clientAttributes[GLImmediate.NORMAL].size > 0 &&
                             this.normalLocation >= 0;
            this.hasColor = (this.colorLocation === 0) || this.colorLocation > 0;
  
            this.floatType = GLctx.FLOAT; // minor optimization
  
            this.fogColorLocation = GLctx.getUniformLocation(this.program, 'u_fogColor');
            this.fogEndLocation = GLctx.getUniformLocation(this.program, 'u_fogEnd');
            this.fogScaleLocation = GLctx.getUniformLocation(this.program, 'u_fogScale');
            this.fogDensityLocation = GLctx.getUniformLocation(this.program, 'u_fogDensity');
            this.hasFog = !!(this.fogColorLocation || this.fogEndLocation ||
                             this.fogScaleLocation || this.fogDensityLocation);
          },
  
          prepare: function prepare() {
            // Calculate the array buffer
            var arrayBuffer;
            if (!GL.currArrayBuffer) {
              var start = GLImmediate.firstVertex*GLImmediate.stride;
              var end = GLImmediate.lastVertex*GLImmediate.stride;
              arrayBuffer = GL.getTempVertexBuffer(end);
              // TODO: consider using the last buffer we bound, if it was larger. downside is larger buffer, but we might avoid rebinding and preparing
            } else {
              arrayBuffer = GL.currArrayBuffer;
            }
  
            // If the array buffer is unchanged and the renderer as well, then we can avoid all the work here
            // XXX We use some heuristics here, and this may not work in all cases. Try disabling GL_UNSAFE_OPTS if you
            // have odd glitches
            var lastRenderer = GLImmediate.lastRenderer;
            var canSkip = this == lastRenderer &&
                          arrayBuffer == GLImmediate.lastArrayBuffer &&
                          (GL.currProgram || this.program) == GLImmediate.lastProgram &&
                          GLImmediate.stride == GLImmediate.lastStride &&
                          !GLImmediate.matricesModified;
            if (!canSkip && lastRenderer) lastRenderer.cleanup();
            if (!GL.currArrayBuffer) {
              // Bind the array buffer and upload data after cleaning up the previous renderer
  
              if (arrayBuffer != GLImmediate.lastArrayBuffer) {
                GLctx.bindBuffer(GLctx.ARRAY_BUFFER, arrayBuffer);
                GLImmediate.lastArrayBuffer = arrayBuffer;
              }
  
              GLctx.bufferSubData(GLctx.ARRAY_BUFFER, start, GLImmediate.vertexData.subarray(start >> 2, end >> 2));
            }
            if (canSkip) return;
            GLImmediate.lastRenderer = this;
            GLImmediate.lastProgram = GL.currProgram || this.program;
            GLImmediate.lastStride == GLImmediate.stride;
            GLImmediate.matricesModified = false;
  
            if (!GL.currProgram) {
              if (GLImmediate.fixedFunctionProgram != this.program) {
                GLctx.useProgram(this.program);
                GLImmediate.fixedFunctionProgram = this.program;
              }
            }
  
            if (this.modelViewLocation && this.modelViewMatrixVersion != GLImmediate.matrixVersion[0/*m*/]) {
              this.modelViewMatrixVersion = GLImmediate.matrixVersion[0/*m*/];
              GLctx.uniformMatrix4fv(this.modelViewLocation, false, GLImmediate.matrix[0/*m*/]);
            }
            if (this.projectionLocation && this.projectionMatrixVersion != GLImmediate.matrixVersion[1/*p*/]) {
              this.projectionMatrixVersion = GLImmediate.matrixVersion[1/*p*/];
              GLctx.uniformMatrix4fv(this.projectionLocation, false, GLImmediate.matrix[1/*p*/]);
            }
  
            var clientAttributes = GLImmediate.clientAttributes;
            var posAttr = clientAttributes[GLImmediate.VERTEX];
  
  
            GLctx.vertexAttribPointer(this.positionLocation, posAttr.size, posAttr.type, false, GLImmediate.stride, posAttr.offset);
            GLctx.enableVertexAttribArray(this.positionLocation);
            if (this.hasNormal) {
              var normalAttr = clientAttributes[GLImmediate.NORMAL];
              GLctx.vertexAttribPointer(this.normalLocation, normalAttr.size, normalAttr.type, true, GLImmediate.stride, normalAttr.offset);
              GLctx.enableVertexAttribArray(this.normalLocation);
            }
            if (this.hasTextures) {
              for (var i = 0; i < GLImmediate.MAX_TEXTURES; i++) {
                var attribLoc = this.texCoordLocations[i];
                if (attribLoc === undefined || attribLoc < 0) continue;
                var texAttr = clientAttributes[GLImmediate.TEXTURE0+i];
  
                if (texAttr.size) {
                  GLctx.vertexAttribPointer(attribLoc, texAttr.size, texAttr.type, false, GLImmediate.stride, texAttr.offset);
                  GLctx.enableVertexAttribArray(attribLoc);
                } else {
                  // These two might be dangerous, but let's try them.
                  GLctx.vertexAttrib4f(attribLoc, 0, 0, 0, 1);
                  GLctx.disableVertexAttribArray(attribLoc);
                }
                var t = 2/*t*/+i;
                if (this.textureMatrixLocations[i] && this.textureMatrixVersion[t] != GLImmediate.matrixVersion[t]) { // XXX might we need this even without the condition we are currently in?
                  this.textureMatrixVersion[t] = GLImmediate.matrixVersion[t];
                  GLctx.uniformMatrix4fv(this.textureMatrixLocations[i], false, GLImmediate.matrix[t]);
                }
              }
            }
            if (GLImmediate.enabledClientAttributes[GLImmediate.COLOR]) {
              var colorAttr = clientAttributes[GLImmediate.COLOR];
              GLctx.vertexAttribPointer(this.colorLocation, colorAttr.size, colorAttr.type, true, GLImmediate.stride, colorAttr.offset);
              GLctx.enableVertexAttribArray(this.colorLocation);
            }
            else if (this.hasColor) {
              GLctx.disableVertexAttribArray(this.colorLocation);
              GLctx.vertexAttrib4fv(this.colorLocation, GLImmediate.clientColor);
            }
            if (this.hasFog) {
              if (this.fogColorLocation) GLctx.uniform4fv(this.fogColorLocation, GLEmulation.fogColor);
              if (this.fogEndLocation) GLctx.uniform1f(this.fogEndLocation, GLEmulation.fogEnd);
              if (this.fogScaleLocation) GLctx.uniform1f(this.fogScaleLocation, 1/(GLEmulation.fogEnd - GLEmulation.fogStart));
              if (this.fogDensityLocation) GLctx.uniform1f(this.fogDensityLocation, GLEmulation.fogDensity);
            }
          },
  
          cleanup: function cleanup() {
            GLctx.disableVertexAttribArray(this.positionLocation);
            if (this.hasTextures) {
              for (var i = 0; i < GLImmediate.MAX_TEXTURES; i++) {
                if (GLImmediate.enabledClientAttributes[GLImmediate.TEXTURE0+i] && this.texCoordLocations[i] >= 0) {
                  GLctx.disableVertexAttribArray(this.texCoordLocations[i]);
                }
              }
            }
            if (this.hasColor) {
              GLctx.disableVertexAttribArray(this.colorLocation);
            }
            if (this.hasNormal) {
              GLctx.disableVertexAttribArray(this.normalLocation);
            }
            if (!GL.currProgram) {
              GLctx.useProgram(null);
              GLImmediate.fixedFunctionProgram = 0;
            }
            if (!GL.currArrayBuffer) {
              GLctx.bindBuffer(GLctx.ARRAY_BUFFER, null);
              GLImmediate.lastArrayBuffer = null;
            }
  
            GLImmediate.lastRenderer = null;
            GLImmediate.lastProgram = null;
            GLImmediate.matricesModified = true;
          }
        };
        ret.init();
        return ret;
      },setupFuncs:function () {
        // Replace some functions with immediate-mode aware versions. If there are no client
        // attributes enabled, and we use webgl-friendly modes (no GL_QUADS), then no need
        // for emulation
        _glDrawArrays = _emscripten_glDrawArrays = function _glDrawArrays(mode, first, count) {
          if (GLImmediate.totalEnabledClientAttributes == 0 && mode <= 6) {
            GLctx.drawArrays(mode, first, count);
            return;
          }
          GLImmediate.prepareClientAttributes(count, false);
          GLImmediate.mode = mode;
          if (!GL.currArrayBuffer) {
            GLImmediate.vertexData = HEAPF32.subarray((GLImmediate.vertexPointer)>>2,(GLImmediate.vertexPointer + (first+count)*GLImmediate.stride)>>2); // XXX assuming float
            GLImmediate.firstVertex = first;
            GLImmediate.lastVertex = first + count;
          }
          GLImmediate.flush(null, first);
          GLImmediate.mode = -1;
        };
  
        _glDrawElements = _emscripten_glDrawElements = function _glDrawElements(mode, count, type, indices, start, end) { // start, end are given if we come from glDrawRangeElements
          if (GLImmediate.totalEnabledClientAttributes == 0 && mode <= 6 && GL.currElementArrayBuffer) {
            GLctx.drawElements(mode, count, type, indices);
            return;
          }
          GLImmediate.prepareClientAttributes(count, false);
          GLImmediate.mode = mode;
          if (!GL.currArrayBuffer) {
            GLImmediate.firstVertex = end ? start : TOTAL_MEMORY; // if we don't know the start, set an invalid value and we will calculate it later from the indices
            GLImmediate.lastVertex = end ? end+1 : 0;
            GLImmediate.vertexData = HEAPF32.subarray((GLImmediate.vertexPointer)>>2,((end ? GLImmediate.vertexPointer + (end+1)*GLImmediate.stride : TOTAL_MEMORY))>>2); // XXX assuming float
          }
          GLImmediate.flush(count, 0, indices);
          GLImmediate.mode = -1;
        };
  
        // TexEnv stuff needs to be prepared early, so do it here.
        // init() is too late for -O2, since it freezes the GL functions
        // by that point.
        GLImmediate.MapTreeLib = GLImmediate.spawnMapTreeLib();
        GLImmediate.spawnMapTreeLib = null;
  
        GLImmediate.TexEnvJIT = GLImmediate.spawnTexEnvJIT();
        GLImmediate.spawnTexEnvJIT = null;
  
        GLImmediate.setupHooks();
      },setupHooks:function () {
        if (!GLEmulation.hasRunInit) {
          GLEmulation.init();
        }
  
        var glActiveTexture = _glActiveTexture;
        _glActiveTexture = _emscripten_glActiveTexture = function _glActiveTexture(texture) {
          GLImmediate.TexEnvJIT.hook_activeTexture(texture);
          glActiveTexture(texture);
        };
  
        var glEnable = _glEnable;
        _glEnable = _emscripten_glEnable = function _glEnable(cap) {
          GLImmediate.TexEnvJIT.hook_enable(cap);
          glEnable(cap);
        };
        var glDisable = _glDisable;
        _glDisable = _emscripten_glDisable = function _glDisable(cap) {
          GLImmediate.TexEnvJIT.hook_disable(cap);
          glDisable(cap);
        };
  
        var glTexEnvf = (typeof(_glTexEnvf) != 'undefined') ? _glTexEnvf : function(){};
        _glTexEnvf = _emscripten_glTexEnvf = function _glTexEnvf(target, pname, param) {
          GLImmediate.TexEnvJIT.hook_texEnvf(target, pname, param);
          // Don't call old func, since we are the implementor.
          //glTexEnvf(target, pname, param);
        };
        var glTexEnvi = (typeof(_glTexEnvi) != 'undefined') ? _glTexEnvi : function(){};
        _glTexEnvi = _emscripten_glTexEnvi = function _glTexEnvi(target, pname, param) {
          GLImmediate.TexEnvJIT.hook_texEnvi(target, pname, param);
          // Don't call old func, since we are the implementor.
          //glTexEnvi(target, pname, param);
        };
        var glTexEnvfv = (typeof(_glTexEnvfv) != 'undefined') ? _glTexEnvfv : function(){};
        _glTexEnvfv = _emscripten_glTexEnvfv = function _glTexEnvfv(target, pname, param) {
          GLImmediate.TexEnvJIT.hook_texEnvfv(target, pname, param);
          // Don't call old func, since we are the implementor.
          //glTexEnvfv(target, pname, param);
        };
  
        _glGetTexEnviv = function _glGetTexEnviv(target, pname, param) {
          GLImmediate.TexEnvJIT.hook_getTexEnviv(target, pname, param);
        };
  
        _glGetTexEnvfv = function _glGetTexEnvfv(target, pname, param) {
          GLImmediate.TexEnvJIT.hook_getTexEnvfv(target, pname, param);
        };
  
        var glGetIntegerv = _glGetIntegerv;
        _glGetIntegerv = _emscripten_glGetIntegerv = function _glGetIntegerv(pname, params) {
          switch (pname) {
            case 0x8B8D: { // GL_CURRENT_PROGRAM
              // Just query directly so we're working with WebGL objects.
              var cur = GLctx.getParameter(GLctx.CURRENT_PROGRAM);
              if (cur == GLImmediate.fixedFunctionProgram) {
                // Pretend we're not using a program.
                HEAP32[((params)>>2)]=0;
                return;
              }
              break;
            }
          }
          glGetIntegerv(pname, params);
        };
      },initted:false,init:function () {
        Module.printErr('WARNING: using emscripten GL immediate mode emulation. This is very limited in what it supports');
        GLImmediate.initted = true;
  
        if (!Module.useWebGL) return; // a 2D canvas may be currently used TODO: make sure we are actually called in that case
  
        // User can override the maximum number of texture units that we emulate. Using fewer texture units increases runtime performance
        // slightly, so it is advantageous to choose as small value as needed.
        GLImmediate.MAX_TEXTURES = Module['GL_MAX_TEXTURE_IMAGE_UNITS'] || GLctx.getParameter(GLctx.MAX_TEXTURE_IMAGE_UNITS);
  
        GLImmediate.TexEnvJIT.init(GLctx, GLImmediate.MAX_TEXTURES);
  
        GLImmediate.NUM_ATTRIBUTES = 3 /*pos+normal+color attributes*/ + GLImmediate.MAX_TEXTURES;
        GLImmediate.clientAttributes = [];
        GLEmulation.enabledClientAttribIndices = [];
        for (var i = 0; i < GLImmediate.NUM_ATTRIBUTES; i++) {
          GLImmediate.clientAttributes.push({});
          GLEmulation.enabledClientAttribIndices.push(false);
        }
  
        // Initialize matrix library
        // When user sets a matrix, increment a 'version number' on the new data, and when rendering, submit
        // the matrices to the shader program only if they have an old version of the data.
        GLImmediate.matrix = [];
        GLImmediate.matrixStack = [];
        GLImmediate.matrixVersion = [];
        for (var i = 0; i < 2 + GLImmediate.MAX_TEXTURES; i++) { // Modelview, Projection, plus one matrix for each texture coordinate.
          GLImmediate.matrixStack.push([]);
          GLImmediate.matrixVersion.push(0);
          GLImmediate.matrix.push(GLImmediate.matrixLib.mat4.create());
          GLImmediate.matrixLib.mat4.identity(GLImmediate.matrix[i]);
        }
  
        // Renderer cache
        GLImmediate.rendererCache = GLImmediate.MapTreeLib.create();
  
        // Buffers for data
        GLImmediate.tempData = new Float32Array(GL.MAX_TEMP_BUFFER_SIZE >> 2);
        GLImmediate.indexData = new Uint16Array(GL.MAX_TEMP_BUFFER_SIZE >> 1);
  
        GLImmediate.vertexDataU8 = new Uint8Array(GLImmediate.tempData.buffer);
  
        GL.generateTempBuffers(true);
  
        GLImmediate.clientColor = new Float32Array([1, 1, 1, 1]);
      },prepareClientAttributes:function prepareClientAttributes(count, beginEnd) {
        // If no client attributes were modified since we were last called, do nothing. Note that this
        // does not work for glBegin/End, where we generate renderer components dynamically and then
        // disable them ourselves, but it does help with glDrawElements/Arrays.
        if (!GLImmediate.modifiedClientAttributes) {
          GLImmediate.vertexCounter = (GLImmediate.stride * count) / 4; // XXX assuming float
          return;
        }
        GLImmediate.modifiedClientAttributes = false;
  
        // The role of prepareClientAttributes is to examine the set of client-side vertex attribute buffers
        // that user code has submitted, and to prepare them to be uploaded to a VBO in GPU memory
        // (since WebGL does not support client-side rendering, i.e. rendering from vertex data in CPU memory)
        // User can submit vertex data generally in three different configurations:
        // 1. Fully planar: all attributes are in their own separate tightly-packed arrays in CPU memory.
        // 2. Fully interleaved: all attributes share a single array where data is interleaved something like (pos,uv,normal), (pos,uv,normal), ...
        // 3. Complex hybrid: Multiple separate arrays that either are sparsely strided, and/or partially interleave vertex attributes.
  
        // For simplicity, we support the case (2) as the fast case. For (1) and (3), we do a memory copy of the
        // vertex data here to prepare a relayouted buffer that is of the structure in case (2). The reason
        // for this is that it allows the emulation code to get away with using just one VBO buffer for rendering,
        // and not have to maintain multiple ones. Therefore cases (1) and (3) will be very slow, and case (2) is fast.
  
        // Detect which case we are in by using a quick heuristic by examining the strides of the buffers. If all the buffers have identical 
        // stride, we assume we have case (2), otherwise we have something more complex.
        var clientStartPointer = 0x7FFFFFFF;
        var bytes = 0; // Total number of bytes taken up by a single vertex.
        var minStride = 0x7FFFFFFF;
        var maxStride = 0;
        var attributes = GLImmediate.liveClientAttributes;
        attributes.length = 0;
        for (var i = 0; i < 3+GLImmediate.MAX_TEXTURES; i++) {
          if (GLImmediate.enabledClientAttributes[i]) {
            var attr = GLImmediate.clientAttributes[i];
            attributes.push(attr);
            clientStartPointer = Math.min(clientStartPointer, attr.pointer);
            attr.sizeBytes = attr.size * GL.byteSizeByType[attr.type - GL.byteSizeByTypeRoot];
            bytes += attr.sizeBytes;
            minStride = Math.min(minStride, attr.stride);
            maxStride = Math.max(maxStride, attr.stride);
          }
        }
  
        if ((minStride != maxStride || maxStride < bytes) && !beginEnd) {
          // We are in cases (1) or (3): slow path, shuffle the data around into a single interleaved vertex buffer.
          // The immediate-mode glBegin()/glEnd() vertex submission gets automatically generated in appropriate layout,
          // so never need to come down this path if that was used.
          if (!GLImmediate.restrideBuffer) GLImmediate.restrideBuffer = _malloc(GL.MAX_TEMP_BUFFER_SIZE);
          var start = GLImmediate.restrideBuffer;
          bytes = 0;
          // calculate restrided offsets and total size
          for (var i = 0; i < attributes.length; i++) {
            var attr = attributes[i];
            var size = attr.sizeBytes;
            if (size % 4 != 0) size += 4 - (size % 4); // align everything
            attr.offset = bytes;
            bytes += size;
          }
          // copy out the data (we need to know the stride for that, and define attr.pointer)
          for (var i = 0; i < attributes.length; i++) {
            var attr = attributes[i];
            var srcStride = Math.max(attr.sizeBytes, attr.stride);
            if ((srcStride & 3) == 0 && (attr.sizeBytes & 3) == 0) {
              var size4 = attr.sizeBytes>>2;
              var srcStride4 = Math.max(attr.sizeBytes, attr.stride)>>2;
              for (var j = 0; j < count; j++) {
                for (var k = 0; k < size4; k++) { // copy in chunks of 4 bytes, our alignment makes this possible
                  HEAP32[((start + attr.offset + bytes*j)>>2) + k] = HEAP32[(attr.pointer>>2) + j*srcStride4 + k];
                }
              }
            } else {
              for (var j = 0; j < count; j++) {
                for (var k = 0; k < attr.sizeBytes; k++) { // source data was not aligned to multiples of 4, must copy byte by byte.
                  HEAP8[start + attr.offset + bytes*j + k] = HEAP8[attr.pointer + j*srcStride + k];
                }
              }
            }
            attr.pointer = start + attr.offset;
          }
          GLImmediate.stride = bytes;
          GLImmediate.vertexPointer = start;
        } else {
          // case (2): fast path, all data is interleaved to a single vertex array so we can get away with a single VBO upload.
          if (GL.currArrayBuffer) {
            GLImmediate.vertexPointer = 0;
          } else {
            GLImmediate.vertexPointer = clientStartPointer;
          }
          for (var i = 0; i < attributes.length; i++) {
            var attr = attributes[i];
            attr.offset = attr.pointer - GLImmediate.vertexPointer; // Compute what will be the offset of this attribute in the VBO after we upload.
          }
          GLImmediate.stride = Math.max(maxStride, bytes);
        }
        if (!beginEnd) {
          GLImmediate.vertexCounter = (GLImmediate.stride * count) / 4; // XXX assuming float
        }
      },flush:function flush(numProvidedIndexes, startIndex, ptr) {
        startIndex = startIndex || 0;
        ptr = ptr || 0;
  
        var renderer = GLImmediate.getRenderer();
  
        // Generate index data in a format suitable for GLES 2.0/WebGL
        var numVertexes = 4 * GLImmediate.vertexCounter / GLImmediate.stride;
        var emulatedElementArrayBuffer = false;
        var numIndexes = 0;
        if (numProvidedIndexes) {
          numIndexes = numProvidedIndexes;
          if (!GL.currArrayBuffer && GLImmediate.firstVertex > GLImmediate.lastVertex) {
            // Figure out the first and last vertex from the index data
            for (var i = 0; i < numProvidedIndexes; i++) {
              var currIndex = HEAPU16[(((ptr)+(i*2))>>1)];
              GLImmediate.firstVertex = Math.min(GLImmediate.firstVertex, currIndex);
              GLImmediate.lastVertex = Math.max(GLImmediate.lastVertex, currIndex+1);
            }
          }
          if (!GL.currElementArrayBuffer) {
            // If no element array buffer is bound, then indices is a literal pointer to clientside data
            var indexBuffer = GL.getTempIndexBuffer(numProvidedIndexes << 1);
            GLctx.bindBuffer(GLctx.ELEMENT_ARRAY_BUFFER, indexBuffer);
            GLctx.bufferSubData(GLctx.ELEMENT_ARRAY_BUFFER, 0, HEAPU16.subarray((ptr)>>1,(ptr + (numProvidedIndexes << 1))>>1));
            ptr = 0;
            emulatedElementArrayBuffer = true;
          }
        } else if (GLImmediate.mode > 6) { // above GL_TRIANGLE_FAN are the non-GL ES modes
          if (GLImmediate.mode != 7) throw 'unsupported immediate mode ' + GLImmediate.mode; // GL_QUADS
          // GLImmediate.firstVertex is the first vertex we want. Quad indexes are in the pattern
          // 0 1 2, 0 2 3, 4 5 6, 4 6 7, so we need to look at index firstVertex * 1.5 to see it.
          // Then since indexes are 2 bytes each, that means 3
          ptr = GLImmediate.firstVertex*3;
          var numQuads = numVertexes / 4;
          numIndexes = numQuads * 6; // 0 1 2, 0 2 3 pattern
          GLctx.bindBuffer(GLctx.ELEMENT_ARRAY_BUFFER, GL.tempQuadIndexBuffer);
          emulatedElementArrayBuffer = true;
        }
  
        renderer.prepare();
  
        if (numIndexes) {
          GLctx.drawElements(GLctx.TRIANGLES, numIndexes, GLctx.UNSIGNED_SHORT, ptr);
        } else {
          GLctx.drawArrays(GLImmediate.mode, startIndex, numVertexes);
        }
  
        if (emulatedElementArrayBuffer) {
          GLctx.bindBuffer(GLctx.ELEMENT_ARRAY_BUFFER, GL.buffers[GL.currElementArrayBuffer] || null);
        }
  
      }};
  GLImmediate.matrixLib = (function() {
  
  /**
   * @fileoverview gl-matrix - High performance matrix and vector operations for WebGL
   * @author Brandon Jones
   * @version 1.2.4
   */
  
  // Modifed for emscripten: Global scoping etc.
  
  /*
   * Copyright (c) 2011 Brandon Jones
   *
   * This software is provided 'as-is', without any express or implied
   * warranty. In no event will the authors be held liable for any damages
   * arising from the use of this software.
   *
   * Permission is granted to anyone to use this software for any purpose,
   * including commercial applications, and to alter it and redistribute it
   * freely, subject to the following restrictions:
   *
   *    1. The origin of this software must not be misrepresented; you must not
   *    claim that you wrote the original software. If you use this software
   *    in a product, an acknowledgment in the product documentation would be
   *    appreciated but is not required.
   *
   *    2. Altered source versions must be plainly marked as such, and must not
   *    be misrepresented as being the original software.
   *
   *    3. This notice may not be removed or altered from any source
   *    distribution.
   */
  
  
  /**
   * @class 3 Dimensional Vector
   * @name vec3
   */
  var vec3 = {};
  
  /**
   * @class 3x3 Matrix
   * @name mat3
   */
  var mat3 = {};
  
  /**
   * @class 4x4 Matrix
   * @name mat4
   */
  var mat4 = {};
  
  /**
   * @class Quaternion
   * @name quat4
   */
  var quat4 = {};
  
  var MatrixArray = Float32Array;
  
  /*
   * vec3
   */
   
  /**
   * Creates a new instance of a vec3 using the default array type
   * Any javascript array-like objects containing at least 3 numeric elements can serve as a vec3
   *
   * @param {vec3} [vec] vec3 containing values to initialize with
   *
   * @returns {vec3} New vec3
   */
  vec3.create = function (vec) {
      var dest = new MatrixArray(3);
  
      if (vec) {
          dest[0] = vec[0];
          dest[1] = vec[1];
          dest[2] = vec[2];
      } else {
          dest[0] = dest[1] = dest[2] = 0;
      }
  
      return dest;
  };
  
  /**
   * Copies the values of one vec3 to another
   *
   * @param {vec3} vec vec3 containing values to copy
   * @param {vec3} dest vec3 receiving copied values
   *
   * @returns {vec3} dest
   */
  vec3.set = function (vec, dest) {
      dest[0] = vec[0];
      dest[1] = vec[1];
      dest[2] = vec[2];
  
      return dest;
  };
  
  /**
   * Performs a vector addition
   *
   * @param {vec3} vec First operand
   * @param {vec3} vec2 Second operand
   * @param {vec3} [dest] vec3 receiving operation result. If not specified result is written to vec
   *
   * @returns {vec3} dest if specified, vec otherwise
   */
  vec3.add = function (vec, vec2, dest) {
      if (!dest || vec === dest) {
          vec[0] += vec2[0];
          vec[1] += vec2[1];
          vec[2] += vec2[2];
          return vec;
      }
  
      dest[0] = vec[0] + vec2[0];
      dest[1] = vec[1] + vec2[1];
      dest[2] = vec[2] + vec2[2];
      return dest;
  };
  
  /**
   * Performs a vector subtraction
   *
   * @param {vec3} vec First operand
   * @param {vec3} vec2 Second operand
   * @param {vec3} [dest] vec3 receiving operation result. If not specified result is written to vec
   *
   * @returns {vec3} dest if specified, vec otherwise
   */
  vec3.subtract = function (vec, vec2, dest) {
      if (!dest || vec === dest) {
          vec[0] -= vec2[0];
          vec[1] -= vec2[1];
          vec[2] -= vec2[2];
          return vec;
      }
  
      dest[0] = vec[0] - vec2[0];
      dest[1] = vec[1] - vec2[1];
      dest[2] = vec[2] - vec2[2];
      return dest;
  };
  
  /**
   * Performs a vector multiplication
   *
   * @param {vec3} vec First operand
   * @param {vec3} vec2 Second operand
   * @param {vec3} [dest] vec3 receiving operation result. If not specified result is written to vec
   *
   * @returns {vec3} dest if specified, vec otherwise
   */
  vec3.multiply = function (vec, vec2, dest) {
      if (!dest || vec === dest) {
          vec[0] *= vec2[0];
          vec[1] *= vec2[1];
          vec[2] *= vec2[2];
          return vec;
      }
  
      dest[0] = vec[0] * vec2[0];
      dest[1] = vec[1] * vec2[1];
      dest[2] = vec[2] * vec2[2];
      return dest;
  };
  
  /**
   * Negates the components of a vec3
   *
   * @param {vec3} vec vec3 to negate
   * @param {vec3} [dest] vec3 receiving operation result. If not specified result is written to vec
   *
   * @returns {vec3} dest if specified, vec otherwise
   */
  vec3.negate = function (vec, dest) {
      if (!dest) { dest = vec; }
  
      dest[0] = -vec[0];
      dest[1] = -vec[1];
      dest[2] = -vec[2];
      return dest;
  };
  
  /**
   * Multiplies the components of a vec3 by a scalar value
   *
   * @param {vec3} vec vec3 to scale
   * @param {number} val Value to scale by
   * @param {vec3} [dest] vec3 receiving operation result. If not specified result is written to vec
   *
   * @returns {vec3} dest if specified, vec otherwise
   */
  vec3.scale = function (vec, val, dest) {
      if (!dest || vec === dest) {
          vec[0] *= val;
          vec[1] *= val;
          vec[2] *= val;
          return vec;
      }
  
      dest[0] = vec[0] * val;
      dest[1] = vec[1] * val;
      dest[2] = vec[2] * val;
      return dest;
  };
  
  /**
   * Generates a unit vector of the same direction as the provided vec3
   * If vector length is 0, returns [0, 0, 0]
   *
   * @param {vec3} vec vec3 to normalize
   * @param {vec3} [dest] vec3 receiving operation result. If not specified result is written to vec
   *
   * @returns {vec3} dest if specified, vec otherwise
   */
  vec3.normalize = function (vec, dest) {
      if (!dest) { dest = vec; }
  
      var x = vec[0], y = vec[1], z = vec[2],
          len = Math.sqrt(x * x + y * y + z * z);
  
      if (!len) {
          dest[0] = 0;
          dest[1] = 0;
          dest[2] = 0;
          return dest;
      } else if (len === 1) {
          dest[0] = x;
          dest[1] = y;
          dest[2] = z;
          return dest;
      }
  
      len = 1 / len;
      dest[0] = x * len;
      dest[1] = y * len;
      dest[2] = z * len;
      return dest;
  };
  
  /**
   * Generates the cross product of two vec3s
   *
   * @param {vec3} vec First operand
   * @param {vec3} vec2 Second operand
   * @param {vec3} [dest] vec3 receiving operation result. If not specified result is written to vec
   *
   * @returns {vec3} dest if specified, vec otherwise
   */
  vec3.cross = function (vec, vec2, dest) {
      if (!dest) { dest = vec; }
  
      var x = vec[0], y = vec[1], z = vec[2],
          x2 = vec2[0], y2 = vec2[1], z2 = vec2[2];
  
      dest[0] = y * z2 - z * y2;
      dest[1] = z * x2 - x * z2;
      dest[2] = x * y2 - y * x2;
      return dest;
  };
  
  /**
   * Caclulates the length of a vec3
   *
   * @param {vec3} vec vec3 to calculate length of
   *
   * @returns {number} Length of vec
   */
  vec3.length = function (vec) {
      var x = vec[0], y = vec[1], z = vec[2];
      return Math.sqrt(x * x + y * y + z * z);
  };
  
  /**
   * Caclulates the dot product of two vec3s
   *
   * @param {vec3} vec First operand
   * @param {vec3} vec2 Second operand
   *
   * @returns {number} Dot product of vec and vec2
   */
  vec3.dot = function (vec, vec2) {
      return vec[0] * vec2[0] + vec[1] * vec2[1] + vec[2] * vec2[2];
  };
  
  /**
   * Generates a unit vector pointing from one vector to another
   *
   * @param {vec3} vec Origin vec3
   * @param {vec3} vec2 vec3 to point to
   * @param {vec3} [dest] vec3 receiving operation result. If not specified result is written to vec
   *
   * @returns {vec3} dest if specified, vec otherwise
   */
  vec3.direction = function (vec, vec2, dest) {
      if (!dest) { dest = vec; }
  
      var x = vec[0] - vec2[0],
          y = vec[1] - vec2[1],
          z = vec[2] - vec2[2],
          len = Math.sqrt(x * x + y * y + z * z);
  
      if (!len) {
          dest[0] = 0;
          dest[1] = 0;
          dest[2] = 0;
          return dest;
      }
  
      len = 1 / len;
      dest[0] = x * len;
      dest[1] = y * len;
      dest[2] = z * len;
      return dest;
  };
  
  /**
   * Performs a linear interpolation between two vec3
   *
   * @param {vec3} vec First vector
   * @param {vec3} vec2 Second vector
   * @param {number} lerp Interpolation amount between the two inputs
   * @param {vec3} [dest] vec3 receiving operation result. If not specified result is written to vec
   *
   * @returns {vec3} dest if specified, vec otherwise
   */
  vec3.lerp = function (vec, vec2, lerp, dest) {
      if (!dest) { dest = vec; }
  
      dest[0] = vec[0] + lerp * (vec2[0] - vec[0]);
      dest[1] = vec[1] + lerp * (vec2[1] - vec[1]);
      dest[2] = vec[2] + lerp * (vec2[2] - vec[2]);
  
      return dest;
  };
  
  /**
   * Calculates the euclidian distance between two vec3
   *
   * Params:
   * @param {vec3} vec First vector
   * @param {vec3} vec2 Second vector
   *
   * @returns {number} Distance between vec and vec2
   */
  vec3.dist = function (vec, vec2) {
      var x = vec2[0] - vec[0],
          y = vec2[1] - vec[1],
          z = vec2[2] - vec[2];
          
      return Math.sqrt(x*x + y*y + z*z);
  };
  
  /**
   * Projects the specified vec3 from screen space into object space
   * Based on the <a href="http://webcvs.freedesktop.org/mesa/Mesa/src/glu/mesa/project.c?revision=1.4&view=markup">Mesa gluUnProject implementation</a>
   *
   * @param {vec3} vec Screen-space vector to project
   * @param {mat4} view View matrix
   * @param {mat4} proj Projection matrix
   * @param {vec4} viewport Viewport as given to gl.viewport [x, y, width, height]
   * @param {vec3} [dest] vec3 receiving unprojected result. If not specified result is written to vec
   *
   * @returns {vec3} dest if specified, vec otherwise
   */
  vec3.unproject = function (vec, view, proj, viewport, dest) {
      if (!dest) { dest = vec; }
  
      var m = mat4.create();
      var v = new MatrixArray(4);
      
      v[0] = (vec[0] - viewport[0]) * 2.0 / viewport[2] - 1.0;
      v[1] = (vec[1] - viewport[1]) * 2.0 / viewport[3] - 1.0;
      v[2] = 2.0 * vec[2] - 1.0;
      v[3] = 1.0;
      
      mat4.multiply(proj, view, m);
      if(!mat4.inverse(m)) { return null; }
      
      mat4.multiplyVec4(m, v);
      if(v[3] === 0.0) { return null; }
  
      dest[0] = v[0] / v[3];
      dest[1] = v[1] / v[3];
      dest[2] = v[2] / v[3];
      
      return dest;
  };
  
  /**
   * Returns a string representation of a vector
   *
   * @param {vec3} vec Vector to represent as a string
   *
   * @returns {string} String representation of vec
   */
  vec3.str = function (vec) {
      return '[' + vec[0] + ', ' + vec[1] + ', ' + vec[2] + ']';
  };
  
  /*
   * mat3
   */
  
  /**
   * Creates a new instance of a mat3 using the default array type
   * Any javascript array-like object containing at least 9 numeric elements can serve as a mat3
   *
   * @param {mat3} [mat] mat3 containing values to initialize with
   *
   * @returns {mat3} New mat3
   */
  mat3.create = function (mat) {
      var dest = new MatrixArray(9);
  
      if (mat) {
          dest[0] = mat[0];
          dest[1] = mat[1];
          dest[2] = mat[2];
          dest[3] = mat[3];
          dest[4] = mat[4];
          dest[5] = mat[5];
          dest[6] = mat[6];
          dest[7] = mat[7];
          dest[8] = mat[8];
      }
  
      return dest;
  };
  
  /**
   * Copies the values of one mat3 to another
   *
   * @param {mat3} mat mat3 containing values to copy
   * @param {mat3} dest mat3 receiving copied values
   *
   * @returns {mat3} dest
   */
  mat3.set = function (mat, dest) {
      dest[0] = mat[0];
      dest[1] = mat[1];
      dest[2] = mat[2];
      dest[3] = mat[3];
      dest[4] = mat[4];
      dest[5] = mat[5];
      dest[6] = mat[6];
      dest[7] = mat[7];
      dest[8] = mat[8];
      return dest;
  };
  
  /**
   * Sets a mat3 to an identity matrix
   *
   * @param {mat3} dest mat3 to set
   *
   * @returns dest if specified, otherwise a new mat3
   */
  mat3.identity = function (dest) {
      if (!dest) { dest = mat3.create(); }
      dest[0] = 1;
      dest[1] = 0;
      dest[2] = 0;
      dest[3] = 0;
      dest[4] = 1;
      dest[5] = 0;
      dest[6] = 0;
      dest[7] = 0;
      dest[8] = 1;
      return dest;
  };
  
  /**
   * Transposes a mat3 (flips the values over the diagonal)
   *
   * Params:
   * @param {mat3} mat mat3 to transpose
   * @param {mat3} [dest] mat3 receiving transposed values. If not specified result is written to mat
   *
   * @returns {mat3} dest is specified, mat otherwise
   */
  mat3.transpose = function (mat, dest) {
      // If we are transposing ourselves we can skip a few steps but have to cache some values
      if (!dest || mat === dest) {
          var a01 = mat[1], a02 = mat[2],
              a12 = mat[5];
  
          mat[1] = mat[3];
          mat[2] = mat[6];
          mat[3] = a01;
          mat[5] = mat[7];
          mat[6] = a02;
          mat[7] = a12;
          return mat;
      }
  
      dest[0] = mat[0];
      dest[1] = mat[3];
      dest[2] = mat[6];
      dest[3] = mat[1];
      dest[4] = mat[4];
      dest[5] = mat[7];
      dest[6] = mat[2];
      dest[7] = mat[5];
      dest[8] = mat[8];
      return dest;
  };
  
  /**
   * Copies the elements of a mat3 into the upper 3x3 elements of a mat4
   *
   * @param {mat3} mat mat3 containing values to copy
   * @param {mat4} [dest] mat4 receiving copied values
   *
   * @returns {mat4} dest if specified, a new mat4 otherwise
   */
  mat3.toMat4 = function (mat, dest) {
      if (!dest) { dest = mat4.create(); }
  
      dest[15] = 1;
      dest[14] = 0;
      dest[13] = 0;
      dest[12] = 0;
  
      dest[11] = 0;
      dest[10] = mat[8];
      dest[9] = mat[7];
      dest[8] = mat[6];
  
      dest[7] = 0;
      dest[6] = mat[5];
      dest[5] = mat[4];
      dest[4] = mat[3];
  
      dest[3] = 0;
      dest[2] = mat[2];
      dest[1] = mat[1];
      dest[0] = mat[0];
  
      return dest;
  };
  
  /**
   * Returns a string representation of a mat3
   *
   * @param {mat3} mat mat3 to represent as a string
   *
   * @param {string} String representation of mat
   */
  mat3.str = function (mat) {
      return '[' + mat[0] + ', ' + mat[1] + ', ' + mat[2] +
          ', ' + mat[3] + ', ' + mat[4] + ', ' + mat[5] +
          ', ' + mat[6] + ', ' + mat[7] + ', ' + mat[8] + ']';
  };
  
  /*
   * mat4
   */
  
  /**
   * Creates a new instance of a mat4 using the default array type
   * Any javascript array-like object containing at least 16 numeric elements can serve as a mat4
   *
   * @param {mat4} [mat] mat4 containing values to initialize with
   *
   * @returns {mat4} New mat4
   */
  mat4.create = function (mat) {
      var dest = new MatrixArray(16);
  
      if (mat) {
          dest[0] = mat[0];
          dest[1] = mat[1];
          dest[2] = mat[2];
          dest[3] = mat[3];
          dest[4] = mat[4];
          dest[5] = mat[5];
          dest[6] = mat[6];
          dest[7] = mat[7];
          dest[8] = mat[8];
          dest[9] = mat[9];
          dest[10] = mat[10];
          dest[11] = mat[11];
          dest[12] = mat[12];
          dest[13] = mat[13];
          dest[14] = mat[14];
          dest[15] = mat[15];
      }
  
      return dest;
  };
  
  /**
   * Copies the values of one mat4 to another
   *
   * @param {mat4} mat mat4 containing values to copy
   * @param {mat4} dest mat4 receiving copied values
   *
   * @returns {mat4} dest
   */
  mat4.set = function (mat, dest) {
      dest[0] = mat[0];
      dest[1] = mat[1];
      dest[2] = mat[2];
      dest[3] = mat[3];
      dest[4] = mat[4];
      dest[5] = mat[5];
      dest[6] = mat[6];
      dest[7] = mat[7];
      dest[8] = mat[8];
      dest[9] = mat[9];
      dest[10] = mat[10];
      dest[11] = mat[11];
      dest[12] = mat[12];
      dest[13] = mat[13];
      dest[14] = mat[14];
      dest[15] = mat[15];
      return dest;
  };
  
  /**
   * Sets a mat4 to an identity matrix
   *
   * @param {mat4} dest mat4 to set
   *
   * @returns {mat4} dest
   */
  mat4.identity = function (dest) {
      if (!dest) { dest = mat4.create(); }
      dest[0] = 1;
      dest[1] = 0;
      dest[2] = 0;
      dest[3] = 0;
      dest[4] = 0;
      dest[5] = 1;
      dest[6] = 0;
      dest[7] = 0;
      dest[8] = 0;
      dest[9] = 0;
      dest[10] = 1;
      dest[11] = 0;
      dest[12] = 0;
      dest[13] = 0;
      dest[14] = 0;
      dest[15] = 1;
      return dest;
  };
  
  /**
   * Transposes a mat4 (flips the values over the diagonal)
   *
   * @param {mat4} mat mat4 to transpose
   * @param {mat4} [dest] mat4 receiving transposed values. If not specified result is written to mat
   *
   * @param {mat4} dest is specified, mat otherwise
   */
  mat4.transpose = function (mat, dest) {
      // If we are transposing ourselves we can skip a few steps but have to cache some values
      if (!dest || mat === dest) {
          var a01 = mat[1], a02 = mat[2], a03 = mat[3],
              a12 = mat[6], a13 = mat[7],
              a23 = mat[11];
  
          mat[1] = mat[4];
          mat[2] = mat[8];
          mat[3] = mat[12];
          mat[4] = a01;
          mat[6] = mat[9];
          mat[7] = mat[13];
          mat[8] = a02;
          mat[9] = a12;
          mat[11] = mat[14];
          mat[12] = a03;
          mat[13] = a13;
          mat[14] = a23;
          return mat;
      }
  
      dest[0] = mat[0];
      dest[1] = mat[4];
      dest[2] = mat[8];
      dest[3] = mat[12];
      dest[4] = mat[1];
      dest[5] = mat[5];
      dest[6] = mat[9];
      dest[7] = mat[13];
      dest[8] = mat[2];
      dest[9] = mat[6];
      dest[10] = mat[10];
      dest[11] = mat[14];
      dest[12] = mat[3];
      dest[13] = mat[7];
      dest[14] = mat[11];
      dest[15] = mat[15];
      return dest;
  };
  
  /**
   * Calculates the determinant of a mat4
   *
   * @param {mat4} mat mat4 to calculate determinant of
   *
   * @returns {number} determinant of mat
   */
  mat4.determinant = function (mat) {
      // Cache the matrix values (makes for huge speed increases!)
      var a00 = mat[0], a01 = mat[1], a02 = mat[2], a03 = mat[3],
          a10 = mat[4], a11 = mat[5], a12 = mat[6], a13 = mat[7],
          a20 = mat[8], a21 = mat[9], a22 = mat[10], a23 = mat[11],
          a30 = mat[12], a31 = mat[13], a32 = mat[14], a33 = mat[15];
  
      return (a30 * a21 * a12 * a03 - a20 * a31 * a12 * a03 - a30 * a11 * a22 * a03 + a10 * a31 * a22 * a03 +
              a20 * a11 * a32 * a03 - a10 * a21 * a32 * a03 - a30 * a21 * a02 * a13 + a20 * a31 * a02 * a13 +
              a30 * a01 * a22 * a13 - a00 * a31 * a22 * a13 - a20 * a01 * a32 * a13 + a00 * a21 * a32 * a13 +
              a30 * a11 * a02 * a23 - a10 * a31 * a02 * a23 - a30 * a01 * a12 * a23 + a00 * a31 * a12 * a23 +
              a10 * a01 * a32 * a23 - a00 * a11 * a32 * a23 - a20 * a11 * a02 * a33 + a10 * a21 * a02 * a33 +
              a20 * a01 * a12 * a33 - a00 * a21 * a12 * a33 - a10 * a01 * a22 * a33 + a00 * a11 * a22 * a33);
  };
  
  /**
   * Calculates the inverse matrix of a mat4
   *
   * @param {mat4} mat mat4 to calculate inverse of
   * @param {mat4} [dest] mat4 receiving inverse matrix. If not specified result is written to mat
   *
   * @param {mat4} dest is specified, mat otherwise, null if matrix cannot be inverted
   */
  mat4.inverse = function (mat, dest) {
      if (!dest) { dest = mat; }
  
      // Cache the matrix values (makes for huge speed increases!)
      var a00 = mat[0], a01 = mat[1], a02 = mat[2], a03 = mat[3],
          a10 = mat[4], a11 = mat[5], a12 = mat[6], a13 = mat[7],
          a20 = mat[8], a21 = mat[9], a22 = mat[10], a23 = mat[11],
          a30 = mat[12], a31 = mat[13], a32 = mat[14], a33 = mat[15],
  
          b00 = a00 * a11 - a01 * a10,
          b01 = a00 * a12 - a02 * a10,
          b02 = a00 * a13 - a03 * a10,
          b03 = a01 * a12 - a02 * a11,
          b04 = a01 * a13 - a03 * a11,
          b05 = a02 * a13 - a03 * a12,
          b06 = a20 * a31 - a21 * a30,
          b07 = a20 * a32 - a22 * a30,
          b08 = a20 * a33 - a23 * a30,
          b09 = a21 * a32 - a22 * a31,
          b10 = a21 * a33 - a23 * a31,
          b11 = a22 * a33 - a23 * a32,
  
          d = (b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06),
          invDet;
  
          // Calculate the determinant
          if (!d) { return null; }
          invDet = 1 / d;
  
      dest[0] = (a11 * b11 - a12 * b10 + a13 * b09) * invDet;
      dest[1] = (-a01 * b11 + a02 * b10 - a03 * b09) * invDet;
      dest[2] = (a31 * b05 - a32 * b04 + a33 * b03) * invDet;
      dest[3] = (-a21 * b05 + a22 * b04 - a23 * b03) * invDet;
      dest[4] = (-a10 * b11 + a12 * b08 - a13 * b07) * invDet;
      dest[5] = (a00 * b11 - a02 * b08 + a03 * b07) * invDet;
      dest[6] = (-a30 * b05 + a32 * b02 - a33 * b01) * invDet;
      dest[7] = (a20 * b05 - a22 * b02 + a23 * b01) * invDet;
      dest[8] = (a10 * b10 - a11 * b08 + a13 * b06) * invDet;
      dest[9] = (-a00 * b10 + a01 * b08 - a03 * b06) * invDet;
      dest[10] = (a30 * b04 - a31 * b02 + a33 * b00) * invDet;
      dest[11] = (-a20 * b04 + a21 * b02 - a23 * b00) * invDet;
      dest[12] = (-a10 * b09 + a11 * b07 - a12 * b06) * invDet;
      dest[13] = (a00 * b09 - a01 * b07 + a02 * b06) * invDet;
      dest[14] = (-a30 * b03 + a31 * b01 - a32 * b00) * invDet;
      dest[15] = (a20 * b03 - a21 * b01 + a22 * b00) * invDet;
  
      return dest;
  };
  
  /**
   * Copies the upper 3x3 elements of a mat4 into another mat4
   *
   * @param {mat4} mat mat4 containing values to copy
   * @param {mat4} [dest] mat4 receiving copied values
   *
   * @returns {mat4} dest is specified, a new mat4 otherwise
   */
  mat4.toRotationMat = function (mat, dest) {
      if (!dest) { dest = mat4.create(); }
  
      dest[0] = mat[0];
      dest[1] = mat[1];
      dest[2] = mat[2];
      dest[3] = mat[3];
      dest[4] = mat[4];
      dest[5] = mat[5];
      dest[6] = mat[6];
      dest[7] = mat[7];
      dest[8] = mat[8];
      dest[9] = mat[9];
      dest[10] = mat[10];
      dest[11] = mat[11];
      dest[12] = 0;
      dest[13] = 0;
      dest[14] = 0;
      dest[15] = 1;
  
      return dest;
  };
  
  /**
   * Copies the upper 3x3 elements of a mat4 into a mat3
   *
   * @param {mat4} mat mat4 containing values to copy
   * @param {mat3} [dest] mat3 receiving copied values
   *
   * @returns {mat3} dest is specified, a new mat3 otherwise
   */
  mat4.toMat3 = function (mat, dest) {
      if (!dest) { dest = mat3.create(); }
  
      dest[0] = mat[0];
      dest[1] = mat[1];
      dest[2] = mat[2];
      dest[3] = mat[4];
      dest[4] = mat[5];
      dest[5] = mat[6];
      dest[6] = mat[8];
      dest[7] = mat[9];
      dest[8] = mat[10];
  
      return dest;
  };
  
  /**
   * Calculates the inverse of the upper 3x3 elements of a mat4 and copies the result into a mat3
   * The resulting matrix is useful for calculating transformed normals
   *
   * Params:
   * @param {mat4} mat mat4 containing values to invert and copy
   * @param {mat3} [dest] mat3 receiving values
   *
   * @returns {mat3} dest is specified, a new mat3 otherwise, null if the matrix cannot be inverted
   */
  mat4.toInverseMat3 = function (mat, dest) {
      // Cache the matrix values (makes for huge speed increases!)
      var a00 = mat[0], a01 = mat[1], a02 = mat[2],
          a10 = mat[4], a11 = mat[5], a12 = mat[6],
          a20 = mat[8], a21 = mat[9], a22 = mat[10],
  
          b01 = a22 * a11 - a12 * a21,
          b11 = -a22 * a10 + a12 * a20,
          b21 = a21 * a10 - a11 * a20,
  
          d = a00 * b01 + a01 * b11 + a02 * b21,
          id;
  
      if (!d) { return null; }
      id = 1 / d;
  
      if (!dest) { dest = mat3.create(); }
  
      dest[0] = b01 * id;
      dest[1] = (-a22 * a01 + a02 * a21) * id;
      dest[2] = (a12 * a01 - a02 * a11) * id;
      dest[3] = b11 * id;
      dest[4] = (a22 * a00 - a02 * a20) * id;
      dest[5] = (-a12 * a00 + a02 * a10) * id;
      dest[6] = b21 * id;
      dest[7] = (-a21 * a00 + a01 * a20) * id;
      dest[8] = (a11 * a00 - a01 * a10) * id;
  
      return dest;
  };
  
  /**
   * Performs a matrix multiplication
   *
   * @param {mat4} mat First operand
   * @param {mat4} mat2 Second operand
   * @param {mat4} [dest] mat4 receiving operation result. If not specified result is written to mat
   *
   * @returns {mat4} dest if specified, mat otherwise
   */
  mat4.multiply = function (mat, mat2, dest) {
      if (!dest) { dest = mat; }
  
      // Cache the matrix values (makes for huge speed increases!)
      var a00 = mat[0], a01 = mat[1], a02 = mat[2], a03 = mat[3],
          a10 = mat[4], a11 = mat[5], a12 = mat[6], a13 = mat[7],
          a20 = mat[8], a21 = mat[9], a22 = mat[10], a23 = mat[11],
          a30 = mat[12], a31 = mat[13], a32 = mat[14], a33 = mat[15],
  
          b00 = mat2[0], b01 = mat2[1], b02 = mat2[2], b03 = mat2[3],
          b10 = mat2[4], b11 = mat2[5], b12 = mat2[6], b13 = mat2[7],
          b20 = mat2[8], b21 = mat2[9], b22 = mat2[10], b23 = mat2[11],
          b30 = mat2[12], b31 = mat2[13], b32 = mat2[14], b33 = mat2[15];
  
      dest[0] = b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30;
      dest[1] = b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31;
      dest[2] = b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32;
      dest[3] = b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33;
      dest[4] = b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30;
      dest[5] = b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31;
      dest[6] = b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32;
      dest[7] = b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33;
      dest[8] = b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30;
      dest[9] = b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31;
      dest[10] = b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32;
      dest[11] = b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33;
      dest[12] = b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30;
      dest[13] = b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31;
      dest[14] = b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32;
      dest[15] = b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33;
  
      return dest;
  };
  
  /**
   * Transforms a vec3 with the given matrix
   * 4th vector component is implicitly '1'
   *
   * @param {mat4} mat mat4 to transform the vector with
   * @param {vec3} vec vec3 to transform
   * @param {vec3} [dest] vec3 receiving operation result. If not specified result is written to vec
   *
   * @returns {vec3} dest if specified, vec otherwise
   */
  mat4.multiplyVec3 = function (mat, vec, dest) {
      if (!dest) { dest = vec; }
  
      var x = vec[0], y = vec[1], z = vec[2];
  
      dest[0] = mat[0] * x + mat[4] * y + mat[8] * z + mat[12];
      dest[1] = mat[1] * x + mat[5] * y + mat[9] * z + mat[13];
      dest[2] = mat[2] * x + mat[6] * y + mat[10] * z + mat[14];
  
      return dest;
  };
  
  /**
   * Transforms a vec4 with the given matrix
   *
   * @param {mat4} mat mat4 to transform the vector with
   * @param {vec4} vec vec4 to transform
   * @param {vec4} [dest] vec4 receiving operation result. If not specified result is written to vec
   *
   * @returns {vec4} dest if specified, vec otherwise
   */
  mat4.multiplyVec4 = function (mat, vec, dest) {
      if (!dest) { dest = vec; }
  
      var x = vec[0], y = vec[1], z = vec[2], w = vec[3];
  
      dest[0] = mat[0] * x + mat[4] * y + mat[8] * z + mat[12] * w;
      dest[1] = mat[1] * x + mat[5] * y + mat[9] * z + mat[13] * w;
      dest[2] = mat[2] * x + mat[6] * y + mat[10] * z + mat[14] * w;
      dest[3] = mat[3] * x + mat[7] * y + mat[11] * z + mat[15] * w;
  
      return dest;
  };
  
  /**
   * Translates a matrix by the given vector
   *
   * @param {mat4} mat mat4 to translate
   * @param {vec3} vec vec3 specifying the translation
   * @param {mat4} [dest] mat4 receiving operation result. If not specified result is written to mat
   *
   * @returns {mat4} dest if specified, mat otherwise
   */
  mat4.translate = function (mat, vec, dest) {
      var x = vec[0], y = vec[1], z = vec[2],
          a00, a01, a02, a03,
          a10, a11, a12, a13,
          a20, a21, a22, a23;
  
      if (!dest || mat === dest) {
          mat[12] = mat[0] * x + mat[4] * y + mat[8] * z + mat[12];
          mat[13] = mat[1] * x + mat[5] * y + mat[9] * z + mat[13];
          mat[14] = mat[2] * x + mat[6] * y + mat[10] * z + mat[14];
          mat[15] = mat[3] * x + mat[7] * y + mat[11] * z + mat[15];
          return mat;
      }
  
      a00 = mat[0]; a01 = mat[1]; a02 = mat[2]; a03 = mat[3];
      a10 = mat[4]; a11 = mat[5]; a12 = mat[6]; a13 = mat[7];
      a20 = mat[8]; a21 = mat[9]; a22 = mat[10]; a23 = mat[11];
  
      dest[0] = a00; dest[1] = a01; dest[2] = a02; dest[3] = a03;
      dest[4] = a10; dest[5] = a11; dest[6] = a12; dest[7] = a13;
      dest[8] = a20; dest[9] = a21; dest[10] = a22; dest[11] = a23;
  
      dest[12] = a00 * x + a10 * y + a20 * z + mat[12];
      dest[13] = a01 * x + a11 * y + a21 * z + mat[13];
      dest[14] = a02 * x + a12 * y + a22 * z + mat[14];
      dest[15] = a03 * x + a13 * y + a23 * z + mat[15];
      return dest;
  };
  
  /**
   * Scales a matrix by the given vector
   *
   * @param {mat4} mat mat4 to scale
   * @param {vec3} vec vec3 specifying the scale for each axis
   * @param {mat4} [dest] mat4 receiving operation result. If not specified result is written to mat
   *
   * @param {mat4} dest if specified, mat otherwise
   */
  mat4.scale = function (mat, vec, dest) {
      var x = vec[0], y = vec[1], z = vec[2];
  
      if (!dest || mat === dest) {
          mat[0] *= x;
          mat[1] *= x;
          mat[2] *= x;
          mat[3] *= x;
          mat[4] *= y;
          mat[5] *= y;
          mat[6] *= y;
          mat[7] *= y;
          mat[8] *= z;
          mat[9] *= z;
          mat[10] *= z;
          mat[11] *= z;
          return mat;
      }
  
      dest[0] = mat[0] * x;
      dest[1] = mat[1] * x;
      dest[2] = mat[2] * x;
      dest[3] = mat[3] * x;
      dest[4] = mat[4] * y;
      dest[5] = mat[5] * y;
      dest[6] = mat[6] * y;
      dest[7] = mat[7] * y;
      dest[8] = mat[8] * z;
      dest[9] = mat[9] * z;
      dest[10] = mat[10] * z;
      dest[11] = mat[11] * z;
      dest[12] = mat[12];
      dest[13] = mat[13];
      dest[14] = mat[14];
      dest[15] = mat[15];
      return dest;
  };
  
  /**
   * Rotates a matrix by the given angle around the specified axis
   * If rotating around a primary axis (X,Y,Z) one of the specialized rotation functions should be used instead for performance
   *
   * @param {mat4} mat mat4 to rotate
   * @param {number} angle Angle (in radians) to rotate
   * @param {vec3} axis vec3 representing the axis to rotate around 
   * @param {mat4} [dest] mat4 receiving operation result. If not specified result is written to mat
   *
   * @returns {mat4} dest if specified, mat otherwise
   */
  mat4.rotate = function (mat, angle, axis, dest) {
      var x = axis[0], y = axis[1], z = axis[2],
          len = Math.sqrt(x * x + y * y + z * z),
          s, c, t,
          a00, a01, a02, a03,
          a10, a11, a12, a13,
          a20, a21, a22, a23,
          b00, b01, b02,
          b10, b11, b12,
          b20, b21, b22;
  
      if (!len) { return null; }
      if (len !== 1) {
          len = 1 / len;
          x *= len;
          y *= len;
          z *= len;
      }
  
      s = Math.sin(angle);
      c = Math.cos(angle);
      t = 1 - c;
  
      a00 = mat[0]; a01 = mat[1]; a02 = mat[2]; a03 = mat[3];
      a10 = mat[4]; a11 = mat[5]; a12 = mat[6]; a13 = mat[7];
      a20 = mat[8]; a21 = mat[9]; a22 = mat[10]; a23 = mat[11];
  
      // Construct the elements of the rotation matrix
      b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;
      b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;
      b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;
  
      if (!dest) {
          dest = mat;
      } else if (mat !== dest) { // If the source and destination differ, copy the unchanged last row
          dest[12] = mat[12];
          dest[13] = mat[13];
          dest[14] = mat[14];
          dest[15] = mat[15];
      }
  
      // Perform rotation-specific matrix multiplication
      dest[0] = a00 * b00 + a10 * b01 + a20 * b02;
      dest[1] = a01 * b00 + a11 * b01 + a21 * b02;
      dest[2] = a02 * b00 + a12 * b01 + a22 * b02;
      dest[3] = a03 * b00 + a13 * b01 + a23 * b02;
  
      dest[4] = a00 * b10 + a10 * b11 + a20 * b12;
      dest[5] = a01 * b10 + a11 * b11 + a21 * b12;
      dest[6] = a02 * b10 + a12 * b11 + a22 * b12;
      dest[7] = a03 * b10 + a13 * b11 + a23 * b12;
  
      dest[8] = a00 * b20 + a10 * b21 + a20 * b22;
      dest[9] = a01 * b20 + a11 * b21 + a21 * b22;
      dest[10] = a02 * b20 + a12 * b21 + a22 * b22;
      dest[11] = a03 * b20 + a13 * b21 + a23 * b22;
      return dest;
  };
  
  /**
   * Rotates a matrix by the given angle around the X axis
   *
   * @param {mat4} mat mat4 to rotate
   * @param {number} angle Angle (in radians) to rotate
   * @param {mat4} [dest] mat4 receiving operation result. If not specified result is written to mat
   *
   * @returns {mat4} dest if specified, mat otherwise
   */
  mat4.rotateX = function (mat, angle, dest) {
      var s = Math.sin(angle),
          c = Math.cos(angle),
          a10 = mat[4],
          a11 = mat[5],
          a12 = mat[6],
          a13 = mat[7],
          a20 = mat[8],
          a21 = mat[9],
          a22 = mat[10],
          a23 = mat[11];
  
      if (!dest) {
          dest = mat;
      } else if (mat !== dest) { // If the source and destination differ, copy the unchanged rows
          dest[0] = mat[0];
          dest[1] = mat[1];
          dest[2] = mat[2];
          dest[3] = mat[3];
  
          dest[12] = mat[12];
          dest[13] = mat[13];
          dest[14] = mat[14];
          dest[15] = mat[15];
      }
  
      // Perform axis-specific matrix multiplication
      dest[4] = a10 * c + a20 * s;
      dest[5] = a11 * c + a21 * s;
      dest[6] = a12 * c + a22 * s;
      dest[7] = a13 * c + a23 * s;
  
      dest[8] = a10 * -s + a20 * c;
      dest[9] = a11 * -s + a21 * c;
      dest[10] = a12 * -s + a22 * c;
      dest[11] = a13 * -s + a23 * c;
      return dest;
  };
  
  /**
   * Rotates a matrix by the given angle around the Y axis
   *
   * @param {mat4} mat mat4 to rotate
   * @param {number} angle Angle (in radians) to rotate
   * @param {mat4} [dest] mat4 receiving operation result. If not specified result is written to mat
   *
   * @returns {mat4} dest if specified, mat otherwise
   */
  mat4.rotateY = function (mat, angle, dest) {
      var s = Math.sin(angle),
          c = Math.cos(angle),
          a00 = mat[0],
          a01 = mat[1],
          a02 = mat[2],
          a03 = mat[3],
          a20 = mat[8],
          a21 = mat[9],
          a22 = mat[10],
          a23 = mat[11];
  
      if (!dest) {
          dest = mat;
      } else if (mat !== dest) { // If the source and destination differ, copy the unchanged rows
          dest[4] = mat[4];
          dest[5] = mat[5];
          dest[6] = mat[6];
          dest[7] = mat[7];
  
          dest[12] = mat[12];
          dest[13] = mat[13];
          dest[14] = mat[14];
          dest[15] = mat[15];
      }
  
      // Perform axis-specific matrix multiplication
      dest[0] = a00 * c + a20 * -s;
      dest[1] = a01 * c + a21 * -s;
      dest[2] = a02 * c + a22 * -s;
      dest[3] = a03 * c + a23 * -s;
  
      dest[8] = a00 * s + a20 * c;
      dest[9] = a01 * s + a21 * c;
      dest[10] = a02 * s + a22 * c;
      dest[11] = a03 * s + a23 * c;
      return dest;
  };
  
  /**
   * Rotates a matrix by the given angle around the Z axis
   *
   * @param {mat4} mat mat4 to rotate
   * @param {number} angle Angle (in radians) to rotate
   * @param {mat4} [dest] mat4 receiving operation result. If not specified result is written to mat
   *
   * @returns {mat4} dest if specified, mat otherwise
   */
  mat4.rotateZ = function (mat, angle, dest) {
      var s = Math.sin(angle),
          c = Math.cos(angle),
          a00 = mat[0],
          a01 = mat[1],
          a02 = mat[2],
          a03 = mat[3],
          a10 = mat[4],
          a11 = mat[5],
          a12 = mat[6],
          a13 = mat[7];
  
      if (!dest) {
          dest = mat;
      } else if (mat !== dest) { // If the source and destination differ, copy the unchanged last row
          dest[8] = mat[8];
          dest[9] = mat[9];
          dest[10] = mat[10];
          dest[11] = mat[11];
  
          dest[12] = mat[12];
          dest[13] = mat[13];
          dest[14] = mat[14];
          dest[15] = mat[15];
      }
  
      // Perform axis-specific matrix multiplication
      dest[0] = a00 * c + a10 * s;
      dest[1] = a01 * c + a11 * s;
      dest[2] = a02 * c + a12 * s;
      dest[3] = a03 * c + a13 * s;
  
      dest[4] = a00 * -s + a10 * c;
      dest[5] = a01 * -s + a11 * c;
      dest[6] = a02 * -s + a12 * c;
      dest[7] = a03 * -s + a13 * c;
  
      return dest;
  };
  
  /**
   * Generates a frustum matrix with the given bounds
   *
   * @param {number} left Left bound of the frustum
   * @param {number} right Right bound of the frustum
   * @param {number} bottom Bottom bound of the frustum
   * @param {number} top Top bound of the frustum
   * @param {number} near Near bound of the frustum
   * @param {number} far Far bound of the frustum
   * @param {mat4} [dest] mat4 frustum matrix will be written into
   *
   * @returns {mat4} dest if specified, a new mat4 otherwise
   */
  mat4.frustum = function (left, right, bottom, top, near, far, dest) {
      if (!dest) { dest = mat4.create(); }
      var rl = (right - left),
          tb = (top - bottom),
          fn = (far - near);
      dest[0] = (near * 2) / rl;
      dest[1] = 0;
      dest[2] = 0;
      dest[3] = 0;
      dest[4] = 0;
      dest[5] = (near * 2) / tb;
      dest[6] = 0;
      dest[7] = 0;
      dest[8] = (right + left) / rl;
      dest[9] = (top + bottom) / tb;
      dest[10] = -(far + near) / fn;
      dest[11] = -1;
      dest[12] = 0;
      dest[13] = 0;
      dest[14] = -(far * near * 2) / fn;
      dest[15] = 0;
      return dest;
  };
  
  /**
   * Generates a perspective projection matrix with the given bounds
   *
   * @param {number} fovy Vertical field of view
   * @param {number} aspect Aspect ratio. typically viewport width/height
   * @param {number} near Near bound of the frustum
   * @param {number} far Far bound of the frustum
   * @param {mat4} [dest] mat4 frustum matrix will be written into
   *
   * @returns {mat4} dest if specified, a new mat4 otherwise
   */
  mat4.perspective = function (fovy, aspect, near, far, dest) {
      var top = near * Math.tan(fovy * Math.PI / 360.0),
          right = top * aspect;
      return mat4.frustum(-right, right, -top, top, near, far, dest);
  };
  
  /**
   * Generates a orthogonal projection matrix with the given bounds
   *
   * @param {number} left Left bound of the frustum
   * @param {number} right Right bound of the frustum
   * @param {number} bottom Bottom bound of the frustum
   * @param {number} top Top bound of the frustum
   * @param {number} near Near bound of the frustum
   * @param {number} far Far bound of the frustum
   * @param {mat4} [dest] mat4 frustum matrix will be written into
   *
   * @returns {mat4} dest if specified, a new mat4 otherwise
   */
  mat4.ortho = function (left, right, bottom, top, near, far, dest) {
      if (!dest) { dest = mat4.create(); }
      var rl = (right - left),
          tb = (top - bottom),
          fn = (far - near);
      dest[0] = 2 / rl;
      dest[1] = 0;
      dest[2] = 0;
      dest[3] = 0;
      dest[4] = 0;
      dest[5] = 2 / tb;
      dest[6] = 0;
      dest[7] = 0;
      dest[8] = 0;
      dest[9] = 0;
      dest[10] = -2 / fn;
      dest[11] = 0;
      dest[12] = -(left + right) / rl;
      dest[13] = -(top + bottom) / tb;
      dest[14] = -(far + near) / fn;
      dest[15] = 1;
      return dest;
  };
  
  /**
   * Generates a look-at matrix with the given eye position, focal point, and up axis
   *
   * @param {vec3} eye Position of the viewer
   * @param {vec3} center Point the viewer is looking at
   * @param {vec3} up vec3 pointing "up"
   * @param {mat4} [dest] mat4 frustum matrix will be written into
   *
   * @returns {mat4} dest if specified, a new mat4 otherwise
   */
  mat4.lookAt = function (eye, center, up, dest) {
      if (!dest) { dest = mat4.create(); }
  
      var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,
          eyex = eye[0],
          eyey = eye[1],
          eyez = eye[2],
          upx = up[0],
          upy = up[1],
          upz = up[2],
          centerx = center[0],
          centery = center[1],
          centerz = center[2];
  
      if (eyex === centerx && eyey === centery && eyez === centerz) {
          return mat4.identity(dest);
      }
  
      //vec3.direction(eye, center, z);
      z0 = eyex - centerx;
      z1 = eyey - centery;
      z2 = eyez - centerz;
  
      // normalize (no check needed for 0 because of early return)
      len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);
      z0 *= len;
      z1 *= len;
      z2 *= len;
  
      //vec3.normalize(vec3.cross(up, z, x));
      x0 = upy * z2 - upz * z1;
      x1 = upz * z0 - upx * z2;
      x2 = upx * z1 - upy * z0;
      len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);
      if (!len) {
          x0 = 0;
          x1 = 0;
          x2 = 0;
      } else {
          len = 1 / len;
          x0 *= len;
          x1 *= len;
          x2 *= len;
      }
  
      //vec3.normalize(vec3.cross(z, x, y));
      y0 = z1 * x2 - z2 * x1;
      y1 = z2 * x0 - z0 * x2;
      y2 = z0 * x1 - z1 * x0;
  
      len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);
      if (!len) {
          y0 = 0;
          y1 = 0;
          y2 = 0;
      } else {
          len = 1 / len;
          y0 *= len;
          y1 *= len;
          y2 *= len;
      }
  
      dest[0] = x0;
      dest[1] = y0;
      dest[2] = z0;
      dest[3] = 0;
      dest[4] = x1;
      dest[5] = y1;
      dest[6] = z1;
      dest[7] = 0;
      dest[8] = x2;
      dest[9] = y2;
      dest[10] = z2;
      dest[11] = 0;
      dest[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);
      dest[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);
      dest[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);
      dest[15] = 1;
  
      return dest;
  };
  
  /**
   * Creates a matrix from a quaternion rotation and vector translation
   * This is equivalent to (but much faster than):
   *
   *     mat4.identity(dest);
   *     mat4.translate(dest, vec);
   *     var quatMat = mat4.create();
   *     quat4.toMat4(quat, quatMat);
   *     mat4.multiply(dest, quatMat);
   *
   * @param {quat4} quat Rotation quaternion
   * @param {vec3} vec Translation vector
   * @param {mat4} [dest] mat4 receiving operation result. If not specified result is written to a new mat4
   *
   * @returns {mat4} dest if specified, a new mat4 otherwise
   */
  mat4.fromRotationTranslation = function (quat, vec, dest) {
      if (!dest) { dest = mat4.create(); }
  
      // Quaternion math
      var x = quat[0], y = quat[1], z = quat[2], w = quat[3],
          x2 = x + x,
          y2 = y + y,
          z2 = z + z,
  
          xx = x * x2,
          xy = x * y2,
          xz = x * z2,
          yy = y * y2,
          yz = y * z2,
          zz = z * z2,
          wx = w * x2,
          wy = w * y2,
          wz = w * z2;
  
      dest[0] = 1 - (yy + zz);
      dest[1] = xy + wz;
      dest[2] = xz - wy;
      dest[3] = 0;
      dest[4] = xy - wz;
      dest[5] = 1 - (xx + zz);
      dest[6] = yz + wx;
      dest[7] = 0;
      dest[8] = xz + wy;
      dest[9] = yz - wx;
      dest[10] = 1 - (xx + yy);
      dest[11] = 0;
      dest[12] = vec[0];
      dest[13] = vec[1];
      dest[14] = vec[2];
      dest[15] = 1;
      
      return dest;
  };
  
  /**
   * Returns a string representation of a mat4
   *
   * @param {mat4} mat mat4 to represent as a string
   *
   * @returns {string} String representation of mat
   */
  mat4.str = function (mat) {
      return '[' + mat[0] + ', ' + mat[1] + ', ' + mat[2] + ', ' + mat[3] +
          ', ' + mat[4] + ', ' + mat[5] + ', ' + mat[6] + ', ' + mat[7] +
          ', ' + mat[8] + ', ' + mat[9] + ', ' + mat[10] + ', ' + mat[11] +
          ', ' + mat[12] + ', ' + mat[13] + ', ' + mat[14] + ', ' + mat[15] + ']';
  };
  
  /*
   * quat4
   */
  
  /**
   * Creates a new instance of a quat4 using the default array type
   * Any javascript array containing at least 4 numeric elements can serve as a quat4
   *
   * @param {quat4} [quat] quat4 containing values to initialize with
   *
   * @returns {quat4} New quat4
   */
  quat4.create = function (quat) {
      var dest = new MatrixArray(4);
  
      if (quat) {
          dest[0] = quat[0];
          dest[1] = quat[1];
          dest[2] = quat[2];
          dest[3] = quat[3];
      }
  
      return dest;
  };
  
  /**
   * Copies the values of one quat4 to another
   *
   * @param {quat4} quat quat4 containing values to copy
   * @param {quat4} dest quat4 receiving copied values
   *
   * @returns {quat4} dest
   */
  quat4.set = function (quat, dest) {
      dest[0] = quat[0];
      dest[1] = quat[1];
      dest[2] = quat[2];
      dest[3] = quat[3];
  
      return dest;
  };
  
  /**
   * Calculates the W component of a quat4 from the X, Y, and Z components.
   * Assumes that quaternion is 1 unit in length. 
   * Any existing W component will be ignored. 
   *
   * @param {quat4} quat quat4 to calculate W component of
   * @param {quat4} [dest] quat4 receiving calculated values. If not specified result is written to quat
   *
   * @returns {quat4} dest if specified, quat otherwise
   */
  quat4.calculateW = function (quat, dest) {
      var x = quat[0], y = quat[1], z = quat[2];
  
      if (!dest || quat === dest) {
          quat[3] = -Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));
          return quat;
      }
      dest[0] = x;
      dest[1] = y;
      dest[2] = z;
      dest[3] = -Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));
      return dest;
  };
  
  /**
   * Calculates the dot product of two quaternions
   *
   * @param {quat4} quat First operand
   * @param {quat4} quat2 Second operand
   *
   * @return {number} Dot product of quat and quat2
   */
  quat4.dot = function(quat, quat2){
      return quat[0]*quat2[0] + quat[1]*quat2[1] + quat[2]*quat2[2] + quat[3]*quat2[3];
  };
  
  /**
   * Calculates the inverse of a quat4
   *
   * @param {quat4} quat quat4 to calculate inverse of
   * @param {quat4} [dest] quat4 receiving inverse values. If not specified result is written to quat
   *
   * @returns {quat4} dest if specified, quat otherwise
   */
  quat4.inverse = function(quat, dest) {
      var q0 = quat[0], q1 = quat[1], q2 = quat[2], q3 = quat[3],
          dot = q0*q0 + q1*q1 + q2*q2 + q3*q3,
          invDot = dot ? 1.0/dot : 0;
      
      // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0
      
      if(!dest || quat === dest) {
          quat[0] *= -invDot;
          quat[1] *= -invDot;
          quat[2] *= -invDot;
          quat[3] *= invDot;
          return quat;
      }
      dest[0] = -quat[0]*invDot;
      dest[1] = -quat[1]*invDot;
      dest[2] = -quat[2]*invDot;
      dest[3] = quat[3]*invDot;
      return dest;
  };
  
  
  /**
   * Calculates the conjugate of a quat4
   * If the quaternion is normalized, this function is faster than quat4.inverse and produces the same result.
   *
   * @param {quat4} quat quat4 to calculate conjugate of
   * @param {quat4} [dest] quat4 receiving conjugate values. If not specified result is written to quat
   *
   * @returns {quat4} dest if specified, quat otherwise
   */
  quat4.conjugate = function (quat, dest) {
      if (!dest || quat === dest) {
          quat[0] *= -1;
          quat[1] *= -1;
          quat[2] *= -1;
          return quat;
      }
      dest[0] = -quat[0];
      dest[1] = -quat[1];
      dest[2] = -quat[2];
      dest[3] = quat[3];
      return dest;
  };
  
  /**
   * Calculates the length of a quat4
   *
   * Params:
   * @param {quat4} quat quat4 to calculate length of
   *
   * @returns Length of quat
   */
  quat4.length = function (quat) {
      var x = quat[0], y = quat[1], z = quat[2], w = quat[3];
      return Math.sqrt(x * x + y * y + z * z + w * w);
  };
  
  /**
   * Generates a unit quaternion of the same direction as the provided quat4
   * If quaternion length is 0, returns [0, 0, 0, 0]
   *
   * @param {quat4} quat quat4 to normalize
   * @param {quat4} [dest] quat4 receiving operation result. If not specified result is written to quat
   *
   * @returns {quat4} dest if specified, quat otherwise
   */
  quat4.normalize = function (quat, dest) {
      if (!dest) { dest = quat; }
  
      var x = quat[0], y = quat[1], z = quat[2], w = quat[3],
          len = Math.sqrt(x * x + y * y + z * z + w * w);
      if (len === 0) {
          dest[0] = 0;
          dest[1] = 0;
          dest[2] = 0;
          dest[3] = 0;
          return dest;
      }
      len = 1 / len;
      dest[0] = x * len;
      dest[1] = y * len;
      dest[2] = z * len;
      dest[3] = w * len;
  
      return dest;
  };
  
  /**
   * Performs quaternion addition
   *
   * @param {quat4} quat First operand
   * @param {quat4} quat2 Second operand
   * @param {quat4} [dest] quat4 receiving operation result. If not specified result is written to quat
   *
   * @returns {quat4} dest if specified, quat otherwise
   */
  quat4.add = function (quat, quat2, dest) {
      if(!dest || quat === dest) {
          quat[0] += quat2[0];
          quat[1] += quat2[1];
          quat[2] += quat2[2];
          quat[3] += quat2[3];
          return quat;
      }
      dest[0] = quat[0]+quat2[0];
      dest[1] = quat[1]+quat2[1];
      dest[2] = quat[2]+quat2[2];
      dest[3] = quat[3]+quat2[3];
      return dest;
  };
  
  /**
   * Performs a quaternion multiplication
   *
   * @param {quat4} quat First operand
   * @param {quat4} quat2 Second operand
   * @param {quat4} [dest] quat4 receiving operation result. If not specified result is written to quat
   *
   * @returns {quat4} dest if specified, quat otherwise
   */
  quat4.multiply = function (quat, quat2, dest) {
      if (!dest) { dest = quat; }
  
      var qax = quat[0], qay = quat[1], qaz = quat[2], qaw = quat[3],
          qbx = quat2[0], qby = quat2[1], qbz = quat2[2], qbw = quat2[3];
  
      dest[0] = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;
      dest[1] = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;
      dest[2] = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;
      dest[3] = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;
  
      return dest;
  };
  
  /**
   * Transforms a vec3 with the given quaternion
   *
   * @param {quat4} quat quat4 to transform the vector with
   * @param {vec3} vec vec3 to transform
   * @param {vec3} [dest] vec3 receiving operation result. If not specified result is written to vec
   *
   * @returns dest if specified, vec otherwise
   */
  quat4.multiplyVec3 = function (quat, vec, dest) {
      if (!dest) { dest = vec; }
  
      var x = vec[0], y = vec[1], z = vec[2],
          qx = quat[0], qy = quat[1], qz = quat[2], qw = quat[3],
  
          // calculate quat * vec
          ix = qw * x + qy * z - qz * y,
          iy = qw * y + qz * x - qx * z,
          iz = qw * z + qx * y - qy * x,
          iw = -qx * x - qy * y - qz * z;
  
      // calculate result * inverse quat
      dest[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;
      dest[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;
      dest[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;
  
      return dest;
  };
  
  /**
   * Multiplies the components of a quaternion by a scalar value
   *
   * @param {quat4} quat to scale
   * @param {number} val Value to scale by
   * @param {quat4} [dest] quat4 receiving operation result. If not specified result is written to quat
   *
   * @returns {quat4} dest if specified, quat otherwise
   */
  quat4.scale = function (quat, val, dest) {
      if(!dest || quat === dest) {
          quat[0] *= val;
          quat[1] *= val;
          quat[2] *= val;
          quat[3] *= val;
          return quat;
      }
      dest[0] = quat[0]*val;
      dest[1] = quat[1]*val;
      dest[2] = quat[2]*val;
      dest[3] = quat[3]*val;
      return dest;
  };
  
  /**
   * Calculates a 3x3 matrix from the given quat4
   *
   * @param {quat4} quat quat4 to create matrix from
   * @param {mat3} [dest] mat3 receiving operation result
   *
   * @returns {mat3} dest if specified, a new mat3 otherwise
   */
  quat4.toMat3 = function (quat, dest) {
      if (!dest) { dest = mat3.create(); }
  
      var x = quat[0], y = quat[1], z = quat[2], w = quat[3],
          x2 = x + x,
          y2 = y + y,
          z2 = z + z,
  
          xx = x * x2,
          xy = x * y2,
          xz = x * z2,
          yy = y * y2,
          yz = y * z2,
          zz = z * z2,
          wx = w * x2,
          wy = w * y2,
          wz = w * z2;
  
      dest[0] = 1 - (yy + zz);
      dest[1] = xy + wz;
      dest[2] = xz - wy;
  
      dest[3] = xy - wz;
      dest[4] = 1 - (xx + zz);
      dest[5] = yz + wx;
  
      dest[6] = xz + wy;
      dest[7] = yz - wx;
      dest[8] = 1 - (xx + yy);
  
      return dest;
  };
  
  /**
   * Calculates a 4x4 matrix from the given quat4
   *
   * @param {quat4} quat quat4 to create matrix from
   * @param {mat4} [dest] mat4 receiving operation result
   *
   * @returns {mat4} dest if specified, a new mat4 otherwise
   */
  quat4.toMat4 = function (quat, dest) {
      if (!dest) { dest = mat4.create(); }
  
      var x = quat[0], y = quat[1], z = quat[2], w = quat[3],
          x2 = x + x,
          y2 = y + y,
          z2 = z + z,
  
          xx = x * x2,
          xy = x * y2,
          xz = x * z2,
          yy = y * y2,
          yz = y * z2,
          zz = z * z2,
          wx = w * x2,
          wy = w * y2,
          wz = w * z2;
  
      dest[0] = 1 - (yy + zz);
      dest[1] = xy + wz;
      dest[2] = xz - wy;
      dest[3] = 0;
  
      dest[4] = xy - wz;
      dest[5] = 1 - (xx + zz);
      dest[6] = yz + wx;
      dest[7] = 0;
  
      dest[8] = xz + wy;
      dest[9] = yz - wx;
      dest[10] = 1 - (xx + yy);
      dest[11] = 0;
  
      dest[12] = 0;
      dest[13] = 0;
      dest[14] = 0;
      dest[15] = 1;
  
      return dest;
  };
  
  /**
   * Performs a spherical linear interpolation between two quat4
   *
   * @param {quat4} quat First quaternion
   * @param {quat4} quat2 Second quaternion
   * @param {number} slerp Interpolation amount between the two inputs
   * @param {quat4} [dest] quat4 receiving operation result. If not specified result is written to quat
   *
   * @returns {quat4} dest if specified, quat otherwise
   */
  quat4.slerp = function (quat, quat2, slerp, dest) {
      if (!dest) { dest = quat; }
  
      var cosHalfTheta = quat[0] * quat2[0] + quat[1] * quat2[1] + quat[2] * quat2[2] + quat[3] * quat2[3],
          halfTheta,
          sinHalfTheta,
          ratioA,
          ratioB;
  
      if (Math.abs(cosHalfTheta) >= 1.0) {
          if (dest !== quat) {
              dest[0] = quat[0];
              dest[1] = quat[1];
              dest[2] = quat[2];
              dest[3] = quat[3];
          }
          return dest;
      }
  
      halfTheta = Math.acos(cosHalfTheta);
      sinHalfTheta = Math.sqrt(1.0 - cosHalfTheta * cosHalfTheta);
  
      if (Math.abs(sinHalfTheta) < 0.001) {
          dest[0] = (quat[0] * 0.5 + quat2[0] * 0.5);
          dest[1] = (quat[1] * 0.5 + quat2[1] * 0.5);
          dest[2] = (quat[2] * 0.5 + quat2[2] * 0.5);
          dest[3] = (quat[3] * 0.5 + quat2[3] * 0.5);
          return dest;
      }
  
      ratioA = Math.sin((1 - slerp) * halfTheta) / sinHalfTheta;
      ratioB = Math.sin(slerp * halfTheta) / sinHalfTheta;
  
      dest[0] = (quat[0] * ratioA + quat2[0] * ratioB);
      dest[1] = (quat[1] * ratioA + quat2[1] * ratioB);
      dest[2] = (quat[2] * ratioA + quat2[2] * ratioB);
      dest[3] = (quat[3] * ratioA + quat2[3] * ratioB);
  
      return dest;
  };
  
  /**
   * Returns a string representation of a quaternion
   *
   * @param {quat4} quat quat4 to represent as a string
   *
   * @returns {string} String representation of quat
   */
  quat4.str = function (quat) {
      return '[' + quat[0] + ', ' + quat[1] + ', ' + quat[2] + ', ' + quat[3] + ']';
  };
  
  
  return {
    vec3: vec3,
    mat3: mat3,
    mat4: mat4,
    quat4: quat4
  };
  
  })();
  
  ;
  var GLImmediateSetup={};
  
  function _glEnable(x0) { GLctx.enable(x0) }
  
  function _glIsEnabled(x0) { return GLctx.isEnabled(x0) }
  
  function _glGetBooleanv(name_, p) {
      return GL.get(name_, p, 'Boolean');
    }
  
  function _glGetString(name_) {
      if (GL.stringCache[name_]) return GL.stringCache[name_];
      var ret; 
      switch(name_) {
        case 0x1F00 /* GL_VENDOR */:
        case 0x1F01 /* GL_RENDERER */:
        case 0x1F02 /* GL_VERSION */:
          ret = allocate(intArrayFromString(GLctx.getParameter(name_)), 'i8', ALLOC_NORMAL);
          break;
        case 0x1F03 /* GL_EXTENSIONS */:
          var exts = GLctx.getSupportedExtensions();
          var gl_exts = [];
          for (i in exts) {
            gl_exts.push(exts[i]);
            gl_exts.push("GL_" + exts[i]);
          }
          ret = allocate(intArrayFromString(gl_exts.join(' ')), 'i8', ALLOC_NORMAL);
          break;
        case 0x8B8C /* GL_SHADING_LANGUAGE_VERSION */:
          ret = allocate(intArrayFromString('OpenGL ES GLSL 1.00 (WebGL)'), 'i8', ALLOC_NORMAL);
          break;
        default:
          GL.recordError(0x0500/*GL_INVALID_ENUM*/);
          return 0;
      }
      GL.stringCache[name_] = ret;
      return ret;
    }
  
  function _glCreateShader(shaderType) {
      var id = GL.getNewId(GL.shaders);
      GL.shaders[id] = GLctx.createShader(shaderType);
      return id;
    }
  
  function _glShaderSource(shader, count, string, length) {
      var source = GL.getSource(shader, count, string, length);
      GLctx.shaderSource(GL.shaders[shader], source);
    }
  
  function _glCompileShader(shader) {
      GLctx.compileShader(GL.shaders[shader]);
    }
  
  function _glAttachShader(program, shader) {
      GLctx.attachShader(GL.programs[program],
                              GL.shaders[shader]);
    }
  
  function _glDetachShader(program, shader) {
      GLctx.detachShader(GL.programs[program],
                              GL.shaders[shader]);
    }
  
  function _glUseProgram(program) {
      GLctx.useProgram(program ? GL.programs[program] : null);
    }
  
  function _glDeleteProgram(program) {
      var program = GL.programs[program];
      GLctx.deleteProgram(program);
      program.name = 0;
      GL.programs[program] = null;
      GL.programInfos[program] = null;
    }
  
  function _glBindAttribLocation(program, index, name) {
      name = Pointer_stringify(name);
      GLctx.bindAttribLocation(GL.programs[program], index, name);
    }
  
  function _glLinkProgram(program) {
      GLctx.linkProgram(GL.programs[program]);
      GL.programInfos[program] = null; // uniforms no longer keep the same names after linking
      GL.populateUniformTable(program);
    }
  
  function _glBindBuffer(target, buffer) {
      var bufferObj = buffer ? GL.buffers[buffer] : null;
  
      if (target == GLctx.ARRAY_BUFFER) {
        GLImmediate.lastArrayBuffer = GL.currArrayBuffer = buffer;
      } else if (target == GLctx.ELEMENT_ARRAY_BUFFER) {
        GL.currElementArrayBuffer = buffer;
      }
  
      GLctx.bindBuffer(target, bufferObj);
    }
  
  function _glGetFloatv(name_, p) {
      return GL.get(name_, p, 'Float');
    }
  
  function _glHint(x0, x1) { GLctx.hint(x0, x1) }
  
  function _glEnableVertexAttribArray(index) {
      GLctx.enableVertexAttribArray(index);
    }
  
  function _glDisableVertexAttribArray(index) {
      GLctx.disableVertexAttribArray(index);
    }
  
  function _glVertexAttribPointer(index, size, type, normalized, stride, ptr) {
      GLctx.vertexAttribPointer(index, size, type, normalized, stride, ptr);
    }
  
  function _glActiveTexture(x0) { GLctx.activeTexture(x0) }var GLEmulation={fogStart:0,fogEnd:1,fogDensity:1,fogColor:null,fogMode:2048,fogEnabled:false,vaos:[],currentVao:null,enabledVertexAttribArrays:{},hasRunInit:false,init:function () {
        // Do not activate immediate/emulation code (e.g. replace glDrawElements) when in FULL_ES2 mode.
        // We do not need full emulation, we instead emulate client-side arrays etc. in FULL_ES2 code in
        // a straightforward manner, and avoid not having a bound buffer be ambiguous between es2 emulation
        // code and legacy gl emulation code.
  
        if (GLEmulation.hasRunInit) {
          return;
        }
        GLEmulation.hasRunInit = true;
  
        GLEmulation.fogColor = new Float32Array(4);
  
        // Add some emulation workarounds
        Module.printErr('WARNING: using emscripten GL emulation. This is a collection of limited workarounds, do not expect it to work.');
        Module.printErr('WARNING: using emscripten GL emulation unsafe opts. If weirdness happens, try -s GL_UNSAFE_OPTS=0');
  
        // XXX some of the capabilities we don't support may lead to incorrect rendering, if we do not emulate them in shaders
        var validCapabilities = {
          0x0B44: 1, // GL_CULL_FACE
          0x0BE2: 1, // GL_BLEND
          0x0BD0: 1, // GL_DITHER,
          0x0B90: 1, // GL_STENCIL_TEST
          0x0B71: 1, // GL_DEPTH_TEST
          0x0C11: 1, // GL_SCISSOR_TEST
          0x8037: 1, // GL_POLYGON_OFFSET_FILL
          0x809E: 1, // GL_SAMPLE_ALPHA_TO_COVERAGE
          0x80A0: 1  // GL_SAMPLE_COVERAGE
        };
  
        var glEnable = _glEnable;
        _glEnable = _emscripten_glEnable = function _glEnable(cap) {
          // Clean up the renderer on any change to the rendering state. The optimization of
          // skipping renderer setup is aimed at the case of multiple glDraw* right after each other
          if (GLImmediate.lastRenderer) GLImmediate.lastRenderer.cleanup();
          if (cap == 0x0B60 /* GL_FOG */) {
            if (GLEmulation.fogEnabled != true) {
              GLImmediate.currentRenderer = null; // Fog parameter is part of the FFP shader state, we must re-lookup the renderer to use.
              GLEmulation.fogEnabled = true;
            }
            return;
          } else if (cap == 0x0de1 /* GL_TEXTURE_2D */) {
            // XXX not according to spec, and not in desktop GL, but works in some GLES1.x apparently, so support
            // it by forwarding to glEnableClientState
            /* Actually, let's not, for now. (This sounds exceedingly broken)
             * This is in gl_ps_workaround2.c.
            _glEnableClientState(cap);
            */
            return;
          } else if (!(cap in validCapabilities)) {
            return;
          }
          glEnable(cap);
        };
  
        var glDisable = _glDisable;
        _glDisable = _emscripten_glDisable = function _glDisable(cap) {
          if (GLImmediate.lastRenderer) GLImmediate.lastRenderer.cleanup();
          if (cap == 0x0B60 /* GL_FOG */) {
            if (GLEmulation.fogEnabled != false) {
              GLImmediate.currentRenderer = null; // Fog parameter is part of the FFP shader state, we must re-lookup the renderer to use.
              GLEmulation.fogEnabled = false;
            }
            return;
          } else if (cap == 0x0de1 /* GL_TEXTURE_2D */) {
            // XXX not according to spec, and not in desktop GL, but works in some GLES1.x apparently, so support
            // it by forwarding to glDisableClientState
            /* Actually, let's not, for now. (This sounds exceedingly broken)
             * This is in gl_ps_workaround2.c.
            _glDisableClientState(cap);
            */
            return;
          } else if (!(cap in validCapabilities)) {
            return;
          }
          glDisable(cap);
        };
        _glIsEnabled = _emscripten_glIsEnabled = function _glIsEnabled(cap) {
          if (cap == 0x0B60 /* GL_FOG */) {
            return GLEmulation.fogEnabled ? 1 : 0;
          } else if (!(cap in validCapabilities)) {
            return 0;
          }
          return GLctx.isEnabled(cap);
        };
  
        var glGetBooleanv = _glGetBooleanv;
        _glGetBooleanv = _emscripten_glGetBooleanv = function _glGetBooleanv(pname, p) {
          var attrib = GLEmulation.getAttributeFromCapability(pname);
          if (attrib !== null) {
            var result = GLImmediate.enabledClientAttributes[attrib];
            HEAP8[(p)]=result === true ? 1 : 0;
            return;
          }
          glGetBooleanv(pname, p);
        };
  
        var glGetIntegerv = _glGetIntegerv;
        _glGetIntegerv = _emscripten_glGetIntegerv = function _glGetIntegerv(pname, params) {
          switch (pname) {
            case 0x84E2: pname = GLctx.MAX_TEXTURE_IMAGE_UNITS /* fake it */; break; // GL_MAX_TEXTURE_UNITS
            case 0x8B4A: { // GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB
              var result = GLctx.getParameter(GLctx.MAX_VERTEX_UNIFORM_VECTORS);
              HEAP32[((params)>>2)]=result*4; // GLES gives num of 4-element vectors, GL wants individual components, so multiply
              return;
            }
            case 0x8B49: { // GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB
              var result = GLctx.getParameter(GLctx.MAX_FRAGMENT_UNIFORM_VECTORS);
              HEAP32[((params)>>2)]=result*4; // GLES gives num of 4-element vectors, GL wants individual components, so multiply
              return;
            }
            case 0x8B4B: { // GL_MAX_VARYING_FLOATS_ARB
              var result = GLctx.getParameter(GLctx.MAX_VARYING_VECTORS);
              HEAP32[((params)>>2)]=result*4; // GLES gives num of 4-element vectors, GL wants individual components, so multiply
              return;
            }
            case 0x8871: pname = GLctx.MAX_COMBINED_TEXTURE_IMAGE_UNITS /* close enough */; break; // GL_MAX_TEXTURE_COORDS
            case 0x807A: { // GL_VERTEX_ARRAY_SIZE
              var attribute = GLImmediate.clientAttributes[GLImmediate.VERTEX];
              HEAP32[((params)>>2)]=attribute ? attribute.size : 0;
              return;
            }
            case 0x807B: { // GL_VERTEX_ARRAY_TYPE
              var attribute = GLImmediate.clientAttributes[GLImmediate.VERTEX];
              HEAP32[((params)>>2)]=attribute ? attribute.type : 0;
              return;
            }
            case 0x807C: { // GL_VERTEX_ARRAY_STRIDE
              var attribute = GLImmediate.clientAttributes[GLImmediate.VERTEX];
              HEAP32[((params)>>2)]=attribute ? attribute.stride : 0;
              return;
            }
            case 0x8081: { // GL_COLOR_ARRAY_SIZE
              var attribute = GLImmediate.clientAttributes[GLImmediate.COLOR];
              HEAP32[((params)>>2)]=attribute ? attribute.size : 0;
              return;
            }
            case 0x8082: { // GL_COLOR_ARRAY_TYPE
              var attribute = GLImmediate.clientAttributes[GLImmediate.COLOR];
              HEAP32[((params)>>2)]=attribute ? attribute.type : 0;
              return;
            }
            case 0x8083: { // GL_COLOR_ARRAY_STRIDE
              var attribute = GLImmediate.clientAttributes[GLImmediate.COLOR];
              HEAP32[((params)>>2)]=attribute ? attribute.stride : 0;
              return;
            }
            case 0x8088: { // GL_TEXTURE_COORD_ARRAY_SIZE
              var attribute = GLImmediate.clientAttributes[GLImmediate.TEXTURE0 + GLImmediate.clientActiveTexture];
              HEAP32[((params)>>2)]=attribute ? attribute.size : 0;
              return;
            }
            case 0x8089: { // GL_TEXTURE_COORD_ARRAY_TYPE
              var attribute = GLImmediate.clientAttributes[GLImmediate.TEXTURE0 + GLImmediate.clientActiveTexture];
              HEAP32[((params)>>2)]=attribute ? attribute.type : 0;
              return;
            }
            case 0x808A: { // GL_TEXTURE_COORD_ARRAY_STRIDE
              var attribute = GLImmediate.clientAttributes[GLImmediate.TEXTURE0 + GLImmediate.clientActiveTexture];
              HEAP32[((params)>>2)]=attribute ? attribute.stride : 0;
              return;
            }
          }
          glGetIntegerv(pname, params);
        };
  
        var glGetString = _glGetString;
        _glGetString = _emscripten_glGetString = function _glGetString(name_) {
          if (GL.stringCache[name_]) return GL.stringCache[name_];
          switch(name_) {
            case 0x1F03 /* GL_EXTENSIONS */: // Add various extensions that we can support
              var ret = allocate(intArrayFromString(GLctx.getSupportedExtensions().join(' ') +
                     ' GL_EXT_texture_env_combine GL_ARB_texture_env_crossbar GL_ATI_texture_env_combine3 GL_NV_texture_env_combine4 GL_EXT_texture_env_dot3 GL_ARB_multitexture GL_ARB_vertex_buffer_object GL_EXT_framebuffer_object GL_ARB_vertex_program GL_ARB_fragment_program GL_ARB_shading_language_100 GL_ARB_shader_objects GL_ARB_vertex_shader GL_ARB_fragment_shader GL_ARB_texture_cube_map GL_EXT_draw_range_elements' +
                     (GL.compressionExt ? ' GL_ARB_texture_compression GL_EXT_texture_compression_s3tc' : '') +
                     (GL.anisotropicExt ? ' GL_EXT_texture_filter_anisotropic' : '')
              ), 'i8', ALLOC_NORMAL);
              GL.stringCache[name_] = ret;
              return ret;
          }
          return glGetString(name_);
        };
  
        // Do some automatic rewriting to work around GLSL differences. Note that this must be done in
        // tandem with the rest of the program, by itself it cannot suffice.
        // Note that we need to remember shader types for this rewriting, saving sources makes it easier to debug.
        GL.shaderInfos = {};
        var glCreateShader = _glCreateShader;
        _glCreateShader = _emscripten_glCreateShader = function _glCreateShader(shaderType) {
          var id = glCreateShader(shaderType);
          GL.shaderInfos[id] = {
            type: shaderType,
            ftransform: false
          };
          return id;
        };
  
        function ensurePrecision(source) {
          if (!/precision +(low|medium|high)p +float *;/.test(source)) {
            source = 'precision mediump float;\n' + source;
          }
          return source;
        }
  
        var glShaderSource = _glShaderSource;
        _glShaderSource = _emscripten_glShaderSource = function _glShaderSource(shader, count, string, length) {
          var source = GL.getSource(shader, count, string, length);
          // XXX We add attributes and uniforms to shaders. The program can ask for the # of them, and see the
          // ones we generated, potentially confusing it? Perhaps we should hide them.
          if (GL.shaderInfos[shader].type == GLctx.VERTEX_SHADER) {
            // Replace ftransform() with explicit project/modelview transforms, and add position and matrix info.
            var has_pm = source.search(/u_projection/) >= 0;
            var has_mm = source.search(/u_modelView/) >= 0;
            var has_pv = source.search(/a_position/) >= 0;
            var need_pm = 0, need_mm = 0, need_pv = 0;
            var old = source;
            source = source.replace(/ftransform\(\)/g, '(u_projection * u_modelView * a_position)');
            if (old != source) need_pm = need_mm = need_pv = 1;
            old = source;
            source = source.replace(/gl_ProjectionMatrix/g, 'u_projection');
            if (old != source) need_pm = 1;
            old = source;
            source = source.replace(/gl_ModelViewMatrixTranspose\[2\]/g, 'vec4(u_modelView[0][2], u_modelView[1][2], u_modelView[2][2], u_modelView[3][2])'); // XXX extremely inefficient
            if (old != source) need_mm = 1;
            old = source;
            source = source.replace(/gl_ModelViewMatrix/g, 'u_modelView');
            if (old != source) need_mm = 1;
            old = source;
            source = source.replace(/gl_Vertex/g, 'a_position');
            if (old != source) need_pv = 1;
            old = source;
            source = source.replace(/gl_ModelViewProjectionMatrix/g, '(u_projection * u_modelView)');
            if (old != source) need_pm = need_mm = 1;
            if (need_pv && !has_pv) source = 'attribute vec4 a_position; \n' + source;
            if (need_mm && !has_mm) source = 'uniform mat4 u_modelView; \n' + source;
            if (need_pm && !has_pm) source = 'uniform mat4 u_projection; \n' + source;
            GL.shaderInfos[shader].ftransform = need_pm || need_mm || need_pv; // we will need to provide the fixed function stuff as attributes and uniforms
            for (var i = 0; i < GLImmediate.MAX_TEXTURES; i++) {
              // XXX To handle both regular texture mapping and cube mapping, we use vec4 for tex coordinates.
              var old = source;
              var need_vtc = source.search('v_texCoord' + i) == -1;
              source = source.replace(new RegExp('gl_TexCoord\\[' + i + '\\]', 'g'), 'v_texCoord' + i)
                             .replace(new RegExp('gl_MultiTexCoord' + i, 'g'), 'a_texCoord' + i);
              if (source != old) {
                source = 'attribute vec4 a_texCoord' + i + '; \n' + source;
                if (need_vtc) {
                  source = 'varying vec4 v_texCoord' + i + ';   \n' + source;
                }
              }
  
              old = source;
              source = source.replace(new RegExp('gl_TextureMatrix\\[' + i + '\\]', 'g'), 'u_textureMatrix' + i);
              if (source != old) {
                source = 'uniform mat4 u_textureMatrix' + i + '; \n' + source;
              }
            }
            if (source.indexOf('gl_FrontColor') >= 0) {
              source = 'varying vec4 v_color; \n' +
                       source.replace(/gl_FrontColor/g, 'v_color');
            }
            if (source.indexOf('gl_Color') >= 0) {
              source = 'attribute vec4 a_color; \n' +
                       source.replace(/gl_Color/g, 'a_color');
            }
            if (source.indexOf('gl_Normal') >= 0) {
              source = 'attribute vec3 a_normal; \n' +
                       source.replace(/gl_Normal/g, 'a_normal');
            }
            // fog
            if (source.indexOf('gl_FogFragCoord') >= 0) {
              source = 'varying float v_fogFragCoord;   \n' +
                       source.replace(/gl_FogFragCoord/g, 'v_fogFragCoord');
            }
            source = ensurePrecision(source);
          } else { // Fragment shader
            for (var i = 0; i < GLImmediate.MAX_TEXTURES; i++) {
              var old = source;
              source = source.replace(new RegExp('gl_TexCoord\\[' + i + '\\]', 'g'), 'v_texCoord' + i);
              if (source != old) {
                source = 'varying vec4 v_texCoord' + i + ';   \n' + source;
              }
            }
            if (source.indexOf('gl_Color') >= 0) {
              source = 'varying vec4 v_color; \n' + source.replace(/gl_Color/g, 'v_color');
            }
            if (source.indexOf('gl_Fog.color') >= 0) {
              source = 'uniform vec4 u_fogColor;   \n' +
                       source.replace(/gl_Fog.color/g, 'u_fogColor');
            }
            if (source.indexOf('gl_Fog.end') >= 0) {
              source = 'uniform float u_fogEnd;   \n' +
                       source.replace(/gl_Fog.end/g, 'u_fogEnd');
            }
            if (source.indexOf('gl_Fog.scale') >= 0) {
              source = 'uniform float u_fogScale;   \n' +
                       source.replace(/gl_Fog.scale/g, 'u_fogScale');
            }
            if (source.indexOf('gl_Fog.density') >= 0) {
              source = 'uniform float u_fogDensity;   \n' +
                       source.replace(/gl_Fog.density/g, 'u_fogDensity');
            }
            if (source.indexOf('gl_FogFragCoord') >= 0) {
              source = 'varying float v_fogFragCoord;   \n' +
                       source.replace(/gl_FogFragCoord/g, 'v_fogFragCoord');
            }
            source = ensurePrecision(source);
          }
          GLctx.shaderSource(GL.shaders[shader], source);
        };
  
        var glCompileShader = _glCompileShader;
        _glCompileShader = _emscripten_glCompileShader = function _glCompileShader(shader) {
          GLctx.compileShader(GL.shaders[shader]);
        };
  
        GL.programShaders = {};
        var glAttachShader = _glAttachShader;
        _glAttachShader = _emscripten_glAttachShader = function _glAttachShader(program, shader) {
          if (!GL.programShaders[program]) GL.programShaders[program] = [];
          GL.programShaders[program].push(shader);
          glAttachShader(program, shader);
        };
  
        var glDetachShader = _glDetachShader;
        _glDetachShader = _emscripten_glDetachShader = function _glDetachShader(program, shader) {
          var programShader = GL.programShaders[program];
          if (!programShader) {
            Module.printErr('WARNING: _glDetachShader received invalid program: ' + program);
            return;
          }
          var index = programShader.indexOf(shader);
          programShader.splice(index, 1);
          glDetachShader(program, shader);
        };
  
        var glUseProgram = _glUseProgram;
        _glUseProgram = _emscripten_glUseProgram = function _glUseProgram(program) {
          if (GL.currProgram != program) {
            GLImmediate.currentRenderer = null; // This changes the FFP emulation shader program, need to recompute that.
            GL.currProgram = program;
            GLImmediate.fixedFunctionProgram = 0;
            glUseProgram(program);
          }
        }
  
        var glDeleteProgram = _glDeleteProgram;
        _glDeleteProgram = _emscripten_glDeleteProgram = function _glDeleteProgram(program) {
          glDeleteProgram(program);
          if (program == GL.currProgram) {
            GLImmediate.currentRenderer = null; // This changes the FFP emulation shader program, need to recompute that.
            GL.currProgram = 0;
          }
        };
  
        // If attribute 0 was not bound, bind it to 0 for WebGL performance reasons. Track if 0 is free for that.
        var zeroUsedPrograms = {};
        var glBindAttribLocation = _glBindAttribLocation;
        _glBindAttribLocation = _emscripten_glBindAttribLocation = function _glBindAttribLocation(program, index, name) {
          if (index == 0) zeroUsedPrograms[program] = true;
          glBindAttribLocation(program, index, name);
        };
        var glLinkProgram = _glLinkProgram;
        _glLinkProgram = _emscripten_glLinkProgram = function _glLinkProgram(program) {
          if (!(program in zeroUsedPrograms)) {
            GLctx.bindAttribLocation(GL.programs[program], 0, 'a_position');
          }
          glLinkProgram(program);
        };
  
        var glBindBuffer = _glBindBuffer;
        _glBindBuffer = _emscripten_glBindBuffer = function _glBindBuffer(target, buffer) {
          glBindBuffer(target, buffer);
          if (target == GLctx.ARRAY_BUFFER) {
            if (GLEmulation.currentVao) {
              GLEmulation.currentVao.arrayBuffer = buffer;
            }
          } else if (target == GLctx.ELEMENT_ARRAY_BUFFER) {
            if (GLEmulation.currentVao) GLEmulation.currentVao.elementArrayBuffer = buffer;
          }
        };
  
        var glGetFloatv = _glGetFloatv;
        _glGetFloatv = _emscripten_glGetFloatv = function _glGetFloatv(pname, params) {
          if (pname == 0x0BA6) { // GL_MODELVIEW_MATRIX
            HEAPF32.set(GLImmediate.matrix[0/*m*/], params >> 2);
          } else if (pname == 0x0BA7) { // GL_PROJECTION_MATRIX
            HEAPF32.set(GLImmediate.matrix[1/*p*/], params >> 2);
          } else if (pname == 0x0BA8) { // GL_TEXTURE_MATRIX
            HEAPF32.set(GLImmediate.matrix[2/*t*/ + GLImmediate.clientActiveTexture], params >> 2);
          } else if (pname == 0x0B66) { // GL_FOG_COLOR
            HEAPF32.set(GLEmulation.fogColor, params >> 2);
          } else if (pname == 0x0B63) { // GL_FOG_START
            HEAPF32[((params)>>2)]=GLEmulation.fogStart;
          } else if (pname == 0x0B64) { // GL_FOG_END
            HEAPF32[((params)>>2)]=GLEmulation.fogEnd;
          } else if (pname == 0x0B62) { // GL_FOG_DENSITY
            HEAPF32[((params)>>2)]=GLEmulation.fogDensity;
          } else if (pname == 0x0B65) { // GL_FOG_MODE
            HEAPF32[((params)>>2)]=GLEmulation.fogMode;
          } else {
            glGetFloatv(pname, params);
          }
        };
  
        var glHint = _glHint;
        _glHint = _emscripten_glHint = function _glHint(target, mode) {
          if (target == 0x84EF) { // GL_TEXTURE_COMPRESSION_HINT
            return;
          }
          glHint(target, mode);
        };
  
        var glEnableVertexAttribArray = _glEnableVertexAttribArray;
        _glEnableVertexAttribArray = _emscripten_glEnableVertexAttribArray = function _glEnableVertexAttribArray(index) {
          glEnableVertexAttribArray(index);
          GLEmulation.enabledVertexAttribArrays[index] = 1;
          if (GLEmulation.currentVao) GLEmulation.currentVao.enabledVertexAttribArrays[index] = 1;
        };
  
        var glDisableVertexAttribArray = _glDisableVertexAttribArray;
        _glDisableVertexAttribArray = _emscripten_glDisableVertexAttribArray = function _glDisableVertexAttribArray(index) {
          glDisableVertexAttribArray(index);
          delete GLEmulation.enabledVertexAttribArrays[index];
          if (GLEmulation.currentVao) delete GLEmulation.currentVao.enabledVertexAttribArrays[index];
        };
  
        var glVertexAttribPointer = _glVertexAttribPointer;
        _glVertexAttribPointer = _emscripten_glVertexAttribPointer = function _glVertexAttribPointer(index, size, type, normalized, stride, pointer) {
          glVertexAttribPointer(index, size, type, normalized, stride, pointer);
          if (GLEmulation.currentVao) { // TODO: avoid object creation here? likely not hot though
            GLEmulation.currentVao.vertexAttribPointers[index] = [index, size, type, normalized, stride, pointer];
          }
        };
      },getAttributeFromCapability:function (cap) {
        var attrib = null;
        switch (cap) {
          case 0x0de1: // GL_TEXTURE_2D - XXX not according to spec, and not in desktop GL, but works in some GLES1.x apparently, so support it
            // Fall through:
          case 0x8078: // GL_TEXTURE_COORD_ARRAY
            attrib = GLImmediate.TEXTURE0 + GLImmediate.clientActiveTexture; break;
          case 0x8074: // GL_VERTEX_ARRAY
            attrib = GLImmediate.VERTEX; break;
          case 0x8075: // GL_NORMAL_ARRAY
            attrib = GLImmediate.NORMAL; break;
          case 0x8076: // GL_COLOR_ARRAY
            attrib = GLImmediate.COLOR; break;
        }
        return attrib;
      }};function _glVertexPointer(size, type, stride, pointer) {
      GLImmediate.setClientAttribute(GLImmediate.VERTEX, size, type, stride, pointer);
    }

  function _alGenBuffers(count, buffers) {
      if (!AL.currentContext) {
        return;
      }
      for (var i = 0; i < count; ++i) {
        AL.currentContext.buf.push(null);
        HEAP32[(((buffers)+(i*4))>>2)]=AL.currentContext.buf.length;
      }
    }

  function _alSourcePause(source) {
      if (!AL.currentContext) {
        return;
      }
      var src = AL.currentContext.src[source - 1];
      if (!src) {
        AL.currentContext.err = 0xA001 /* AL_INVALID_NAME */;
        return;
      }
      AL.setSourceState(src, 0x1013 /* AL_PAUSED */);
    }

  function _feof(stream) {
      // int feof(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/feof.html
      stream = FS.getStreamFromPtr(stream);
      return Number(stream && stream.eof);
    }


  function _alSource3f(source, param, v1, v2, v3) {
      if (!AL.currentContext) {
        return;
      }
      var src = AL.currentContext.src[source - 1];
      if (!src) {
        AL.currentContext.err = 0xA001 /* AL_INVALID_NAME */;
        return;
      }
      switch (param) {
      case 0x1004 /* AL_POSITION */:
        src.position = [v1, v2, v3];
        break;
      case 0x1005 /* AL_DIRECTION */:
        src.direction = [v1, v2, v3];
        break;
      case 0x1006 /* AL_VELOCITY */:
        src.velocity = [v1, v2, v3];
        break;
      default:
        AL.currentContext.err = 0xA002 /* AL_INVALID_ENUM */;
        break;
      }
    }

  var _floor=Math_floor;

  function _glBindFramebuffer(target, framebuffer) {
      GLctx.bindFramebuffer(target, framebuffer ? GL.framebuffers[framebuffer] : null);
    }

  
  function _lseek(fildes, offset, whence) {
      // off_t lseek(int fildes, off_t offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/lseek.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        return FS.llseek(stream, offset, whence);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fseek(stream, offset, whence) {
      // int fseek(FILE *stream, long offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fseek.html
      var fd = _fileno(stream);
      var ret = _lseek(fd, offset, whence);
      if (ret == -1) {
        return -1;
      }
      stream = FS.getStreamFromPtr(stream);
      stream.eof = false;
      return 0;
    }

  function _glDrawArrays(mode, first, count) {
  
      GLctx.drawArrays(mode, first, count);
  
    }

  function _ftell(stream) {
      // long ftell(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ftell.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      if (FS.isChrdev(stream.node.mode)) {
        ___setErrNo(ERRNO_CODES.ESPIPE);
        return -1;
      } else {
        return stream.position;
      }
    }

  
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }

  
  function _snprintf(s, n, format, varargs) {
      // int snprintf(char *restrict s, size_t n, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var limit = (n === undefined) ? result.length
                                    : Math.min(result.length, Math.max(n - 1, 0));
      if (s < 0) {
        s = -s;
        var buf = _malloc(limit+1);
        HEAP32[((s)>>2)]=buf;
        s = buf;
      }
      for (var i = 0; i < limit; i++) {
        HEAP8[(((s)+(i))|0)]=result[i];
      }
      if (limit < n || (n === undefined)) HEAP8[(((s)+(i))|0)]=0;
      return result.length;
    }function _sprintf(s, format, varargs) {
      // int sprintf(char *restrict s, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      return _snprintf(s, undefined, format, varargs);
    }

  var _emscripten_get_longjmp_result=true;

  function _glRenderbufferStorage(x0, x1, x2, x3) { GLctx.renderbufferStorage(x0, x1, x2, x3) }

  function _glLoadIdentity() {
      GLImmediate.matricesModified = true;
      GLImmediate.matrixVersion[GLImmediate.currentMatrix] = (GLImmediate.matrixVersion[GLImmediate.currentMatrix] + 1)|0;
      GLImmediate.matrixLib.mat4.identity(GLImmediate.matrix[GLImmediate.currentMatrix]);
    }

  function _alSourcePlay(source) {
      if (!AL.currentContext) {
        return;
      }
      var src = AL.currentContext.src[source - 1];
      if (!src) {
        AL.currentContext.err = 0xA001 /* AL_INVALID_NAME */;
        return;
      }
      AL.setSourceState(src, 0x1012 /* AL_PLAYING */);
    }

  function _glColor4f(r, g, b, a) {
      r = Math.max(Math.min(r, 1), 0);
      g = Math.max(Math.min(g, 1), 0);
      b = Math.max(Math.min(b, 1), 0);
      a = Math.max(Math.min(a, 1), 0);
  
      // TODO: make ub the default, not f, save a few mathops
      if (GLImmediate.mode >= 0) {
        var start = GLImmediate.vertexCounter << 2;
        GLImmediate.vertexDataU8[start + 0] = r * 255;
        GLImmediate.vertexDataU8[start + 1] = g * 255;
        GLImmediate.vertexDataU8[start + 2] = b * 255;
        GLImmediate.vertexDataU8[start + 3] = a * 255;
        GLImmediate.vertexCounter++;
        GLImmediate.addRendererComponent(GLImmediate.COLOR, 4, GLctx.UNSIGNED_BYTE);
      } else {
        GLImmediate.clientColor[0] = r;
        GLImmediate.clientColor[1] = g;
        GLImmediate.clientColor[2] = b;
        GLImmediate.clientColor[3] = a;
      }
    }

  function _ferror(stream) {
      // int ferror(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ferror.html
      stream = FS.getStreamFromPtr(stream);
      return Number(stream && stream.error);
    }

  function _glBlendFunc(x0, x1) { GLctx.blendFunc(x0, x1) }


   
  Module["_tolower"] = _tolower;

  function _glCheckFramebufferStatus(x0) { return GLctx.checkFramebufferStatus(x0) }


  function _glViewport(x0, x1, x2, x3) { GLctx.viewport(x0, x1, x2, x3) }

  function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop, arg) {
      Module['noExitRuntime'] = true;
  
      Browser.mainLoop.runner = function Browser_mainLoop_runner() {
        if (ABORT) return;
        if (Browser.mainLoop.queue.length > 0) {
          var start = Date.now();
          var blocker = Browser.mainLoop.queue.shift();
          blocker.func(blocker.arg);
          if (Browser.mainLoop.remainingBlockers) {
            var remaining = Browser.mainLoop.remainingBlockers;
            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);
            if (blocker.counted) {
              Browser.mainLoop.remainingBlockers = next;
            } else {
              // not counted, but move the progress along a tiny bit
              next = next + 0.5; // do not steal all the next one's progress
              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;
            }
          }
          console.log('main loop blocker "' + blocker.name + '" took ' + (Date.now() - start) + ' ms'); //, left: ' + Browser.mainLoop.remainingBlockers);
          Browser.mainLoop.updateStatus();
          setTimeout(Browser.mainLoop.runner, 0);
          return;
        }
        if (Browser.mainLoop.shouldPause) {
          // catch pauses from non-main loop sources
          Browser.mainLoop.paused = true;
          Browser.mainLoop.shouldPause = false;
          return;
        }
  
        // Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize
        // VBO double-buffering and reduce GPU stalls.
        GL.newRenderingFrameStarted();
  
        if (Browser.mainLoop.method === 'timeout' && Module.ctx) {
          Module.printErr('Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!');
          Browser.mainLoop.method = ''; // just warn once per call to set main loop
        }
  
        if (Module['preMainLoop']) {
          Module['preMainLoop']();
        }
  
        try {
          if (typeof arg !== 'undefined') {
            Runtime.dynCall('vi', func, [arg]);
          } else {
            Runtime.dynCall('v', func);
          }
        } catch (e) {
          if (e instanceof ExitStatus) {
            return;
          } else {
            if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
            throw e;
          }
        }
  
        if (Module['postMainLoop']) {
          Module['postMainLoop']();
        }
  
        if (Browser.mainLoop.shouldPause) {
          // catch pauses from the main loop itself
          Browser.mainLoop.paused = true;
          Browser.mainLoop.shouldPause = false;
          return;
        }
        Browser.mainLoop.scheduler();
      }
      if (fps && fps > 0) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
          setTimeout(Browser.mainLoop.runner, 1000/fps); // doing this each time means that on exception, we stop
        };
        Browser.mainLoop.method = 'timeout';
      } else {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
          Browser.requestAnimationFrame(Browser.mainLoop.runner);
        };
        Browser.mainLoop.method = 'rAF';
      }
      Browser.mainLoop.scheduler();
  
      if (simulateInfiniteLoop) {
        throw 'SimulateInfiniteLoop';
      }
    }

  var _FtoILow=true;

  function _glEnableClientState(cap) {
      var attrib = GLEmulation.getAttributeFromCapability(cap);
      if (attrib === null) {
        return;
      }
      if (!GLImmediate.enabledClientAttributes[attrib]) {
        GLImmediate.enabledClientAttributes[attrib] = true;
        GLImmediate.totalEnabledClientAttributes++;
        GLImmediate.currentRenderer = null; // Will need to change current renderer, since the set of active vertex pointers changed.
        if (GLEmulation.currentVao) GLEmulation.currentVao.enabledClientStates[cap] = 1;
        GLImmediate.modifiedClientAttributes = true;
      }
    }

  var _sinf=Math_sin;


  
  
  
  
  var _environ=allocate(1, "i32*", ALLOC_STATIC);var ___environ=_environ;function ___buildEnvironment(env) {
      // WARNING: Arbitrary limit!
      var MAX_ENV_VALUES = 64;
      var TOTAL_ENV_SIZE = 1024;
  
      // Statically allocate memory for the environment.
      var poolPtr;
      var envPtr;
      if (!___buildEnvironment.called) {
        ___buildEnvironment.called = true;
        // Set default values. Use string keys for Closure Compiler compatibility.
        ENV['USER'] = 'root';
        ENV['PATH'] = '/';
        ENV['PWD'] = '/';
        ENV['HOME'] = '/home/emscripten';
        ENV['LANG'] = 'en_US.UTF-8';
        ENV['_'] = './this.program';
        // Allocate memory.
        poolPtr = allocate(TOTAL_ENV_SIZE, 'i8', ALLOC_STATIC);
        envPtr = allocate(MAX_ENV_VALUES * 4,
                          'i8*', ALLOC_STATIC);
        HEAP32[((envPtr)>>2)]=poolPtr;
        HEAP32[((_environ)>>2)]=envPtr;
      } else {
        envPtr = HEAP32[((_environ)>>2)];
        poolPtr = HEAP32[((envPtr)>>2)];
      }
  
      // Collect key=value lines.
      var strings = [];
      var totalSize = 0;
      for (var key in env) {
        if (typeof env[key] === 'string') {
          var line = key + '=' + env[key];
          strings.push(line);
          totalSize += line.length;
        }
      }
      if (totalSize > TOTAL_ENV_SIZE) {
        throw new Error('Environment size exceeded TOTAL_ENV_SIZE!');
      }
  
      // Make new.
      var ptrSize = 4;
      for (var i = 0; i < strings.length; i++) {
        var line = strings[i];
        writeAsciiToMemory(line, poolPtr);
        HEAP32[(((envPtr)+(i * ptrSize))>>2)]=poolPtr;
        poolPtr += line.length + 1;
      }
      HEAP32[(((envPtr)+(strings.length * ptrSize))>>2)]=0;
    }var ENV={};function _getenv(name) {
      // char *getenv(const char *name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/getenv.html
      if (name === 0) return 0;
      name = Pointer_stringify(name);
      if (!ENV.hasOwnProperty(name)) return 0;
  
      if (_getenv.ret) _free(_getenv.ret);
      _getenv.ret = allocate(intArrayFromString(ENV[name]), 'i8', ALLOC_NORMAL);
      return _getenv.ret;
    }

  function _alBufferData(buffer, format, data, size, freq) {
      if (!AL.currentContext) {
        return;
      }
      if (buffer > AL.currentContext.buf.length) {
        return;
      }
      var channels, bytes;
      switch (format) {
      case 0x1100 /* AL_FORMAT_MONO8 */:
        bytes = 1;
        channels = 1;
        break;
      case 0x1101 /* AL_FORMAT_MONO16 */:
        bytes = 2;
        channels = 1;
        break;
      case 0x1102 /* AL_FORMAT_STEREO8 */:
        bytes = 1;
        channels = 2;
        break;
      case 0x1103 /* AL_FORMAT_STEREO16 */:
        bytes = 2;
        channels = 2;
        break;
      default:
        return;
      }
      try {
        AL.currentContext.buf[buffer - 1] = AL.currentContext.ctx.createBuffer(channels, size / (bytes * channels), freq);
        AL.currentContext.buf[buffer - 1].bytesPerSample =  bytes;
      } catch (e) {
        AL.currentContext.err = 0xA003 /* AL_INVALID_VALUE */;
        return;
      }
      var buf = new Array(channels);
      for (var i = 0; i < channels; ++i) {
        buf[i] = AL.currentContext.buf[buffer - 1].getChannelData(i);
      }
      for (var i = 0; i < size / (bytes * channels); ++i) {
        for (var j = 0; j < channels; ++j) {
          switch (bytes) {
          case 1:
            var val = HEAP8[(((data)+(i*channels+j))|0)] & 0xff;  // unsigned
            buf[j][i] = -1.0 + val * (2/256);
            break;
          case 2:
            var val = HEAP16[(((data)+(2*(i*channels+j)))>>1)];
            buf[j][i] = val/32768;
            break;
          }
        }
      }
    }

  var _emscripten_setjmp=true;

  function _FT_Gzip_Uncompress() {
  Module['printErr']('missing function: FT_Gzip_Uncompress'); abort(-1);
  }

  
  function _fputs(s, stream) {
      // int fputs(const char *restrict s, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputs.html
      var fd = _fileno(stream);
      return _write(fd, s, _strlen(s));
    }function _puts(s) {
      // int puts(const char *s);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/puts.html
      // NOTE: puts() always writes an extra newline.
      var stdout = HEAP32[((_stdout)>>2)];
      var ret = _fputs(s, stdout);
      if (ret < 0) {
        return ret;
      } else {
        var newlineRet = _fputc(10, stdout);
        return (newlineRet < 0) ? -1 : ret + 1;
      }
    }

  function _glTexParameterf(x0, x1, x2) { GLctx.texParameterf(x0, x1, x2) }

  var _llvm_pow_f32=Math_pow;

  function _glPushMatrix() {
      GLImmediate.matricesModified = true;
      GLImmediate.matrixVersion[GLImmediate.currentMatrix] = (GLImmediate.matrixVersion[GLImmediate.currentMatrix] + 1)|0;
      GLImmediate.matrixStack[GLImmediate.currentMatrix].push(
          Array.prototype.slice.call(GLImmediate.matrix[GLImmediate.currentMatrix]));
    }

  function _glMatrixMode(mode) {
      if (mode == 0x1700 /* GL_MODELVIEW */) {
        GLImmediate.currentMatrix = 0/*m*/;
      } else if (mode == 0x1701 /* GL_PROJECTION */) {
        GLImmediate.currentMatrix = 1/*p*/;
      } else if (mode == 0x1702) { // GL_TEXTURE
        GLImmediate.useTextureMatrix = true;
        GLImmediate.currentMatrix = 2/*t*/ + GLImmediate.clientActiveTexture;
      } else {
        throw "Wrong mode " + mode + " passed to glMatrixMode";
      }
    }

  function _glOrtho(left, right, bottom, top_, nearVal, farVal) {
      GLImmediate.matricesModified = true;
      GLImmediate.matrixVersion[GLImmediate.currentMatrix] = (GLImmediate.matrixVersion[GLImmediate.currentMatrix] + 1)|0;
      GLImmediate.matrixLib.mat4.multiply(GLImmediate.matrix[GLImmediate.currentMatrix],
          GLImmediate.matrixLib.mat4.ortho(left, right, bottom, top_, nearVal, farVal));
    }

  function _glPixelStorei(pname, param) {
      if (pname == 0x0D05 /* GL_PACK_ALIGNMENT */) {
        GL.packAlignment = param;
      } else if (pname == 0x0cf5 /* GL_UNPACK_ALIGNMENT */) {
        GL.unpackAlignment = param;
      }
      GLctx.pixelStorei(pname, param);
    }

  function _glfwPollEvents() {}

  function _llvm_bswap_i32(x) {
      return ((x&0xff)<<24) | (((x>>8)&0xff)<<16) | (((x>>16)&0xff)<<8) | (x>>>24);
    }


var GLctx; GL.init()
FS.staticInit();__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
__ATINIT__.unshift({ func: function() { TTY.init() } });__ATEXIT__.push({ func: function() { TTY.shutdown() } });TTY.utf8 = new Runtime.UTF8Processor();
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); NODEFS.staticInit(); }
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas) { Browser.requestFullScreen(lockPointer, resizeCanvas) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
__ATINIT__.push({ func: function() { SOCKFS.root = FS.mount(SOCKFS, {}, null); } });
_fputc.ret = allocate([0], "i8", ALLOC_STATIC);
GLEmulation.init();
GLImmediate.setupFuncs(); Browser.moduleContextCreatedCallbacks.push(function() { GLImmediate.init() });
___buildEnvironment(ENV);
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + 5242880;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var ctlz_i8 = allocate([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_DYNAMIC);
 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);

var Math_min = Math.min;
function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    return Module["dynCall_iiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vid(index,a1,a2) {
  try {
    Module["dynCall_vid"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_di(index,a1) {
  try {
    return Module["dynCall_di"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_i(index) {
  try {
    return Module["dynCall_i"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function asmPrintInt(x, y) {
  Module.print('int ' + x + ',' + y);// + ' ' + new Error().stack);
}
function asmPrintFloat(x, y) {
  Module.print('float ' + x + ',' + y);// + ' ' + new Error().stack);
}
// EMSCRIPTEN_START_ASM
var asm=(function(global,env,buffer){"use asm";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.STACKTOP|0;var j=env.STACK_MAX|0;var k=env.tempDoublePtr|0;var l=env.ABORT|0;var m=env.cttz_i8|0;var n=env.ctlz_i8|0;var o=env._stderr|0;var p=0;var q=0;var r=0;var s=0;var t=+env.NaN,u=+env.Infinity;var v=0,w=0,x=0,y=0,z=0.0,A=0,B=0,C=0,D=0.0;var E=0;var F=0;var G=0;var H=0;var I=0;var J=0;var K=0;var L=0;var M=0;var N=0;var O=global.Math.floor;var P=global.Math.abs;var Q=global.Math.sqrt;var R=global.Math.pow;var S=global.Math.cos;var T=global.Math.sin;var U=global.Math.tan;var V=global.Math.acos;var W=global.Math.asin;var X=global.Math.atan;var Y=global.Math.atan2;var Z=global.Math.exp;var _=global.Math.log;var $=global.Math.ceil;var aa=global.Math.imul;var ba=env.abort;var ca=env.assert;var da=env.asmPrintInt;var ea=env.asmPrintFloat;var fa=env.min;var ga=env.invoke_iiiiiiii;var ha=env.invoke_iiii;var ia=env.invoke_viiiii;var ja=env.invoke_vid;var ka=env.invoke_di;var la=env.invoke_i;var ma=env.invoke_vi;var na=env.invoke_viiiiiii;var oa=env.invoke_vii;var pa=env.invoke_iiiiiii;var qa=env.invoke_ii;var ra=env.invoke_viii;var sa=env.invoke_v;var ta=env.invoke_iiiii;var ua=env.invoke_viiiiii;var va=env.invoke_iii;var wa=env.invoke_iiiiii;var xa=env.invoke_viiii;var ya=env._glUseProgram;var za=env._fread;var Aa=env._glLineWidth;var Ba=env.__reallyNegative;var Ca=env._alBufferData;var Da=env._glDeleteProgram;var Ea=env._longjmp;var Fa=env._glBindBuffer;var Ga=env._alSource3f;var Ha=env._fsync;var Ia=env._llvm_pow_f32;var Ja=env._glTranslatef;var Ka=env._sbrk;var La=env._glBlendFunc;var Ma=env._glDisableVertexAttribArray;var Na=env._sinf;var Oa=env._sysconf;var Pa=env._close;var Qa=env._ferror;var Ra=env._glLoadMatrixf;var Sa=env._glfwGetMousePos;var Ta=env._fileno;var Ua=env._recv;var Va=env._puts;var Wa=env._glLoadIdentity;var Xa=env._glMatrixMode;var Ya=env._glfwInit;var Za=env._write;var _a=env._ftell;var $a=env._glShaderSource;var ab=env._glFramebufferRenderbuffer;var bb=env._glOrtho;var cb=env._alGetListenerf;var db=env._glVertexPointer;var eb=env._tmpnam;var fb=env._glGetBooleanv;var gb=env._alSourcePlay;var hb=env._tmpfile;var ib=env._alSourcePause;var jb=env._glEnableVertexAttribArray;var kb=env._glVertexAttribPointer;var lb=env._glHint;var mb=env._send;var nb=env._alcCreateContext;var ob=env._setlocale;var pb=env._glfwOpenWindow;var qb=env._glBindRenderbuffer;var rb=env._alGetSourcei;var sb=env._alcMakeContextCurrent;var tb=env._alGetSourcef;var ub=env._glViewport;var vb=env._alSourceQueueBuffers;var wb=env.___setErrNo;var xb=env._alSourcef;var yb=env._glDeleteTextures;var zb=env._alSourcei;var Ab=env._alGenBuffers;var Bb=env._putchar;var Cb=env._floor;var Db=env._glEnable;var Eb=env._printf;var Fb=env._glGenTextures;var Gb=env._sprintf;var Hb=env._glGetIntegerv;var Ib=env._alDeleteSources;var Jb=env._glPushMatrix;var Kb=env._alGetError;var Lb=env._emscripten_get_now;var Mb=env._glAttachShader;var Nb=env._read;var Ob=env._clock_gettime;var Pb=env._fwrite;var Qb=env._time;var Rb=env._glBindFramebuffer;var Sb=env._glDetachShader;var Tb=env._glGenFramebuffers;var Ub=env._exit;var Vb=env._glGetString;var Wb=env._llvm_pow_f64;var Xb=env._glDeleteFramebuffers;var Yb=env._glColor4f;var Zb=env._glfwPollEvents;var _b=env._lseek;var $b=env._glCheckFramebufferStatus;var ac=env.___buildEnvironment;var bc=env._glEnableClientState;var cc=env._pwrite;var dc=env._alcGetIntegerv;var ec=env._open;var fc=env._glClearColor;var gc=env._glIsEnabled;var hc=env._glBindTexture;var ic=env._snprintf;var jc=env._llvm_bswap_i32;var kc=env._glGetFloatv;var lc=env._alcDestroyContext;var mc=env._glDrawArrays;var nc=env._glCreateShader;var oc=env._fseek;var pc=env._alListenerf;var qc=env._glfwGetMouseButton;var rc=env._getenv;var sc=env._fclose;var tc=env._glActiveTexture;var uc=env._glTexCoordPointer;var vc=env._alSourceStop;var wc=env._glCompileShader;var xc=env._alcCloseDevice;var yc=env.__getFloat;var zc=env._alcOpenDevice;var Ac=env._abort;var Bc=env._glTexImage2D;var Cc=env._fopen;var Dc=env._glDisableClientState;var Ec=env._cosf;var Fc=env._glDeleteRenderbuffers;var Gc=env._glLinkProgram;var Hc=env._glGenRenderbuffers;var Ic=env._fprintf;var Jc=env._log10;var Kc=env._glClear;var Lc=env._sscanf;var Mc=env._glPopMatrix;var Nc=env._glRenderbufferStorage;var Oc=env.__exit;var Pc=env._glfwTerminate;var Qc=env._glBindAttribLocation;var Rc=env._glPixelStorei;var Sc=env._alDeleteBuffers;var Tc=env._pread;var Uc=env._mkport;var Vc=env._fflush;var Wc=env._feof;var Xc=env._emscripten_memcpy_big;var Yc=env._emscripten_set_main_loop;var Zc=env.___errno_location;var _c=env._alGenSources;var $c=env._fputc;var ad=env.__scanString;var bd=env._glDisable;var cd=env._emscripten_cancel_main_loop;var dd=env._emscripten_longjmp;var ed=env.__formatString;var fd=env._fputs;var gd=env._FT_Gzip_Uncompress;var hd=env._glTexParameterf;var id=env._glTexSubImage2D;var jd=env._alSourceUnqueueBuffers;var kd=0.0;
// EMSCRIPTEN_START_FUNCS
function wn(f,g){f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0,Uc=0,Vc=0,Wc=0,Xc=0,Yc=0,Zc=0,_c=0,$c=0,ad=0,bd=0,cd=0,dd=0,ed=0,fd=0,gd=0,hd=0,id=0,jd=0,kd=0,ld=0,md=0,nd=0,od=0,pd=0,qd=0,rd=0,sd=0,td=0,ud=0,vd=0,wd=0,xd=0,yd=0,zd=0,Ad=0,Bd=0,Cd=0,Dd=0,Ed=0,Fd=0,Gd=0,Hd=0,Id=0,Jd=0,Kd=0,Ld=0,Md=0,Nd=0,Od=0,Pd=0,Qd=0,Rd=0,Sd=0,Td=0,Ud=0,Vd=0,Wd=0,Xd=0,Yd=0,Zd=0,_d=0,$d=0,ae=0,be=0,ce=0,de=0,ee=0,fe=0,ge=0,he=0,ie=0,je=0,ke=0,le=0,me=0,ne=0,oe=0,pe=0,qe=0,re=0,se=0,te=0,ue=0,ve=0,we=0,xe=0,ye=0,ze=0,Ae=0,Be=0,Ce=0,De=0,Ee=0,Fe=0,Ge=0,He=0,Ie=0,Je=0,Ke=0,Le=0,Me=0,Ne=0,Oe=0,Pe=0,Qe=0,Re=0,Se=0,Te=0,Ue=0,Ve=0,We=0,Xe=0,Ye=0,Ze=0,_e=0,$e=0,af=0,bf=0,cf=0,df=0,ef=0,ff=0,gf=0,hf=0,jf=0,kf=0,lf=0,mf=0,nf=0,of=0,pf=0,qf=0,rf=0,sf=0,tf=0,uf=0,vf=0,wf=0,xf=0,yf=0,zf=0,Af=0,Bf=0,Cf=0,Df=0,Ef=0,Ff=0,Gf=0,Hf=0,If=0,Jf=0,Kf=0,Lf=0,Mf=0,Nf=0,Of=0,Pf=0,Qf=0,Rf=0,Sf=0,Tf=0,Uf=0,Vf=0,Wf=0,Xf=0,Yf=0,Zf=0,_f=0,$f=0,ag=0,bg=0,cg=0,dg=0,eg=0,fg=0,gg=0,hg=0,ig=0,jg=0,kg=0,lg=0,mg=0,ng=0,og=0,pg=0,qg=0,rg=0,sg=0,tg=0,ug=0,vg=0,wg=0,xg=0,yg=0,zg=0,Ag=0,Bg=0,Cg=0,Dg=0,Eg=0;h=i;i=i+16|0;j=h;if((f|0)==0){k=-2;i=h;return k|0}l=c[f+28>>2]|0;if((l|0)==0){k=-2;i=h;return k|0}m=f+12|0;n=c[m>>2]|0;if((n|0)==0){k=-2;i=h;return k|0}o=c[f>>2]|0;if((o|0)==0?(c[f+4>>2]|0)!=0:0){k=-2;i=h;return k|0}p=c[l>>2]|0;if((p|0)==11){c[l>>2]=12;q=12;r=c[f>>2]|0;s=c[m>>2]|0}else{q=p;r=o;s=n}n=f+16|0;o=c[n>>2]|0;p=f+4|0;t=c[p>>2]|0;u=l+56|0;v=l+60|0;w=l+8|0;x=l+24|0;y=j+1|0;z=l+16|0;A=l+32|0;B=f+24|0;C=l+36|0;D=l+20|0;E=f+48|0;F=l+64|0;G=l+12|0;H=(g+ -5|0)>>>0<2;I=l+4|0;J=l+76|0;K=l+84|0;L=l+80|0;M=l+88|0;N=(g|0)==6;O=l+7108|0;P=l+72|0;Q=l+7112|0;R=l+68|0;S=l+44|0;T=l+7104|0;U=l+48|0;V=l+52|0;W=l+40|0;X=f+20|0;Y=l+28|0;Z=l+96|0;_=l+100|0;$=l+92|0;aa=l+104|0;ba=l+1328|0;ca=l+108|0;da=l+112|0;ea=l+752|0;fa=l+624|0;ga=j+2|0;ha=j+3|0;ia=q;q=c[v>>2]|0;ja=t;ka=c[u>>2]|0;la=o;ma=r;r=o;o=s;s=0;a:while(1){b:do{switch(ia|0){case 10:{na=q;oa=ja;pa=ka;qa=ma;ra=121;break};case 15:{sa=q;ta=ja;ua=ka;va=ma;ra=144;break};case 12:{wa=q;xa=ja;ya=ka;za=ma;ra=125;break};case 14:{Aa=q;Ba=ja;Ca=ka;Da=ma;ra=143;break};case 11:{Ea=q;Fa=ja;Ga=ka;Ha=ma;ra=124;break};case 17:{Ia=c[aa>>2]|0;if(Ia>>>0<(c[$>>2]|0)>>>0){Ja=Ia;Ka=q;La=ja;Ma=ka;Na=ma;ra=154}else{Oa=Ia;Pa=q;Qa=ja;Ra=ka;Sa=ma;ra=158}break};case 13:{Ia=q&7;Ta=ka>>>Ia;Ua=q-Ia|0;if(Ua>>>0<32){Ia=Ua;Va=ja;Wa=Ta;Xa=ma;while(1){if((Va|0)==0){Ya=Ia;Za=0;_a=Wa;$a=la;ab=Xa;bb=r;cb=s;break a}db=Va+ -1|0;eb=Xa+1|0;fb=(d[Xa]<<Ia)+Wa|0;gb=Ia+8|0;if(gb>>>0<32){Ia=gb;Va=db;Wa=fb;Xa=eb}else{hb=gb;ib=db;jb=fb;kb=eb;break}}}else{hb=Ua;ib=ja;jb=Ta;kb=ma}Xa=jb&65535;if((Xa|0)==(jb>>>16^65535|0)){c[F>>2]=Xa;c[l>>2]=14;if(N){lb=0;mb=ib;nb=0;ob=la;pb=kb;qb=s;ra=285;break a}else{Aa=0;Ba=ib;Ca=0;Da=kb;ra=143;break b}}else{c[B>>2]=27240;c[l>>2]=29;rb=hb;sb=ib;tb=jb;ub=la;vb=kb;wb=r;xb=o;yb=s;break b}break};case 19:{zb=q;Ab=ja;Bb=ka;Cb=ma;Db=s;ra=201;break};case 20:{Eb=q;Fb=ja;Gb=ka;Hb=ma;Ib=s;ra=202;break};case 22:{Jb=q;Kb=ja;Lb=ka;Mb=ma;Nb=s;ra=228;break};case 24:{Ob=q;Pb=ja;Qb=ka;Rb=ma;Sb=s;ra=246;break};case 25:{if((la|0)==0){lb=q;mb=ja;nb=ka;ob=0;pb=ma;qb=s;ra=285;break a}a[o]=c[F>>2];c[l>>2]=20;rb=q;sb=ja;tb=ka;ub=la+ -1|0;vb=ma;wb=r;xb=o+1|0;yb=s;break};case 26:{if((c[w>>2]|0)!=0){if(q>>>0<32){Xa=q;Wa=ja;Va=ka;Ia=ma;while(1){if((Wa|0)==0){Ya=Xa;Za=0;_a=Va;$a=la;ab=Ia;bb=r;cb=s;break a}eb=Wa+ -1|0;fb=Ia+1|0;db=(d[Ia]<<Xa)+Va|0;gb=Xa+8|0;if(gb>>>0<32){Xa=gb;Wa=eb;Va=db;Ia=fb}else{Tb=gb;Ub=eb;Vb=db;Wb=fb;break}}}else{Tb=q;Ub=ja;Vb=ka;Wb=ma}Ia=r-la|0;c[X>>2]=(c[X>>2]|0)+Ia;c[Y>>2]=(c[Y>>2]|0)+Ia;if((r|0)!=(la|0)){Va=c[x>>2]|0;Wa=o+(0-Ia)|0;if((c[z>>2]|0)==0){Xb=sn(Va,Wa,Ia)|0}else{Xb=tn(Va,Wa,Ia)|0}c[x>>2]=Xb;c[E>>2]=Xb}if((c[z>>2]|0)==0){Yb=jc(Vb|0)|0}else{Yb=Vb}if((Yb|0)==(c[x>>2]|0)){Zb=0;_b=Ub;$b=0;ac=Wb;bc=la}else{c[B>>2]=27560;c[l>>2]=29;rb=Tb;sb=Ub;tb=Vb;ub=la;vb=Wb;wb=la;xb=o;yb=s;break b}}else{Zb=q;_b=ja;$b=ka;ac=ma;bc=r}c[l>>2]=27;cc=Zb;dc=_b;ec=$b;fc=ac;gc=bc;ra=277;break};case 27:{cc=q;dc=ja;ec=ka;fc=ma;gc=r;ra=277;break};case 28:{lb=q;mb=ja;nb=ka;ob=la;pb=ma;qb=1;ra=285;break a;break};case 29:{Ya=q;Za=ja;_a=ka;$a=la;ab=ma;bb=r;cb=-3;break a;break};case 30:{ra=299;break a;break};case 8:{hc=q;ic=ja;kc=ka;lc=ma;ra=109;break};case 21:{mc=c[P>>2]|0;nc=q;oc=ja;pc=ka;qc=ma;rc=s;ra=221;break};case 2:{if(q>>>0<32){sc=q;tc=ja;uc=ka;vc=ma;ra=47}else{wc=ja;xc=ka;yc=ma;ra=49}break};case 0:{Ia=c[w>>2]|0;if((Ia|0)==0){c[l>>2]=12;rb=q;sb=ja;tb=ka;ub=la;vb=ma;wb=r;xb=o;yb=s;break b}if(q>>>0<16){Wa=q;Va=ja;Xa=ka;Ta=ma;while(1){if((Va|0)==0){Ya=Wa;Za=0;_a=Xa;$a=la;ab=Ta;bb=r;cb=s;break a}Ua=Va+ -1|0;fb=Ta+1|0;db=(d[Ta]<<Wa)+Xa|0;eb=Wa+8|0;if(eb>>>0<16){Wa=eb;Va=Ua;Xa=db;Ta=fb}else{zc=eb;Ac=Ua;Bc=db;Cc=fb;break}}}else{zc=q;Ac=ja;Bc=ka;Cc=ma}if((Ia&2|0)!=0&(Bc|0)==35615){c[x>>2]=tn(0,0,0)|0;a[j]=31;a[y]=-117;c[x>>2]=tn(c[x>>2]|0,j,2)|0;c[l>>2]=1;rb=0;sb=Ac;tb=0;ub=la;vb=Cc;wb=r;xb=o;yb=s;break b}c[z>>2]=0;Ta=c[A>>2]|0;if((Ta|0)==0){Dc=Ia}else{c[Ta+48>>2]=-1;Dc=c[w>>2]|0}if((Dc&1|0)!=0?((((Bc<<8&65280)+(Bc>>>8)|0)>>>0)%31|0|0)==0:0){if((Bc&15|0)!=8){c[B>>2]=27104;c[l>>2]=29;rb=zc;sb=Ac;tb=Bc;ub=la;vb=Cc;wb=r;xb=o;yb=s;break b}Ta=Bc>>>4;Xa=zc+ -4|0;Va=(Ta&15)+8|0;Wa=c[C>>2]|0;if((Wa|0)!=0){if(Va>>>0>Wa>>>0){c[B>>2]=27136;c[l>>2]=29;rb=Xa;sb=Ac;tb=Ta;ub=la;vb=Cc;wb=r;xb=o;yb=s;break b}}else{c[C>>2]=Va}c[D>>2]=1<<Va;Va=sn(0,0,0)|0;c[x>>2]=Va;c[E>>2]=Va;c[l>>2]=Bc>>>12&2^11;rb=0;sb=Ac;tb=0;ub=la;vb=Cc;wb=r;xb=o;yb=s;break b}c[B>>2]=27080;c[l>>2]=29;rb=zc;sb=Ac;tb=Bc;ub=la;vb=Cc;wb=r;xb=o;yb=s;break};case 16:{if(q>>>0<14){Va=q;Ta=ja;Xa=ka;Wa=ma;while(1){if((Ta|0)==0){Ya=Va;Za=0;_a=Xa;$a=la;ab=Wa;bb=r;cb=s;break a}fb=Ta+ -1|0;db=Wa+1|0;Ua=(d[Wa]<<Va)+Xa|0;eb=Va+8|0;if(eb>>>0<14){Va=eb;Ta=fb;Xa=Ua;Wa=db}else{Ec=eb;Fc=fb;Gc=Ua;Hc=db;break}}}else{Ec=q;Fc=ja;Gc=ka;Hc=ma}Wa=(Gc&31)+257|0;c[Z>>2]=Wa;Xa=(Gc>>>5&31)+1|0;c[_>>2]=Xa;c[$>>2]=(Gc>>>10&15)+4;Ta=Gc>>>14;Va=Ec+ -14|0;if(Wa>>>0>286|Xa>>>0>30){c[B>>2]=27272;c[l>>2]=29;rb=Va;sb=Fc;tb=Ta;ub=la;vb=Hc;wb=r;xb=o;yb=s;break b}else{c[aa>>2]=0;c[l>>2]=17;Ja=0;Ka=Va;La=Fc;Ma=Ta;Na=Hc;ra=154;break b}break};case 9:{if(q>>>0<32){Ta=q;Va=ja;Xa=ka;Wa=ma;while(1){if((Va|0)==0){Ya=Ta;Za=0;_a=Xa;$a=la;ab=Wa;bb=r;cb=s;break a}Ia=Va+ -1|0;db=Wa+1|0;Ua=(d[Wa]<<Ta)+Xa|0;fb=Ta+8|0;if(fb>>>0<32){Ta=fb;Va=Ia;Xa=Ua;Wa=db}else{Ic=Ia;Jc=Ua;Kc=db;break}}}else{Ic=ja;Jc=ka;Kc=ma}Wa=jc(Jc|0)|0;c[x>>2]=Wa;c[E>>2]=Wa;c[l>>2]=10;na=0;oa=Ic;pa=0;qa=Kc;ra=121;break};case 18:{Lc=c[aa>>2]|0;Mc=q;Nc=ja;Oc=ka;Pc=ma;Qc=s;ra=164;break};case 5:{Rc=q;Sc=ja;Tc=ka;Uc=ma;ra=73;break};case 3:{if(q>>>0<16){Vc=q;Wc=ja;Xc=ka;Yc=ma;ra=55}else{Zc=ja;_c=ka;$c=ma;ra=57}break};case 7:{ad=q;bd=ja;cd=ka;dd=ma;ra=96;break};case 4:{ed=q;fd=ja;gd=ka;hd=ma;ra=62;break};case 6:{id=q;jd=ja;kd=ka;ld=ma;ra=83;break};case 23:{md=c[P>>2]|0;nd=q;od=ja;pd=ka;qd=ma;rd=s;ra=240;break};case 1:{if(q>>>0<16){Wa=q;Xa=ja;Va=ka;Ta=ma;while(1){if((Xa|0)==0){Ya=Wa;Za=0;_a=Va;$a=la;ab=Ta;bb=r;cb=s;break a}db=Xa+ -1|0;Ua=Ta+1|0;Ia=(d[Ta]<<Wa)+Va|0;fb=Wa+8|0;if(fb>>>0<16){Wa=fb;Xa=db;Va=Ia;Ta=Ua}else{sd=fb;td=db;ud=Ia;vd=Ua;break}}}else{sd=q;td=ja;ud=ka;vd=ma}c[z>>2]=ud;if((ud&255|0)!=8){c[B>>2]=27104;c[l>>2]=29;rb=sd;sb=td;tb=ud;ub=la;vb=vd;wb=r;xb=o;yb=s;break b}if((ud&57344|0)!=0){c[B>>2]=27160;c[l>>2]=29;rb=sd;sb=td;tb=ud;ub=la;vb=vd;wb=r;xb=o;yb=s;break b}Ta=c[A>>2]|0;if((Ta|0)==0){wd=ud}else{c[Ta>>2]=ud>>>8&1;wd=c[z>>2]|0}if((wd&512|0)!=0){a[j]=ud;a[y]=ud>>>8;c[x>>2]=tn(c[x>>2]|0,j,2)|0}c[l>>2]=2;sc=0;tc=td;uc=0;vc=vd;ra=47;break};default:{k=-2;ra=300;break a}}}while(0);if((ra|0)==47){while(1){ra=0;if((tc|0)==0){Ya=sc;Za=0;_a=uc;$a=la;ab=vc;bb=r;cb=s;break a}Ta=tc+ -1|0;Va=vc+1|0;Xa=(d[vc]<<sc)+uc|0;Wa=sc+8|0;if(Wa>>>0<32){sc=Wa;tc=Ta;uc=Xa;vc=Va;ra=47}else{wc=Ta;xc=Xa;yc=Va;ra=49;break}}}else if((ra|0)==121){ra=0;if((c[G>>2]|0)==0){ra=122;break}Va=sn(0,0,0)|0;c[x>>2]=Va;c[E>>2]=Va;c[l>>2]=11;Ea=na;Fa=oa;Ga=pa;Ha=qa;ra=124}else if((ra|0)==143){ra=0;c[l>>2]=15;sa=Aa;ta=Ba;ua=Ca;va=Da;ra=144}else if((ra|0)==154){while(1){ra=0;if(Ka>>>0<3){Va=Ka;Xa=La;Ta=Ma;Wa=Na;while(1){if((Xa|0)==0){Ya=Va;Za=0;_a=Ta;$a=la;ab=Wa;bb=r;cb=s;break a}Ua=Xa+ -1|0;Ia=Wa+1|0;db=(d[Wa]<<Va)+Ta|0;fb=Va+8|0;if(fb>>>0<3){Va=fb;Xa=Ua;Ta=db;Wa=Ia}else{xd=fb;yd=Ua;zd=db;Ad=Ia;break}}}else{xd=Ka;yd=La;zd=Ma;Ad=Na}c[aa>>2]=Ja+1;b[l+(e[27040+(Ja<<1)>>1]<<1)+112>>1]=zd&7;Wa=zd>>>3;Ta=xd+ -3|0;Xa=c[aa>>2]|0;if(Xa>>>0<(c[$>>2]|0)>>>0){Ja=Xa;Ka=Ta;La=yd;Ma=Wa;Na=Ad;ra=154}else{Oa=Xa;Pa=Ta;Qa=yd;Ra=Wa;Sa=Ad;ra=158;break}}}else if((ra|0)==277){ra=0;if((c[w>>2]|0)==0){Bd=cc;Cd=dc;Dd=ec;Ed=fc;ra=284;break}if((c[z>>2]|0)==0){Bd=cc;Cd=dc;Dd=ec;Ed=fc;ra=284;break}if(cc>>>0<32){Wa=cc;Ta=dc;Xa=ec;Va=fc;while(1){if((Ta|0)==0){Ya=Wa;Za=0;_a=Xa;$a=la;ab=Va;bb=gc;cb=s;break a}Ia=Ta+ -1|0;db=Va+1|0;Ua=(d[Va]<<Wa)+Xa|0;fb=Wa+8|0;if(fb>>>0<32){Wa=fb;Ta=Ia;Xa=Ua;Va=db}else{Fd=fb;Gd=Ia;Hd=Ua;Id=db;break}}}else{Fd=cc;Gd=dc;Hd=ec;Id=fc}if((Hd|0)==(c[Y>>2]|0)){Bd=0;Cd=Gd;Dd=0;Ed=Id;ra=284;break}c[B>>2]=27584;c[l>>2]=29;rb=Fd;sb=Gd;tb=Hd;ub=la;vb=Id;wb=gc;xb=o;yb=s}do{if((ra|0)==49){ra=0;Va=c[A>>2]|0;if((Va|0)!=0){c[Va+4>>2]=xc}if((c[z>>2]&512|0)!=0){a[j]=xc;a[y]=xc>>>8;a[ga]=xc>>>16;a[ha]=xc>>>24;c[x>>2]=tn(c[x>>2]|0,j,4)|0}c[l>>2]=3;Vc=0;Wc=wc;Xc=0;Yc=yc;ra=55}else if((ra|0)==124){ra=0;if(H){lb=Ea;mb=Fa;nb=Ga;ob=la;pb=Ha;qb=s;ra=285;break a}else{wa=Ea;xa=Fa;ya=Ga;za=Ha;ra=125}}else if((ra|0)==144){ra=0;Va=c[F>>2]|0;if((Va|0)==0){c[l>>2]=11;rb=sa;sb=ta;tb=ua;ub=la;vb=va;wb=r;xb=o;yb=s;break}Xa=Va>>>0>ta>>>0?ta:Va;Va=Xa>>>0>la>>>0?la:Xa;if((Va|0)==0){lb=sa;mb=ta;nb=ua;ob=la;pb=va;qb=s;ra=285;break a}lA(o|0,va|0,Va|0)|0;c[F>>2]=(c[F>>2]|0)-Va;rb=sa;sb=ta-Va|0;tb=ua;ub=la-Va|0;vb=va+Va|0;wb=r;xb=o+Va|0;yb=s}else if((ra|0)==158){ra=0;if(Oa>>>0<19){Va=Oa;while(1){Xa=Va+1|0;b[l+(e[27040+(Va<<1)>>1]<<1)+112>>1]=0;if((Xa|0)==19){break}else{Va=Xa}}c[aa>>2]=19}c[ca>>2]=ba;c[J>>2]=ba;c[K>>2]=7;Va=zn(0,da,19,ca,K,ea)|0;if((Va|0)==0){c[aa>>2]=0;c[l>>2]=18;Lc=0;Mc=Pa;Nc=Qa;Oc=Ra;Pc=Sa;Qc=0;ra=164;break}else{c[B>>2]=27312;c[l>>2]=29;rb=Pa;sb=Qa;tb=Ra;ub=la;vb=Sa;wb=r;xb=o;yb=Va;break}}}while(0);c:do{if((ra|0)==55){while(1){ra=0;if((Wc|0)==0){Ya=Vc;Za=0;_a=Xc;$a=la;ab=Yc;bb=r;cb=s;break a}Va=Wc+ -1|0;Xa=Yc+1|0;Ta=(d[Yc]<<Vc)+Xc|0;Wa=Vc+8|0;if(Wa>>>0<16){Vc=Wa;Wc=Va;Xc=Ta;Yc=Xa;ra=55}else{Zc=Va;_c=Ta;$c=Xa;ra=57;break}}}else if((ra|0)==125){ra=0;if((c[I>>2]|0)!=0){Xa=wa&7;c[l>>2]=26;rb=wa-Xa|0;sb=xa;tb=ya>>>Xa;ub=la;vb=za;wb=r;xb=o;yb=s;break}if(wa>>>0<3){Xa=wa;Ta=xa;Va=ya;Wa=za;while(1){if((Ta|0)==0){Ya=Xa;Za=0;_a=Va;$a=la;ab=Wa;bb=r;cb=s;break a}db=Ta+ -1|0;Ua=Wa+1|0;Ia=(d[Wa]<<Xa)+Va|0;fb=Xa+8|0;if(fb>>>0<3){Xa=fb;Ta=db;Va=Ia;Wa=Ua}else{Jd=fb;Kd=db;Ld=Ia;Md=Ua;break}}}else{Jd=wa;Kd=xa;Ld=ya;Md=za}c[I>>2]=Ld&1;Wa=Ld>>>1&3;if((Wa|0)==3){c[B>>2]=27216;c[l>>2]=29}else if((Wa|0)==0){c[l>>2]=13}else if((Wa|0)==2){c[l>>2]=16}else if((Wa|0)==1?(c[J>>2]=27608,c[K>>2]=9,c[L>>2]=29656,c[M>>2]=5,c[l>>2]=19,N):0){ra=133;break a}rb=Jd+ -3|0;sb=Kd;tb=Ld>>>3;ub=la;vb=Md;wb=r;xb=o;yb=s}else if((ra|0)==164){ra=0;Wa=c[Z>>2]|0;Va=c[_>>2]|0;do{if(Lc>>>0<(Va+Wa|0)>>>0){Ta=Lc;Xa=Va;Ua=Wa;Ia=Mc;db=Nc;fb=Oc;eb=Pc;d:while(1){gb=(1<<c[K>>2])+ -1|0;Nd=gb&fb;Od=c[J>>2]|0;Pd=d[Od+(Nd<<2)+1|0]|0;if(Pd>>>0>Ia>>>0){Qd=Ia;Rd=db;Sd=fb;Td=eb;while(1){if((Rd|0)==0){Ya=Qd;Za=0;_a=Sd;$a=la;ab=Td;bb=r;cb=Qc;break a}Ud=Rd+ -1|0;Vd=Td+1|0;Wd=(d[Td]<<Qd)+Sd|0;Xd=Qd+8|0;Yd=gb&Wd;Zd=d[Od+(Yd<<2)+1|0]|0;if(Zd>>>0>Xd>>>0){Qd=Xd;Rd=Ud;Sd=Wd;Td=Vd}else{_d=Zd;$d=Yd;ae=Xd;be=Ud;ce=Wd;de=Vd;break}}}else{_d=Pd;$d=Nd;ae=Ia;be=db;ce=fb;de=eb}Td=b[Od+($d<<2)+2>>1]|0;e:do{if((Td&65535)<16){if(ae>>>0<_d>>>0){Sd=ae;Rd=be;Qd=ce;gb=de;while(1){if((Rd|0)==0){Ya=Sd;Za=0;_a=Qd;$a=la;ab=gb;bb=r;cb=Qc;break a}Vd=Rd+ -1|0;Wd=gb+1|0;Ud=(d[gb]<<Sd)+Qd|0;Xd=Sd+8|0;if(Xd>>>0<_d>>>0){Sd=Xd;Rd=Vd;Qd=Ud;gb=Wd}else{ee=Xd;fe=Vd;ge=Ud;he=Wd;break}}}else{ee=ae;fe=be;ge=ce;he=de}c[aa>>2]=Ta+1;b[l+(Ta<<1)+112>>1]=Td;ie=ee-_d|0;je=fe;ke=ge>>>_d;le=he}else{if(Td<<16>>16==17){gb=_d+3|0;if(ae>>>0<gb>>>0){Qd=ae;Rd=be;Sd=ce;Wd=de;while(1){if((Rd|0)==0){Ya=Qd;Za=0;_a=Sd;$a=la;ab=Wd;bb=r;cb=Qc;break a}Ud=Rd+ -1|0;Vd=Wd+1|0;Xd=(d[Wd]<<Qd)+Sd|0;Yd=Qd+8|0;if(Yd>>>0<gb>>>0){Qd=Yd;Rd=Ud;Sd=Xd;Wd=Vd}else{me=Yd;ne=Ud;oe=Xd;pe=Vd;break}}}else{me=ae;ne=be;oe=ce;pe=de}Wd=oe>>>_d;qe=-3-_d+me|0;re=(Wd&7)+3|0;se=ne;te=Wd>>>3;ue=0;ve=pe}else if(Td<<16>>16==16){Wd=_d+2|0;if(ae>>>0<Wd>>>0){Sd=ae;Rd=be;Qd=ce;gb=de;while(1){if((Rd|0)==0){Ya=Sd;Za=0;_a=Qd;$a=la;ab=gb;bb=r;cb=Qc;break a}Vd=Rd+ -1|0;Xd=gb+1|0;Ud=(d[gb]<<Sd)+Qd|0;Yd=Sd+8|0;if(Yd>>>0<Wd>>>0){Sd=Yd;Rd=Vd;Qd=Ud;gb=Xd}else{we=Yd;xe=Vd;ye=Ud;ze=Xd;break}}}else{we=ae;xe=be;ye=ce;ze=de}Ae=ye>>>_d;Be=we-_d|0;if((Ta|0)==0){ra=181;break d}qe=Be+ -2|0;re=(Ae&3)+3|0;se=xe;te=Ae>>>2;ue=b[l+(Ta+ -1<<1)+112>>1]|0;ve=ze}else{gb=_d+7|0;if(ae>>>0<gb>>>0){Qd=ae;Rd=be;Sd=ce;Wd=de;while(1){if((Rd|0)==0){Ya=Qd;Za=0;_a=Sd;$a=la;ab=Wd;bb=r;cb=Qc;break a}Xd=Rd+ -1|0;Ud=Wd+1|0;Vd=(d[Wd]<<Qd)+Sd|0;Yd=Qd+8|0;if(Yd>>>0<gb>>>0){Qd=Yd;Rd=Xd;Sd=Vd;Wd=Ud}else{Ce=Yd;De=Xd;Ee=Vd;Fe=Ud;break}}}else{Ce=ae;De=be;Ee=ce;Fe=de}Wd=Ee>>>_d;qe=-7-_d+Ce|0;re=(Wd&127)+11|0;se=De;te=Wd>>>7;ue=0;ve=Fe}if((Ta+re|0)>>>0>(Xa+Ua|0)>>>0){ra=190;break d}else{Ge=Ta;He=re}while(1){Wd=He+ -1|0;c[aa>>2]=Ge+1;b[l+(Ge<<1)+112>>1]=ue;if((Wd|0)==0){ie=qe;je=se;ke=te;le=ve;break e}Ge=c[aa>>2]|0;He=Wd}}}while(0);Td=c[aa>>2]|0;Ie=c[Z>>2]|0;Od=c[_>>2]|0;if(Td>>>0<(Od+Ie|0)>>>0){Ta=Td;Xa=Od;Ua=Ie;Ia=ie;db=je;fb=ke;eb=le}else{ra=193;break}}if((ra|0)==181){ra=0;c[B>>2]=27344;c[l>>2]=29;rb=Be;sb=xe;tb=Ae;ub=la;vb=ze;wb=r;xb=o;yb=Qc;break c}else if((ra|0)==190){ra=0;c[B>>2]=27344;c[l>>2]=29;rb=qe;sb=se;tb=te;ub=la;vb=ve;wb=r;xb=o;yb=Qc;break c}else if((ra|0)==193){ra=0;if((c[l>>2]|0)==29){rb=ie;sb=je;tb=ke;ub=la;vb=le;wb=r;xb=o;yb=Qc;break c}else{Je=Ie;Ke=ie;Le=je;Me=ke;Ne=le;break}}}else{Je=Wa;Ke=Mc;Le=Nc;Me=Oc;Ne=Pc}}while(0);if((b[fa>>1]|0)==0){c[B>>2]=27376;c[l>>2]=29;rb=Ke;sb=Le;tb=Me;ub=la;vb=Ne;wb=r;xb=o;yb=Qc;break}c[ca>>2]=ba;c[J>>2]=ba;c[K>>2]=9;Wa=zn(1,da,Je,ca,K,ea)|0;if((Wa|0)!=0){c[B>>2]=27416;c[l>>2]=29;rb=Ke;sb=Le;tb=Me;ub=la;vb=Ne;wb=r;xb=o;yb=Wa;break}c[L>>2]=c[ca>>2];c[M>>2]=6;Wa=zn(2,l+(c[Z>>2]<<1)+112|0,c[_>>2]|0,ca,M,ea)|0;if((Wa|0)==0){c[l>>2]=19;if(N){lb=Ke;mb=Le;nb=Me;ob=la;pb=Ne;qb=0;ra=285;break a}else{zb=Ke;Ab=Le;Bb=Me;Cb=Ne;Db=0;ra=201;break}}else{c[B>>2]=27448;c[l>>2]=29;rb=Ke;sb=Le;tb=Me;ub=la;vb=Ne;wb=r;xb=o;yb=Wa;break}}}while(0);if((ra|0)==57){ra=0;Wa=c[A>>2]|0;if((Wa|0)!=0){c[Wa+8>>2]=_c&255;c[Wa+12>>2]=_c>>>8}if((c[z>>2]&512|0)!=0){a[j]=_c;a[y]=_c>>>8;c[x>>2]=tn(c[x>>2]|0,j,2)|0}c[l>>2]=4;ed=0;fd=Zc;gd=0;hd=$c;ra=62}else if((ra|0)==201){ra=0;c[l>>2]=20;Eb=zb;Fb=Ab;Gb=Bb;Hb=Cb;Ib=Db;ra=202}do{if((ra|0)==62){ra=0;Wa=c[z>>2]|0;if((Wa&1024|0)==0){Va=c[A>>2]|0;if((Va|0)==0){Oe=ed;Pe=fd;Qe=gd;Re=hd}else{c[Va+16>>2]=0;Oe=ed;Pe=fd;Qe=gd;Re=hd}}else{if(ed>>>0<16){Va=ed;eb=fd;fb=gd;db=hd;while(1){if((eb|0)==0){Ya=Va;Za=0;_a=fb;$a=la;ab=db;bb=r;cb=s;break a}Ia=eb+ -1|0;Ua=db+1|0;Xa=(d[db]<<Va)+fb|0;Ta=Va+8|0;if(Ta>>>0<16){Va=Ta;eb=Ia;fb=Xa;db=Ua}else{Se=Ia;Te=Xa;Ue=Ua;break}}}else{Se=fd;Te=gd;Ue=hd}c[F>>2]=Te;db=c[A>>2]|0;if((db|0)==0){Ve=Wa}else{c[db+20>>2]=Te;Ve=c[z>>2]|0}if((Ve&512|0)==0){Oe=0;Pe=Se;Qe=0;Re=Ue}else{a[j]=Te;a[y]=Te>>>8;c[x>>2]=tn(c[x>>2]|0,j,2)|0;Oe=0;Pe=Se;Qe=0;Re=Ue}}c[l>>2]=5;Rc=Oe;Sc=Pe;Tc=Qe;Uc=Re;ra=73}else if((ra|0)==202){ra=0;if(Fb>>>0>5&la>>>0>257){c[m>>2]=o;c[n>>2]=la;c[f>>2]=Hb;c[p>>2]=Fb;c[u>>2]=Gb;c[v>>2]=Eb;An(f,r);db=c[m>>2]|0;fb=c[n>>2]|0;eb=c[f>>2]|0;Va=c[p>>2]|0;Ua=c[u>>2]|0;Xa=c[v>>2]|0;if((c[l>>2]|0)!=11){rb=Xa;sb=Va;tb=Ua;ub=fb;vb=eb;wb=r;xb=db;yb=Ib;break}c[O>>2]=-1;rb=Xa;sb=Va;tb=Ua;ub=fb;vb=eb;wb=r;xb=db;yb=Ib;break}c[O>>2]=0;db=(1<<c[K>>2])+ -1|0;eb=db&Gb;fb=c[J>>2]|0;Ua=a[fb+(eb<<2)+1|0]|0;Va=Ua&255;if(Va>>>0>Eb>>>0){Xa=Eb;Ia=Fb;Ta=Gb;Od=Hb;while(1){if((Ia|0)==0){Ya=Xa;Za=0;_a=Ta;$a=la;ab=Od;bb=r;cb=Ib;break a}Td=Ia+ -1|0;Nd=Od+1|0;Pd=(d[Od]<<Xa)+Ta|0;Wd=Xa+8|0;Sd=db&Pd;Rd=a[fb+(Sd<<2)+1|0]|0;Qd=Rd&255;if(Qd>>>0>Wd>>>0){Xa=Wd;Ia=Td;Ta=Pd;Od=Nd}else{We=Rd;Xe=Qd;Ye=Sd;Ze=Wd;_e=Td;$e=Pd;af=Nd;break}}}else{We=Ua;Xe=Va;Ye=eb;Ze=Eb;_e=Fb;$e=Gb;af=Hb}Od=a[fb+(Ye<<2)|0]|0;Ta=b[fb+(Ye<<2)+2>>1]|0;Ia=Od&255;if(!(Od<<24>>24==0)){if((Ia&240|0)==0){Xa=Ta&65535;db=(1<<Xe+Ia)+ -1|0;Ia=(($e&db)>>>Xe)+Xa|0;Wa=a[fb+(Ia<<2)+1|0]|0;if(((Wa&255)+Xe|0)>>>0>Ze>>>0){Nd=Ze;Pd=_e;Td=$e;Wd=af;while(1){if((Pd|0)==0){Ya=Nd;Za=0;_a=Td;$a=la;ab=Wd;bb=r;cb=Ib;break a}Sd=Pd+ -1|0;Qd=Wd+1|0;Rd=(d[Wd]<<Nd)+Td|0;gb=Nd+8|0;Ud=((Rd&db)>>>Xe)+Xa|0;Vd=a[fb+(Ud<<2)+1|0]|0;if(((Vd&255)+Xe|0)>>>0>gb>>>0){Nd=gb;Pd=Sd;Td=Rd;Wd=Qd}else{bf=Ud;cf=Vd;df=gb;ef=Sd;ff=Rd;gf=Qd;break}}}else{bf=Ia;cf=Wa;df=Ze;ef=_e;ff=$e;gf=af}Wd=b[fb+(bf<<2)+2>>1]|0;Td=a[fb+(bf<<2)|0]|0;c[O>>2]=Xe;hf=Xe;jf=df-Xe|0;kf=ef;lf=Td;mf=cf;nf=Wd;of=ff>>>Xe;pf=gf}else{hf=0;jf=Ze;kf=_e;lf=Od;mf=We;nf=Ta;of=$e;pf=af}}else{hf=0;jf=Ze;kf=_e;lf=0;mf=We;nf=Ta;of=$e;pf=af}Wd=mf&255;Td=of>>>Wd;Pd=jf-Wd|0;c[O>>2]=hf+Wd;c[F>>2]=nf&65535;Wd=lf&255;if(lf<<24>>24==0){c[l>>2]=25;rb=Pd;sb=kf;tb=Td;ub=la;vb=pf;wb=r;xb=o;yb=Ib;break}if((Wd&32|0)!=0){c[O>>2]=-1;c[l>>2]=11;rb=Pd;sb=kf;tb=Td;ub=la;vb=pf;wb=r;xb=o;yb=Ib;break}if((Wd&64|0)==0){Nd=Wd&15;c[P>>2]=Nd;c[l>>2]=21;mc=Nd;nc=Pd;oc=kf;pc=Td;qc=pf;rc=Ib;ra=221;break}else{c[B>>2]=27472;c[l>>2]=29;rb=Pd;sb=kf;tb=Td;ub=la;vb=pf;wb=r;xb=o;yb=Ib;break}}}while(0);if((ra|0)==73){ra=0;Td=c[z>>2]|0;if((Td&1024|0)!=0){Pd=c[F>>2]|0;Nd=Pd>>>0>Sc>>>0?Sc:Pd;if((Nd|0)==0){qf=Pd;rf=Sc;sf=Uc}else{Wd=c[A>>2]|0;if((Wd|0)!=0?(Xa=c[Wd+16>>2]|0,(Xa|0)!=0):0){db=(c[Wd+20>>2]|0)-Pd|0;Pd=c[Wd+24>>2]|0;lA(Xa+db|0,Uc|0,((db+Nd|0)>>>0>Pd>>>0?Pd-db|0:Nd)|0)|0;tf=c[z>>2]|0}else{tf=Td}if((tf&512|0)!=0){c[x>>2]=tn(c[x>>2]|0,Uc,Nd)|0}Td=(c[F>>2]|0)-Nd|0;c[F>>2]=Td;qf=Td;rf=Sc-Nd|0;sf=Uc+Nd|0}if((qf|0)==0){uf=rf;vf=sf}else{lb=Rc;mb=rf;nb=Tc;ob=la;pb=sf;qb=s;ra=285;break}}else{uf=Sc;vf=Uc}c[F>>2]=0;c[l>>2]=6;id=Rc;jd=uf;kd=Tc;ld=vf;ra=83}else if((ra|0)==221){ra=0;if((mc|0)==0){wf=c[F>>2]|0;xf=nc;yf=oc;zf=pc;Af=qc}else{if(nc>>>0<mc>>>0){Nd=nc;Td=oc;db=pc;Pd=qc;while(1){if((Td|0)==0){Ya=Nd;Za=0;_a=db;$a=la;ab=Pd;bb=r;cb=rc;break a}Xa=Td+ -1|0;Wd=Pd+1|0;eb=(d[Pd]<<Nd)+db|0;Va=Nd+8|0;if(Va>>>0<mc>>>0){Nd=Va;Td=Xa;db=eb;Pd=Wd}else{Bf=Va;Cf=Xa;Df=eb;Ef=Wd;break}}}else{Bf=nc;Cf=oc;Df=pc;Ef=qc}Pd=(c[F>>2]|0)+((1<<mc)+ -1&Df)|0;c[F>>2]=Pd;c[O>>2]=(c[O>>2]|0)+mc;wf=Pd;xf=Bf-mc|0;yf=Cf;zf=Df>>>mc;Af=Ef}c[Q>>2]=wf;c[l>>2]=22;Jb=xf;Kb=yf;Lb=zf;Mb=Af;Nb=rc;ra=228}do{if((ra|0)==83){ra=0;if((c[z>>2]&2048|0)==0){Pd=c[A>>2]|0;if((Pd|0)==0){Ff=jd;Gf=ld}else{c[Pd+28>>2]=0;Ff=jd;Gf=ld}}else{if((jd|0)==0){lb=id;mb=0;nb=kd;ob=la;pb=ld;qb=s;ra=285;break a}else{Hf=0}while(1){If=Hf+1|0;Pd=a[ld+Hf|0]|0;db=c[A>>2]|0;if(((db|0)!=0?(Td=c[db+28>>2]|0,(Td|0)!=0):0)?(Nd=c[F>>2]|0,Nd>>>0<(c[db+32>>2]|0)>>>0):0){c[F>>2]=Nd+1;a[Td+Nd|0]=Pd}Jf=Pd<<24>>24!=0;if(Jf&If>>>0<jd>>>0){Hf=If}else{break}}if((c[z>>2]&512|0)!=0){c[x>>2]=tn(c[x>>2]|0,ld,If)|0}Ta=jd-If|0;Od=ld+If|0;if(Jf){lb=id;mb=Ta;nb=kd;ob=la;pb=Od;qb=s;ra=285;break a}else{Ff=Ta;Gf=Od}}c[F>>2]=0;c[l>>2]=7;ad=id;bd=Ff;cd=kd;dd=Gf;ra=96}else if((ra|0)==228){ra=0;Od=(1<<c[M>>2])+ -1|0;Ta=Od&Lb;fb=c[L>>2]|0;Wa=a[fb+(Ta<<2)+1|0]|0;Ia=Wa&255;if(Ia>>>0>Jb>>>0){Pd=Jb;Nd=Kb;Td=Lb;db=Mb;while(1){if((Nd|0)==0){Ya=Pd;Za=0;_a=Td;$a=la;ab=db;bb=r;cb=Nb;break a}Wd=Nd+ -1|0;eb=db+1|0;Xa=(d[db]<<Pd)+Td|0;Va=Pd+8|0;Ua=Od&Xa;Qd=a[fb+(Ua<<2)+1|0]|0;Rd=Qd&255;if(Rd>>>0>Va>>>0){Pd=Va;Nd=Wd;Td=Xa;db=eb}else{Kf=Qd;Lf=Rd;Mf=Ua;Nf=Va;Of=Wd;Pf=Xa;Qf=eb;break}}}else{Kf=Wa;Lf=Ia;Mf=Ta;Nf=Jb;Of=Kb;Pf=Lb;Qf=Mb}db=a[fb+(Mf<<2)|0]|0;Td=b[fb+(Mf<<2)+2>>1]|0;Nd=db&255;if((Nd&240|0)==0){Pd=Td&65535;Od=(1<<Lf+Nd)+ -1|0;Nd=((Pf&Od)>>>Lf)+Pd|0;eb=a[fb+(Nd<<2)+1|0]|0;if(((eb&255)+Lf|0)>>>0>Nf>>>0){Xa=Nf;Wd=Of;Va=Pf;Ua=Qf;while(1){if((Wd|0)==0){Ya=Xa;Za=0;_a=Va;$a=la;ab=Ua;bb=r;cb=Nb;break a}Rd=Wd+ -1|0;Qd=Ua+1|0;Sd=(d[Ua]<<Xa)+Va|0;gb=Xa+8|0;Vd=((Sd&Od)>>>Lf)+Pd|0;Ud=a[fb+(Vd<<2)+1|0]|0;if(((Ud&255)+Lf|0)>>>0>gb>>>0){Xa=gb;Wd=Rd;Va=Sd;Ua=Qd}else{Rf=Vd;Sf=Ud;Tf=gb;Uf=Rd;Vf=Sd;Wf=Qd;break}}}else{Rf=Nd;Sf=eb;Tf=Nf;Uf=Of;Vf=Pf;Wf=Qf}Ua=b[fb+(Rf<<2)+2>>1]|0;Va=a[fb+(Rf<<2)|0]|0;Wd=(c[O>>2]|0)+Lf|0;c[O>>2]=Wd;Xf=Wd;Yf=Tf-Lf|0;Zf=Uf;_f=Va;$f=Sf;ag=Ua;bg=Vf>>>Lf;cg=Wf}else{Xf=c[O>>2]|0;Yf=Nf;Zf=Of;_f=db;$f=Kf;ag=Td;bg=Pf;cg=Qf}Ua=$f&255;Va=bg>>>Ua;Wd=Yf-Ua|0;c[O>>2]=Xf+Ua;Ua=_f&255;if((Ua&64|0)==0){c[R>>2]=ag&65535;Xa=Ua&15;c[P>>2]=Xa;c[l>>2]=23;md=Xa;nd=Wd;od=Zf;pd=Va;qd=cg;rd=Nb;ra=240;break}else{c[B>>2]=27504;c[l>>2]=29;rb=Wd;sb=Zf;tb=Va;ub=la;vb=cg;wb=r;xb=o;yb=Nb;break}}}while(0);if((ra|0)==96){ra=0;if((c[z>>2]&4096|0)==0){Va=c[A>>2]|0;if((Va|0)==0){dg=bd;eg=dd}else{c[Va+36>>2]=0;dg=bd;eg=dd}}else{if((bd|0)==0){lb=ad;mb=0;nb=cd;ob=la;pb=dd;qb=s;ra=285;break}else{fg=0}while(1){gg=fg+1|0;Va=a[dd+fg|0]|0;Wd=c[A>>2]|0;if(((Wd|0)!=0?(Xa=c[Wd+36>>2]|0,(Xa|0)!=0):0)?(Ua=c[F>>2]|0,Ua>>>0<(c[Wd+40>>2]|0)>>>0):0){c[F>>2]=Ua+1;a[Xa+Ua|0]=Va}hg=Va<<24>>24!=0;if(hg&gg>>>0<bd>>>0){fg=gg}else{break}}if((c[z>>2]&512|0)!=0){c[x>>2]=tn(c[x>>2]|0,dd,gg)|0}Va=bd-gg|0;Ua=dd+gg|0;if(hg){lb=ad;mb=Va;nb=cd;ob=la;pb=Ua;qb=s;ra=285;break}else{dg=Va;eg=Ua}}c[l>>2]=8;hc=ad;ic=dg;kc=cd;lc=eg;ra=109}else if((ra|0)==240){ra=0;if((md|0)==0){ig=nd;jg=od;kg=pd;lg=qd}else{if(nd>>>0<md>>>0){Ua=nd;Va=od;Xa=pd;Wd=qd;while(1){if((Va|0)==0){Ya=Ua;Za=0;_a=Xa;$a=la;ab=Wd;bb=r;cb=rd;break a}Pd=Va+ -1|0;Od=Wd+1|0;Ta=(d[Wd]<<Ua)+Xa|0;Ia=Ua+8|0;if(Ia>>>0<md>>>0){Ua=Ia;Va=Pd;Xa=Ta;Wd=Od}else{mg=Ia;ng=Pd;og=Ta;pg=Od;break}}}else{mg=nd;ng=od;og=pd;pg=qd}c[R>>2]=(c[R>>2]|0)+((1<<md)+ -1&og);c[O>>2]=(c[O>>2]|0)+md;ig=mg-md|0;jg=ng;kg=og>>>md;lg=pg}c[l>>2]=24;Ob=ig;Pb=jg;Qb=kg;Rb=lg;Sb=rd;ra=246}do{if((ra|0)==109){ra=0;Wd=c[z>>2]|0;if((Wd&512|0)!=0){if(hc>>>0<16){Xa=hc;Va=ic;Ua=kc;Od=lc;while(1){if((Va|0)==0){Ya=Xa;Za=0;_a=Ua;$a=la;ab=Od;bb=r;cb=s;break a}Ta=Va+ -1|0;Pd=Od+1|0;Ia=(d[Od]<<Xa)+Ua|0;Wa=Xa+8|0;if(Wa>>>0<16){Xa=Wa;Va=Ta;Ua=Ia;Od=Pd}else{qg=Wa;rg=Ta;sg=Ia;tg=Pd;break}}}else{qg=hc;rg=ic;sg=kc;tg=lc}if((sg|0)==(c[x>>2]&65535|0)){ug=0;vg=rg;wg=0;xg=tg}else{c[B>>2]=27192;c[l>>2]=29;rb=qg;sb=rg;tb=sg;ub=la;vb=tg;wb=r;xb=o;yb=s;break}}else{ug=hc;vg=ic;wg=kc;xg=lc}Od=c[A>>2]|0;if((Od|0)!=0){c[Od+44>>2]=Wd>>>9&1;c[Od+48>>2]=1}Od=tn(0,0,0)|0;c[x>>2]=Od;c[E>>2]=Od;c[l>>2]=11;rb=ug;sb=vg;tb=wg;ub=la;vb=xg;wb=r;xb=o;yb=s}else if((ra|0)==246){ra=0;if((la|0)==0){lb=Ob;mb=Pb;nb=Qb;ob=0;pb=Rb;qb=Sb;ra=285;break a}Od=r-la|0;Ua=c[R>>2]|0;if(Ua>>>0>Od>>>0){Va=Ua-Od|0;if(Va>>>0>(c[S>>2]|0)>>>0?(c[T>>2]|0)!=0:0){c[B>>2]=27528;c[l>>2]=29;rb=Ob;sb=Pb;tb=Qb;ub=la;vb=Rb;wb=r;xb=o;yb=Sb;break}Od=c[U>>2]|0;if(Va>>>0>Od>>>0){Xa=Va-Od|0;yg=Xa;zg=(c[V>>2]|0)+((c[W>>2]|0)-Xa)|0}else{yg=Va;zg=(c[V>>2]|0)+(Od-Va)|0}Va=c[F>>2]|0;Ag=Va;Bg=yg>>>0>Va>>>0?Va:yg;Cg=zg}else{Va=c[F>>2]|0;Ag=Va;Bg=Va;Cg=o+(0-Ua)|0}Ua=Bg>>>0>la>>>0?la:Bg;c[F>>2]=Ag-Ua;Va=~la;Od=~Bg;Xa=Va>>>0>Od>>>0?Va:Od;Od=Ua;Va=Cg;Td=o;while(1){a[Td]=a[Va]|0;Od=Od+ -1|0;if((Od|0)==0){break}else{Va=Va+1|0;Td=Td+1|0}}Td=la-Ua|0;Va=o+~Xa|0;if((c[F>>2]|0)==0){c[l>>2]=20;rb=Ob;sb=Pb;tb=Qb;ub=Td;vb=Rb;wb=r;xb=Va;yb=Sb}else{rb=Ob;sb=Pb;tb=Qb;ub=Td;vb=Rb;wb=r;xb=Va;yb=Sb}}}while(0);ia=c[l>>2]|0;q=rb;ja=sb;ka=tb;la=ub;ma=vb;r=wb;o=xb;s=yb}if((ra|0)==122){c[m>>2]=o;c[n>>2]=la;c[f>>2]=qa;c[p>>2]=oa;c[u>>2]=pa;c[v>>2]=na;k=2;i=h;return k|0}else if((ra|0)==133){Ya=Jd+ -3|0;Za=Kd;_a=Ld>>>3;$a=la;ab=Md;bb=r;cb=s}else if((ra|0)==284){c[l>>2]=28;Ya=Bd;Za=Cd;_a=Dd;$a=la;ab=Ed;bb=gc;cb=1}else if((ra|0)==285){Ya=lb;Za=mb;_a=nb;$a=ob;ab=pb;bb=r;cb=qb}else if((ra|0)==299){k=-4;i=h;return k|0}else if((ra|0)==300){i=h;return k|0}c[m>>2]=o;c[n>>2]=$a;c[f>>2]=ab;c[p>>2]=Za;c[u>>2]=_a;c[v>>2]=Ya;if((c[W>>2]|0)==0){if((c[l>>2]|0)>>>0<26?(bb|0)!=(c[n>>2]|0):0){ra=289}}else{ra=289}if((ra|0)==289?(xn(f,bb)|0)!=0:0){c[l>>2]=30;k=-4;i=h;return k|0}ra=c[p>>2]|0;p=c[n>>2]|0;n=bb-p|0;W=f+8|0;c[W>>2]=t-ra+(c[W>>2]|0);c[X>>2]=(c[X>>2]|0)+n;c[Y>>2]=(c[Y>>2]|0)+n;Y=(bb|0)==(p|0);if(!((c[w>>2]|0)==0|Y)){w=c[x>>2]|0;p=(c[m>>2]|0)+(0-n)|0;if((c[z>>2]|0)==0){Dg=sn(w,p,n)|0}else{Dg=tn(w,p,n)|0}c[x>>2]=Dg;c[E>>2]=Dg}Dg=c[l>>2]|0;if((Dg|0)==19){Eg=256}else{Eg=(Dg|0)==14?256:0}c[f+44>>2]=((c[I>>2]|0)!=0?64:0)+(c[v>>2]|0)+((Dg|0)==11?128:0)+Eg;k=((t|0)==(ra|0)&Y|(g|0)==4)&(cb|0)==0?-5:cb;i=h;return k|0}function xn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;e=c[a+28>>2]|0;f=e+52|0;g=c[f>>2]|0;if((g|0)==0){h=md[c[a+32>>2]&63](c[a+40>>2]|0,1<<c[e+36>>2],1)|0;c[f>>2]=h;if((h|0)==0){j=1;i=d;return j|0}else{k=h}}else{k=g}g=e+40|0;h=c[g>>2]|0;if((h|0)==0){l=1<<c[e+36>>2];c[g>>2]=l;c[e+48>>2]=0;c[e+44>>2]=0;m=l}else{m=h}h=b-(c[a+16>>2]|0)|0;if(!(h>>>0<m>>>0)){lA(k|0,(c[a+12>>2]|0)+(0-m)|0,m|0)|0;c[e+48>>2]=0;c[e+44>>2]=c[g>>2];j=0;i=d;return j|0}b=e+48|0;l=c[b>>2]|0;n=m-l|0;m=n>>>0>h>>>0?h:n;n=a+12|0;lA(k+l|0,(c[n>>2]|0)+(0-h)|0,m|0)|0;l=h-m|0;if((h|0)!=(m|0)){lA(c[f>>2]|0,(c[n>>2]|0)+(0-l)|0,l|0)|0;c[b>>2]=l;c[e+44>>2]=c[g>>2];j=0;i=d;return j|0}l=(c[b>>2]|0)+h|0;n=c[g>>2]|0;c[b>>2]=(l|0)==(n|0)?0:l;l=e+44|0;e=c[l>>2]|0;if(!(e>>>0<n>>>0)){j=0;i=d;return j|0}c[l>>2]=e+h;j=0;i=d;return j|0}function yn(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;b=i;if((a|0)==0){d=-2;i=b;return d|0}e=a+28|0;f=c[e>>2]|0;if((f|0)==0){d=-2;i=b;return d|0}g=a+36|0;h=c[g>>2]|0;if((h|0)==0){d=-2;i=b;return d|0}j=c[f+52>>2]|0;k=a+40|0;if((j|0)==0){l=h;m=f}else{td[h&31](c[k>>2]|0,j);l=c[g>>2]|0;m=c[e>>2]|0}td[l&31](c[k>>2]|0,m);c[e>>2]=0;d=0;i=b;return d|0}function zn(d,f,g,h,j,k){d=d|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;l=i;i=i+64|0;m=l+32|0;n=l;o=m+0|0;p=o+32|0;do{b[o>>1]=0;o=o+2|0}while((o|0)<(p|0));o=(g|0)==0;if(!o){p=0;do{q=m+(e[f+(p<<1)>>1]<<1)|0;b[q>>1]=(b[q>>1]|0)+1<<16>>16;p=p+1|0}while((p|0)!=(g|0))}p=c[j>>2]|0;q=15;while(1){r=q+ -1|0;if((b[m+(q<<1)>>1]|0)!=0){break}if((r|0)==0){s=7;break}else{q=r}}if((s|0)==7){r=c[h>>2]|0;c[h>>2]=r+4;a[r]=64;a[r+1|0]=1;b[r+2>>1]=0;r=c[h>>2]|0;c[h>>2]=r+4;a[r]=64;a[r+1|0]=1;b[r+2>>1]=0;c[j>>2]=1;t=0;i=l;return t|0}r=p>>>0>q>>>0?q:p;a:do{if(q>>>0>1){p=1;while(1){u=p+1|0;if((b[m+(p<<1)>>1]|0)!=0){v=p;break a}if(u>>>0<q>>>0){p=u}else{v=u;break}}}else{v=1}}while(0);p=r>>>0<v>>>0?v:r;r=1;u=1;do{r=(r<<1)-(e[m+(u<<1)>>1]|0)|0;u=u+1|0;if((r|0)<0){t=-1;s=56;break}}while(u>>>0<16);if((s|0)==56){i=l;return t|0}if((r|0)>0?!((d|0)!=0&(q|0)==1):0){t=-1;i=l;return t|0}b[n+2>>1]=0;r=0;u=1;do{r=(e[m+(u<<1)>>1]|0)+(r&65535)|0;u=u+1|0;b[n+(u<<1)>>1]=r}while((u|0)!=15);if(!o){o=0;do{u=b[f+(o<<1)>>1]|0;if(!(u<<16>>16==0)){r=n+((u&65535)<<1)|0;u=b[r>>1]|0;b[r>>1]=u+1<<16>>16;b[k+((u&65535)<<1)>>1]=o}o=o+1|0}while((o|0)!=(g|0))}if((d|0)==1){g=1<<p;if(g>>>0>851){t=1;i=l;return t|0}else{w=0;x=g;y=1;z=29784+ -514|0;A=256;B=29848+ -514|0}}else if((d|0)!=0){g=1<<p;o=(d|0)==2;if(o&g>>>0>591){t=1;i=l;return t|0}else{w=o;x=g;y=0;z=29912;A=-1;B=29976}}else{w=0;x=1<<p;y=0;z=k;A=19;B=k}g=x+ -1|0;o=p&255;d=p;n=0;u=0;r=v;v=-1;C=c[h>>2]|0;D=0;E=x;b:while(1){x=1<<d;F=u;G=r;H=D;while(1){I=G-n|0;J=I&255;K=b[k+(H<<1)>>1]|0;L=K&65535;if((L|0)>=(A|0)){if((L|0)>(A|0)){M=b[B+(L<<1)>>1]&255;N=b[z+(L<<1)>>1]|0}else{M=96;N=0}}else{M=0;N=K}K=1<<I;I=F>>>n;L=x;while(1){O=L-K|0;P=O+I|0;a[C+(P<<2)|0]=M;a[C+(P<<2)+1|0]=J;b[C+(P<<2)+2>>1]=N;if((L|0)==(K|0)){break}else{L=O}}L=1<<G+ -1;while(1){if((L&F|0)==0){break}else{L=L>>>1}}if((L|0)==0){Q=0}else{Q=(L+ -1&F)+L|0}R=H+1|0;K=m+(G<<1)|0;I=(b[K>>1]|0)+ -1<<16>>16;b[K>>1]=I;if(I<<16>>16==0){if((G|0)==(q|0)){break b}S=e[f+(e[k+(R<<1)>>1]<<1)>>1]|0}else{S=G}if(!(S>>>0>p>>>0)){F=Q;G=S;H=R;continue}T=Q&g;if((T|0)==(v|0)){F=Q;G=S;H=R}else{break}}H=(n|0)==0?p:n;G=C+(x<<2)|0;F=S-H|0;c:do{if(S>>>0<q>>>0){I=S;K=F;O=1<<F;while(1){P=O-(e[m+(I<<1)>>1]|0)|0;if((P|0)<1){U=K;break c}V=K+1|0;W=V+H|0;if(W>>>0<q>>>0){I=W;K=V;O=P<<1}else{U=V;break}}}else{U=F}}while(0);F=(1<<U)+E|0;if(y&F>>>0>851|w&F>>>0>591){t=1;s=56;break}a[(c[h>>2]|0)+(T<<2)|0]=U;a[(c[h>>2]|0)+(T<<2)+1|0]=o;x=c[h>>2]|0;b[x+(T<<2)+2>>1]=(G-x|0)>>>2;d=U;n=H;u=Q;r=S;v=T;C=G;D=R;E=F}if((s|0)==56){i=l;return t|0}d:do{if((Q|0)!=0){s=n;R=J;D=Q;T=q;S=C;while(1){if((s|0)!=0){if((D&g|0)==(v|0)){X=s;Y=R;Z=T;_=S}else{X=0;Y=o;Z=p;_=c[h>>2]|0}}else{X=0;Y=R;Z=T;_=S}r=D>>>X;a[_+(r<<2)|0]=64;a[_+(r<<2)+1|0]=Y;b[_+(r<<2)+2>>1]=0;r=1<<Z+ -1;while(1){if((r&D|0)==0){break}else{r=r>>>1}}if((r|0)==0){break d}D=(r+ -1&D)+r|0;if((D|0)==0){break}else{s=X;R=Y;T=Z;S=_}}}}while(0);c[h>>2]=(c[h>>2]|0)+(E<<2);c[j>>2]=p;t=0;i=l;return t|0}function An(e,f){e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0;g=i;h=c[e+28>>2]|0;j=c[e>>2]|0;k=e+4|0;l=j+((c[k>>2]|0)+ -6)|0;m=e+12|0;n=c[m>>2]|0;o=e+16|0;p=c[o>>2]|0;q=n+(p+ -258)|0;r=c[h+44>>2]|0;s=c[h+48>>2]|0;t=c[h+52>>2]|0;u=h+56|0;v=h+60|0;w=c[h+76>>2]|0;x=c[h+80>>2]|0;y=(1<<c[h+84>>2])+ -1|0;z=(1<<c[h+88>>2])+ -1|0;A=n+(p+~f)|0;f=h+7104|0;p=t+ -1|0;B=(s|0)==0;C=(c[h+40>>2]|0)+ -1|0;D=C+s|0;E=s+ -1|0;F=A+ -1|0;G=A-s|0;H=c[v>>2]|0;I=c[u>>2]|0;J=j+ -1|0;j=n+ -1|0;a:while(1){if(H>>>0<15){n=J+2|0;K=H+16|0;L=((d[J+1|0]|0)<<H)+I+((d[n]|0)<<H+8)|0;M=n}else{K=H;L=I;M=J}n=L&y;N=a[w+(n<<2)|0]|0;O=b[w+(n<<2)+2>>1]|0;P=d[w+(n<<2)+1|0]|0;n=L>>>P;Q=K-P|0;do{if(!(N<<24>>24==0)){R=N&255;S=Q;T=n;P=O;while(1){if((R&16|0)!=0){break}if((R&64|0)!=0){U=55;break a}V=(T&(1<<R)+ -1)+(P&65535)|0;W=a[w+(V<<2)|0]|0;X=b[w+(V<<2)+2>>1]|0;Y=d[w+(V<<2)+1|0]|0;Z=T>>>Y;_=S-Y|0;if(W<<24>>24==0){U=6;break}else{R=W&255;S=_;T=Z;P=X}}if((U|0)==6){U=0;$=Z;aa=_;ba=X&255;U=7;break}W=P&65535;Y=R&15;if((Y|0)==0){ca=S;da=T;ea=M;fa=W}else{if(S>>>0<Y>>>0){V=M+1|0;ga=S+8|0;ha=((d[V]|0)<<S)+T|0;ia=V}else{ga=S;ha=T;ia=M}ca=ga-Y|0;da=ha>>>Y;ea=ia;fa=(ha&(1<<Y)+ -1)+W|0}if(ca>>>0<15){W=ea+2|0;ja=ca+16|0;ka=((d[ea+1|0]|0)<<ca)+da+((d[W]|0)<<ca+8)|0;la=W}else{ja=ca;ka=da;la=ea}W=ka&z;Y=b[x+(W<<2)+2>>1]|0;V=d[x+(W<<2)+1|0]|0;ma=ka>>>V;na=ja-V|0;V=d[x+(W<<2)|0]|0;if((V&16|0)==0){W=V;oa=ma;pa=na;qa=Y;while(1){if((W&64|0)!=0){U=52;break a}ra=(oa&(1<<W)+ -1)+(qa&65535)|0;sa=b[x+(ra<<2)+2>>1]|0;ta=d[x+(ra<<2)+1|0]|0;ua=oa>>>ta;va=pa-ta|0;ta=d[x+(ra<<2)|0]|0;if((ta&16|0)==0){W=ta;oa=ua;pa=va;qa=sa}else{wa=ua;xa=va;ya=ta;za=sa;break}}}else{wa=ma;xa=na;ya=V;za=Y}qa=za&65535;W=ya&15;if(xa>>>0<W>>>0){P=la+1|0;sa=((d[P]|0)<<xa)+wa|0;ta=xa+8|0;if(ta>>>0<W>>>0){va=la+2|0;Aa=xa+16|0;Ba=((d[va]|0)<<ta)+sa|0;Ca=va}else{Aa=ta;Ba=sa;Ca=P}}else{Aa=xa;Ba=wa;Ca=la}P=(Ba&(1<<W)+ -1)+qa|0;Da=Ba>>>W;Ea=Aa-W|0;W=j;qa=W-A|0;if(!(P>>>0>qa>>>0)){sa=j+(0-P)|0;ta=fa;va=j;while(1){a[va+1|0]=a[sa+1|0]|0;a[va+2|0]=a[sa+2|0]|0;ua=sa+3|0;Fa=va+3|0;a[Fa]=a[ua]|0;ta=ta+ -3|0;if(!(ta>>>0>2)){break}else{sa=ua;va=Fa}}if((ta|0)==0){Ga=Ea;Ha=Da;Ia=Ca;Ja=Fa;break}Y=va+4|0;a[Y]=a[sa+4|0]|0;if(!(ta>>>0>1)){Ga=Ea;Ha=Da;Ia=Ca;Ja=Y;break}Y=va+5|0;a[Y]=a[sa+5|0]|0;Ga=Ea;Ha=Da;Ia=Ca;Ja=Y;break}Y=P-qa|0;if(Y>>>0>r>>>0?(c[f>>2]|0)!=0:0){U=22;break a}do{if(B){V=t+(C-Y)|0;if(Y>>>0<fa>>>0){na=fa-Y|0;ma=P-W|0;ua=V;ra=Y;Ka=j;do{ua=ua+1|0;Ka=Ka+1|0;a[Ka]=a[ua]|0;ra=ra+ -1|0}while((ra|0)!=0);La=j+(F+ma+(1-P))|0;Ma=na;Na=j+(A+ma)|0}else{La=V;Ma=fa;Na=j}}else{if(!(s>>>0<Y>>>0)){ra=t+(E-Y)|0;if(!(Y>>>0<fa>>>0)){La=ra;Ma=fa;Na=j;break}ua=fa-Y|0;Ka=P-W|0;Oa=ra;ra=Y;Pa=j;do{Oa=Oa+1|0;Pa=Pa+1|0;a[Pa]=a[Oa]|0;ra=ra+ -1|0}while((ra|0)!=0);La=j+(F+Ka+(1-P))|0;Ma=ua;Na=j+(A+Ka)|0;break}ra=t+(D-Y)|0;Oa=Y-s|0;if(Oa>>>0<fa>>>0){Pa=fa-Oa|0;V=P-W|0;ma=ra;na=Oa;Oa=j;do{ma=ma+1|0;Oa=Oa+1|0;a[Oa]=a[ma]|0;na=na+ -1|0}while((na|0)!=0);na=j+(G+V)|0;if(s>>>0<Pa>>>0){ma=Pa-s|0;Oa=p;Ka=s;ua=na;do{Oa=Oa+1|0;ua=ua+1|0;a[ua]=a[Oa]|0;Ka=Ka+ -1|0}while((Ka|0)!=0);La=j+(F+V+(1-P))|0;Ma=ma;Na=j+(A+V)|0}else{La=p;Ma=Pa;Na=na}}else{La=ra;Ma=fa;Na=j}}}while(0);if(Ma>>>0>2){P=La;W=Ma;Y=Na;while(1){a[Y+1|0]=a[P+1|0]|0;a[Y+2|0]=a[P+2|0]|0;qa=P+3|0;sa=Y+3|0;a[sa]=a[qa]|0;va=W+ -3|0;if(va>>>0>2){P=qa;W=va;Y=sa}else{Qa=qa;Ra=va;Sa=sa;break}}}else{Qa=La;Ra=Ma;Sa=Na}if((Ra|0)!=0){Y=Sa+1|0;a[Y]=a[Qa+1|0]|0;if(Ra>>>0>1){W=Sa+2|0;a[W]=a[Qa+2|0]|0;Ga=Ea;Ha=Da;Ia=Ca;Ja=W}else{Ga=Ea;Ha=Da;Ia=Ca;Ja=Y}}else{Ga=Ea;Ha=Da;Ia=Ca;Ja=Sa}}else{$=n;aa=Q;ba=O&255;U=7}}while(0);if((U|0)==7){U=0;O=j+1|0;a[O]=ba;Ga=aa;Ha=$;Ia=M;Ja=O}if(Ia>>>0<l>>>0&Ja>>>0<q>>>0){H=Ga;I=Ha;J=Ia;j=Ja}else{Ta=Ga;Ua=Ha;Va=Ia;Wa=Ja;break}}do{if((U|0)==22){c[e+24>>2]=30040;c[h>>2]=29;Ta=Ea;Ua=Da;Va=Ca;Wa=j}else if((U|0)==52){c[e+24>>2]=30072;c[h>>2]=29;Ta=pa;Ua=oa;Va=la;Wa=j}else if((U|0)==55){if((R&32|0)==0){c[e+24>>2]=30096;c[h>>2]=29;Ta=S;Ua=T;Va=M;Wa=j;break}else{c[h>>2]=11;Ta=S;Ua=T;Va=M;Wa=j;break}}}while(0);j=Ta>>>3;M=Va+(0-j)|0;T=Ta-(j<<3)|0;Ta=(1<<T)+ -1&Ua;c[e>>2]=Va+(1-j);c[m>>2]=Wa+1;if(M>>>0<l>>>0){Xa=l-M|0}else{Xa=l-M|0}c[k>>2]=Xa+5;if(Wa>>>0<q>>>0){Ya=q-Wa|0;Za=Ya+257|0;c[o>>2]=Za;c[u>>2]=Ta;c[v>>2]=T;i=g;return}else{Ya=q-Wa|0;Za=Ya+257|0;c[o>>2]=Za;c[u>>2]=Ta;c[v>>2]=T;i=g;return}}function Bn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;a=i;d=Wz(aa(c,b)|0)|0;i=a;return d|0}function Cn(a,b){a=a|0;b=b|0;a=i;Xz(b);i=a;return}function Dn(b,f,g){b=b|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;h=i;i=i+80|0;j=h+52|0;k=h+40|0;l=h+44|0;m=h+48|0;n=h+56|0;o=h+60|0;p=h+64|0;q=h+68|0;r=h+72|0;s=h+36|0;t=h+12|0;u=h;v=h+4|0;w=h+8|0;x=h+16|0;y=h+20|0;z=h+24|0;A=h+28|0;B=h+32|0;c[k>>2]=b;c[l>>2]=f;c[m>>2]=g;a[r]=0;c[t>>2]=c[k>>2];if(((c[k>>2]|0)!=0?(c[(c[k>>2]|0)+88>>2]|0)!=0:0)?(c[(c[k>>2]|0)+84>>2]|0)!=0:0){c[p>>2]=c[(c[k>>2]|0)+84>>2];so(c[p>>2]|0);c[o>>2]=c[(c[k>>2]|0)+96>>2];c[q>>2]=c[(c[o>>2]|0)+4>>2];c[s>>2]=c[(c[q>>2]|0)+160>>2];if((c[m>>2]&1024|0)!=0){c[m>>2]=c[m>>2]|2049}if((c[m>>2]&1|0)!=0){c[m>>2]=c[m>>2]|10;c[m>>2]=c[m>>2]&-5}a:do{if((((((c[s>>2]|0)!=0?(c[m>>2]&2|0)==0:0)?(c[m>>2]&32768|0)==0:0)?(c[c[c[o>>2]>>2]>>2]&256|0)!=0:0)?(c[c[c[o>>2]>>2]>>2]&512|0)==0:0)?(c[(c[k>>2]|0)+8>>2]&8192|0)==0:0){do{if((c[m>>2]&2048|0)==0){if((c[(c[(c[k>>2]|0)+128>>2]|0)+8>>2]|0)==0?(c[c[(c[k>>2]|0)+128>>2]>>2]|0)!=0:0){break}if((c[c[(c[k>>2]|0)+128>>2]>>2]|0)!=0){break a}if((c[(c[(c[k>>2]|0)+128>>2]|0)+8>>2]|0)==0){break a}}}while(0);if((c[m>>2]&32|0)==0?(c[c[c[o>>2]>>2]>>2]&1024|0)!=0:0){c[u>>2]=c[m>>2]>>16&15;if((c[u>>2]|0)!=1?(d[(c[(c[k>>2]|0)+128>>2]|0)+52|0]|0)==0:0){if((c[(c[k>>2]|0)+8>>2]&8|0)==0){break}if((c[(c[t>>2]|0)+696>>2]|0)==0){break}if((e[(c[t>>2]|0)+286>>1]|0)!=0){break}if((c[(c[t>>2]|0)+628>>2]|0)!=0){break}if((c[(c[t>>2]|0)+636>>2]|0)!=0){break}}a[r]=1;break}a[r]=1}}while(0);do{if((a[r]|0)==0){c[n>>2]=yd[c[(c[(c[o>>2]|0)+12>>2]|0)+72>>2]&31](c[p>>2]|0,c[(c[k>>2]|0)+88>>2]|0,c[l>>2]|0,c[m>>2]|0)|0;if((c[n>>2]|0)==0){if((c[(c[p>>2]|0)+72>>2]|0)==1869968492){c[n>>2]=to((c[p>>2]|0)+108|0)|0;if((c[n>>2]|0)==0){if((c[m>>2]&2|0)!=0){C=42}else{uo(c[p>>2]|0,c[m>>2]&16);C=42}}}else{C=42}}}else{if((((c[(c[k>>2]|0)+8>>2]&2|0)!=0?(c[m>>2]&8|0)==0:0)?(c[n>>2]=yd[c[(c[(c[o>>2]|0)+12>>2]|0)+72>>2]&31](c[p>>2]|0,c[(c[k>>2]|0)+88>>2]|0,c[l>>2]|0,c[m>>2]|16384)|0,(c[n>>2]|0)==0):0)?(c[(c[p>>2]|0)+72>>2]|0)==1651078259:0){C=42;break}c[w>>2]=c[(c[k>>2]|0)+128>>2];c[x>>2]=c[(c[w>>2]|0)+24>>2];c[(c[w>>2]|0)+24>>2]=0;c[v>>2]=c[(c[c[s>>2]>>2]|0)+20>>2];c[n>>2]=Bd[c[(c[v>>2]|0)+12>>2]&15](c[s>>2]|0,c[p>>2]|0,c[(c[k>>2]|0)+88>>2]|0,c[l>>2]|0,c[m>>2]|0)|0;c[(c[w>>2]|0)+24>>2]=c[x>>2];C=42}}while(0);if((C|0)==42){C=c[p>>2]|0;if((c[m>>2]&16|0)!=0){c[C+64>>2]=0;c[(c[p>>2]|0)+68>>2]=c[(c[p>>2]|0)+52>>2]}else{c[(c[p>>2]|0)+64>>2]=c[C+40>>2];c[(c[p>>2]|0)+68>>2]=0}if((c[m>>2]&8192|0)==0?(c[(c[k>>2]|0)+8>>2]&1|0)!=0:0){c[y>>2]=(c[(c[k>>2]|0)+88>>2]|0)+12;C=In(c[(c[p>>2]|0)+56>>2]|0,c[(c[y>>2]|0)+4>>2]|0,64)|0;c[(c[p>>2]|0)+56>>2]=C;C=In(c[(c[p>>2]|0)+60>>2]|0,c[(c[y>>2]|0)+8>>2]|0,64)|0;c[(c[p>>2]|0)+60>>2]=C}if((c[m>>2]&2048|0)==0?(c[z>>2]=c[(c[k>>2]|0)+128>>2],(c[(c[z>>2]|0)+24>>2]|0)!=0):0){c[A>>2]=vo(c[p>>2]|0)|0;if((c[A>>2]|0)==0){if((c[(c[p>>2]|0)+72>>2]|0)==1869968492){if((c[(c[z>>2]|0)+24>>2]&1|0)!=0){wo((c[p>>2]|0)+108|0,c[z>>2]|0)}if((c[(c[z>>2]|0)+24>>2]&2|0)!=0){xo((c[p>>2]|0)+108|0,c[(c[z>>2]|0)+16>>2]|0,c[(c[z>>2]|0)+20>>2]|0)}}}else{c[n>>2]=yd[c[(c[(c[A>>2]|0)+12>>2]|0)+44>>2]&31](c[A>>2]|0,c[p>>2]|0,c[z>>2]|0,(c[z>>2]|0)+16|0)|0}yo((c[p>>2]|0)+64|0,c[z>>2]|0)}if((((c[n>>2]|0)==0?(c[(c[p>>2]|0)+72>>2]|0)!=1651078259:0)?(c[(c[p>>2]|0)+72>>2]|0)!=1668246896:0)?(c[m>>2]&4|0)!=0:0){c[B>>2]=c[m>>2]>>16&15;if((c[B>>2]|0)==0?(c[m>>2]&4096|0)!=0:0){c[B>>2]=2}c[n>>2]=zo(c[p>>2]|0,c[B>>2]|0)|0}}c[j>>2]=c[n>>2];D=c[j>>2]|0;i=h;return D|0}c[j>>2]=35;D=c[j>>2]|0;i=h;return D|0}function En(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=c[d>>2]|0;if((c[d>>2]|0)>=0){e=a+32768&-65536;i=b;return e|0}else{e=0-(0-a+32768&-65536)|0;i=b;return e|0}return 0}function Fn(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;i=i+16|0;d=b+4|0;e=b;c[d>>2]=a;c[e>>2]=0;if((c[d>>2]|0)>>>0>=65536){c[d>>2]=(c[d>>2]|0)>>>16;c[e>>2]=(c[e>>2]|0)+16}if((c[d>>2]|0)>>>0>=256){c[d>>2]=(c[d>>2]|0)>>>8;c[e>>2]=(c[e>>2]|0)+8}if((c[d>>2]|0)>>>0>=16){c[d>>2]=(c[d>>2]|0)>>>4;c[e>>2]=(c[e>>2]|0)+4}if((c[d>>2]|0)>>>0>=4){c[d>>2]=(c[d>>2]|0)>>>2;c[e>>2]=(c[e>>2]|0)+2}if(!((c[d>>2]|0)>>>0>=2)){f=c[e>>2]|0;i=b;return f|0}c[e>>2]=(c[e>>2]|0)+1;f=c[e>>2]|0;i=b;return f|0}function Gn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+32|0;e=d+16|0;f=d;g=d+8|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=c[e>>2];c[g+4>>2]=c[f>>2];f=Hn(g)|0;i=d;return f|0}function Hn(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;i=i+32|0;d=b+16|0;e=b;f=b+4|0;g=b+8|0;c[e>>2]=a;a=c[e>>2]|0;c[g+0>>2]=c[a+0>>2];c[g+4>>2]=c[a+4>>2];a=c[g+4>>2]|0;if((c[g>>2]|0)==0){e=c[g+4>>2]|0;c[d>>2]=(a|0)<0?0-e|0:e;h=c[d>>2]|0;i=b;return h|0}if((a|0)==0){a=c[g>>2]|0;c[d>>2]=(c[g>>2]|0)<0?0-a|0:a;h=c[d>>2]|0;i=b;return h|0}c[f>>2]=Mp(g)|0;Np(g);c[g>>2]=Pp(c[g>>2]|0)|0;a=c[g>>2]|0;g=c[f>>2]|0;if((c[f>>2]|0)>0){c[d>>2]=a+(1<<g-1)>>c[f>>2];h=c[d>>2]|0;i=b;return h|0}else{c[d>>2]=a<<0-g;h=c[d>>2]|0;i=b;return h|0}return 0}function In(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+48|0;f=e+32|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;m=e+24|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;if((c[g>>2]|0)!=0?(c[h>>2]|0)!=(c[j>>2]|0):0){c[k>>2]=c[g>>2];d=c[g>>2]|0;c[g>>2]=(c[g>>2]|0)<0?0-d|0:d;c[k>>2]=c[k>>2]^c[h>>2];d=c[h>>2]|0;c[h>>2]=(c[h>>2]|0)<0?0-d|0:d;c[k>>2]=c[k>>2]^c[j>>2];d=c[j>>2]|0;c[j>>2]=(c[j>>2]|0)<0?0-d|0:d;if(((c[g>>2]|0)<=46340?(c[h>>2]|0)<=46340:0)?(c[j>>2]|0)<=176095&(c[j>>2]|0)>0:0){d=aa(c[g>>2]|0,c[h>>2]|0)|0;c[g>>2]=(d+(c[j>>2]>>1)|0)/(c[j>>2]|0)|0}else{n=8}do{if((n|0)==8){if((c[j>>2]|0)>0){Jn(c[g>>2]|0,c[h>>2]|0,l);c[m+4>>2]=0;c[m>>2]=c[j>>2]>>1;Kn(l,m,l);c[g>>2]=Ln(c[l+4>>2]|0,c[l>>2]|0,c[j>>2]|0)|0;break}else{c[g>>2]=2147483647;break}}}while(0);j=c[g>>2]|0;c[f>>2]=(c[k>>2]|0)<0?0-j|0:j;o=c[f>>2]|0;i=e;return o|0}c[f>>2]=c[g>>2];o=c[f>>2]|0;i=e;return o|0}function Jn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+48|0;f=e+40|0;g=e+36|0;h=e+32|0;j=e+28|0;k=e+24|0;l=e+20|0;m=e+12|0;n=e+8|0;o=e+4|0;p=e;q=e+16|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[j>>2]=c[f>>2]&65535;c[k>>2]=(c[f>>2]|0)>>>16;c[l>>2]=c[g>>2]&65535;c[m>>2]=(c[g>>2]|0)>>>16;c[n>>2]=aa(c[j>>2]|0,c[l>>2]|0)|0;c[p>>2]=aa(c[j>>2]|0,c[m>>2]|0)|0;c[q>>2]=aa(c[l>>2]|0,c[k>>2]|0)|0;c[o>>2]=aa(c[k>>2]|0,c[m>>2]|0)|0;c[p>>2]=(c[p>>2]|0)+(c[q>>2]|0);c[o>>2]=(c[o>>2]|0)+(((c[p>>2]|0)>>>0<(c[q>>2]|0)>>>0)<<16);c[o>>2]=(c[o>>2]|0)+((c[p>>2]|0)>>>16);c[p>>2]=c[p>>2]<<16;c[n>>2]=(c[n>>2]|0)+(c[p>>2]|0);c[o>>2]=(c[o>>2]|0)+((c[n>>2]|0)>>>0<(c[p>>2]|0)>>>0);c[c[h>>2]>>2]=c[n>>2];c[(c[h>>2]|0)+4>>2]=c[o>>2];i=e;return}function Kn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+32|0;f=e+16|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[j>>2]=(c[c[f>>2]>>2]|0)+(c[c[g>>2]>>2]|0);c[k>>2]=(c[(c[f>>2]|0)+4>>2]|0)+(c[(c[g>>2]|0)+4>>2]|0)+((c[j>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0);c[c[h>>2]>>2]=c[j>>2];c[(c[h>>2]|0)+4>>2]=c[k>>2];i=e;return}function Ln(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+32|0;f=e+24|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;m=e+20|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[l>>2]=0;c[k>>2]=c[g>>2];if((c[k>>2]|0)>>>0>=(c[j>>2]|0)>>>0){c[f>>2]=2147483647;n=c[f>>2]|0;i=e;return n|0}c[m>>2]=32;do{c[k>>2]=c[k>>2]<<1;c[l>>2]=c[l>>2]<<1;c[k>>2]=c[k>>2]|(c[h>>2]|0)>>>31;if((c[k>>2]|0)>>>0>=(c[j>>2]|0)>>>0){c[k>>2]=(c[k>>2]|0)-(c[j>>2]|0);c[l>>2]=c[l>>2]|1}c[h>>2]=c[h>>2]<<1;g=(c[m>>2]|0)+ -1|0;c[m>>2]=g}while((g|0)!=0);c[f>>2]=c[l>>2];n=c[f>>2]|0;i=e;return n|0}function Mn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+32|0;f=e+24|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;if((c[g>>2]|0)!=0?(c[h>>2]|0)!=(c[j>>2]|0):0){c[k>>2]=c[g>>2];d=c[g>>2]|0;c[g>>2]=(c[g>>2]|0)<0?0-d|0:d;c[k>>2]=c[k>>2]^c[h>>2];d=c[h>>2]|0;c[h>>2]=(c[h>>2]|0)<0?0-d|0:d;c[k>>2]=c[k>>2]^c[j>>2];d=c[j>>2]|0;c[j>>2]=(c[j>>2]|0)<0?0-d|0:d;if(((c[g>>2]|0)<=46340?(c[h>>2]|0)<=46340:0)?(c[j>>2]|0)>0:0){d=aa(c[g>>2]|0,c[h>>2]|0)|0;c[g>>2]=(d|0)/(c[j>>2]|0)|0}else{m=8}do{if((m|0)==8){if((c[j>>2]|0)>0){Jn(c[g>>2]|0,c[h>>2]|0,l);c[g>>2]=Ln(c[l+4>>2]|0,c[l>>2]|0,c[j>>2]|0)|0;break}else{c[g>>2]=2147483647;break}}}while(0);j=c[g>>2]|0;c[f>>2]=(c[k>>2]|0)<0?0-j|0:j;n=c[f>>2]|0;i=e;return n|0}c[f>>2]=c[g>>2];n=c[f>>2]|0;i=e;return n|0}function Nn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;i=i+32|0;e=d+24|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;k=d+16|0;l=d+20|0;c[f>>2]=a;c[g>>2]=b;if((c[f>>2]|0)!=0?(c[g>>2]|0)!=65536:0){c[h>>2]=c[f>>2];b=c[f>>2]|0;c[f>>2]=(c[f>>2]|0)<0?0-b|0:b;c[h>>2]=c[h>>2]^c[g>>2];b=c[g>>2]|0;c[g>>2]=(c[g>>2]|0)<0?0-b|0:b;c[j>>2]=c[f>>2];c[k>>2]=c[g>>2];if((c[j>>2]|0)>>>0<=2048?(c[k>>2]|0)>>>0<=1048576:0){c[j>>2]=((aa(c[j>>2]|0,c[k>>2]|0)|0)+32768|0)>>>16}else{c[l>>2]=c[j>>2]&65535;g=aa((c[j>>2]|0)>>>16,c[k>>2]|0)|0;b=g+(aa(c[l>>2]|0,(c[k>>2]|0)>>>16)|0)|0;c[j>>2]=b+(((aa(c[l>>2]|0,c[k>>2]&65535)|0)+32768|0)>>>16)}k=c[j>>2]|0;c[e>>2]=(c[h>>2]|0)<0?0-k|0:k;m=c[e>>2]|0;i=d;return m|0}c[e>>2]=c[f>>2];m=c[e>>2]|0;i=d;return m|0}function On(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+48|0;e=d+32|0;f=d;g=d+4|0;h=d+8|0;j=d+16|0;k=d+24|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=c[e>>2];b=c[e>>2]|0;c[e>>2]=(c[e>>2]|0)<0?0-b|0:b;c[g>>2]=c[g>>2]^c[f>>2];b=c[f>>2]|0;c[f>>2]=(c[f>>2]|0)<0?0-b|0:b;do{if((c[f>>2]|0)!=0){b=c[e>>2]|0;if((c[e>>2]>>16|0)==0){c[h>>2]=(((b<<16)+(c[f>>2]>>1)|0)>>>0)/((c[f>>2]|0)>>>0)|0;break}else{c[j+4>>2]=b>>16;c[j>>2]=c[e>>2]<<16;c[k+4>>2]=0;c[k>>2]=c[f>>2]>>1;Kn(j,k,j);c[h>>2]=Ln(c[j+4>>2]|0,c[j>>2]|0,c[f>>2]|0)|0;break}}else{c[h>>2]=2147483647}}while(0);f=c[h>>2]|0;i=d;return((c[g>>2]|0)<0?0-f|0:f)|0}function Pn(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+48|0;g=f+32|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;m=f+16|0;n=f+24|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;e=c[g>>2]|0;do{if((c[h>>2]|0)==0){d=c[k>>2]|0;if((e|0)>=0){c[l>>2]=d;break}else{c[l>>2]=0-d;break}}else{if((e|0)==0){d=c[j>>2]|0;if((c[h>>2]|0)>=0){c[l>>2]=0-d;break}else{c[l>>2]=d;break}}d=c[j>>2]|0;if((c[k>>2]|0)==0){b=c[h>>2]|0;if((d|0)>=0){c[l>>2]=b;break}else{c[l>>2]=0-b;break}}if((d|0)==0){d=c[g>>2]|0;if((c[k>>2]|0)>=0){c[l>>2]=0-d;break}else{c[l>>2]=d;break}}Jn(c[g>>2]|0,c[k>>2]|0,m);Jn(c[h>>2]|0,c[j>>2]|0,n);if((c[m+4>>2]|0)>>>0>(c[n+4>>2]|0)>>>0){c[l>>2]=1;break}if((c[m+4>>2]|0)>>>0<(c[n+4>>2]|0)>>>0){c[l>>2]=-1;break}if((c[m>>2]|0)>>>0>(c[n>>2]|0)>>>0){c[l>>2]=1;break}if((c[m>>2]|0)>>>0<(c[n>>2]|0)>>>0){c[l>>2]=-1;break}else{c[l>>2]=0;break}}}while(0);i=f;return c[l>>2]|0}function Qn(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;f=i;i=i+48|0;g=f+32|0;h=f+28|0;j=f+24|0;k=f+20|0;l=f+16|0;m=f+8|0;n=f+4|0;o=f;p=f+12|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;c[l>>2]=c[g>>2];c[m>>2]=c[h>>2];if((c[l>>2]|0)<0){c[l>>2]=0-(c[l>>2]|0)}if((c[m>>2]|0)<0){c[m>>2]=0-(c[m>>2]|0)}c[n>>2]=(c[l>>2]|0)+(c[m>>2]|0);c[l>>2]=c[j>>2];if((c[l>>2]|0)<0){c[l>>2]=0-(c[l>>2]|0)}c[m>>2]=c[k>>2];if((c[m>>2]|0)<0){c[m>>2]=0-(c[m>>2]|0)}c[o>>2]=(c[l>>2]|0)+(c[m>>2]|0);c[l>>2]=(c[j>>2]|0)+(c[g>>2]|0);if((c[l>>2]|0)<0){c[l>>2]=0-(c[l>>2]|0)}c[m>>2]=(c[k>>2]|0)+(c[h>>2]|0);if((c[m>>2]|0)>=0){q=c[l>>2]|0;r=c[m>>2]|0;s=q+r|0;c[p>>2]=s;t=c[n>>2]|0;u=c[o>>2]|0;v=t+u|0;w=c[p>>2]|0;x=v-w|0;y=c[p>>2]|0;z=y>>4;A=(x|0)<(z|0);B=A&1;i=f;return B|0}c[m>>2]=0-(c[m>>2]|0);q=c[l>>2]|0;r=c[m>>2]|0;s=q+r|0;c[p>>2]=s;t=c[n>>2]|0;u=c[o>>2]|0;v=t+u|0;w=c[p>>2]|0;x=v-w|0;y=c[p>>2]|0;z=y>>4;A=(x|0)<(z|0);B=A&1;i=f;return B|0}function Rn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;e=d+12|0;f=d;g=d+4|0;h=d+8|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=0;c[g>>2]=Sn(c[e>>2]|0,96,h)|0;if((c[h>>2]|0)!=0){j=c[h>>2]|0;i=d;return j|0}c[c[g>>2]>>2]=c[e>>2];c[c[f>>2]>>2]=c[g>>2];j=c[h>>2]|0;i=d;return j|0}function Sn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+32|0;f=e+16|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[k>>2]=Ap(c[f>>2]|0,c[g>>2]|0,j)|0;if((c[j>>2]|0)==0?(c[g>>2]|0)>0:0){nA(c[k>>2]|0,0,c[g>>2]|0)|0}c[c[h>>2]>>2]=c[j>>2];i=e;return c[k>>2]|0}function Tn(a){a=a|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d+8|0;f=d;g=d+4|0;c[e>>2]=a;c[f>>2]=(c[e>>2]|0)+20;c[g>>2]=(c[e>>2]|0)+56;b[(c[f>>2]|0)+2>>1]=0;b[c[f>>2]>>1]=0;c[(c[f>>2]|0)+28>>2]=0;e=(c[g>>2]|0)+0|0;g=(c[f>>2]|0)+0|0;f=e+36|0;do{c[e>>2]=c[g>>2];e=e+4|0;g=g+4|0}while((e|0)<(f|0));i=d;return}function Un(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b+4|0;e=b;c[d>>2]=a;c[e>>2]=c[c[d>>2]>>2];Vn(c[e>>2]|0,c[(c[d>>2]|0)+24>>2]|0);c[(c[d>>2]|0)+24>>2]=0;Vn(c[e>>2]|0,c[(c[d>>2]|0)+28>>2]|0);c[(c[d>>2]|0)+28>>2]=0;Vn(c[e>>2]|0,c[(c[d>>2]|0)+32>>2]|0);c[(c[d>>2]|0)+32>>2]=0;Vn(c[e>>2]|0,c[(c[d>>2]|0)+40>>2]|0);c[(c[d>>2]|0)+40>>2]=0;Vn(c[e>>2]|0,c[(c[d>>2]|0)+52>>2]|0);c[(c[d>>2]|0)+52>>2]=0;c[(c[d>>2]|0)+44>>2]=0;c[(c[d>>2]|0)+4>>2]=0;c[(c[d>>2]|0)+8>>2]=0;c[(c[d>>2]|0)+12>>2]=0;Tn(c[d>>2]|0);i=b;return}function Vn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;if((c[f>>2]|0)==0){i=d;return}td[c[(c[e>>2]|0)+8>>2]&31](c[e>>2]|0,c[f>>2]|0);i=d;return}function Wn(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b+4|0;e=b;c[d>>2]=a;if((c[d>>2]|0)==0){i=b;return}c[e>>2]=c[c[d>>2]>>2];Un(c[d>>2]|0);Vn(c[e>>2]|0,c[d>>2]|0);c[d>>2]=0;i=b;return}function Xn(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d+8|0;f=d;g=d+4|0;c[e>>2]=b;c[g>>2]=c[c[e>>2]>>2];b=Yn(c[g>>2]|0,8,0,c[(c[e>>2]|0)+4>>2]<<1,0,f)|0;c[(c[e>>2]|0)+40>>2]=b;if((c[f>>2]|0)!=0){h=c[f>>2]|0;i=d;return h|0}a[(c[e>>2]|0)+16|0]=1;c[(c[e>>2]|0)+44>>2]=(c[(c[e>>2]|0)+40>>2]|0)+(c[(c[e>>2]|0)+4>>2]<<3);Zn(c[e>>2]|0);h=c[f>>2]|0;i=d;return h|0}function Yn(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=i;i=i+32|0;j=h+24|0;k=h;l=h+4|0;m=h+8|0;n=h+12|0;o=h+16|0;p=h+20|0;c[j>>2]=a;c[k>>2]=b;c[l>>2]=d;c[m>>2]=e;c[n>>2]=f;c[o>>2]=g;c[p>>2]=0;c[n>>2]=Sp(c[j>>2]|0,c[k>>2]|0,c[l>>2]|0,c[m>>2]|0,c[n>>2]|0,p)|0;if((c[p>>2]|0)==0?(c[m>>2]|0)>(c[l>>2]|0):0){j=(c[n>>2]|0)+(aa(c[l>>2]|0,c[k>>2]|0)|0)|0;nA(j|0,0,aa((c[m>>2]|0)-(c[l>>2]|0)|0,c[k>>2]|0)|0)|0}c[c[o>>2]>>2]=c[p>>2];i=h;return c[n>>2]|0}function Zn(d){d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=d;c[g>>2]=(c[f>>2]|0)+20;c[h>>2]=(c[f>>2]|0)+56;c[(c[h>>2]|0)+4>>2]=(c[(c[g>>2]|0)+4>>2]|0)+(b[(c[g>>2]|0)+2>>1]<<3);c[(c[h>>2]|0)+8>>2]=(c[(c[g>>2]|0)+8>>2]|0)+(b[(c[g>>2]|0)+2>>1]|0);c[(c[h>>2]|0)+12>>2]=(c[(c[g>>2]|0)+12>>2]|0)+(b[c[g>>2]>>1]<<1);if((a[(c[f>>2]|0)+16|0]|0)==0){i=e;return}c[(c[f>>2]|0)+76>>2]=(c[(c[f>>2]|0)+40>>2]|0)+(b[(c[g>>2]|0)+2>>1]<<3);c[(c[f>>2]|0)+80>>2]=(c[(c[f>>2]|0)+44>>2]|0)+(b[(c[g>>2]|0)+2>>1]<<3);i=e;return}function _n(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;g=i;i=i+48|0;h=g+36|0;j=g+32|0;k=g+28|0;l=g+24|0;m=g+20|0;n=g+16|0;o=g+8|0;p=g+4|0;q=g+40|0;r=g;s=g+12|0;c[j>>2]=d;c[k>>2]=e;c[l>>2]=f;c[m>>2]=c[c[j>>2]>>2];c[n>>2]=0;c[o>>2]=(c[j>>2]|0)+20;c[p>>2]=(c[j>>2]|0)+56;a[q]=0;c[r>>2]=(b[(c[o>>2]|0)+2>>1]|0)+(b[(c[p>>2]|0)+2>>1]|0)+(c[k>>2]|0);c[s>>2]=c[(c[j>>2]|0)+4>>2];do{if((c[r>>2]|0)>>>0>(c[s>>2]|0)>>>0){c[r>>2]=(c[r>>2]|0)+7&-8;if((c[r>>2]|0)>>>0>32767){c[h>>2]=10;t=c[h>>2]|0;i=g;return t|0}k=Yn(c[m>>2]|0,8,c[s>>2]|0,c[r>>2]|0,c[(c[o>>2]|0)+4>>2]|0,n)|0;c[(c[o>>2]|0)+4>>2]=k;if((c[n>>2]|0)==0?(k=Yn(c[m>>2]|0,1,c[s>>2]|0,c[r>>2]|0,c[(c[o>>2]|0)+8>>2]|0,n)|0,c[(c[o>>2]|0)+8>>2]=k,(c[n>>2]|0)==0):0){if((a[(c[j>>2]|0)+16|0]|0)!=0){k=Yn(c[m>>2]|0,8,c[s>>2]<<1,c[r>>2]<<1,c[(c[j>>2]|0)+40>>2]|0,n)|0;c[(c[j>>2]|0)+40>>2]=k;if((c[n>>2]|0)!=0){break}mA((c[(c[j>>2]|0)+40>>2]|0)+(c[r>>2]<<3)|0,(c[(c[j>>2]|0)+40>>2]|0)+(c[s>>2]<<3)|0,c[s>>2]<<3|0)|0;c[(c[j>>2]|0)+44>>2]=(c[(c[j>>2]|0)+40>>2]|0)+(c[r>>2]<<3)}a[q]=1;c[(c[j>>2]|0)+4>>2]=c[r>>2];u=10}}else{u=10}}while(0);a:do{if((u|0)==10){c[s>>2]=c[(c[j>>2]|0)+8>>2];c[r>>2]=(b[c[o>>2]>>1]|0)+(b[c[p>>2]>>1]|0)+(c[l>>2]|0);do{if((c[r>>2]|0)>>>0>(c[s>>2]|0)>>>0){c[r>>2]=(c[r>>2]|0)+3&-4;if((c[r>>2]|0)>>>0>32767){c[h>>2]=10;t=c[h>>2]|0;i=g;return t|0}else{k=Yn(c[m>>2]|0,2,c[s>>2]|0,c[r>>2]|0,c[(c[o>>2]|0)+12>>2]|0,n)|0;c[(c[o>>2]|0)+12>>2]=k;if((c[n>>2]|0)!=0){break a}a[q]=1;c[(c[j>>2]|0)+8>>2]=c[r>>2];break}}}while(0);if((a[q]|0)!=0){Zn(c[j>>2]|0)}}}while(0);if((c[n>>2]|0)!=0){Un(c[j>>2]|0)}c[h>>2]=c[n>>2];t=c[h>>2]|0;i=g;return t|0}function $n(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+32|0;e=d+28|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;k=d+16|0;l=d+20|0;m=d+24|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=c[c[e>>2]>>2];c[h>>2]=0;c[l>>2]=(c[e>>2]|0)+20;c[m>>2]=(c[e>>2]|0)+56;c[j>>2]=(c[(c[l>>2]|0)+28>>2]|0)+(c[(c[m>>2]|0)+28>>2]|0)+(c[f>>2]|0);c[k>>2]=c[(c[e>>2]|0)+12>>2];if(!((c[j>>2]|0)>>>0>(c[k>>2]|0)>>>0)){n=c[h>>2]|0;i=d;return n|0}c[j>>2]=(c[j>>2]|0)+1&-2;f=Yn(c[g>>2]|0,32,c[k>>2]|0,c[j>>2]|0,c[(c[l>>2]|0)+32>>2]|0,h)|0;c[(c[l>>2]|0)+32>>2]=f;if((c[h>>2]|0)!=0){n=c[h>>2]|0;i=d;return n|0}c[(c[e>>2]|0)+12>>2]=c[j>>2];ao(c[e>>2]|0);n=c[h>>2]|0;i=d;return n|0}function ao(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;i=i+16|0;d=b+8|0;e=b;f=b+4|0;c[d>>2]=a;c[e>>2]=(c[d>>2]|0)+20;c[f>>2]=(c[d>>2]|0)+56;c[(c[f>>2]|0)+32>>2]=(c[(c[e>>2]|0)+32>>2]|0)+(c[(c[e>>2]|0)+28>>2]<<5);i=b;return}function bo(a){a=a|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=(c[e>>2]|0)+56;b[(c[f>>2]|0)+2>>1]=0;b[c[f>>2]>>1]=0;c[(c[f>>2]|0)+28>>2]=0;Zn(c[e>>2]|0);ao(c[e>>2]|0);i=d;return}function co(a){a=a|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+32|0;e=d+20|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;k=d+16|0;c[e>>2]=a;if((c[e>>2]|0)==0){i=d;return}c[f>>2]=(c[e>>2]|0)+20;c[g>>2]=(c[e>>2]|0)+56;c[h>>2]=b[c[g>>2]>>1]|0;c[j>>2]=b[(c[f>>2]|0)+2>>1]|0;b[(c[f>>2]|0)+2>>1]=(b[(c[f>>2]|0)+2>>1]|0)+(b[(c[g>>2]|0)+2>>1]|0);b[c[f>>2]>>1]=(b[c[f>>2]>>1]|0)+(b[c[g>>2]>>1]|0);a=(c[f>>2]|0)+28|0;c[a>>2]=(c[a>>2]|0)+(c[(c[g>>2]|0)+28>>2]|0);c[k>>2]=0;while(1){if(!((c[k>>2]|0)>>>0<(c[h>>2]|0)>>>0)){break}b[(c[(c[g>>2]|0)+12>>2]|0)+(c[k>>2]<<1)>>1]=(b[(c[(c[g>>2]|0)+12>>2]|0)+(c[k>>2]<<1)>>1]|0)+(c[j>>2]|0);c[k>>2]=(c[k>>2]|0)+1}bo(c[e>>2]|0);i=d;return}function eo(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;e=d+12|0;f=d;g=d+4|0;h=d+8|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=0;c[h>>2]=c[e>>2];a:do{if((c[h>>2]|0)!=0?(c[f>>2]|0)!=0:0){while(1){if((c[c[h>>2]>>2]|0)==0){break a}e=(cA(c[c[h>>2]>>2]|0,c[f>>2]|0)|0)==0;j=c[h>>2]|0;if(e){break}c[h>>2]=j+8}c[g>>2]=c[j+4>>2]}}while(0);i=d;return c[g>>2]|0}function fo(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;g=f+12|0;h=f;j=f+4|0;k=f+8|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;c[c[g>>2]>>2]=c[h>>2];c[(c[g>>2]|0)+4>>2]=c[j>>2];c[(c[g>>2]|0)+8>>2]=c[k>>2];c[(c[g>>2]|0)+12>>2]=0;i=f;return}function go(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d+8|0;f=d;g=d+4|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=(c[e>>2]|0)+16;c[(c[e>>2]|0)+12>>2]=c[f>>2];Ea(c[g>>2]|0,1)}function ho(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+32|0;f=e+24|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;m=e+20|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[m>>2]=0;c[c[j>>2]>>2]=0;if((c[g>>2]|0)==0){c[f>>2]=33;n=c[f>>2]|0;i=e;return n|0}if((c[h>>2]|0)==0){c[f>>2]=6;n=c[f>>2]|0;i=e;return n|0}c[l>>2]=c[c[g>>2]>>2];c[m>>2]=Sn(c[l>>2]|0,40,k)|0;if((c[k>>2]|0)==0){c[(c[m>>2]|0)+28>>2]=c[l>>2];do{if((c[c[h>>2]>>2]&1|0)!=0){io(c[m>>2]|0,c[(c[h>>2]|0)+4>>2]|0,c[(c[h>>2]|0)+8>>2]|0)}else{if((c[c[h>>2]>>2]&4|0)!=0){c[k>>2]=fr(c[m>>2]|0,c[(c[h>>2]|0)+12>>2]|0)|0;c[(c[m>>2]|0)+16>>2]=c[(c[h>>2]|0)+12>>2];break}if((c[c[h>>2]>>2]&2|0)!=0?(c[(c[h>>2]|0)+16>>2]|0)!=0:0){Vn(c[l>>2]|0,c[m>>2]|0);c[m>>2]=0;c[m>>2]=c[(c[h>>2]|0)+16>>2];break}c[k>>2]=6}}while(0);h=c[l>>2]|0;l=c[m>>2]|0;if((c[k>>2]|0)!=0){Vn(h,l);c[m>>2]=0}else{c[l+28>>2]=h}c[c[j>>2]>>2]=c[m>>2]}c[f>>2]=c[k>>2];n=c[f>>2]|0;i=e;return n|0}function io(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[c[f>>2]>>2]=c[g>>2];c[(c[f>>2]|0)+4>>2]=c[h>>2];c[(c[f>>2]|0)+8>>2]=0;c[(c[f>>2]|0)+32>>2]=0;c[(c[f>>2]|0)+20>>2]=0;c[(c[f>>2]|0)+24>>2]=0;i=e;return}function jo(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d+8|0;f=d;g=d+4|0;c[e>>2]=a;c[f>>2]=b;if((c[e>>2]|0)==0){i=d;return}c[g>>2]=c[(c[e>>2]|0)+28>>2];ko(c[e>>2]|0);if((c[f>>2]|0)!=0){i=d;return}Vn(c[g>>2]|0,c[e>>2]|0);c[e>>2]=0;i=d;return}function ko(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;if((c[d>>2]|0)==0){i=b;return}if((c[(c[d>>2]|0)+24>>2]|0)==0){i=b;return}rd[c[(c[d>>2]|0)+24>>2]&127](c[d>>2]|0);i=b;return}function lo(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b+4|0;e=b;c[d>>2]=a;if((c[(c[d>>2]|0)+156>>2]|0)!=0?(c[(c[(c[d>>2]|0)+156>>2]|0)+4>>2]&1|0)!=0:0){c[e>>2]=c[(c[(c[d>>2]|0)+4>>2]|0)+100>>2];Vn(c[e>>2]|0,c[(c[d>>2]|0)+88>>2]|0);c[(c[d>>2]|0)+88>>2]=0;e=(c[(c[d>>2]|0)+156>>2]|0)+4|0;c[e>>2]=c[e>>2]&-2;i=b;return}c[(c[d>>2]|0)+88>>2]=0;i=b;return}function mo(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;lo(c[e>>2]|0);c[(c[e>>2]|0)+88>>2]=c[f>>2];i=d;return}function no(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d+12|0;f=d;g=d+4|0;h=d+8|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=c[(c[(c[e>>2]|0)+4>>2]|0)+100>>2];if((c[(c[(c[e>>2]|0)+156>>2]|0)+4>>2]&1|0)!=0){Vn(c[g>>2]|0,c[(c[e>>2]|0)+88>>2]|0);c[(c[e>>2]|0)+88>>2]=0}else{b=(c[(c[e>>2]|0)+156>>2]|0)+4|0;c[b>>2]=c[b>>2]|1}b=Sn(c[g>>2]|0,c[f>>2]|0,h)|0;c[(c[e>>2]|0)+88>>2]=b;i=d;return c[h>>2]|0}function oo(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+32|0;e=d+28|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;k=d+16|0;l=d+20|0;m=d+24|0;c[f>>2]=a;c[g>>2]=b;c[m>>2]=0;if((c[f>>2]|0)!=0?(c[(c[f>>2]|0)+96>>2]|0)!=0:0){c[j>>2]=c[(c[f>>2]|0)+96>>2];c[k>>2]=c[(c[j>>2]|0)+12>>2];c[l>>2]=c[(c[j>>2]|0)+8>>2];c[m>>2]=Sn(c[l>>2]|0,c[(c[k>>2]|0)+44>>2]|0,h)|0;do{if((c[h>>2]|0)!=0){if((c[g>>2]|0)!=0){c[c[g>>2]>>2]=0}}else{c[(c[m>>2]|0)+4>>2]=c[f>>2];c[h>>2]=po(c[m>>2]|0)|0;if((c[h>>2]|0)!=0){qo(c[m>>2]|0);Vn(c[l>>2]|0,c[m>>2]|0);c[m>>2]=0;break}c[(c[m>>2]|0)+8>>2]=c[(c[f>>2]|0)+84>>2];c[(c[f>>2]|0)+84>>2]=c[m>>2];if((c[g>>2]|0)!=0){c[c[g>>2]>>2]=c[m>>2]}}}while(0);c[e>>2]=c[h>>2];n=c[e>>2]|0;i=d;return n|0}c[e>>2]=6;n=c[e>>2]|0;i=d;return n|0}function po(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+32|0;d=b+20|0;e=b;f=b+4|0;g=b+8|0;h=b+12|0;j=b+16|0;c[d>>2]=a;c[e>>2]=c[(c[(c[d>>2]|0)+4>>2]|0)+96>>2];c[f>>2]=c[(c[e>>2]|0)+12>>2];c[g>>2]=c[(c[e>>2]|0)+8>>2];c[h>>2]=0;c[j>>2]=0;c[c[d>>2]>>2]=c[(c[e>>2]|0)+4>>2];c[j>>2]=Sn(c[g>>2]|0,40,h)|0;if((c[h>>2]|0)!=0){k=c[h>>2]|0;i=b;return k|0}c[(c[d>>2]|0)+156>>2]=c[j>>2];if((c[c[c[e>>2]>>2]>>2]&512|0)==0){c[h>>2]=Rn(c[g>>2]|0,c[j>>2]|0)|0}if((c[h>>2]|0)!=0){k=c[h>>2]|0;i=b;return k|0}if((c[(c[f>>2]|0)+64>>2]|0)==0){k=c[h>>2]|0;i=b;return k|0}c[h>>2]=vd[c[(c[f>>2]|0)+64>>2]&63](c[d>>2]|0)|0;k=c[h>>2]|0;i=b;return k|0}function qo(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;i=i+16|0;d=b+12|0;e=b;f=b+4|0;g=b+8|0;c[d>>2]=a;c[e>>2]=c[(c[(c[d>>2]|0)+4>>2]|0)+96>>2];c[f>>2]=c[(c[e>>2]|0)+12>>2];c[g>>2]=c[(c[e>>2]|0)+8>>2];if((c[(c[f>>2]|0)+68>>2]|0)!=0){rd[c[(c[f>>2]|0)+68>>2]&127](c[d>>2]|0)}lo(c[d>>2]|0);if((c[(c[d>>2]|0)+156>>2]|0)==0){i=b;return}if((c[c[c[e>>2]>>2]>>2]&512|0)==0){Wn(c[c[(c[d>>2]|0)+156>>2]>>2]|0);c[c[(c[d>>2]|0)+156>>2]>>2]=0}Vn(c[g>>2]|0,c[(c[d>>2]|0)+156>>2]|0);c[(c[d>>2]|0)+156>>2]=0;i=b;return}function ro(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;i=i+32|0;d=b+16|0;e=b;f=b+4|0;g=b+8|0;h=b+12|0;c[d>>2]=a;if((c[d>>2]|0)==0){i=b;return}c[e>>2]=c[(c[(c[d>>2]|0)+4>>2]|0)+96>>2];c[f>>2]=c[(c[e>>2]|0)+8>>2];c[g>>2]=0;c[h>>2]=c[(c[(c[d>>2]|0)+4>>2]|0)+84>>2];while(1){if((c[h>>2]|0)==0){j=12;break}if((c[h>>2]|0)==(c[d>>2]|0)){break}c[g>>2]=c[h>>2];c[h>>2]=c[(c[h>>2]|0)+8>>2]}if((j|0)==12){i=b;return}j=c[(c[h>>2]|0)+8>>2]|0;if((c[g>>2]|0)!=0){c[(c[g>>2]|0)+8>>2]=j}else{c[(c[(c[d>>2]|0)+4>>2]|0)+84>>2]=j}if((c[(c[d>>2]|0)+20>>2]|0)!=0){rd[c[(c[d>>2]|0)+20>>2]&127](c[d>>2]|0)}qo(c[d>>2]|0);Vn(c[f>>2]|0,c[d>>2]|0);c[d>>2]=0;i=b;return}function so(b){b=b|0;var d=0,e=0;d=i;i=i+16|0;e=d;c[e>>2]=b;lo(c[e>>2]|0);b=(c[e>>2]|0)+24|0;c[b+0>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;c[b+20>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;b=(c[e>>2]|0)+108|0;c[b+0>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;c[(c[e>>2]|0)+80>>2]=0;c[(c[e>>2]|0)+76>>2]=0;c[(c[e>>2]|0)+84>>2]=0;a[(c[e>>2]|0)+94|0]=0;c[(c[e>>2]|0)+100>>2]=0;c[(c[e>>2]|0)+104>>2]=0;c[(c[e>>2]|0)+128>>2]=0;c[(c[e>>2]|0)+132>>2]=0;c[(c[e>>2]|0)+136>>2]=0;c[(c[e>>2]|0)+140>>2]=0;c[(c[e>>2]|0)+152>>2]=0;c[(c[e>>2]|0)+72>>2]=0;c[(c[e>>2]|0)+56>>2]=0;c[(c[e>>2]|0)+60>>2]=0;c[(c[e>>2]|0)+144>>2]=0;c[(c[e>>2]|0)+148>>2]=0;i=d;return}function to(a){a=a|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;i=i+32|0;e=d+24|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;k=d+16|0;l=d+20|0;c[f>>2]=a;a:do{if((c[f>>2]|0)!=0){c[g>>2]=b[(c[f>>2]|0)+2>>1]|0;c[h>>2]=b[c[f>>2]>>1]|0;if((c[g>>2]|0)==0?(c[h>>2]|0)==0:0){c[e>>2]=0;m=c[e>>2]|0;i=d;return m|0}if((c[g>>2]|0)>0?(c[h>>2]|0)>0:0){c[k>>2]=-1;c[j>>2]=-1;c[l>>2]=0;while(1){if((c[l>>2]|0)>=(c[h>>2]|0)){break}c[k>>2]=b[(c[(c[f>>2]|0)+12>>2]|0)+(c[l>>2]<<1)>>1]|0;if((c[k>>2]|0)<=(c[j>>2]|0)){break a}if((c[k>>2]|0)>=(c[g>>2]|0)){break a}c[j>>2]=c[k>>2];c[l>>2]=(c[l>>2]|0)+1}if((c[k>>2]|0)==((c[g>>2]|0)-1|0)){c[e>>2]=0;m=c[e>>2]|0;i=d;return m|0}}}}while(0);c[e>>2]=6;m=c[e>>2]|0;i=d;return m|0}function uo(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;e=i;i=i+32|0;f=e+12|0;g=e+16|0;h=e+4|0;j=e+8|0;k=e;c[f>>2]=b;a[g]=d;c[h>>2]=(c[f>>2]|0)+24;f=c[h>>2]|0;if((a[g]|0)!=0){c[(c[h>>2]|0)+8>>2]=c[f+8>>2]&-64;c[(c[h>>2]|0)+12>>2]=(c[(c[h>>2]|0)+12>>2]|0)+63&-64;c[j>>2]=(c[(c[h>>2]|0)+20>>2]|0)+(c[c[h>>2]>>2]|0)+63&-64;c[k>>2]=(c[(c[h>>2]|0)+24>>2]|0)+(c[(c[h>>2]|0)+4>>2]|0)+63&-64;c[(c[h>>2]|0)+20>>2]=c[(c[h>>2]|0)+20>>2]&-64;c[(c[h>>2]|0)+24>>2]=c[(c[h>>2]|0)+24>>2]&-64;c[c[h>>2]>>2]=(c[j>>2]|0)-(c[(c[h>>2]|0)+20>>2]|0);c[(c[h>>2]|0)+4>>2]=(c[k>>2]|0)-(c[(c[h>>2]|0)+24>>2]|0);l=c[h>>2]|0;m=l+16|0;n=c[m>>2]|0;o=n+32|0;p=o&-64;q=c[h>>2]|0;r=q+16|0;c[r>>2]=p;s=c[h>>2]|0;t=s+28|0;u=c[t>>2]|0;v=u+32|0;w=v&-64;x=c[h>>2]|0;y=x+28|0;c[y>>2]=w;i=e;return}else{c[(c[h>>2]|0)+20>>2]=c[f+20>>2]&-64;c[(c[h>>2]|0)+24>>2]=c[(c[h>>2]|0)+24>>2]&-64;c[j>>2]=(c[(c[h>>2]|0)+8>>2]|0)+(c[c[h>>2]>>2]|0)+63&-64;c[k>>2]=(c[(c[h>>2]|0)+12>>2]|0)-(c[(c[h>>2]|0)+4>>2]|0)&-64;c[(c[h>>2]|0)+8>>2]=c[(c[h>>2]|0)+8>>2]&-64;c[(c[h>>2]|0)+12>>2]=(c[(c[h>>2]|0)+12>>2]|0)+63&-64;c[c[h>>2]>>2]=(c[j>>2]|0)-(c[(c[h>>2]|0)+8>>2]|0);c[(c[h>>2]|0)+4>>2]=(c[(c[h>>2]|0)+12>>2]|0)-(c[k>>2]|0);l=c[h>>2]|0;m=l+16|0;n=c[m>>2]|0;o=n+32|0;p=o&-64;q=c[h>>2]|0;r=q+16|0;c[r>>2]=p;s=c[h>>2]|0;t=s+28|0;u=c[t>>2]|0;v=u+32|0;w=v&-64;x=c[h>>2]|0;y=x+28|0;c[y>>2]=w;i=e;return}}function vo(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;i=i+16|0;d=b+12|0;e=b;f=b+4|0;g=b+8|0;c[d>>2]=a;c[e>>2]=c[(c[d>>2]|0)+4>>2];c[f>>2]=c[(c[(c[e>>2]|0)+96>>2]|0)+4>>2];c[g>>2]=c[(c[f>>2]|0)+156>>2];if((c[g>>2]|0)!=0?(c[(c[g>>2]|0)+16>>2]|0)==(c[(c[d>>2]|0)+72>>2]|0):0){h=c[g>>2]|0;i=b;return h|0}c[g>>2]=Yo(c[f>>2]|0,c[(c[d>>2]|0)+72>>2]|0,0)|0;h=c[g>>2]|0;i=b;return h|0}function wo(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e+12|0;g=e;h=e+4|0;j=e+8|0;c[f>>2]=a;c[g>>2]=d;if((c[f>>2]|0)==0){i=e;return}if((c[g>>2]|0)==0){i=e;return}c[h>>2]=c[(c[f>>2]|0)+4>>2];c[j>>2]=(c[h>>2]|0)+(b[(c[f>>2]|0)+2>>1]<<3);while(1){if(!((c[h>>2]|0)>>>0<(c[j>>2]|0)>>>0)){break}yo(c[h>>2]|0,c[g>>2]|0);c[h>>2]=(c[h>>2]|0)+8}i=e;return}function xo(a,d,f){a=a|0;d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+32|0;h=g+12|0;j=g;k=g+4|0;l=g+16|0;m=g+8|0;c[h>>2]=a;c[j>>2]=d;c[k>>2]=f;if((c[h>>2]|0)==0){i=g;return}c[m>>2]=c[(c[h>>2]|0)+4>>2];b[l>>1]=0;while(1){if((e[l>>1]|0)>=(b[(c[h>>2]|0)+2>>1]|0)){break}f=c[m>>2]|0;c[f>>2]=(c[f>>2]|0)+(c[j>>2]|0);f=(c[m>>2]|0)+4|0;c[f>>2]=(c[f>>2]|0)+(c[k>>2]|0);c[m>>2]=(c[m>>2]|0)+8;b[l>>1]=(b[l>>1]|0)+1<<16>>16}i=g;return}function yo(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d+12|0;f=d;g=d+4|0;h=d+8|0;c[e>>2]=a;c[f>>2]=b;if((c[e>>2]|0)==0){i=d;return}if((c[f>>2]|0)==0){i=d;return}b=Nn(c[c[e>>2]>>2]|0,c[c[f>>2]>>2]|0)|0;c[g>>2]=b+(Nn(c[(c[e>>2]|0)+4>>2]|0,c[(c[f>>2]|0)+4>>2]|0)|0);b=Nn(c[c[e>>2]>>2]|0,c[(c[f>>2]|0)+8>>2]|0)|0;c[h>>2]=b+(Nn(c[(c[e>>2]|0)+4>>2]|0,c[(c[f>>2]|0)+12>>2]|0)|0);c[c[e>>2]>>2]=c[g>>2];c[(c[e>>2]|0)+4>>2]=c[h>>2];i=d;return}function zo(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;e=d+12|0;f=d;g=d+4|0;h=d+8|0;c[f>>2]=a;c[g>>2]=b;if((c[f>>2]|0)!=0?(c[(c[f>>2]|0)+4>>2]|0)!=0:0){c[h>>2]=c[(c[(c[(c[f>>2]|0)+4>>2]|0)+96>>2]|0)+4>>2];c[e>>2]=$o(c[h>>2]|0,c[f>>2]|0,c[g>>2]|0)|0;j=c[e>>2]|0;i=d;return j|0}c[e>>2]=6;j=c[e>>2]|0;i=d;return j|0}function Ao(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+32|0;f=e+16|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;if((c[g>>2]|0)==0){c[f>>2]=35;l=c[f>>2]|0;i=e;return l|0}c[k>>2]=c[h>>2];if((c[(c[g>>2]|0)+92>>2]|0)!=0){c[k>>2]=Bo(c[g>>2]|0,c[h>>2]|0)|0}c[f>>2]=Dn(c[g>>2]|0,c[k>>2]|0,c[j>>2]|0)|0;l=c[f>>2]|0;i=e;return l|0}function Bo(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;e=d+12|0;f=d;g=d+4|0;h=d+8|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=0;if((c[e>>2]|0)==0){j=c[g>>2]|0;i=d;return j|0}if((c[(c[e>>2]|0)+92>>2]|0)==0){j=c[g>>2]|0;i=d;return j|0}c[h>>2]=c[(c[e>>2]|0)+92>>2];c[g>>2]=Ad[c[(c[(c[h>>2]|0)+12>>2]|0)+12>>2]&127](c[h>>2]|0,c[f>>2]|0)|0;j=c[g>>2]|0;i=d;return j|0}function Co(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+64|0;g=f+48|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;m=f+16|0;c[h>>2]=a;c[j>>2]=b;c[k>>2]=d;c[l>>2]=e;if((c[j>>2]|0)!=0){c[m>>2]=4;c[m+12>>2]=c[j>>2];c[m+16>>2]=0;c[g>>2]=Do(c[h>>2]|0,m,c[k>>2]|0,c[l>>2]|0)|0;n=c[g>>2]|0;i=f;return n|0}else{c[g>>2]=6;n=c[g>>2]|0;i=f;return n|0}return 0}function Do(e,f,g,h){e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;j=i;i=i+96|0;k=j+40|0;l=j+80|0;m=j+76|0;n=j+72|0;o=j+68|0;p=j+64|0;q=j+60|0;r=j+56|0;s=j+52|0;t=j+48|0;u=j+44|0;v=j+84|0;w=j+12|0;x=j;y=j+4|0;z=j+8|0;A=j+16|0;B=j+20|0;C=j+24|0;D=j+28|0;E=j+32|0;F=j+36|0;c[l>>2]=e;c[m>>2]=f;c[n>>2]=g;c[o>>2]=h;c[q>>2]=0;c[r>>2]=0;c[s>>2]=0;c[t>>2]=0;c[u>>2]=0;if(!((c[o>>2]|0)==0?(c[n>>2]|0)>=0:0)){G=3}if((G|0)==3?(c[m>>2]|0)!=0:0){if((c[c[m>>2]>>2]&2|0)!=0){H=(c[(c[m>>2]|0)+16>>2]|0)!=0}else{H=0}a[v]=H&1;c[p>>2]=ho(c[l>>2]|0,c[m>>2]|0,s)|0;a:do{if((c[p>>2]|0)==0){c[r>>2]=c[c[l>>2]>>2];do{if((c[c[m>>2]>>2]&8|0)!=0?(c[(c[m>>2]|0)+20>>2]|0)!=0:0){c[q>>2]=c[(c[m>>2]|0)+20>>2];if((c[c[c[q>>2]>>2]>>2]&1|0)!=0){c[y>>2]=0;c[z>>2]=0;if((c[c[m>>2]>>2]&16|0)!=0){c[y>>2]=c[(c[m>>2]|0)+24>>2];c[z>>2]=c[(c[m>>2]|0)+28>>2]}c[p>>2]=Eo(c[q>>2]|0,s,a[v]|0,c[n>>2]|0,c[y>>2]|0,c[z>>2]|0,t)|0;if((c[p>>2]|0)==0){break}}else{c[p>>2]=32}jo(c[s>>2]|0,d[v]|0);G=52;break a}else{G=16}}while(0);b:do{if((G|0)==16){c[p>>2]=11;c[w>>2]=(c[l>>2]|0)+20;c[x>>2]=(c[w>>2]|0)+(c[(c[l>>2]|0)+16>>2]<<2);while(1){if(!((c[w>>2]|0)>>>0<(c[x>>2]|0)>>>0)){G=24;break a}if((c[c[c[c[w>>2]>>2]>>2]>>2]&1|0)!=0){c[A>>2]=0;c[B>>2]=0;c[q>>2]=c[c[w>>2]>>2];if((c[c[m>>2]>>2]&16|0)!=0){c[A>>2]=c[(c[m>>2]|0)+24>>2];c[B>>2]=c[(c[m>>2]|0)+28>>2]}c[p>>2]=Eo(c[q>>2]|0,s,a[v]|0,c[n>>2]|0,c[A>>2]|0,c[B>>2]|0,t)|0;if((c[p>>2]|0)==0){break b}if((c[p>>2]&255|0)!=2){G=24;break a}}c[w>>2]=(c[w>>2]|0)+4}}}while(0);c[u>>2]=Sn(c[r>>2]|0,12,p)|0;if((c[p>>2]|0)==0){c[(c[u>>2]|0)+8>>2]=c[t>>2];Fo((c[(c[t>>2]|0)+96>>2]|0)+16|0,c[u>>2]|0);if((c[n>>2]|0)>=0){c[p>>2]=oo(c[t>>2]|0,0)|0;if((c[p>>2]|0)!=0){G=52;break}c[p>>2]=Go(c[t>>2]|0,C)|0;if((c[p>>2]|0)!=0){G=52;break}c[(c[t>>2]|0)+88>>2]=c[C>>2]}if((c[(c[t>>2]|0)+8>>2]&1|0)!=0){if((b[(c[t>>2]|0)+74>>1]|0)<0){b[(c[t>>2]|0)+74>>1]=0-(b[(c[t>>2]|0)+74>>1]|0)}if((c[(c[t>>2]|0)+8>>2]&32|0)==0){b[(c[t>>2]|0)+78>>1]=b[(c[t>>2]|0)+74>>1]|0}}c:do{if((c[(c[t>>2]|0)+8>>2]&2|0)!=0){c[D>>2]=0;while(1){if((c[D>>2]|0)>=(c[(c[t>>2]|0)+28>>2]|0)){break c}c[E>>2]=(c[(c[t>>2]|0)+32>>2]|0)+(c[D>>2]<<4);if((b[c[E>>2]>>1]|0)<0){b[c[E>>2]>>1]=0-(b[c[E>>2]>>1]|0)}if((c[(c[E>>2]|0)+8>>2]|0)<0){c[(c[E>>2]|0)+8>>2]=(0-(c[(c[E>>2]|0)+8>>2]|0)&65535)<<16>>16}if((c[(c[E>>2]|0)+12>>2]|0)<0){c[(c[E>>2]|0)+12>>2]=0-(c[(c[E>>2]|0)+12>>2]|0)}c[D>>2]=(c[D>>2]|0)+1}}}while(0);c[F>>2]=c[(c[t>>2]|0)+128>>2];c[c[F>>2]>>2]=65536;c[(c[F>>2]|0)+4>>2]=0;c[(c[F>>2]|0)+8>>2]=0;c[(c[F>>2]|0)+12>>2]=65536;c[(c[F>>2]|0)+16>>2]=0;c[(c[F>>2]|0)+20>>2]=0;c[(c[F>>2]|0)+56>>2]=1;H=c[t>>2]|0;if((c[o>>2]|0)!=0){c[c[o>>2]>>2]=H;break}else{Ho(H)|0;break}}else{G=52}}else{G=24}}while(0);if((G|0)==24){if(!(((c[p>>2]&255|0)!=81?(c[p>>2]&255|0)!=2:0)?(c[p>>2]&255|0)!=85:0)){c[p>>2]=2}jo(c[s>>2]|0,d[v]|0);G=52}do{if((G|0)==52){v=c[t>>2]|0;if((c[u>>2]|0)!=0){Ho(v)|0;break}if((v|0)!=0){Io(c[r>>2]|0,c[t>>2]|0,c[q>>2]|0)}}}while(0);c[k>>2]=c[p>>2];I=c[k>>2]|0;i=j;return I|0}c[k>>2]=6;I=c[k>>2]|0;i=j;return I|0}function Eo(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;k=i;i=i+64|0;l=k+48|0;m=k+44|0;n=k+52|0;o=k+40|0;p=k+36|0;q=k+32|0;r=k+28|0;s=k+24|0;t=k+16|0;u=k+12|0;v=k+8|0;w=k+4|0;x=k;y=k+20|0;c[l>>2]=b;c[m>>2]=d;a[n]=e;c[o>>2]=f;c[p>>2]=g;c[q>>2]=h;c[r>>2]=j;c[u>>2]=0;c[v>>2]=0;c[t>>2]=c[(c[l>>2]|0)+12>>2];c[s>>2]=c[(c[l>>2]|0)+8>>2];c[u>>2]=Sn(c[s>>2]|0,c[(c[t>>2]|0)+36>>2]|0,w)|0;do{if((c[w>>2]|0)==0){c[(c[u>>2]|0)+96>>2]=c[l>>2];c[(c[u>>2]|0)+100>>2]=c[s>>2];c[(c[u>>2]|0)+104>>2]=c[c[m>>2]>>2];if((a[n]|0)!=0){j=(c[u>>2]|0)+8|0;c[j>>2]=c[j>>2]|1024}c[v>>2]=Sn(c[s>>2]|0,60,w)|0;if((c[w>>2]|0)==0){c[(c[u>>2]|0)+128>>2]=c[v>>2];c[(c[(c[u>>2]|0)+128>>2]|0)+48>>2]=0;c[y>>2]=0;while(1){if((c[y>>2]|0)>=(c[p>>2]|0)){break}if(!((c[(c[(c[u>>2]|0)+128>>2]|0)+48>>2]|0)!=0^1)){break}if((c[(c[q>>2]|0)+(c[y>>2]<<3)>>2]|0)==1768842098){c[(c[(c[u>>2]|0)+128>>2]|0)+48>>2]=c[(c[q>>2]|0)+(c[y>>2]<<3)+4>>2]}c[y>>2]=(c[y>>2]|0)+1}if((c[(c[t>>2]|0)+48>>2]|0)!=0){c[w>>2]=Bd[c[(c[t>>2]|0)+48>>2]&15](c[c[m>>2]>>2]|0,c[u>>2]|0,c[o>>2]|0,c[p>>2]|0,c[q>>2]|0)|0}c[c[m>>2]>>2]=c[(c[u>>2]|0)+104>>2];if((c[w>>2]|0)==0){c[x>>2]=Uo(c[u>>2]|0)|0;if((c[x>>2]|0)!=0?(c[x>>2]&255|0)!=38:0){c[w>>2]=c[x>>2];break}c[c[r>>2]>>2]=c[u>>2]}}}}while(0);if((c[w>>2]|0)==0){z=c[w>>2]|0;i=k;return z|0}Yp(c[u>>2]|0,c[s>>2]|0);if((c[(c[t>>2]|0)+52>>2]|0)!=0){rd[c[(c[t>>2]|0)+52>>2]&127](c[u>>2]|0)}Vn(c[s>>2]|0,c[v>>2]|0);c[v>>2]=0;Vn(c[s>>2]|0,c[u>>2]|0);c[u>>2]=0;c[c[r>>2]>>2]=0;z=c[w>>2]|0;i=k;return z|0}function Fo(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+16|0;e=d+8|0;f=d;g=d+4|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=c[(c[e>>2]|0)+4>>2];c[(c[f>>2]|0)+4>>2]=0;c[c[f>>2]>>2]=c[g>>2];b=c[f>>2]|0;if((c[g>>2]|0)!=0){c[(c[g>>2]|0)+4>>2]=b;h=c[f>>2]|0;j=c[e>>2]|0;k=j+4|0;c[k>>2]=h;i=d;return}else{c[c[e>>2]>>2]=b;h=c[f>>2]|0;j=c[e>>2]|0;k=j+4|0;c[k>>2]=h;i=d;return}}function Go(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;d=i;i=i+48|0;e=d+32|0;f=d+28|0;g=d+24|0;h=d+20|0;j=d+16|0;k=d+8|0;l=d+4|0;m=d;n=d+12|0;c[f>>2]=a;c[g>>2]=b;c[m>>2]=0;c[n>>2]=0;if((c[f>>2]|0)==0){c[e>>2]=35;o=c[e>>2]|0;i=d;return o|0}if((c[g>>2]|0)==0){c[e>>2]=36;o=c[e>>2]|0;i=d;return o|0}if((c[(c[f>>2]|0)+96>>2]|0)==0){c[e>>2]=34;o=c[e>>2]|0;i=d;return o|0}c[c[g>>2]>>2]=0;c[k>>2]=c[(c[f>>2]|0)+96>>2];c[l>>2]=c[(c[k>>2]|0)+12>>2];c[j>>2]=c[(c[f>>2]|0)+100>>2];c[m>>2]=Sn(c[j>>2]|0,c[(c[l>>2]|0)+40>>2]|0,h)|0;if((c[h>>2]|0)==0?(c[n>>2]=Sn(c[j>>2]|0,12,h)|0,(c[h>>2]|0)==0):0){c[c[m>>2]>>2]=c[f>>2];c[(c[m>>2]|0)+40>>2]=0;if((c[(c[l>>2]|0)+56>>2]|0)!=0){c[h>>2]=vd[c[(c[l>>2]|0)+56>>2]&63](c[m>>2]|0)|0}if((c[h>>2]|0)==0){c[c[g>>2]>>2]=c[m>>2];c[(c[n>>2]|0)+8>>2]=c[m>>2];Fo((c[f>>2]|0)+108|0,c[n>>2]|0)}}if((c[h>>2]|0)!=0){Vn(c[j>>2]|0,c[n>>2]|0);c[n>>2]=0;Vn(c[j>>2]|0,c[m>>2]|0);c[m>>2]=0}c[e>>2]=c[h>>2];o=c[e>>2]|0;i=d;return o|0}function Ho(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;i=i+32|0;d=b+16|0;e=b;f=b+4|0;g=b+8|0;h=b+12|0;c[d>>2]=a;c[e>>2]=35;if((c[d>>2]|0)==0){j=c[e>>2]|0;i=b;return j|0}if((c[(c[d>>2]|0)+96>>2]|0)==0){j=c[e>>2]|0;i=b;return j|0}a=(c[(c[d>>2]|0)+128>>2]|0)+56|0;c[a>>2]=(c[a>>2]|0)+ -1;if((c[(c[(c[d>>2]|0)+128>>2]|0)+56>>2]|0)>0){c[e>>2]=0;j=c[e>>2]|0;i=b;return j|0}c[f>>2]=c[(c[d>>2]|0)+96>>2];c[g>>2]=c[(c[f>>2]|0)+8>>2];c[h>>2]=Jo((c[f>>2]|0)+16|0,c[d>>2]|0)|0;if((c[h>>2]|0)==0){j=c[e>>2]|0;i=b;return j|0}Ko((c[f>>2]|0)+16|0,c[h>>2]|0);Vn(c[g>>2]|0,c[h>>2]|0);c[h>>2]=0;Io(c[g>>2]|0,c[d>>2]|0,c[f>>2]|0);c[e>>2]=0;j=c[e>>2]|0;i=b;return j|0}function Io(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+16|0;f=e+12|0;g=e;h=e+4|0;j=e+8|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[j>>2]=c[(c[h>>2]|0)+12>>2];if((c[(c[g>>2]|0)+120>>2]|0)!=0){rd[c[(c[g>>2]|0)+120>>2]&127](c[(c[g>>2]|0)+116>>2]|0)}while(1){k=c[g>>2]|0;if((c[(c[g>>2]|0)+84>>2]|0)==0){break}ro(c[k+84>>2]|0)}Up(k+108|0,18,c[f>>2]|0,c[h>>2]|0);c[(c[g>>2]|0)+88>>2]=0;if((c[(c[g>>2]|0)+48>>2]|0)!=0){rd[c[(c[g>>2]|0)+48>>2]&127](c[g>>2]|0)}Yp(c[g>>2]|0,c[f>>2]|0);if((c[(c[j>>2]|0)+52>>2]|0)!=0){rd[c[(c[j>>2]|0)+52>>2]&127](c[g>>2]|0)}jo(c[(c[g>>2]|0)+104>>2]|0,(c[(c[g>>2]|0)+8>>2]&1024|0)!=0|0);c[(c[g>>2]|0)+104>>2]=0;if((c[(c[g>>2]|0)+128>>2]|0)==0){l=c[f>>2]|0;m=c[g>>2]|0;Vn(l,m);c[g>>2]=0;i=e;return}Vn(c[f>>2]|0,c[(c[g>>2]|0)+128>>2]|0);c[(c[g>>2]|0)+128>>2]=0;l=c[f>>2]|0;m=c[g>>2]|0;Vn(l,m);c[g>>2]=0;i=e;return}function Jo(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d+12|0;f=d;g=d+4|0;h=d+8|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=c[c[f>>2]>>2];while(1){if((c[h>>2]|0)==0){j=6;break}k=c[h>>2]|0;if((c[(c[h>>2]|0)+8>>2]|0)==(c[g>>2]|0)){j=4;break}c[h>>2]=c[k+4>>2]}if((j|0)==4){c[e>>2]=k;l=c[e>>2]|0;i=d;return l|0}else if((j|0)==6){c[e>>2]=0;l=c[e>>2]|0;i=d;return l|0}return 0}function Ko(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d+12|0;f=d;g=d+4|0;h=d+8|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=c[c[f>>2]>>2];c[h>>2]=c[(c[f>>2]|0)+4>>2];f=c[h>>2]|0;if((c[g>>2]|0)!=0){c[(c[g>>2]|0)+4>>2]=f}else{c[c[e>>2]>>2]=f}f=c[g>>2]|0;if((c[h>>2]|0)!=0){c[c[h>>2]>>2]=f;i=d;return}else{c[(c[e>>2]|0)+4>>2]=f;i=d;return}}function Lo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;if((c[(c[g>>2]|0)+8>>2]|0)!=0){rd[c[(c[g>>2]|0)+8>>2]&127](c[g>>2]|0)}if((c[(c[(c[h>>2]|0)+12>>2]|0)+60>>2]|0)!=0){rd[c[(c[(c[h>>2]|0)+12>>2]|0)+60>>2]&127](c[g>>2]|0)}Vn(c[f>>2]|0,c[(c[g>>2]|0)+40>>2]|0);c[(c[g>>2]|0)+40>>2]=0;Vn(c[f>>2]|0,c[g>>2]|0);c[g>>2]=0;i=e;return}function Mo(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;h=i;i=i+48|0;j=h+28|0;k=h+24|0;l=h+20|0;m=h+32|0;n=h+16|0;o=h+8|0;p=h+4|0;q=h;r=h+12|0;c[k>>2]=b;c[l>>2]=e;a[m]=f;c[n>>2]=g;if((c[(c[k>>2]|0)+8>>2]&2|0)==0){c[j>>2]=35;s=c[j>>2]|0;i=h;return s|0}if((c[c[l>>2]>>2]|0)!=0){c[j>>2]=7;s=c[j>>2]|0;i=h;return s|0}g=c[(c[l>>2]|0)+4>>2]|0;if((c[(c[l>>2]|0)+12>>2]|0)!=0){t=((aa(g,c[(c[l>>2]|0)+12>>2]|0)|0)+36|0)/72|0}else{t=g}c[p>>2]=t;t=c[(c[l>>2]|0)+8>>2]|0;if((c[(c[l>>2]|0)+16>>2]|0)!=0){u=((aa(t,c[(c[l>>2]|0)+16>>2]|0)|0)+36|0)/72|0}else{u=t}c[q>>2]=u;if((c[(c[l>>2]|0)+4>>2]|0)!=0?(c[(c[l>>2]|0)+8>>2]|0)==0:0){c[q>>2]=c[p>>2]}else{v=12}if(((v|0)==12?(c[(c[l>>2]|0)+4>>2]|0)==0:0)?(c[(c[l>>2]|0)+8>>2]|0)!=0:0){c[p>>2]=c[q>>2]}c[p>>2]=(c[p>>2]|0)+32&-64;c[q>>2]=(c[q>>2]|0)+32&-64;c[o>>2]=0;while(1){if((c[o>>2]|0)>=(c[(c[k>>2]|0)+28>>2]|0)){v=24;break}c[r>>2]=(c[(c[k>>2]|0)+32>>2]|0)+(c[o>>2]<<4);if((c[q>>2]|0)==((c[(c[r>>2]|0)+12>>2]|0)+32&-64|0)){if((c[p>>2]|0)==((c[(c[r>>2]|0)+8>>2]|0)+32&-64|0)){break}if((d[m]|0|0)!=0){break}}c[o>>2]=(c[o>>2]|0)+1}if((v|0)==24){c[j>>2]=23;s=c[j>>2]|0;i=h;return s|0}if((c[n>>2]|0)!=0){c[c[n>>2]>>2]=c[o>>2]}c[j>>2]=0;s=c[j>>2]|0;i=h;return s|0}function No(a,d){a=a|0;d=d|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;g=f+12|0;h=f;j=f+4|0;k=f+8|0;c[g>>2]=a;c[h>>2]=d;c[j>>2]=(c[(c[g>>2]|0)+88>>2]|0)+12;c[k>>2]=(c[(c[g>>2]|0)+32>>2]|0)+(c[h>>2]<<4);b[c[j>>2]>>1]=(c[(c[k>>2]|0)+8>>2]|0)+32>>6;b[(c[j>>2]|0)+2>>1]=(c[(c[k>>2]|0)+12>>2]|0)+32>>6;if((c[(c[g>>2]|0)+8>>2]&1|0)!=0){h=On(c[(c[k>>2]|0)+8>>2]|0,e[(c[g>>2]|0)+68>>1]|0)|0;c[(c[j>>2]|0)+4>>2]=h;h=On(c[(c[k>>2]|0)+12>>2]|0,e[(c[g>>2]|0)+68>>1]|0)|0;c[(c[j>>2]|0)+8>>2]=h;Oo(c[g>>2]|0,c[j>>2]|0);i=f;return}else{c[(c[j>>2]|0)+4>>2]=65536;c[(c[j>>2]|0)+8>>2]=65536;c[(c[j>>2]|0)+12>>2]=c[(c[k>>2]|0)+12>>2];c[(c[j>>2]|0)+16>>2]=0;c[(c[j>>2]|0)+20>>2]=b[c[k>>2]>>1]<<6;c[(c[j>>2]|0)+24>>2]=c[(c[k>>2]|0)+8>>2];i=f;return}}function Oo(a,d){a=a|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;f=e+4|0;g=e;c[f>>2]=a;c[g>>2]=d;d=(Nn(b[(c[f>>2]|0)+70>>1]|0,c[(c[g>>2]|0)+8>>2]|0)|0)+63&-64;c[(c[g>>2]|0)+12>>2]=d;d=(Nn(b[(c[f>>2]|0)+72>>1]|0,c[(c[g>>2]|0)+8>>2]|0)|0)&-64;c[(c[g>>2]|0)+16>>2]=d;d=(Nn(b[(c[f>>2]|0)+74>>1]|0,c[(c[g>>2]|0)+8>>2]|0)|0)+32&-64;c[(c[g>>2]|0)+20>>2]=d;d=(Nn(b[(c[f>>2]|0)+76>>1]|0,c[(c[g>>2]|0)+4>>2]|0)|0)+32&-64;c[(c[g>>2]|0)+24>>2]=d;i=e;return}function Po(a,d){a=a|0;d=d|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=i;i=i+32|0;g=f+24|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;m=f+16|0;n=f+20|0;c[g>>2]=a;c[h>>2]=d;c[j>>2]=(c[(c[g>>2]|0)+88>>2]|0)+12;if((c[(c[g>>2]|0)+8>>2]&1|0)==0){d=c[j>>2]|0;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[d+16>>2]=0;c[d+20>>2]=0;c[d+24>>2]=0;c[(c[j>>2]|0)+4>>2]=65536;c[(c[j>>2]|0)+8>>2]=65536;i=f;return}c[k>>2]=0;c[l>>2]=0;c[m>>2]=0;c[n>>2]=0;a:do{switch(c[c[h>>2]>>2]|0){case 3:{c[k>>2]=b[(c[g>>2]|0)+76>>1]|0;c[l>>2]=(b[(c[g>>2]|0)+70>>1]|0)-(b[(c[g>>2]|0)+72>>1]|0);o=11;break};case 1:{d=(b[(c[g>>2]|0)+70>>1]|0)-(b[(c[g>>2]|0)+72>>1]|0)|0;c[l>>2]=d;c[k>>2]=d;o=11;break};case 2:{c[k>>2]=(c[(c[g>>2]|0)+60>>2]|0)-(c[(c[g>>2]|0)+52>>2]|0);c[l>>2]=(c[(c[g>>2]|0)+64>>2]|0)-(c[(c[g>>2]|0)+56>>2]|0);o=11;break};case 0:{d=e[(c[g>>2]|0)+68>>1]|0;c[l>>2]=d;c[k>>2]=d;o=11;break};case 4:{c[(c[j>>2]|0)+4>>2]=c[(c[h>>2]|0)+4>>2];c[(c[j>>2]|0)+8>>2]=c[(c[h>>2]|0)+8>>2];d=c[(c[j>>2]|0)+8>>2]|0;if((c[(c[j>>2]|0)+4>>2]|0)==0){c[(c[j>>2]|0)+4>>2]=d;break a}if((d|0)==0){c[(c[j>>2]|0)+8>>2]=c[(c[j>>2]|0)+4>>2]}break};default:{o=11}}}while(0);do{if((o|0)==11){if((c[k>>2]|0)<0){c[k>>2]=0-(c[k>>2]|0)}if((c[l>>2]|0)<0){c[l>>2]=0-(c[l>>2]|0)}d=c[(c[h>>2]|0)+4>>2]|0;if((c[(c[h>>2]|0)+12>>2]|0)!=0){p=((aa(d,c[(c[h>>2]|0)+12>>2]|0)|0)+36|0)/72|0}else{p=d}c[m>>2]=p;d=c[(c[h>>2]|0)+8>>2]|0;if((c[(c[h>>2]|0)+16>>2]|0)!=0){q=((aa(d,c[(c[h>>2]|0)+16>>2]|0)|0)+36|0)/72|0}else{q=d}c[n>>2]=q;if((c[(c[h>>2]|0)+4>>2]|0)==0){d=On(c[n>>2]|0,c[l>>2]|0)|0;c[(c[j>>2]|0)+8>>2]=d;c[(c[j>>2]|0)+4>>2]=d;c[m>>2]=In(c[n>>2]|0,c[k>>2]|0,c[l>>2]|0)|0;break}d=On(c[m>>2]|0,c[k>>2]|0)|0;c[(c[j>>2]|0)+4>>2]=d;if((c[(c[h>>2]|0)+8>>2]|0)==0){c[(c[j>>2]|0)+8>>2]=c[(c[j>>2]|0)+4>>2];c[n>>2]=In(c[m>>2]|0,c[l>>2]|0,c[k>>2]|0)|0;break}d=On(c[n>>2]|0,c[l>>2]|0)|0;c[(c[j>>2]|0)+8>>2]=d;if((c[c[h>>2]>>2]|0)==3){d=c[j>>2]|0;if((c[(c[j>>2]|0)+8>>2]|0)>(c[(c[j>>2]|0)+4>>2]|0)){c[(c[j>>2]|0)+8>>2]=c[d+4>>2];break}else{c[(c[j>>2]|0)+4>>2]=c[d+8>>2];break}}}}while(0);if((c[c[h>>2]>>2]|0)!=0){c[m>>2]=Nn(e[(c[g>>2]|0)+68>>1]|0,c[(c[j>>2]|0)+4>>2]|0)|0;c[n>>2]=Nn(e[(c[g>>2]|0)+68>>1]|0,c[(c[j>>2]|0)+8>>2]|0)|0}b[c[j>>2]>>1]=(c[m>>2]|0)+32>>6;b[(c[j>>2]|0)+2>>1]=(c[n>>2]|0)+32>>6;Oo(c[g>>2]|0,c[j>>2]|0);i=f;return}function Qo(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+32|0;e=d+16|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;c[f>>2]=a;c[g>>2]=b;if((c[f>>2]|0)!=0?(c[(c[f>>2]|0)+8>>2]&2|0)!=0:0){if((c[g>>2]|0)>=0?(c[g>>2]|0)<(c[(c[f>>2]|0)+28>>2]|0):0){c[h>>2]=c[(c[(c[f>>2]|0)+96>>2]|0)+12>>2];if((c[(c[h>>2]|0)+92>>2]|0)!=0){c[j>>2]=Ad[c[(c[h>>2]|0)+92>>2]&127](c[(c[f>>2]|0)+88>>2]|0,c[g>>2]|0)|0;c[e>>2]=c[j>>2];k=c[e>>2]|0;i=d;return k|0}else{No(c[f>>2]|0,c[g>>2]|0);c[e>>2]=0;k=c[e>>2]|0;i=d;return k|0}}c[e>>2]=6;k=c[e>>2]|0;i=d;return k|0}c[e>>2]=35;k=c[e>>2]|0;i=d;return k|0}function Ro(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;i=i+32|0;e=d+24|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;k=d+16|0;l=d+20|0;c[f>>2]=a;c[g>>2]=b;if((c[f>>2]|0)==0){c[e>>2]=35;m=c[e>>2]|0;i=d;return m|0}if((((c[g>>2]|0)!=0?(c[(c[g>>2]|0)+4>>2]|0)>=0:0)?(c[(c[g>>2]|0)+8>>2]|0)>=0:0)?!((c[c[g>>2]>>2]|0)>>>0>=5):0){c[h>>2]=c[(c[(c[f>>2]|0)+96>>2]|0)+12>>2];if((c[(c[h>>2]|0)+88>>2]|0)!=0){c[k>>2]=Ad[c[(c[h>>2]|0)+88>>2]&127](c[(c[f>>2]|0)+88>>2]|0,c[g>>2]|0)|0;c[e>>2]=c[k>>2];m=c[e>>2]|0;i=d;return m|0}if((c[(c[f>>2]|0)+8>>2]&1|0)==0?(c[(c[f>>2]|0)+8>>2]&2|0)!=0:0){c[l>>2]=Mo(c[f>>2]|0,c[g>>2]|0,0,j)|0;if((c[l>>2]|0)!=0){c[e>>2]=c[l>>2];m=c[e>>2]|0;i=d;return m|0}else{c[e>>2]=Qo(c[f>>2]|0,c[j>>2]|0)|0;m=c[e>>2]|0;i=d;return m|0}}Po(c[f>>2]|0,c[g>>2]|0);c[e>>2]=0;m=c[e>>2]|0;i=d;return m|0}c[e>>2]=6;m=c[e>>2]|0;i=d;return m|0}function So(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+48|0;h=g+36|0;j=g;k=g+4|0;l=g+8|0;m=g+12|0;n=g+16|0;c[h>>2]=a;c[j>>2]=b;c[k>>2]=d;c[l>>2]=e;c[m>>2]=f;f=c[k>>2]|0;if((c[j>>2]|0)!=0){if((f|0)==0){c[k>>2]=c[j>>2]}}else{c[j>>2]=f}f=c[m>>2]|0;if((c[l>>2]|0)!=0){if((f|0)==0){c[m>>2]=c[l>>2]}}else{c[l>>2]=f}if((c[j>>2]|0)<64){c[j>>2]=64}if((c[k>>2]|0)<64){c[k>>2]=64}if((c[l>>2]|0)==0){c[m>>2]=72;c[l>>2]=72}c[n>>2]=0;c[n+4>>2]=c[j>>2];c[n+8>>2]=c[k>>2];c[n+12>>2]=c[l>>2];c[n+16>>2]=c[m>>2];m=Ro(c[h>>2]|0,n)|0;i=g;return m|0}function To(a,b,d,f,g){a=a|0;b=b|0;d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;h=i;i=i+32|0;j=h+28|0;k=h;l=h+4|0;m=h+8|0;n=h+12|0;o=h+16|0;p=h+20|0;q=h+24|0;c[k>>2]=a;c[l>>2]=b;c[m>>2]=d;c[n>>2]=f;c[o>>2]=g;c[p>>2]=0;if((c[k>>2]|0)==0){c[j>>2]=35;r=c[j>>2]|0;i=h;return r|0}if((c[o>>2]|0)==0){c[j>>2]=6;r=c[j>>2]|0;i=h;return r|0}c[q>>2]=c[(c[k>>2]|0)+96>>2];c[c[o>>2]>>2]=0;c[(c[o>>2]|0)+4>>2]=0;if((((c[(c[(c[q>>2]|0)+12>>2]|0)+76>>2]|0)!=0?(c[p>>2]=yd[c[(c[(c[q>>2]|0)+12>>2]|0)+76>>2]&31](c[k>>2]|0,c[l>>2]|0,c[m>>2]|0,c[o>>2]|0)|0,(c[p>>2]|0)==0):0)?(c[n>>2]|0)!=2:0)?(m=Nn(c[c[o>>2]>>2]|0,c[(c[(c[k>>2]|0)+88>>2]|0)+16>>2]|0)|0,c[c[o>>2]>>2]=m,m=Nn(c[(c[o>>2]|0)+4>>2]|0,c[(c[(c[k>>2]|0)+88>>2]|0)+20>>2]|0)|0,c[(c[o>>2]|0)+4>>2]=m,(c[n>>2]|0)!=1):0){if((e[(c[(c[k>>2]|0)+88>>2]|0)+12>>1]|0|0)<25){n=In(c[c[o>>2]>>2]|0,e[(c[(c[k>>2]|0)+88>>2]|0)+12>>1]|0,25)|0;c[c[o>>2]>>2]=n}if((e[(c[(c[k>>2]|0)+88>>2]|0)+14>>1]|0|0)<25){n=In(c[(c[o>>2]|0)+4>>2]|0,e[(c[(c[k>>2]|0)+88>>2]|0)+14>>1]|0,25)|0;c[(c[o>>2]|0)+4>>2]=n}c[c[o>>2]>>2]=(c[c[o>>2]>>2]|0)+32&-64;c[(c[o>>2]|0)+4>>2]=(c[(c[o>>2]|0)+4>>2]|0)+32&-64}c[j>>2]=c[p>>2];r=c[j>>2]|0;i=h;return r|0}function Uo(a){a=a|0;var b=0,d=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+16|0;d=b+12|0;f=b;g=b+4|0;h=b+8|0;c[f>>2]=a;c[g>>2]=c[(c[f>>2]|0)+40>>2];if((c[g>>2]|0)==0){c[d>>2]=38;j=c[d>>2]|0;i=b;return j|0}c[h>>2]=(c[g>>2]|0)+(c[(c[f>>2]|0)+36>>2]<<2);while(1){a=(c[h>>2]|0)+ -4|0;c[h>>2]=a;if(!(a>>>0>=(c[g>>2]|0)>>>0)){break}if((c[(c[c[h>>2]>>2]|0)+4>>2]|0)!=1970170211){continue}if((e[(c[c[h>>2]>>2]|0)+8>>1]|0|0)==3?(e[(c[c[h>>2]>>2]|0)+10>>1]|0|0)==10:0){k=10;break}if((e[(c[c[h>>2]>>2]|0)+8>>1]|0|0)!=0){continue}if((e[(c[c[h>>2]>>2]|0)+10>>1]|0|0)==4){k=10;break}}if((k|0)==10){c[(c[f>>2]|0)+92>>2]=c[c[h>>2]>>2];c[d>>2]=0;j=c[d>>2]|0;i=b;return j|0}c[h>>2]=(c[g>>2]|0)+(c[(c[f>>2]|0)+36>>2]<<2);while(1){a=(c[h>>2]|0)+ -4|0;c[h>>2]=a;if(!(a>>>0>=(c[g>>2]|0)>>>0)){k=15;break}if((c[(c[c[h>>2]>>2]|0)+4>>2]|0)==1970170211){k=14;break}}if((k|0)==14){c[(c[f>>2]|0)+92>>2]=c[c[h>>2]>>2];c[d>>2]=0;j=c[d>>2]|0;i=b;return j|0}else if((k|0)==15){c[d>>2]=38;j=c[d>>2]|0;i=b;return j|0}return 0}function Vo(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;i=i+16|0;d=b+12|0;e=b;f=b+4|0;g=b+8|0;c[d>>2]=a;c[e>>2]=c[(c[d>>2]|0)+12>>2];c[f>>2]=c[c[d>>2]>>2];c[g>>2]=c[(c[f>>2]|0)+100>>2];if((c[(c[e>>2]|0)+8>>2]|0)==0){h=c[g>>2]|0;j=c[d>>2]|0;Vn(h,j);c[d>>2]=0;i=b;return}rd[c[(c[e>>2]|0)+8>>2]&127](c[d>>2]|0);h=c[g>>2]|0;j=c[d>>2]|0;Vn(h,j);c[d>>2]=0;i=b;return}function Wo(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;i=i+48|0;g=f+32|0;h=f+28|0;j=f+24|0;k=f+20|0;l=f+16|0;m=f+8|0;n=f+4|0;o=f;p=f+12|0;c[h>>2]=a;c[j>>2]=b;c[k>>2]=d;c[l>>2]=e;c[m>>2]=0;c[p>>2]=0;if(((c[h>>2]|0)!=0?(c[k>>2]|0)!=0:0)?(c[c[k>>2]>>2]|0)!=0:0){c[n>>2]=c[c[k>>2]>>2];c[o>>2]=c[(c[n>>2]|0)+100>>2];c[p>>2]=Sn(c[o>>2]|0,c[c[h>>2]>>2]|0,m)|0;do{if((c[m>>2]|0)==0){e=c[p>>2]|0;d=c[k>>2]|0;c[e+0>>2]=c[d+0>>2];c[e+4>>2]=c[d+4>>2];c[e+8>>2]=c[d+8>>2];c[(c[p>>2]|0)+12>>2]=c[h>>2];if(!((c[(c[h>>2]|0)+4>>2]|0)!=0?(c[m>>2]=Ad[c[(c[h>>2]|0)+4>>2]&127](c[p>>2]|0,c[j>>2]|0)|0,(c[m>>2]|0)!=0):0)){q=8}if((q|0)==8?(d=Yn(c[o>>2]|0,4,c[(c[n>>2]|0)+36>>2]|0,(c[(c[n>>2]|0)+36>>2]|0)+1|0,c[(c[n>>2]|0)+40>>2]|0,m)|0,c[(c[n>>2]|0)+40>>2]=d,(c[m>>2]|0)==0):0){d=c[p>>2]|0;e=(c[n>>2]|0)+36|0;b=c[e>>2]|0;c[e>>2]=b+1;c[(c[(c[n>>2]|0)+40>>2]|0)+(b<<2)>>2]=d;break}Vo(c[p>>2]|0);c[p>>2]=0}}while(0);if((c[l>>2]|0)!=0){c[c[l>>2]>>2]=c[p>>2]}c[g>>2]=c[m>>2];r=c[g>>2]|0;i=f;return r|0}c[g>>2]=6;r=c[g>>2]|0;i=f;return r|0}function Xo(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=i;i=i+48|0;h=g+32|0;j=g+28|0;k=g+24|0;l=g+20|0;m=g+16|0;n=g+8|0;o=g+4|0;p=g;q=g+12|0;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;c[l>>2]=f;c[m>>2]=6;if((c[k>>2]|0)!=0?(c[l>>2]|0)>>>0>0:0){a[c[k>>2]|0]=0}if((c[h>>2]|0)==0){r=c[m>>2]|0;i=g;return r|0}if((c[j>>2]|0)>(c[(c[h>>2]|0)+16>>2]|0)){r=c[m>>2]|0;i=g;return r|0}if((c[(c[h>>2]|0)+8>>2]&512|0)==0){r=c[m>>2]|0;i=g;return r|0}c[o>>2]=c[(c[(c[h>>2]|0)+128>>2]|0)+36>>2];if((c[o>>2]|0)!=(-2|0)){if((c[o>>2]|0)==0){c[p>>2]=c[(c[h>>2]|0)+96>>2];c[q>>2]=0;if((c[(c[c[p>>2]>>2]|0)+32>>2]|0)!=0){c[q>>2]=Ad[c[(c[c[p>>2]>>2]|0)+32>>2]&127](c[p>>2]|0,30128)|0}c[o>>2]=c[q>>2];c[(c[(c[h>>2]|0)+128>>2]|0)+36>>2]=(c[o>>2]|0)!=0?c[o>>2]|0:-2}}else{c[o>>2]=0}c[n>>2]=c[o>>2];if((c[n>>2]|0)==0){r=c[m>>2]|0;i=g;return r|0}if((c[c[n>>2]>>2]|0)==0){r=c[m>>2]|0;i=g;return r|0}c[m>>2]=yd[c[c[n>>2]>>2]&31](c[h>>2]|0,c[j>>2]|0,c[k>>2]|0,c[l>>2]|0)|0;r=c[m>>2]|0;i=g;return r|0}function Yo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+32|0;f=e+20|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[k>>2]=0;if((c[f>>2]|0)==0){m=c[k>>2]|0;i=e;return m|0}c[j>>2]=c[(c[f>>2]|0)+148>>2];if((c[h>>2]|0)!=0){if((c[c[h>>2]>>2]|0)!=0){c[j>>2]=c[(c[c[h>>2]>>2]|0)+4>>2]}c[c[h>>2]>>2]=0}while(1){if((c[j>>2]|0)==0){n=12;break}c[l>>2]=c[(c[j>>2]|0)+8>>2];if((c[(c[l>>2]|0)+16>>2]|0)==(c[g>>2]|0)){break}c[j>>2]=c[(c[j>>2]|0)+4>>2]}if((n|0)==12){m=c[k>>2]|0;i=e;return m|0}if((c[h>>2]|0)!=0){c[c[h>>2]>>2]=c[j>>2]}c[k>>2]=c[l>>2];m=c[k>>2]|0;i=e;return m|0}function Zo(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+32|0;g=f+28|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;m=f+16|0;n=f+20|0;o=f+24|0;c[h>>2]=a;c[j>>2]=b;c[k>>2]=d;c[l>>2]=e;c[n>>2]=0;if((c[h>>2]|0)==0){c[g>>2]=33;p=c[g>>2]|0;i=f;return p|0}if((c[j>>2]|0)==0){c[g>>2]=6;p=c[g>>2]|0;i=f;return p|0}c[m>>2]=Jo((c[h>>2]|0)+148|0,c[j>>2]|0)|0;a:do{if((c[m>>2]|0)!=0){_o((c[h>>2]|0)+148|0,c[m>>2]|0);if((c[(c[j>>2]|0)+16>>2]|0)==1869968492){c[(c[h>>2]|0)+156>>2]=c[j>>2]}if((c[k>>2]|0)>>>0>0){c[o>>2]=c[(c[(c[j>>2]|0)+12>>2]|0)+52>>2];while(1){if(!((c[k>>2]|0)>>>0>0)){break a}c[n>>2]=md[c[o>>2]&63](c[j>>2]|0,c[c[l>>2]>>2]|0,c[(c[l>>2]|0)+4>>2]|0)|0;if((c[n>>2]|0)!=0){break a}c[l>>2]=(c[l>>2]|0)+8;c[k>>2]=(c[k>>2]|0)+ -1}}}else{c[n>>2]=6}}while(0);c[g>>2]=c[n>>2];p=c[g>>2]|0;i=f;return p|0}function _o(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d+12|0;f=d;g=d+4|0;h=d+8|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=c[c[f>>2]>>2];c[h>>2]=c[(c[f>>2]|0)+4>>2];if((c[g>>2]|0)==0){i=d;return}c[(c[g>>2]|0)+4>>2]=c[h>>2];b=c[g>>2]|0;if((c[h>>2]|0)!=0){c[c[h>>2]>>2]=b}else{c[(c[e>>2]|0)+4>>2]=b}c[c[f>>2]>>2]=0;c[(c[f>>2]|0)+4>>2]=c[c[e>>2]>>2];c[c[c[e>>2]>>2]>>2]=c[f>>2];c[c[e>>2]>>2]=c[f>>2];i=d;return}function $o(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;g=i;i=i+32|0;h=g+20|0;j=g;k=g+4|0;l=g+8|0;m=g+12|0;n=g+16|0;o=g+24|0;c[h>>2]=b;c[j>>2]=e;c[k>>2]=f;c[l>>2]=0;if((c[(c[j>>2]|0)+72>>2]|0)==1651078259){p=c[l>>2]|0;i=g;return p|0}c[n>>2]=0;a[o]=0;f=c[h>>2]|0;if((c[(c[j>>2]|0)+72>>2]|0)==1869968492){c[m>>2]=c[f+156>>2];c[n>>2]=c[(c[h>>2]|0)+148>>2]}else{c[m>>2]=Yo(f,c[(c[j>>2]|0)+72>>2]|0,n)|0}c[l>>2]=7;while(1){if((c[m>>2]|0)==0){break}c[l>>2]=yd[c[(c[m>>2]|0)+60>>2]&31](c[m>>2]|0,c[j>>2]|0,c[k>>2]|0,0)|0;if((c[l>>2]|0)==0){break}if((c[l>>2]&255|0)!=19){break}c[m>>2]=Yo(c[h>>2]|0,c[(c[j>>2]|0)+72>>2]|0,n)|0;a[o]=1}if((c[l>>2]|0)!=0){p=c[l>>2]|0;i=g;return p|0}if((d[o]|0|0)==0){p=c[l>>2]|0;i=g;return p|0}if((c[m>>2]|0)==0){p=c[l>>2]|0;i=g;return p|0}Zo(c[h>>2]|0,c[m>>2]|0,0,0)|0;p=c[l>>2]|0;i=g;return p|0}function ap(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=i;i=i+48|0;e=d+36|0;f=d+32|0;g=d+28|0;h=d+24|0;j=d+20|0;k=d+16|0;l=d+8|0;m=d+4|0;n=d;o=d+12|0;c[f>>2]=a;c[g>>2]=b;if((c[f>>2]|0)==0){c[e>>2]=33;p=c[e>>2]|0;i=d;return p|0}if((c[g>>2]|0)==0){c[e>>2]=6;p=c[e>>2]|0;i=d;return p|0}if((c[(c[g>>2]|0)+16>>2]|0)>131077){c[e>>2]=4;p=c[e>>2]|0;i=d;return p|0}c[l>>2]=0;while(1){if(!((c[l>>2]|0)>>>0<(c[(c[f>>2]|0)+16>>2]|0)>>>0)){break}c[k>>2]=c[(c[f>>2]|0)+20+(c[l>>2]<<2)>>2];if((cA(c[(c[c[k>>2]>>2]|0)+8>>2]|0,c[(c[g>>2]|0)+8>>2]|0)|0)==0){q=10;break}c[l>>2]=(c[l>>2]|0)+1}do{if((q|0)==10){if((c[(c[g>>2]|0)+12>>2]|0)>(c[(c[c[k>>2]>>2]|0)+12>>2]|0)){bp(c[f>>2]|0,c[k>>2]|0)|0;break}c[e>>2]=5;p=c[e>>2]|0;i=d;return p|0}}while(0);c[j>>2]=c[c[f>>2]>>2];c[h>>2]=0;a:do{if(!((c[(c[f>>2]|0)+16>>2]|0)>>>0>=32)){c[k>>2]=Sn(c[j>>2]|0,c[(c[g>>2]|0)+4>>2]|0,h)|0;if((c[h>>2]|0)==0){c[(c[k>>2]|0)+4>>2]=c[f>>2];c[(c[k>>2]|0)+8>>2]=c[j>>2];c[c[k>>2]>>2]=c[g>>2];if(!((c[c[c[k>>2]>>2]>>2]&2|0)!=0?(c[h>>2]=cp(c[k>>2]|0)|0,(c[h>>2]|0)!=0):0)){q=19}do{if((q|0)==19){if((c[c[c[k>>2]>>2]>>2]&4|0)!=0){c[(c[f>>2]|0)+160>>2]=c[k>>2]}if(((c[c[c[k>>2]>>2]>>2]&1|0)!=0?(c[m>>2]=c[k>>2],c[(c[m>>2]|0)+12>>2]=c[c[k>>2]>>2],(c[c[c[m>>2]>>2]>>2]&512|0)==0):0)?(c[h>>2]=Rn(c[j>>2]|0,(c[m>>2]|0)+24|0)|0,(c[h>>2]|0)!=0):0){break}if((c[(c[g>>2]|0)+24>>2]|0)!=0?(c[h>>2]=vd[c[(c[g>>2]|0)+24>>2]&63](c[k>>2]|0)|0,(c[h>>2]|0)!=0):0){break}l=c[k>>2]|0;b=(c[f>>2]|0)+16|0;a=c[b>>2]|0;c[b>>2]=a+1;c[(c[f>>2]|0)+20+(a<<2)>>2]=l;break a}}while(0);if((c[c[c[k>>2]>>2]>>2]&1|0)!=0?(c[n>>2]=c[k>>2],(c[c[c[n>>2]>>2]>>2]&512|0)==0):0){Wn(c[(c[n>>2]|0)+24>>2]|0)}if((((c[c[c[k>>2]>>2]>>2]&2|0)!=0?(c[o>>2]=c[k>>2],(c[(c[o>>2]|0)+12>>2]|0)!=0):0)?(c[(c[(c[o>>2]|0)+12>>2]|0)+36>>2]|0)==1869968492:0)?(c[(c[o>>2]|0)+52>>2]|0)!=0:0){rd[c[(c[(c[(c[o>>2]|0)+12>>2]|0)+56>>2]|0)+20>>2]&127](c[(c[o>>2]|0)+52>>2]|0)}Vn(c[j>>2]|0,c[k>>2]|0);c[k>>2]=0}}else{c[h>>2]=48}}while(0);c[e>>2]=c[h>>2];p=c[e>>2]|0;i=d;return p|0}function bp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+32|0;e=d+16|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;c[f>>2]=a;c[g>>2]=b;if((c[f>>2]|0)==0){c[e>>2]=33;k=c[e>>2]|0;i=d;return k|0}a:do{if((c[g>>2]|0)!=0){c[h>>2]=(c[f>>2]|0)+20;c[j>>2]=(c[h>>2]|0)+(c[(c[f>>2]|0)+16>>2]<<2);while(1){if(!((c[h>>2]|0)>>>0<(c[j>>2]|0)>>>0)){break a}if((c[c[h>>2]>>2]|0)==(c[g>>2]|0)){break}c[h>>2]=(c[h>>2]|0)+4}b=(c[f>>2]|0)+16|0;c[b>>2]=(c[b>>2]|0)+ -1;c[j>>2]=(c[j>>2]|0)+ -4;while(1){if(!((c[h>>2]|0)>>>0<(c[j>>2]|0)>>>0)){break}c[c[h>>2]>>2]=c[(c[h>>2]|0)+4>>2];c[h>>2]=(c[h>>2]|0)+4}c[c[j>>2]>>2]=0;gp(c[g>>2]|0);c[e>>2]=0;k=c[e>>2]|0;i=d;return k|0}}while(0);c[e>>2]=34;k=c[e>>2]|0;i=d;return k|0}function cp(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;b=i;i=i+32|0;d=b+24|0;e=b;f=b+4|0;g=b+8|0;h=b+12|0;j=b+16|0;k=b+20|0;c[d>>2]=a;c[e>>2]=c[(c[d>>2]|0)+4>>2];c[f>>2]=c[c[e>>2]>>2];c[h>>2]=0;c[h>>2]=Sn(c[f>>2]|0,12,g)|0;if((c[g>>2]|0)!=0){l=c[g>>2]|0;i=b;return l|0}c[j>>2]=c[d>>2];c[k>>2]=c[c[d>>2]>>2];c[(c[j>>2]|0)+12>>2]=c[k>>2];c[(c[j>>2]|0)+16>>2]=c[(c[k>>2]|0)+36>>2];if((c[(c[k>>2]|0)+36>>2]|0)==1869968492?(c[(c[(c[k>>2]|0)+56>>2]|0)+4>>2]|0)!=0:0){c[g>>2]=Ad[c[(c[(c[k>>2]|0)+56>>2]|0)+4>>2]&127](c[f>>2]|0,(c[j>>2]|0)+52|0)|0;if((c[g>>2]|0)==0){c[(c[j>>2]|0)+56>>2]=c[(c[(c[k>>2]|0)+56>>2]|0)+16>>2];c[(c[j>>2]|0)+60>>2]=c[(c[k>>2]|0)+40>>2];m=6}}else{m=6}if((m|0)==6){c[(c[h>>2]|0)+8>>2]=c[d>>2];Fo((c[e>>2]|0)+148|0,c[h>>2]|0);Xp(c[e>>2]|0)}if((c[g>>2]|0)==0){l=c[g>>2]|0;i=b;return l|0}Vn(c[f>>2]|0,c[h>>2]|0);c[h>>2]=0;l=c[g>>2]|0;i=b;return l|0}function dp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+32|0;e=d+20|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;k=d+16|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=0;if((c[f>>2]|0)!=0?(c[g>>2]|0)!=0:0){c[j>>2]=(c[f>>2]|0)+20;c[k>>2]=(c[j>>2]|0)+(c[(c[f>>2]|0)+16>>2]<<2);while(1){if(!((c[j>>2]|0)>>>0<(c[k>>2]|0)>>>0)){break}f=(cA(c[(c[c[c[j>>2]>>2]>>2]|0)+8>>2]|0,c[g>>2]|0)|0)==0;l=c[j>>2]|0;if(f){m=7;break}c[j>>2]=l+4}if((m|0)==7){c[h>>2]=c[l>>2]}c[e>>2]=c[h>>2];n=c[e>>2]|0;i=d;return n|0}c[e>>2]=c[h>>2];n=c[e>>2]|0;i=d;return n|0}function ep(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d+8|0;f=d;g=d+4|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=dp(c[e>>2]|0,c[f>>2]|0)|0;if((c[g>>2]|0)==0){h=0;i=d;return h|0}h=c[(c[c[g>>2]>>2]|0)+20>>2]|0;i=d;return h|0}function fp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;i=i+32|0;e=d+20|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;k=d+16|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=0;if((c[e>>2]|0)==0){l=c[g>>2]|0;i=d;return l|0}if((c[(c[c[e>>2]>>2]|0)+32>>2]|0)!=0){c[g>>2]=Ad[c[(c[c[e>>2]>>2]|0)+32>>2]&127](c[e>>2]|0,c[f>>2]|0)|0}if((c[g>>2]|0)!=0){l=c[g>>2]|0;i=d;return l|0}c[h>>2]=c[(c[e>>2]|0)+4>>2];c[j>>2]=(c[h>>2]|0)+20;c[k>>2]=(c[j>>2]|0)+(c[(c[h>>2]|0)+16>>2]<<2);while(1){if(!((c[j>>2]|0)>>>0<(c[k>>2]|0)>>>0)){m=11;break}if(((c[c[j>>2]>>2]|0)!=(c[e>>2]|0)?(c[(c[c[c[j>>2]>>2]>>2]|0)+32>>2]|0)!=0:0)?(c[g>>2]=Ad[c[(c[c[c[j>>2]>>2]>>2]|0)+32>>2]&127](c[c[j>>2]>>2]|0,c[f>>2]|0)|0,(c[g>>2]|0)!=0):0){m=11;break}c[j>>2]=(c[j>>2]|0)+4}if((m|0)==11){l=c[g>>2]|0;i=d;return l|0}return 0}function gp(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;i=i+16|0;d=b+12|0;e=b;f=b+4|0;g=b+8|0;c[d>>2]=a;c[e>>2]=c[(c[d>>2]|0)+8>>2];c[f>>2]=c[c[d>>2]>>2];c[g>>2]=c[(c[d>>2]|0)+4>>2];if((c[g>>2]|0)!=0?(c[(c[g>>2]|0)+160>>2]|0)==(c[d>>2]|0):0){c[(c[g>>2]|0)+160>>2]=0}if((c[c[c[d>>2]>>2]>>2]&2|0)!=0){Vp(c[d>>2]|0)}if((c[c[c[d>>2]>>2]>>2]&1|0)!=0){Wp(c[d>>2]|0)}if((c[(c[f>>2]|0)+28>>2]|0)==0){h=c[e>>2]|0;j=c[d>>2]|0;Vn(h,j);c[d>>2]=0;i=b;return}rd[c[(c[f>>2]|0)+28>>2]&127](c[d>>2]|0);h=c[e>>2]|0;j=c[d>>2]|0;Vn(h,j);c[d>>2]=0;i=b;return}function hp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+32|0;e=d+16|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=0;if((c[f>>2]|0)==0){c[e>>2]=6;k=c[e>>2]|0;i=d;return k|0}c[h>>2]=Sn(c[f>>2]|0,192,j)|0;if((c[j>>2]|0)!=0){c[e>>2]=c[j>>2];k=c[e>>2]|0;i=d;return k|0}c[c[h>>2]>>2]=c[f>>2];c[(c[h>>2]|0)+168>>2]=16384;b=Sn(c[f>>2]|0,16384,j)|0;c[(c[h>>2]|0)+164>>2]=b;if((c[j>>2]|0)!=0){Vn(c[f>>2]|0,c[h>>2]|0);c[h>>2]=0;c[e>>2]=c[j>>2];k=c[e>>2]|0;i=d;return k|0}else{c[(c[h>>2]|0)+4>>2]=2;c[(c[h>>2]|0)+8>>2]=5;c[(c[h>>2]|0)+12>>2]=3;c[(c[h>>2]|0)+188>>2]=1;c[c[g>>2]>>2]=c[h>>2];c[e>>2]=0;k=c[e>>2]|0;i=d;return k|0}return 0}function ip(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;b=i;i=i+48|0;d=b+36|0;e=b+32|0;f=b+28|0;g=b+24|0;h=b+20|0;j=b+8|0;k=b+4|0;l=b;m=b+16|0;c[e>>2]=a;if((c[e>>2]|0)==0){c[d>>2]=33;n=c[d>>2]|0;i=b;return n|0}a=(c[e>>2]|0)+188|0;c[a>>2]=(c[a>>2]|0)+ -1;if((c[(c[e>>2]|0)+188>>2]|0)<=0){c[f>>2]=c[c[e>>2]>>2];c[j+0>>2]=c[30152>>2];c[j+4>>2]=c[30156>>2];c[g>>2]=0;while(1){if(!((c[g>>2]|0)>>>0<2)){break}c[h>>2]=0;while(1){if(!((c[h>>2]|0)>>>0<(c[(c[e>>2]|0)+16>>2]|0)>>>0)){break}c[k>>2]=c[(c[e>>2]|0)+20+(c[h>>2]<<2)>>2];c[l>>2]=c[(c[c[k>>2]>>2]|0)+8>>2];if(!((c[j+(c[g>>2]<<2)>>2]|0)!=0?(cA(c[l>>2]|0,c[j+(c[g>>2]<<2)>>2]|0)|0)!=0:0)){o=10}a:do{if((o|0)==10?(o=0,(c[c[c[k>>2]>>2]>>2]&1|0)!=0):0){c[m>>2]=(c[k>>2]|0)+16;while(1){if((c[c[m>>2]>>2]|0)==0){break a}Ho(c[(c[c[m>>2]>>2]|0)+8>>2]|0)|0}}}while(0);c[h>>2]=(c[h>>2]|0)+1}c[g>>2]=(c[g>>2]|0)+1}while(1){if(!((c[(c[e>>2]|0)+16>>2]|0)>>>0>0)){break}bp(c[e>>2]|0,c[(c[e>>2]|0)+20+((c[(c[e>>2]|0)+16>>2]|0)-1<<2)>>2]|0)|0}Vn(c[f>>2]|0,c[(c[e>>2]|0)+164>>2]|0);c[(c[e>>2]|0)+164>>2]=0;c[(c[e>>2]|0)+168>>2]=0;Vn(c[f>>2]|0,c[e>>2]|0);c[e>>2]=0}c[d>>2]=0;n=c[d>>2]|0;i=b;return n|0}function jp(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;g=i;i=i+144|0;h=g+132|0;j=g+128|0;k=g+124|0;l=g+120|0;m=g+112|0;n=g+104|0;o=g+96|0;p=g+88|0;q=g+84|0;r=g+80|0;s=g+76|0;t=g+72|0;u=g+16|0;v=g;w=g+4|0;x=g+8|0;y=g+12|0;z=g+24|0;A=g+32|0;B=g+40|0;C=g+48|0;D=g+56|0;E=g+64|0;c[j>>2]=d;c[k>>2]=e;c[l>>2]=f;if((c[j>>2]|0)!=0?(c[k>>2]|0)!=0:0){c[w>>2]=c[(c[k>>2]|0)+16>>2];c[x>>2]=c[(c[k>>2]|0)+20>>2];c[u>>2]=0;c[t>>2]=0;a:while(1){if((c[t>>2]|0)>=(b[c[j>>2]>>1]|0)){F=33;break}c[y>>2]=b[(c[(c[j>>2]|0)+12>>2]|0)+(c[t>>2]<<1)>>1]|0;if((c[y>>2]|0)<0){F=35;break}c[q>>2]=(c[(c[j>>2]|0)+4>>2]|0)+(c[y>>2]<<3);f=(c[(c[j>>2]|0)+4>>2]|0)+(c[u>>2]<<3)|0;c[o+0>>2]=c[f+0>>2];c[o+4>>2]=c[f+4>>2];c[o>>2]=(c[o>>2]<<c[w>>2])-(c[x>>2]|0);c[o+4>>2]=(c[o+4>>2]<<c[w>>2])-(c[x>>2]|0);f=(c[(c[j>>2]|0)+4>>2]|0)+(c[y>>2]<<3)|0;c[m+0>>2]=c[f+0>>2];c[m+4>>2]=c[f+4>>2];c[m>>2]=(c[m>>2]<<c[w>>2])-(c[x>>2]|0);c[m+4>>2]=(c[m+4>>2]<<c[w>>2])-(c[x>>2]|0);c[n+0>>2]=c[o+0>>2];c[n+4>>2]=c[o+4>>2];c[p>>2]=(c[(c[j>>2]|0)+4>>2]|0)+(c[u>>2]<<3);c[r>>2]=(c[(c[j>>2]|0)+8>>2]|0)+(c[u>>2]|0);c[v>>2]=a[c[r>>2]|0]&3;if((c[v>>2]|0)==2){F=35;break}if((c[v>>2]|0)==0){if((a[(c[(c[j>>2]|0)+8>>2]|0)+(c[y>>2]|0)|0]&3|0)==1){c[o+0>>2]=c[m+0>>2];c[o+4>>2]=c[m+4>>2];c[q>>2]=(c[q>>2]|0)+ -8}else{c[o>>2]=((c[o>>2]|0)+(c[m>>2]|0)|0)/2|0;c[o+4>>2]=((c[o+4>>2]|0)+(c[m+4>>2]|0)|0)/2|0}c[p>>2]=(c[p>>2]|0)+ -8;c[r>>2]=(c[r>>2]|0)+ -1}c[s>>2]=Ad[c[c[k>>2]>>2]&127](o,c[l>>2]|0)|0;if((c[s>>2]|0)!=0){F=34;break}b:while(1){if(!((c[p>>2]|0)>>>0<(c[q>>2]|0)>>>0)){F=30;break}c[p>>2]=(c[p>>2]|0)+8;c[r>>2]=(c[r>>2]|0)+1;c[v>>2]=a[c[r>>2]|0]&3;f=c[v>>2]|0;if((f|0)==0){c[n>>2]=(c[c[p>>2]>>2]<<c[w>>2])-(c[x>>2]|0);c[n+4>>2]=(c[(c[p>>2]|0)+4>>2]<<c[w>>2])-(c[x>>2]|0);while(1){if(!((c[p>>2]|0)>>>0<(c[q>>2]|0)>>>0)){F=24;break b}c[p>>2]=(c[p>>2]|0)+8;c[r>>2]=(c[r>>2]|0)+1;c[v>>2]=a[c[r>>2]|0]&3;c[A>>2]=(c[c[p>>2]>>2]<<c[w>>2])-(c[x>>2]|0);c[A+4>>2]=(c[(c[p>>2]|0)+4>>2]<<c[w>>2])-(c[x>>2]|0);if((c[v>>2]|0)==1){break}if((c[v>>2]|0)!=0){F=35;break a}c[B>>2]=((c[n>>2]|0)+(c[A>>2]|0)|0)/2|0;c[B+4>>2]=((c[n+4>>2]|0)+(c[A+4>>2]|0)|0)/2|0;c[s>>2]=md[c[(c[k>>2]|0)+8>>2]&63](n,B,c[l>>2]|0)|0;if((c[s>>2]|0)!=0){F=34;break a}c[n+0>>2]=c[A+0>>2];c[n+4>>2]=c[A+4>>2]}c[s>>2]=md[c[(c[k>>2]|0)+8>>2]&63](n,A,c[l>>2]|0)|0;if((c[s>>2]|0)!=0){F=34;break a}else{continue}}else if((f|0)==1){c[z>>2]=(c[c[p>>2]>>2]<<c[w>>2])-(c[x>>2]|0);c[z+4>>2]=(c[(c[p>>2]|0)+4>>2]<<c[w>>2])-(c[x>>2]|0);c[s>>2]=Ad[c[(c[k>>2]|0)+4>>2]&127](z,c[l>>2]|0)|0;if((c[s>>2]|0)!=0){F=34;break a}else{continue}}else{if(((c[p>>2]|0)+8|0)>>>0>(c[q>>2]|0)>>>0){F=35;break a}if((a[(c[r>>2]|0)+1|0]&3|0)!=2){F=35;break a}c[p>>2]=(c[p>>2]|0)+16;c[r>>2]=(c[r>>2]|0)+2;c[C>>2]=(c[(c[p>>2]|0)+ -16>>2]<<c[w>>2])-(c[x>>2]|0);c[C+4>>2]=(c[(c[p>>2]|0)+ -16+4>>2]<<c[w>>2])-(c[x>>2]|0);c[D>>2]=(c[(c[p>>2]|0)+ -8>>2]<<c[w>>2])-(c[x>>2]|0);c[D+4>>2]=(c[(c[p>>2]|0)+ -8+4>>2]<<c[w>>2])-(c[x>>2]|0);if(!((c[p>>2]|0)>>>0<=(c[q>>2]|0)>>>0)){F=29;break}c[E>>2]=(c[c[p>>2]>>2]<<c[w>>2])-(c[x>>2]|0);c[E+4>>2]=(c[(c[p>>2]|0)+4>>2]<<c[w>>2])-(c[x>>2]|0);c[s>>2]=yd[c[(c[k>>2]|0)+12>>2]&31](C,D,E,c[l>>2]|0)|0;if((c[s>>2]|0)!=0){F=34;break a}else{continue}}}if((F|0)==24){F=0;c[s>>2]=md[c[(c[k>>2]|0)+8>>2]&63](n,o,c[l>>2]|0)|0}else if((F|0)==29){F=0;c[s>>2]=yd[c[(c[k>>2]|0)+12>>2]&31](C,D,o,c[l>>2]|0)|0}else if((F|0)==30){F=0;c[s>>2]=Ad[c[(c[k>>2]|0)+4>>2]&127](o,c[l>>2]|0)|0}if((c[s>>2]|0)!=0){F=34;break}c[u>>2]=(c[y>>2]|0)+1;c[t>>2]=(c[t>>2]|0)+1}if((F|0)==33){c[h>>2]=0;G=c[h>>2]|0;i=g;return G|0}else if((F|0)==34){c[h>>2]=c[s>>2];G=c[h>>2]|0;i=g;return G|0}else if((F|0)==35){c[h>>2]=20;G=c[h>>2]|0;i=g;return G|0}}c[h>>2]=6;G=c[h>>2]|0;i=g;return G|0}function kp(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;i=i+32|0;h=g+20|0;j=g;k=g+4|0;l=g+8|0;m=g+12|0;n=g+16|0;c[j>>2]=a;c[k>>2]=d;c[l>>2]=e;c[m>>2]=f;if((c[m>>2]|0)!=0?(c[j>>2]|0)!=0:0){f=c[m>>2]|0;c[f+0>>2]=c[30160>>2];c[f+4>>2]=c[30164>>2];c[f+8>>2]=c[30168>>2];c[f+12>>2]=c[30172>>2];c[f+16>>2]=c[30176>>2];if((c[l>>2]|0)>=0?!((c[l>>2]|0)>>>0>(c[k>>2]|0)>>>0):0){if((c[k>>2]|0)>>>0>32767){c[h>>2]=10;o=c[h>>2]|0;i=g;return o|0}f=Yn(c[j>>2]|0,8,0,c[k>>2]|0,0,n)|0;c[(c[m>>2]|0)+4>>2]=f;if(((c[n>>2]|0)==0?(f=Yn(c[j>>2]|0,1,0,c[k>>2]|0,0,n)|0,c[(c[m>>2]|0)+8>>2]=f,(c[n>>2]|0)==0):0)?(f=Yn(c[j>>2]|0,2,0,c[l>>2]|0,0,n)|0,c[(c[m>>2]|0)+12>>2]=f,(c[n>>2]|0)==0):0){b[(c[m>>2]|0)+2>>1]=c[k>>2];b[c[m>>2]>>1]=c[l>>2];l=(c[m>>2]|0)+16|0;c[l>>2]=c[l>>2]|1;c[h>>2]=0;o=c[h>>2]|0;i=g;return o|0}l=(c[m>>2]|0)+16|0;c[l>>2]=c[l>>2]|1;lp(c[j>>2]|0,c[m>>2]|0)|0;c[h>>2]=c[n>>2];o=c[h>>2]|0;i=g;return o|0}c[h>>2]=6;o=c[h>>2]|0;i=g;return o|0}c[h>>2]=6;o=c[h>>2]|0;i=g;return o|0}function lp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d+8|0;f=d;g=d+4|0;c[f>>2]=a;c[g>>2]=b;if((c[f>>2]|0)!=0?(c[g>>2]|0)!=0:0){if((c[(c[g>>2]|0)+16>>2]&1|0)!=0){Vn(c[f>>2]|0,c[(c[g>>2]|0)+4>>2]|0);c[(c[g>>2]|0)+4>>2]=0;Vn(c[f>>2]|0,c[(c[g>>2]|0)+8>>2]|0);c[(c[g>>2]|0)+8>>2]=0;Vn(c[f>>2]|0,c[(c[g>>2]|0)+12>>2]|0);c[(c[g>>2]|0)+12>>2]=0}f=c[g>>2]|0;c[f+0>>2]=c[30160>>2];c[f+4>>2]=c[30164>>2];c[f+8>>2]=c[30168>>2];c[f+12>>2]=c[30172>>2];c[f+16>>2]=c[30176>>2];c[e>>2]=0;h=c[e>>2]|0;i=d;return h|0}c[e>>2]=6;h=c[e>>2]|0;i=d;return h|0}function mp(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+32|0;g=f+16|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;c[h>>2]=a;c[j>>2]=b;c[k>>2]=d;c[l>>2]=e;if((c[h>>2]|0)!=0){c[g>>2]=kp(c[c[h>>2]>>2]|0,c[j>>2]|0,c[k>>2]|0,c[l>>2]|0)|0;m=c[g>>2]|0;i=f;return m|0}else{c[g>>2]=33;m=c[g>>2]|0;i=f;return m|0}return 0}function np(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+16|0;f=e+12|0;g=e;h=e+4|0;j=e+8|0;c[g>>2]=a;c[h>>2]=d;if((((c[g>>2]|0)!=0?(c[h>>2]|0)!=0:0)?(b[(c[g>>2]|0)+2>>1]|0)==(b[(c[h>>2]|0)+2>>1]|0):0)?(b[c[g>>2]>>1]|0)==(b[c[h>>2]>>1]|0):0){if((c[g>>2]|0)==(c[h>>2]|0)){c[f>>2]=0;k=c[f>>2]|0;i=e;return k|0}else{lA(c[(c[h>>2]|0)+4>>2]|0,c[(c[g>>2]|0)+4>>2]|0,b[(c[g>>2]|0)+2>>1]<<3|0)|0;lA(c[(c[h>>2]|0)+8>>2]|0,c[(c[g>>2]|0)+8>>2]|0,b[(c[g>>2]|0)+2>>1]|0)|0;lA(c[(c[h>>2]|0)+12>>2]|0,c[(c[g>>2]|0)+12>>2]|0,b[c[g>>2]>>1]<<1|0)|0;c[j>>2]=c[(c[h>>2]|0)+16>>2]&1;c[(c[h>>2]|0)+16>>2]=c[(c[g>>2]|0)+16>>2];g=(c[h>>2]|0)+16|0;c[g>>2]=c[g>>2]&-2;g=(c[h>>2]|0)+16|0;c[g>>2]=c[g>>2]|c[j>>2];c[f>>2]=0;k=c[f>>2]|0;i=e;return k|0}}c[f>>2]=6;k=c[f>>2]|0;i=e;return k|0}function op(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d+8|0;f=d;g=d+4|0;c[f>>2]=a;c[g>>2]=b;if((c[f>>2]|0)!=0){c[e>>2]=lp(c[c[f>>2]>>2]|0,c[g>>2]|0)|0;h=c[e>>2]|0;i=d;return h|0}else{c[e>>2]=33;h=c[e>>2]|0;i=d;return h|0}return 0}function pp(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;i=i+48|0;f=e+36|0;g=e+32|0;h=e+28|0;j=e+24|0;k=e+20|0;l=e+16|0;m=e+8|0;n=e+4|0;o=e;p=e+12|0;c[f>>2]=a;c[g>>2]=d;if((c[f>>2]|0)==0){i=e;return}if((c[g>>2]|0)==0){i=e;return}a:do{if((b[(c[f>>2]|0)+2>>1]|0)==0){c[h>>2]=0;c[j>>2]=0;c[k>>2]=0;c[l>>2]=0}else{c[m>>2]=c[(c[f>>2]|0)+4>>2];c[n>>2]=(c[m>>2]|0)+(b[(c[f>>2]|0)+2>>1]<<3);d=c[c[m>>2]>>2]|0;c[k>>2]=d;c[h>>2]=d;d=c[(c[m>>2]|0)+4>>2]|0;c[l>>2]=d;c[j>>2]=d;c[m>>2]=(c[m>>2]|0)+8;while(1){if(!((c[m>>2]|0)>>>0<(c[n>>2]|0)>>>0)){break a}c[o>>2]=c[c[m>>2]>>2];if((c[o>>2]|0)<(c[h>>2]|0)){c[h>>2]=c[o>>2]}if((c[o>>2]|0)>(c[k>>2]|0)){c[k>>2]=c[o>>2]}c[p>>2]=c[(c[m>>2]|0)+4>>2];if((c[p>>2]|0)<(c[j>>2]|0)){c[j>>2]=c[p>>2]}if((c[p>>2]|0)>(c[l>>2]|0)){c[l>>2]=c[p>>2]}c[m>>2]=(c[m>>2]|0)+8}}}while(0);c[c[g>>2]>>2]=c[h>>2];c[(c[g>>2]|0)+8>>2]=c[k>>2];c[(c[g>>2]|0)+4>>2]=c[j>>2];c[(c[g>>2]|0)+12>>2]=c[l>>2];i=e;return}function qp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d+8|0;f=d;g=d+4|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=0;if((c[(c[e>>2]|0)+20>>2]|0)!=0){if((yd[c[(c[e>>2]|0)+20>>2]&31](c[e>>2]|0,c[f>>2]|0,0,0)|0)!=0){c[g>>2]=85}}else{if((c[f>>2]|0)>>>0>(c[(c[e>>2]|0)+4>>2]|0)>>>0){c[g>>2]=85}}if((c[g>>2]|0)!=0){h=c[g>>2]|0;i=d;return h|0}c[(c[e>>2]|0)+8>>2]=c[f>>2];h=c[g>>2]|0;i=d;return h|0}function rp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;d=wp(c[f>>2]|0,c[(c[f>>2]|0)+8>>2]|0,c[g>>2]|0,c[h>>2]|0)|0;i=e;return d|0}function sp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d+8|0;f=d;g=d+4|0;c[f>>2]=a;c[g>>2]=b;if((c[g>>2]|0)<0){c[e>>2]=85;h=c[e>>2]|0;i=d;return h|0}else{c[e>>2]=qp(c[f>>2]|0,(c[(c[f>>2]|0)+8>>2]|0)+(c[g>>2]|0)|0)|0;h=c[e>>2]|0;i=d;return h|0}return 0}function tp(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+32|0;g=f+14|0;h=f;j=f+4|0;k=f+16|0;l=f+8|0;m=f+12|0;c[h>>2]=d;c[j>>2]=e;c[l>>2]=0;b[m>>1]=0;c[c[j>>2]>>2]=0;do{if(((c[(c[h>>2]|0)+8>>2]|0)+1|0)>>>0<(c[(c[h>>2]|0)+4>>2]|0)>>>0){e=c[h>>2]|0;if((c[(c[h>>2]|0)+20>>2]|0)!=0){if((yd[c[e+20>>2]&31](c[h>>2]|0,c[(c[h>>2]|0)+8>>2]|0,k,2)|0)!=2){break}c[l>>2]=k}else{c[l>>2]=(c[e>>2]|0)+(c[(c[h>>2]|0)+8>>2]|0)}if((c[l>>2]|0)!=0){c[l>>2]=(c[l>>2]|0)+2;b[m>>1]=(a[(c[l>>2]|0)+ -2|0]&255)<<8|(a[(c[l>>2]|0)+ -2+1|0]&255)<<0}e=(c[h>>2]|0)+8|0;c[e>>2]=(c[e>>2]|0)+2;b[g>>1]=b[m>>1]|0;n=b[g>>1]|0;i=f;return n|0}}while(0);c[c[j>>2]>>2]=85;b[g>>1]=0;n=b[g>>1]|0;i=f;return n|0}function up(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+32|0;f=e+16|0;g=e;h=e+4|0;j=e+20|0;k=e+12|0;l=e+8|0;c[g>>2]=a;c[h>>2]=b;c[k>>2]=0;c[l>>2]=0;c[c[h>>2]>>2]=0;do{if(((c[(c[g>>2]|0)+8>>2]|0)+3|0)>>>0<(c[(c[g>>2]|0)+4>>2]|0)>>>0){b=c[g>>2]|0;if((c[(c[g>>2]|0)+20>>2]|0)!=0){if((yd[c[b+20>>2]&31](c[g>>2]|0,c[(c[g>>2]|0)+8>>2]|0,j,4)|0)!=4){break}c[k>>2]=j}else{c[k>>2]=(c[b>>2]|0)+(c[(c[g>>2]|0)+8>>2]|0)}if((c[k>>2]|0)!=0){c[k>>2]=(c[k>>2]|0)+4;c[l>>2]=(d[(c[k>>2]|0)+ -4|0]|0)<<24|(d[(c[k>>2]|0)+ -4+1|0]|0)<<16|(d[(c[k>>2]|0)+ -4+2|0]|0)<<8|(d[(c[k>>2]|0)+ -4+3|0]|0)<<0}b=(c[g>>2]|0)+8|0;c[b>>2]=(c[b>>2]|0)+4;c[f>>2]=c[l>>2];m=c[f>>2]|0;i=e;return m|0}}while(0);c[c[h>>2]>>2]=85;c[f>>2]=0;m=c[f>>2]|0;i=e;return m|0}function vp(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;i=b;return c[(c[d>>2]|0)+8>>2]|0}function wp(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+32|0;g=f+24|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;m=f+16|0;n=f+20|0;c[h>>2]=a;c[j>>2]=b;c[k>>2]=d;c[l>>2]=e;c[m>>2]=0;if((c[j>>2]|0)>>>0>=(c[(c[h>>2]|0)+4>>2]|0)>>>0){c[g>>2]=85;o=c[g>>2]|0;i=f;return o|0}e=c[h>>2]|0;if((c[(c[h>>2]|0)+20>>2]|0)!=0){c[n>>2]=yd[c[e+20>>2]&31](c[h>>2]|0,c[j>>2]|0,c[k>>2]|0,c[l>>2]|0)|0}else{c[n>>2]=(c[e+4>>2]|0)-(c[j>>2]|0);if((c[n>>2]|0)>>>0>(c[l>>2]|0)>>>0){c[n>>2]=c[l>>2]}lA(c[k>>2]|0,(c[c[h>>2]>>2]|0)+(c[j>>2]|0)|0,c[n>>2]|0)|0}c[(c[h>>2]|0)+8>>2]=(c[j>>2]|0)+(c[n>>2]|0);if((c[n>>2]|0)>>>0<(c[l>>2]|0)>>>0){c[m>>2]=85}c[g>>2]=c[m>>2];o=c[g>>2]|0;i=f;return o|0}function xp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+16|0;f=e+12|0;g=e;h=e+4|0;j=e+8|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[j>>2]=yp(c[f>>2]|0,c[g>>2]|0)|0;if((c[j>>2]|0)!=0){k=c[j>>2]|0;i=e;return k|0}c[c[h>>2]>>2]=c[(c[f>>2]|0)+32>>2];c[(c[f>>2]|0)+32>>2]=0;c[(c[f>>2]|0)+36>>2]=0;k=c[j>>2]|0;i=e;return k|0}function yp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+32|0;e=d+16|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=0;b=c[e>>2]|0;if((c[(c[e>>2]|0)+20>>2]|0)==0){if(!((c[b+8>>2]|0)>>>0>=(c[(c[e>>2]|0)+4>>2]|0)>>>0)?!(((c[(c[e>>2]|0)+4>>2]|0)-(c[(c[e>>2]|0)+8>>2]|0)|0)>>>0<(c[f>>2]|0)>>>0):0){c[(c[e>>2]|0)+32>>2]=(c[c[e>>2]>>2]|0)+(c[(c[e>>2]|0)+8>>2]|0);c[(c[e>>2]|0)+36>>2]=(c[(c[e>>2]|0)+32>>2]|0)+(c[f>>2]|0);a=(c[e>>2]|0)+8|0;c[a>>2]=(c[a>>2]|0)+(c[f>>2]|0);k=c[g>>2]|0;i=d;return k|0}c[g>>2]=85;k=c[g>>2]|0;i=d;return k|0}c[j>>2]=c[b+28>>2];if((c[f>>2]|0)>>>0>(c[(c[e>>2]|0)+4>>2]|0)>>>0){c[g>>2]=85;k=c[g>>2]|0;i=d;return k|0}b=Ap(c[j>>2]|0,c[f>>2]|0,g)|0;c[c[e>>2]>>2]=b;if((c[g>>2]|0)!=0){k=c[g>>2]|0;i=d;return k|0}c[h>>2]=yd[c[(c[e>>2]|0)+20>>2]&31](c[e>>2]|0,c[(c[e>>2]|0)+8>>2]|0,c[c[e>>2]>>2]|0,c[f>>2]|0)|0;if((c[h>>2]|0)>>>0<(c[f>>2]|0)>>>0){Vn(c[j>>2]|0,c[c[e>>2]>>2]|0);c[c[e>>2]>>2]=0;c[g>>2]=85}c[(c[e>>2]|0)+32>>2]=c[c[e>>2]>>2];c[(c[e>>2]|0)+36>>2]=(c[(c[e>>2]|0)+32>>2]|0)+(c[f>>2]|0);f=(c[e>>2]|0)+8|0;c[f>>2]=(c[f>>2]|0)+(c[h>>2]|0);k=c[g>>2]|0;i=d;return k|0}function zp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d+8|0;f=d;g=d+4|0;c[e>>2]=a;c[f>>2]=b;if((c[e>>2]|0)!=0?(c[(c[e>>2]|0)+20>>2]|0)!=0:0){c[g>>2]=c[(c[e>>2]|0)+28>>2];Vn(c[g>>2]|0,c[c[f>>2]>>2]|0);c[c[f>>2]>>2]=0}c[c[f>>2]>>2]=0;i=d;return}function Ap(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+32|0;f=e+16|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[j>>2]=0;c[k>>2]=0;if((c[g>>2]|0)>0){c[k>>2]=Ad[c[(c[f>>2]|0)+4>>2]&127](c[f>>2]|0,c[g>>2]|0)|0;if((c[k>>2]|0)==0){c[j>>2]=64}}else{if((c[g>>2]|0)<0){c[j>>2]=6}}c[c[h>>2]>>2]=c[j>>2];i=e;return c[k>>2]|0}function Bp(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b+4|0;e=b;c[d>>2]=a;if((c[(c[d>>2]|0)+20>>2]|0)!=0){c[e>>2]=c[(c[d>>2]|0)+28>>2];Vn(c[e>>2]|0,c[c[d>>2]>>2]|0);c[c[d>>2]>>2]=0}c[(c[d>>2]|0)+32>>2]=0;c[(c[d>>2]|0)+36>>2]=0;i=b;return}function Cp(b){b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d;f=d+4|0;c[e>>2]=b;a[f]=0;if(!((c[(c[e>>2]|0)+32>>2]|0)>>>0<(c[(c[e>>2]|0)+36>>2]|0)>>>0)){g=a[f]|0;i=d;return g|0}b=(c[e>>2]|0)+32|0;e=c[b>>2]|0;c[b>>2]=e+1;a[f]=a[e]|0;g=a[f]|0;i=d;return g|0}function Dp(d){d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+16|0;f=e+4|0;g=e;h=e+8|0;c[f>>2]=d;b[h>>1]=0;c[g>>2]=c[(c[f>>2]|0)+32>>2];if(!(((c[g>>2]|0)+1|0)>>>0<(c[(c[f>>2]|0)+36>>2]|0)>>>0)){j=c[g>>2]|0;k=c[f>>2]|0;l=k+32|0;c[l>>2]=j;m=b[h>>1]|0;i=e;return m|0}c[g>>2]=(c[g>>2]|0)+2;b[h>>1]=(a[(c[g>>2]|0)+ -2|0]&255)<<8|(a[(c[g>>2]|0)+ -2+1|0]&255)<<0;j=c[g>>2]|0;k=c[f>>2]|0;l=k+32|0;c[l>>2]=j;m=b[h>>1]|0;i=e;return m|0}function Ep(a){a=a|0;var b=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;b=i;i=i+16|0;e=b+8|0;f=b;g=b+4|0;c[e>>2]=a;c[g>>2]=0;c[f>>2]=c[(c[e>>2]|0)+32>>2];if(!(((c[f>>2]|0)+3|0)>>>0<(c[(c[e>>2]|0)+36>>2]|0)>>>0)){h=c[f>>2]|0;j=c[e>>2]|0;k=j+32|0;c[k>>2]=h;l=c[g>>2]|0;i=b;return l|0}c[f>>2]=(c[f>>2]|0)+4;c[g>>2]=(d[(c[f>>2]|0)+ -4|0]|0)<<24|(d[(c[f>>2]|0)+ -4+1|0]|0)<<16|(d[(c[f>>2]|0)+ -4+2|0]|0)<<8|(d[(c[f>>2]|0)+ -4+3|0]|0)<<0;h=c[f>>2]|0;j=c[e>>2]|0;k=j+32|0;c[k>>2]=h;l=c[g>>2]|0;i=b;return l|0}function Fp(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+16|0;f=e+9|0;g=e;h=e+4|0;j=e+8|0;c[g>>2]=b;c[h>>2]=d;a[j]=0;c[c[h>>2]>>2]=0;d=c[g>>2]|0;if((c[(c[g>>2]|0)+20>>2]|0)!=0){if((yd[c[d+20>>2]&31](c[g>>2]|0,c[(c[g>>2]|0)+8>>2]|0,j,1)|0)!=1){k=6}else{k=5}}else{if((c[d+8>>2]|0)>>>0<(c[(c[g>>2]|0)+4>>2]|0)>>>0){a[j]=a[(c[c[g>>2]>>2]|0)+(c[(c[g>>2]|0)+8>>2]|0)|0]|0;k=5}else{k=6}}if((k|0)==5){d=(c[g>>2]|0)+8|0;c[d>>2]=(c[d>>2]|0)+1;a[f]=a[j]|0;l=a[f]|0;i=e;return l|0}else if((k|0)==6){c[c[h>>2]>>2]=85;a[f]=0;l=a[f]|0;i=e;return l|0}return 0}function Gp(f,g,h){f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;j=i;i=i+48|0;k=j+20|0;l=j+36|0;m=j+32|0;n=j+28|0;o=j+24|0;p=j+40|0;q=j+12|0;r=j+8|0;s=j+4|0;t=j;u=j+16|0;c[l>>2]=f;c[m>>2]=g;c[n>>2]=h;a[p]=0;if((c[m>>2]|0)!=0?(c[l>>2]|0)!=0:0){c[q>>2]=c[(c[l>>2]|0)+32>>2];c[o>>2]=0;a:while(1){switch(d[c[m>>2]|0]|0){case 16:case 17:{c[q>>2]=(c[q>>2]|0)+4;c[r>>2]=d[(c[q>>2]|0)+ -4|0]<<24|d[(c[q>>2]|0)+ -4+1|0]<<16|d[(c[q>>2]|0)+ -4+2|0]<<8|d[(c[q>>2]|0)+ -4+3|0]<<0;c[s>>2]=0;break};case 9:case 8:{h=c[q>>2]|0;c[q>>2]=h+1;c[r>>2]=d[h]|0;c[s>>2]=24;break};case 25:case 24:{c[u>>2]=d[(c[m>>2]|0)+1|0]|0;if(((c[q>>2]|0)+(c[u>>2]|0)|0)>>>0>(c[(c[l>>2]|0)+36>>2]|0)>>>0){v=9;break a}if((d[c[m>>2]|0]|0)==24){c[t>>2]=(c[n>>2]|0)+(e[(c[m>>2]|0)+2>>1]|0);lA(c[t>>2]|0,c[q>>2]|0,c[u>>2]|0)|0}c[q>>2]=(c[q>>2]|0)+(c[u>>2]|0);c[m>>2]=(c[m>>2]|0)+4;continue a;break};case 4:{c[o>>2]=yp(c[l>>2]|0,e[(c[m>>2]|0)+2>>1]|0)|0;if((c[o>>2]|0)!=0){break a}a[p]=1;c[q>>2]=c[(c[l>>2]|0)+32>>2];c[m>>2]=(c[m>>2]|0)+4;continue a;break};case 18:case 19:{c[q>>2]=(c[q>>2]|0)+4;c[r>>2]=d[(c[q>>2]|0)+ -4+3|0]<<24|d[(c[q>>2]|0)+ -4+2|0]<<16|d[(c[q>>2]|0)+ -4+1|0]<<8|d[(c[q>>2]|0)+ -4|0]<<0;c[s>>2]=0;break};case 12:case 13:{c[q>>2]=(c[q>>2]|0)+2;c[r>>2]=((a[(c[q>>2]|0)+ -2|0]&255)<<8|(a[(c[q>>2]|0)+ -2+1|0]&255)<<0)&65535;c[s>>2]=16;break};case 14:case 15:{c[q>>2]=(c[q>>2]|0)+2;c[r>>2]=((a[(c[q>>2]|0)+ -2+1|0]&255)<<8|(a[(c[q>>2]|0)+ -2|0]&255)<<0)&65535;c[s>>2]=16;break};case 22:case 23:{c[q>>2]=(c[q>>2]|0)+3;c[r>>2]=d[(c[q>>2]|0)+ -3+2|0]<<16|d[(c[q>>2]|0)+ -3+1|0]<<8|d[(c[q>>2]|0)+ -3|0]<<0;c[s>>2]=8;break};case 20:case 21:{c[q>>2]=(c[q>>2]|0)+3;c[r>>2]=d[(c[q>>2]|0)+ -3|0]<<16|d[(c[q>>2]|0)+ -3+1|0]<<8|d[(c[q>>2]|0)+ -3+2|0]<<0;c[s>>2]=8;break};default:{v=20;break a}}if((a[c[m>>2]|0]&1|0)!=0){c[r>>2]=c[r>>2]<<c[s>>2]>>c[s>>2]}c[t>>2]=(c[n>>2]|0)+(e[(c[m>>2]|0)+2>>1]|0);h=d[(c[m>>2]|0)+1|0]|0;if((h|0)==1){a[c[t>>2]|0]=c[r>>2]}else if((h|0)==2){b[c[t>>2]>>1]=c[r>>2]}else if((h|0)==4){c[c[t>>2]>>2]=c[r>>2]}else{c[c[t>>2]>>2]=c[r>>2]}c[m>>2]=(c[m>>2]|0)+4}if((v|0)==9){c[o>>2]=85}else if((v|0)==20){c[(c[l>>2]|0)+32>>2]=c[q>>2]}if((a[p]|0)!=0){Bp(c[l>>2]|0)}c[k>>2]=c[o>>2];w=c[k>>2]|0;i=j;return w|0}c[k>>2]=6;w=c[k>>2]|0;i=j;return w|0}function Hp(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b+8|0;e=b;c[d>>2]=a;c[e>>2]=14408027;c[e+4>>2]=0;Ip(e,c[d>>2]|0);i=b;return(c[e>>2]|0)+128>>8|0}function Ip(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+32|0;e=d+28|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;k=d+16|0;l=d+20|0;m=d+24|0;c[e>>2]=a;c[f>>2]=b;c[h>>2]=c[c[e>>2]>>2];c[j>>2]=c[(c[e>>2]|0)+4>>2];while(1){if(!((c[f>>2]|0)<-2949120)){break}c[k>>2]=c[j>>2];c[j>>2]=0-(c[h>>2]|0);c[h>>2]=c[k>>2];c[f>>2]=(c[f>>2]|0)+5898240}while(1){if((c[f>>2]|0)<=2949120){break}c[k>>2]=0-(c[j>>2]|0);c[j>>2]=c[h>>2];c[h>>2]=c[k>>2];c[f>>2]=(c[f>>2]|0)-5898240}c[m>>2]=30184;c[g>>2]=1;c[l>>2]=1;while(1){if((c[g>>2]|0)>=23){break}b=c[h>>2]|0;a=(c[j>>2]|0)+(c[l>>2]|0)>>c[g>>2];if((c[f>>2]|0)<0){c[k>>2]=b+a;c[j>>2]=(c[j>>2]|0)-((c[h>>2]|0)+(c[l>>2]|0)>>c[g>>2]);c[h>>2]=c[k>>2];n=c[m>>2]|0;c[m>>2]=n+4;c[f>>2]=(c[f>>2]|0)+(c[n>>2]|0)}else{c[k>>2]=b-a;c[j>>2]=(c[j>>2]|0)+((c[h>>2]|0)+(c[l>>2]|0)>>c[g>>2]);c[h>>2]=c[k>>2];a=c[m>>2]|0;c[m>>2]=a+4;c[f>>2]=(c[f>>2]|0)-(c[a>>2]|0)}c[l>>2]=c[l>>2]<<1;c[g>>2]=(c[g>>2]|0)+1}c[c[e>>2]>>2]=c[h>>2];c[(c[e>>2]|0)+4>>2]=c[j>>2];i=d;return}function Jp(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=Hp(5898240-(c[d>>2]|0)|0)|0;i=b;return a|0}function Kp(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b+8|0;e=b;c[d>>2]=a;c[e>>2]=14408027;c[e+4>>2]=0;Ip(e,c[d>>2]|0);d=On(c[e+4>>2]|0,c[e>>2]|0)|0;i=b;return d|0}function Lp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+32|0;e=d+16|0;f=d;g=d+4|0;h=d+8|0;c[f>>2]=a;c[g>>2]=b;if((c[f>>2]|0)==0?(c[g>>2]|0)==0:0){c[e>>2]=0;j=c[e>>2]|0;i=d;return j|0}c[h>>2]=c[f>>2];c[h+4>>2]=c[g>>2];Mp(h)|0;Np(h);c[e>>2]=c[h+4>>2];j=c[e>>2]|0;i=d;return j|0}function Mp(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;i=i+16|0;d=b+12|0;e=b;f=b+4|0;g=b+8|0;c[d>>2]=a;c[e>>2]=c[c[d>>2]>>2];c[f>>2]=c[(c[d>>2]|0)+4>>2];a=c[e>>2]|0;h=c[f>>2]|0;c[g>>2]=Fn(((c[e>>2]|0)<0?0-a|0:a)|((c[f>>2]|0)<0?0-h|0:h))|0;h=c[g>>2]|0;if((c[g>>2]|0)<=29){c[g>>2]=29-h;c[c[d>>2]>>2]=c[e>>2]<<c[g>>2];c[(c[d>>2]|0)+4>>2]=c[f>>2]<<c[g>>2];j=c[g>>2]|0;i=b;return j|0}else{c[g>>2]=h-29;c[c[d>>2]>>2]=c[e>>2]>>c[g>>2];c[(c[d>>2]|0)+4>>2]=c[f>>2]>>c[g>>2];c[g>>2]=0-(c[g>>2]|0);j=c[g>>2]|0;i=b;return j|0}return 0}function Np(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;b=i;i=i+32|0;d=b+28|0;e=b;f=b+4|0;g=b+8|0;h=b+12|0;j=b+16|0;k=b+20|0;l=b+24|0;c[d>>2]=a;c[g>>2]=c[c[d>>2]>>2];c[h>>2]=c[(c[d>>2]|0)+4>>2];a=c[h>>2]|0;m=0-(c[g>>2]|0)|0;do{if((c[h>>2]|0)>(c[g>>2]|0)){if((a|0)>(m|0)){c[e>>2]=5898240;c[j>>2]=c[h>>2];c[h>>2]=0-(c[g>>2]|0);c[g>>2]=c[j>>2];break}else{c[e>>2]=(c[h>>2]|0)>0?11796480:-11796480;c[g>>2]=0-(c[g>>2]|0);c[h>>2]=0-(c[h>>2]|0);break}}else{if((a|0)<(m|0)){c[e>>2]=-5898240;c[j>>2]=0-(c[h>>2]|0);c[h>>2]=c[g>>2];c[g>>2]=c[j>>2];break}else{c[e>>2]=0;break}}}while(0);c[l>>2]=30184;c[f>>2]=1;c[k>>2]=1;while(1){if((c[f>>2]|0)>=23){break}m=c[g>>2]|0;a=(c[h>>2]|0)+(c[k>>2]|0)>>c[f>>2];if((c[h>>2]|0)>0){c[j>>2]=m+a;c[h>>2]=(c[h>>2]|0)-((c[g>>2]|0)+(c[k>>2]|0)>>c[f>>2]);c[g>>2]=c[j>>2];n=c[l>>2]|0;c[l>>2]=n+4;c[e>>2]=(c[e>>2]|0)+(c[n>>2]|0)}else{c[j>>2]=m-a;c[h>>2]=(c[h>>2]|0)+((c[g>>2]|0)+(c[k>>2]|0)>>c[f>>2]);c[g>>2]=c[j>>2];a=c[l>>2]|0;c[l>>2]=a+4;c[e>>2]=(c[e>>2]|0)-(c[a>>2]|0)}c[k>>2]=c[k>>2]<<1;c[f>>2]=(c[f>>2]|0)+1}f=c[e>>2]|0;if((c[e>>2]|0)>=0){c[e>>2]=f+16&-32;o=c[g>>2]|0;p=c[d>>2]|0;c[p>>2]=o;q=c[e>>2]|0;r=c[d>>2]|0;s=r+4|0;c[s>>2]=q;i=b;return}else{c[e>>2]=0-(0-f+16&-32);o=c[g>>2]|0;p=c[d>>2]|0;c[p>>2]=o;q=c[e>>2]|0;r=c[d>>2]|0;s=r+4|0;c[s>>2]=q;i=b;return}}function Op(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+32|0;e=d+20|0;f=d;g=d+4|0;h=d+8|0;j=d+16|0;c[e>>2]=a;c[f>>2]=b;c[h>>2]=c[c[e>>2]>>2];c[h+4>>2]=c[(c[e>>2]|0)+4>>2];if((c[f>>2]|0)==0){i=d;return}if((c[h>>2]|0)==0?(c[h+4>>2]|0)==0:0){i=d;return}c[g>>2]=Mp(h)|0;Ip(h,c[f>>2]|0);c[h>>2]=Pp(c[h>>2]|0)|0;c[h+4>>2]=Pp(c[h+4>>2]|0)|0;f=c[g>>2]|0;if((c[g>>2]|0)>0){c[j>>2]=1<<f-1;c[c[e>>2]>>2]=(c[h>>2]|0)+(c[j>>2]|0)+(c[h>>2]>>31)>>c[g>>2];c[(c[e>>2]|0)+4>>2]=(c[h+4>>2]|0)+(c[j>>2]|0)+(c[h+4>>2]>>31)>>c[g>>2];i=d;return}else{c[g>>2]=0-f;c[c[e>>2]>>2]=c[h>>2]<<c[g>>2];c[(c[e>>2]|0)+4>>2]=c[h+4>>2]<<c[g>>2];i=d;return}}function Pp(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;b=i;i=i+48|0;d=b+36|0;e=b+32|0;f=b+28|0;g=b+24|0;h=b+20|0;j=b+16|0;k=b+8|0;l=b+4|0;m=b;n=b+12|0;c[d>>2]=a;c[e>>2]=c[d>>2];a=c[d>>2]|0;c[d>>2]=(c[d>>2]|0)<0?0-a|0:a;c[f>>2]=(c[d>>2]|0)>>>16;c[g>>2]=c[d>>2]&65535;c[h>>2]=56281;c[j>>2]=23318;c[k>>2]=aa(c[h>>2]|0,c[f>>2]|0)|0;a=aa(c[h>>2]|0,c[g>>2]|0)|0;c[l>>2]=a+(aa(c[j>>2]|0,c[f>>2]|0)|0);c[m>>2]=(aa(c[j>>2]|0,c[g>>2]|0)|0)>>>16;c[n>>2]=(c[l>>2]|0)>>>0>(c[m>>2]|0)>>>0?c[l>>2]|0:c[m>>2]|0;c[l>>2]=(c[l>>2]|0)+(c[m>>2]|0);c[k>>2]=(c[k>>2]|0)+((c[l>>2]|0)>>>16);if(!((c[l>>2]|0)>>>0<(c[n>>2]|0)>>>0)){o=c[k>>2]|0;c[d>>2]=o;p=c[e>>2]|0;q=(p|0)>=0;r=c[d>>2]|0;s=0-r|0;t=q?r:s;i=b;return t|0}c[k>>2]=(c[k>>2]|0)+65536;o=c[k>>2]|0;c[d>>2]=o;p=c[e>>2]|0;q=(p|0)>=0;r=c[d>>2]|0;s=0-r|0;t=q?r:s;i=b;return t|0}function Qp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[c[f>>2]>>2]=c[g>>2];c[(c[f>>2]|0)+4>>2]=0;Op(c[f>>2]|0,c[h>>2]|0);i=e;return}function Rp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d+8|0;f=d;g=d+4|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=(c[f>>2]|0)-(c[e>>2]|0);c[g>>2]=(c[g>>2]|0)%23592960|0;if((c[g>>2]|0)<0){c[g>>2]=(c[g>>2]|0)+23592960}if((c[g>>2]|0)<=11796480){h=c[g>>2]|0;i=d;return h|0}c[g>>2]=(c[g>>2]|0)-23592960;h=c[g>>2]|0;i=d;return h|0}function Sp(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;h=i;i=i+48|0;j=h+36|0;k=h+32|0;l=h+28|0;m=h+24|0;n=h+20|0;o=h+16|0;p=h+8|0;q=h+4|0;r=h;s=h+12|0;c[j>>2]=a;c[k>>2]=b;c[l>>2]=d;c[m>>2]=e;c[n>>2]=f;c[o>>2]=g;c[p>>2]=0;do{if(((c[l>>2]|0)>=0?(c[m>>2]|0)>=0:0)?(c[k>>2]|0)>=0:0){if((c[m>>2]|0)!=0?(c[k>>2]|0)!=0:0){if((c[m>>2]|0)>(2147483647/(c[k>>2]|0)|0|0)){c[p>>2]=10;break}if((c[l>>2]|0)==0){c[n>>2]=Sn(c[j>>2]|0,aa(c[m>>2]|0,c[k>>2]|0)|0,p)|0;break}c[r>>2]=aa(c[l>>2]|0,c[k>>2]|0)|0;c[s>>2]=aa(c[m>>2]|0,c[k>>2]|0)|0;c[q>>2]=yd[c[(c[j>>2]|0)+12>>2]&31](c[j>>2]|0,c[r>>2]|0,c[s>>2]|0,c[n>>2]|0)|0;if((c[q>>2]|0)==0){c[p>>2]=64;break}else{c[n>>2]=c[q>>2];break}}Vn(c[j>>2]|0,c[n>>2]|0);c[n>>2]=0}else{t=4}}while(0);if((t|0)==4){c[p>>2]=6}c[c[o>>2]>>2]=c[p>>2];i=h;return c[n>>2]|0}function Tp(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+16|0;g=f+8|0;h=f;j=f+4|0;c[g>>2]=b;c[h>>2]=d;c[j>>2]=e;while(1){if(!((c[j>>2]|0)>>>0>1)){break}if((a[c[h>>2]|0]|0)==0){break}e=c[h>>2]|0;c[h>>2]=e+1;d=a[e]|0;e=c[g>>2]|0;c[g>>2]=e+1;a[e]=d;c[j>>2]=(c[j>>2]|0)+ -1}a[c[g>>2]|0]=0;i=f;return(a[c[h>>2]|0]|0)!=0|0}function Up(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+32|0;g=f+24|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;m=f+16|0;n=f+20|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;c[l>>2]=c[c[g>>2]>>2];while(1){if((c[l>>2]|0)==0){break}c[m>>2]=c[(c[l>>2]|0)+4>>2];c[n>>2]=c[(c[l>>2]|0)+8>>2];if((c[h>>2]|0)!=0){wd[c[h>>2]&31](c[j>>2]|0,c[n>>2]|0,c[k>>2]|0)}Vn(c[j>>2]|0,c[l>>2]|0);c[l>>2]=0;c[l>>2]=c[m>>2]}c[c[g>>2]>>2]=0;c[(c[g>>2]|0)+4>>2]=0;i=f;return}function Vp(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;i=i+32|0;d=b+16|0;e=b;f=b+4|0;g=b+8|0;h=b+12|0;c[d>>2]=a;c[e>>2]=c[(c[d>>2]|0)+4>>2];if((c[e>>2]|0)==0){i=b;return}c[f>>2]=c[c[e>>2]>>2];c[g>>2]=Jo((c[e>>2]|0)+148|0,c[d>>2]|0)|0;if((c[g>>2]|0)==0){i=b;return}c[h>>2]=c[d>>2];if((c[(c[(c[h>>2]|0)+12>>2]|0)+36>>2]|0)==1869968492?(c[(c[h>>2]|0)+52>>2]|0)!=0:0){rd[c[(c[(c[(c[h>>2]|0)+12>>2]|0)+56>>2]|0)+20>>2]&127](c[(c[h>>2]|0)+52>>2]|0)}Ko((c[e>>2]|0)+148|0,c[g>>2]|0);Vn(c[f>>2]|0,c[g>>2]|0);c[g>>2]=0;Xp(c[e>>2]|0);i=b;return}function Wp(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Up((c[d>>2]|0)+16|0,19,c[(c[d>>2]|0)+8>>2]|0,c[d>>2]|0);if((c[c[c[d>>2]>>2]>>2]&512|0)!=0){i=b;return}Wn(c[(c[d>>2]|0)+24>>2]|0);i=b;return}function Xp(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b+4|0;e=b;c[d>>2]=a;c[e>>2]=Yo(c[d>>2]|0,1869968492,0)|0;c[(c[d>>2]|0)+156>>2]=c[e>>2];i=b;return}function Yp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d+12|0;f=d;g=d+4|0;h=d+8|0;c[e>>2]=a;c[f>>2]=b;if((c[e>>2]|0)==0){i=d;return}c[g>>2]=0;while(1){if((c[g>>2]|0)>=(c[(c[e>>2]|0)+36>>2]|0)){break}c[h>>2]=c[(c[(c[e>>2]|0)+40>>2]|0)+(c[g>>2]<<2)>>2];Vo(c[h>>2]|0);c[(c[(c[e>>2]|0)+40>>2]|0)+(c[g>>2]<<2)>>2]=0;c[g>>2]=(c[g>>2]|0)+1}Vn(c[f>>2]|0,c[(c[e>>2]|0)+40>>2]|0);c[(c[e>>2]|0)+40>>2]=0;c[(c[e>>2]|0)+36>>2]=0;i=d;return}function Zp(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=c[d>>2]|0;c[a+0>>2]=c[30272>>2];c[a+4>>2]=c[30276>>2];c[a+8>>2]=c[30280>>2];c[a+12>>2]=c[30284>>2];c[a+16>>2]=c[30288>>2];c[a+20>>2]=c[30292>>2];i=b;return}function _p(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+48|0;f=e+40|0;g=e+36|0;h=e+32|0;j=e+28|0;k=e+24|0;l=e+20|0;m=e+12|0;n=e+8|0;o=e+4|0;p=e;q=e+16|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[k>>2]=c[c[g>>2]>>2];c[l>>2]=0;c[m>>2]=c[(c[h>>2]|0)+8>>2];if((c[h>>2]|0)==(c[j>>2]|0)){c[f>>2]=0;r=c[f>>2]|0;i=e;return r|0}if((c[(c[h>>2]|0)+12>>2]|0)==0){g=c[j>>2]|0;d=c[h>>2]|0;c[g+0>>2]=c[d+0>>2];c[g+4>>2]=c[d+4>>2];c[g+8>>2]=c[d+8>>2];c[g+12>>2]=c[d+12>>2];c[g+16>>2]=c[d+16>>2];c[g+20>>2]=c[d+20>>2];c[f>>2]=0;r=c[f>>2]|0;i=e;return r|0}if((c[m>>2]|0)<0){c[m>>2]=0-(c[m>>2]|0)}c[n>>2]=aa(c[m>>2]|0,c[c[h>>2]>>2]|0)|0;if((c[(c[j>>2]|0)+12>>2]|0)!=0){c[o>>2]=c[(c[j>>2]|0)+8>>2];if((c[o>>2]|0)<0){c[o>>2]=0-(c[o>>2]|0)}c[p>>2]=aa(c[o>>2]|0,c[c[j>>2]>>2]|0)|0;if((c[p>>2]|0)!=(c[n>>2]|0)){o=Sp(c[k>>2]|0,1,c[p>>2]|0,c[n>>2]|0,c[(c[j>>2]|0)+12>>2]|0,l)|0;c[(c[j>>2]|0)+12>>2]=o}}else{o=Ap(c[k>>2]|0,c[n>>2]|0,l)|0;c[(c[j>>2]|0)+12>>2]=o}if((c[l>>2]|0)==0){c[q>>2]=c[(c[j>>2]|0)+12>>2];o=c[j>>2]|0;k=c[h>>2]|0;c[o+0>>2]=c[k+0>>2];c[o+4>>2]=c[k+4>>2];c[o+8>>2]=c[k+8>>2];c[o+12>>2]=c[k+12>>2];c[o+16>>2]=c[k+16>>2];c[o+20>>2]=c[k+20>>2];c[(c[j>>2]|0)+12>>2]=c[q>>2];lA(c[(c[j>>2]|0)+12>>2]|0,c[(c[h>>2]|0)+12>>2]|0,c[n>>2]|0)|0}c[f>>2]=c[l>>2];r=c[f>>2]|0;i=e;return r|0}function $p(e,f,g,h){e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,ba=0,ca=0,da=0;j=i;i=i+192|0;k=j+180|0;l=j+176|0;m=j+172|0;n=j+168|0;o=j+164|0;p=j+160|0;q=j+156|0;r=j+152|0;s=j+148|0;t=j+144|0;u=j+140|0;v=j+136|0;w=j+132|0;x=j+128|0;y=j+124|0;z=j+120|0;A=j+116|0;B=j+112|0;C=j+108|0;D=j+104|0;E=j+100|0;F=j+96|0;G=j+92|0;H=j+88|0;I=j+36|0;J=j+32|0;K=j+28|0;L=j+24|0;M=j+20|0;N=j+16|0;O=j+8|0;P=j+4|0;Q=j;R=j+12|0;S=j+40|0;T=j+44|0;U=j+48|0;V=j+52|0;W=j+56|0;X=j+60|0;Y=j+64|0;Z=j+68|0;_=j+72|0;$=j+76|0;ba=j+80|0;ca=j+84|0;c[l>>2]=e;c[m>>2]=f;c[n>>2]=g;c[o>>2]=h;c[p>>2]=0;if((c[l>>2]|0)==0){c[k>>2]=33;da=c[k>>2]|0;i=j;return da|0}c[q>>2]=c[c[l>>2]>>2];if(((a[(c[m>>2]|0)+18|0]|0)+ -1|0)>>>0<7){c[s>>2]=aa(c[c[n>>2]>>2]|0,c[(c[n>>2]|0)+8>>2]|0)|0;if((c[s>>2]|0)<0){c[s>>2]=0-(c[s>>2]|0)}a[(c[n>>2]|0)+18|0]=2;c[c[n>>2]>>2]=c[c[m>>2]>>2];c[(c[n>>2]|0)+4>>2]=c[(c[m>>2]|0)+4>>2];c[r>>2]=0;if((c[o>>2]|0)>0?(c[r>>2]=(c[(c[m>>2]|0)+4>>2]|0)%(c[o>>2]|0)|0,(c[r>>2]|0)!=0):0){c[r>>2]=(c[o>>2]|0)-(c[r>>2]|0)}c[(c[n>>2]|0)+8>>2]=(c[(c[m>>2]|0)+4>>2]|0)+(c[r>>2]|0);if((c[(c[n>>2]|0)+8>>2]|0)>0?(c[c[n>>2]>>2]|0)>>>0>(4294967295/((c[(c[n>>2]|0)+8>>2]|0)>>>0)|0)>>>0:0){c[k>>2]=6;da=c[k>>2]|0;i=j;return da|0}r=aa(c[c[n>>2]>>2]|0,c[(c[n>>2]|0)+8>>2]|0)|0;if((r|0)>(c[s>>2]|0)?(r=aa(c[c[n>>2]>>2]|0,c[(c[n>>2]|0)+8>>2]|0)|0,o=Sp(c[q>>2]|0,1,c[s>>2]|0,r,c[(c[n>>2]|0)+12>>2]|0,p)|0,c[(c[n>>2]|0)+12>>2]=o,(c[p>>2]|0)!=0):0){c[k>>2]=c[p>>2];da=c[k>>2]|0;i=j;return da|0}}else{c[p>>2]=6}a:do{switch(a[(c[m>>2]|0)+18|0]|0){case 3:{c[H>>2]=c[(c[m>>2]|0)+12>>2];c[I>>2]=c[(c[n>>2]|0)+12>>2];b[(c[n>>2]|0)+16>>1]=4;c[J>>2]=c[c[m>>2]>>2];while(1){if((c[J>>2]|0)<=0){break a}c[K>>2]=c[H>>2];c[L>>2]=c[I>>2];c[M>>2]=c[(c[m>>2]|0)+4>>2]>>2;while(1){if((c[M>>2]|0)<=0){break}c[N>>2]=d[c[K>>2]|0]|0;a[c[L>>2]|0]=(c[N>>2]&192)>>6;a[(c[L>>2]|0)+1|0]=(c[N>>2]&48)>>4;a[(c[L>>2]|0)+2|0]=(c[N>>2]&12)>>2;a[(c[L>>2]|0)+3|0]=c[N>>2]&3;c[K>>2]=(c[K>>2]|0)+1;c[L>>2]=(c[L>>2]|0)+4;c[M>>2]=(c[M>>2]|0)+ -1}c[M>>2]=c[(c[m>>2]|0)+4>>2]&3;b:do{if((c[M>>2]|0)>0){c[O>>2]=d[c[K>>2]|0]|0;while(1){if((c[M>>2]|0)<=0){break b}a[c[L>>2]|0]=(c[O>>2]&192)>>6;c[O>>2]=c[O>>2]<<2;c[L>>2]=(c[L>>2]|0)+1;c[M>>2]=(c[M>>2]|0)+ -1}}}while(0);c[H>>2]=(c[H>>2]|0)+(c[(c[m>>2]|0)+8>>2]|0);c[I>>2]=(c[I>>2]|0)+(c[(c[n>>2]|0)+8>>2]|0);c[J>>2]=(c[J>>2]|0)+ -1}break};case 1:{c[t>>2]=c[(c[m>>2]|0)+12>>2];c[u>>2]=c[(c[n>>2]|0)+12>>2];b[(c[n>>2]|0)+16>>1]=2;c[v>>2]=c[c[m>>2]>>2];while(1){if((c[v>>2]|0)<=0){break a}c[w>>2]=c[t>>2];c[x>>2]=c[u>>2];c[y>>2]=c[(c[m>>2]|0)+4>>2]>>3;while(1){if((c[y>>2]|0)<=0){break}c[z>>2]=d[c[w>>2]|0]|0;a[c[x>>2]|0]=(c[z>>2]&128)>>7;a[(c[x>>2]|0)+1|0]=(c[z>>2]&64)>>6;a[(c[x>>2]|0)+2|0]=(c[z>>2]&32)>>5;a[(c[x>>2]|0)+3|0]=(c[z>>2]&16)>>4;a[(c[x>>2]|0)+4|0]=(c[z>>2]&8)>>3;a[(c[x>>2]|0)+5|0]=(c[z>>2]&4)>>2;a[(c[x>>2]|0)+6|0]=(c[z>>2]&2)>>1;a[(c[x>>2]|0)+7|0]=c[z>>2]&1;c[x>>2]=(c[x>>2]|0)+8;c[w>>2]=(c[w>>2]|0)+1;c[y>>2]=(c[y>>2]|0)+ -1}c[y>>2]=c[(c[m>>2]|0)+4>>2]&7;c:do{if((c[y>>2]|0)>0){c[A>>2]=d[c[w>>2]|0]|0;while(1){if((c[y>>2]|0)<=0){break c}a[c[x>>2]|0]=(c[A>>2]&128)>>7;c[A>>2]=c[A>>2]<<1;c[x>>2]=(c[x>>2]|0)+1;c[y>>2]=(c[y>>2]|0)+ -1}}}while(0);c[t>>2]=(c[t>>2]|0)+(c[(c[m>>2]|0)+8>>2]|0);c[u>>2]=(c[u>>2]|0)+(c[(c[n>>2]|0)+8>>2]|0);c[v>>2]=(c[v>>2]|0)+ -1}break};case 7:{c[W>>2]=c[(c[m>>2]|0)+12>>2];c[X>>2]=c[(c[n>>2]|0)+12>>2];c[Y>>2]=c[(c[m>>2]|0)+8>>2];c[Z>>2]=c[(c[n>>2]|0)+8>>2];b[(c[n>>2]|0)+16>>1]=256;c[_>>2]=c[c[m>>2]>>2];while(1){if((c[_>>2]|0)<=0){break a}c[$>>2]=c[W>>2];c[ba>>2]=c[X>>2];c[ca>>2]=c[(c[m>>2]|0)+4>>2];while(1){if((c[ca>>2]|0)<=0){break}o=bq(c[$>>2]|0)|0;a[c[ba>>2]|0]=o;c[$>>2]=(c[$>>2]|0)+4;c[ba>>2]=(c[ba>>2]|0)+1;c[ca>>2]=(c[ca>>2]|0)+ -1}c[W>>2]=(c[W>>2]|0)+(c[Y>>2]|0);c[X>>2]=(c[X>>2]|0)+(c[Z>>2]|0);c[_>>2]=(c[_>>2]|0)+ -1}break};case 6:case 5:case 2:{c[B>>2]=c[(c[m>>2]|0)+4>>2];c[C>>2]=c[(c[m>>2]|0)+12>>2];c[D>>2]=c[(c[n>>2]|0)+12>>2];c[E>>2]=c[(c[m>>2]|0)+8>>2];c[F>>2]=c[(c[n>>2]|0)+8>>2];b[(c[n>>2]|0)+16>>1]=256;c[G>>2]=c[c[m>>2]>>2];while(1){if((c[G>>2]|0)<=0){break a}lA(c[D>>2]|0,c[C>>2]|0,c[B>>2]|0)|0;c[C>>2]=(c[C>>2]|0)+(c[E>>2]|0);c[D>>2]=(c[D>>2]|0)+(c[F>>2]|0);c[G>>2]=(c[G>>2]|0)+ -1}break};case 4:{c[P>>2]=c[(c[m>>2]|0)+12>>2];c[Q>>2]=c[(c[n>>2]|0)+12>>2];b[(c[n>>2]|0)+16>>1]=16;c[R>>2]=c[c[m>>2]>>2];while(1){if((c[R>>2]|0)<=0){break a}c[S>>2]=c[P>>2];c[T>>2]=c[Q>>2];c[U>>2]=c[(c[m>>2]|0)+4>>2]>>1;while(1){if((c[U>>2]|0)<=0){break}c[V>>2]=d[c[S>>2]|0]|0;a[c[T>>2]|0]=(c[V>>2]&240)>>4;a[(c[T>>2]|0)+1|0]=c[V>>2]&15;c[S>>2]=(c[S>>2]|0)+1;c[T>>2]=(c[T>>2]|0)+2;c[U>>2]=(c[U>>2]|0)+ -1}if((c[(c[m>>2]|0)+4>>2]&1|0)!=0){a[c[T>>2]|0]=(a[c[S>>2]|0]&240)>>4}c[P>>2]=(c[P>>2]|0)+(c[(c[m>>2]|0)+8>>2]|0);c[Q>>2]=(c[Q>>2]|0)+(c[(c[n>>2]|0)+8>>2]|0);c[R>>2]=(c[R>>2]|0)+ -1}break};default:{}}}while(0);c[k>>2]=c[p>>2];da=c[k>>2]|0;i=j;return da|0}function aq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;e=d+12|0;f=d;g=d+4|0;h=d+8|0;c[f>>2]=a;c[g>>2]=b;if((c[f>>2]|0)==0){c[e>>2]=33;j=c[e>>2]|0;i=d;return j|0}if((c[g>>2]|0)!=0){c[h>>2]=c[c[f>>2]>>2];Vn(c[h>>2]|0,c[(c[g>>2]|0)+12>>2]|0);c[(c[g>>2]|0)+12>>2]=0;h=c[g>>2]|0;c[h+0>>2]=c[30272>>2];c[h+4>>2]=c[30276>>2];c[h+8>>2]=c[30280>>2];c[h+12>>2]=c[30284>>2];c[h+16>>2]=c[30288>>2];c[h+20>>2]=c[30292>>2];c[e>>2]=0;j=c[e>>2]|0;i=d;return j|0}else{c[e>>2]=6;j=c[e>>2]|0;i=d;return j|0}return 0}function bq(b){b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+32|0;f=e+24|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;m=e+20|0;c[g>>2]=b;c[h>>2]=d[(c[g>>2]|0)+3|0]|0;c[j>>2]=d[c[g>>2]|0]|0;c[k>>2]=d[(c[g>>2]|0)+1|0]|0;c[l>>2]=d[(c[g>>2]|0)+2|0]|0;if((c[h>>2]|0)!=0){c[j>>2]=In(c[j>>2]|0,65536,c[h>>2]|0)|0;c[k>>2]=In(c[k>>2]|0,65536,c[h>>2]|0)|0;c[l>>2]=In(c[l>>2]|0,65536,c[h>>2]|0)|0;c[h>>2]=c[h>>2]<<8;c[j>>2]=Nn(c[j>>2]|0,c[j>>2]|0)|0;c[k>>2]=Nn(c[k>>2]|0,c[k>>2]|0)|0;c[l>>2]=Nn(c[l>>2]|0,c[l>>2]|0)|0;c[j>>2]=Nn(c[j>>2]|0,4731)|0;c[k>>2]=Nn(c[k>>2]|0,46871)|0;c[l>>2]=Nn(c[l>>2]|0,13933)|0;c[m>>2]=(c[l>>2]|0)+(c[k>>2]|0)+(c[j>>2]|0);a[f]=(Nn(65535-(c[m>>2]|0)|0,c[h>>2]|0)|0)>>8;n=a[f]|0;i=e;return n|0}else{a[f]=0;n=a[f]|0;i=e;return n|0}return 0}function cq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+32|0;e=d+16|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=c[e>>2];c[h>>2]=0;c[j>>2]=c[c[g>>2]>>2];if((c[(c[f>>2]|0)+72>>2]|0)!=1651078259){c[h>>2]=18;k=c[h>>2]|0;i=d;return k|0}c[(c[g>>2]|0)+20>>2]=c[(c[f>>2]|0)+100>>2];c[(c[g>>2]|0)+24>>2]=c[(c[f>>2]|0)+104>>2];e=(c[g>>2]|0)+28|0;if((c[(c[(c[f>>2]|0)+156>>2]|0)+4>>2]&1|0)!=0){b=(c[f>>2]|0)+76|0;c[e+0>>2]=c[b+0>>2];c[e+4>>2]=c[b+4>>2];c[e+8>>2]=c[b+8>>2];c[e+12>>2]=c[b+12>>2];c[e+16>>2]=c[b+16>>2];c[e+20>>2]=c[b+20>>2];b=(c[(c[f>>2]|0)+156>>2]|0)+4|0;c[b>>2]=c[b>>2]&-2;k=c[h>>2]|0;i=d;return k|0}else{Zp(e);c[h>>2]=_p(c[j>>2]|0,(c[f>>2]|0)+76|0,(c[g>>2]|0)+28|0)|0;k=c[h>>2]|0;i=d;return k|0}return 0}function dq(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;i=i+16|0;d=b+8|0;e=b;f=b+4|0;c[d>>2]=a;c[e>>2]=c[d>>2];c[f>>2]=c[c[e>>2]>>2];aq(c[f>>2]|0,(c[e>>2]|0)+28|0)|0;i=b;return}function eq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+32|0;e=d+16|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=c[c[e>>2]>>2];c[h>>2]=c[e>>2];c[j>>2]=c[f>>2];c[(c[j>>2]|0)+20>>2]=c[(c[h>>2]|0)+20>>2];c[(c[j>>2]|0)+24>>2]=c[(c[h>>2]|0)+24>>2];f=_p(c[g>>2]|0,(c[h>>2]|0)+28|0,(c[j>>2]|0)+28|0)|0;i=d;return f|0}function fq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d+8|0;f=d;g=d+4|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=c[e>>2];c[c[f>>2]>>2]=c[(c[g>>2]|0)+20>>2]<<6;c[(c[f>>2]|0)+8>>2]=(c[c[f>>2]>>2]|0)+(c[(c[g>>2]|0)+32>>2]<<6);c[(c[f>>2]|0)+12>>2]=c[(c[g>>2]|0)+24>>2]<<6;c[(c[f>>2]|0)+4>>2]=(c[(c[f>>2]|0)+12>>2]|0)-(c[(c[g>>2]|0)+28>>2]<<6);i=d;return}function gq(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+32|0;f=e+24|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;m=e+20|0;c[f>>2]=a;c[g>>2]=d;c[h>>2]=c[f>>2];c[j>>2]=0;c[k>>2]=c[c[h>>2]>>2];c[l>>2]=(c[g>>2]|0)+108;c[m>>2]=(c[h>>2]|0)+20;if((c[(c[g>>2]|0)+72>>2]|0)!=1869968492){c[j>>2]=18;n=c[j>>2]|0;i=e;return n|0}c[j>>2]=mp(c[k>>2]|0,b[(c[l>>2]|0)+2>>1]|0,b[c[l>>2]>>1]|0,(c[h>>2]|0)+20|0)|0;if((c[j>>2]|0)!=0){n=c[j>>2]|0;i=e;return n|0}np(c[l>>2]|0,c[m>>2]|0)|0;n=c[j>>2]|0;i=e;return n|0}function hq(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b+4|0;e=b;c[d>>2]=a;c[e>>2]=c[d>>2];op(c[c[e>>2]>>2]|0,(c[e>>2]|0)+20|0)|0;i=b;return}function iq(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+32|0;f=e+20|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;c[f>>2]=a;c[g>>2]=d;c[h>>2]=c[f>>2];c[j>>2]=c[g>>2];c[l>>2]=c[c[h>>2]>>2];c[k>>2]=mp(c[l>>2]|0,b[(c[h>>2]|0)+22>>1]|0,b[(c[h>>2]|0)+20>>1]|0,(c[j>>2]|0)+20|0)|0;if((c[k>>2]|0)!=0){m=c[k>>2]|0;i=e;return m|0}np((c[h>>2]|0)+20|0,(c[j>>2]|0)+20|0)|0;m=c[k>>2]|0;i=e;return m|0}function jq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e+12|0;g=e;h=e+4|0;j=e+8|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[j>>2]=c[f>>2];if((c[g>>2]|0)!=0){wo((c[j>>2]|0)+20|0,c[g>>2]|0)}if((c[h>>2]|0)==0){i=e;return}xo((c[j>>2]|0)+20|0,c[c[h>>2]>>2]|0,c[(c[h>>2]|0)+4>>2]|0);i=e;return}function kq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d+8|0;f=d;g=d+4|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=c[e>>2];pp((c[g>>2]|0)+20|0,c[f>>2]|0);i=d;return}function lq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d+8|0;f=d;g=d+4|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=c[e>>2];c[(c[f>>2]|0)+72>>2]=1869968492;e=(c[f>>2]|0)+108|0;b=(c[g>>2]|0)+20|0;c[e+0>>2]=c[b+0>>2];c[e+4>>2]=c[b+4>>2];c[e+8>>2]=c[b+8>>2];c[e+12>>2]=c[b+12>>2];c[e+16>>2]=c[b+16>>2];b=(c[f>>2]|0)+124|0;c[b>>2]=c[b>>2]&-2;i=d;return 0}function mq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+32|0;e=d+16|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;c[e>>2]=a;c[f>>2]=b;if((c[f>>2]|0)==0){c[h>>2]=6;k=c[h>>2]|0;i=d;return k|0}c[c[f>>2]>>2]=0;if((c[e>>2]|0)!=0?(c[(c[e>>2]|0)+4>>2]|0)!=0:0){c[j>>2]=c[(c[e>>2]|0)+4>>2];c[h>>2]=nq(c[c[e>>2]>>2]|0,c[j>>2]|0,g)|0;if((c[h>>2]|0)!=0){k=c[h>>2]|0;i=d;return k|0}b=(c[g>>2]|0)+12|0;a=(c[e>>2]|0)+12|0;c[b+0>>2]=c[a+0>>2];c[b+4>>2]=c[a+4>>2];c[(c[g>>2]|0)+8>>2]=c[(c[e>>2]|0)+8>>2];if((c[(c[j>>2]|0)+16>>2]|0)!=0){c[h>>2]=Ad[c[(c[j>>2]|0)+16>>2]&127](c[e>>2]|0,c[g>>2]|0)|0}e=c[g>>2]|0;if((c[h>>2]|0)!=0){oq(e);k=c[h>>2]|0;i=d;return k|0}else{c[c[f>>2]>>2]=e;k=c[h>>2]|0;i=d;return k|0}}c[h>>2]=6;k=c[h>>2]|0;i=d;return k|0}function nq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+32|0;f=e+20|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[j>>2]=c[c[f>>2]>>2];c[l>>2]=0;c[c[h>>2]>>2]=0;c[l>>2]=Sn(c[j>>2]|0,c[c[g>>2]>>2]|0,k)|0;if((c[k>>2]|0)!=0){m=c[k>>2]|0;i=e;return m|0}c[c[l>>2]>>2]=c[f>>2];c[(c[l>>2]|0)+4>>2]=c[g>>2];c[(c[l>>2]|0)+8>>2]=c[(c[g>>2]|0)+4>>2];c[c[h>>2]>>2]=c[l>>2];m=c[k>>2]|0;i=e;return m|0}function oq(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;i=i+16|0;d=b+8|0;e=b;f=b+4|0;c[d>>2]=a;if((c[d>>2]|0)==0){i=b;return}c[e>>2]=c[c[c[d>>2]>>2]>>2];c[f>>2]=c[(c[d>>2]|0)+4>>2];if((c[(c[f>>2]|0)+12>>2]|0)!=0){rd[c[(c[f>>2]|0)+12>>2]&127](c[d>>2]|0)}Vn(c[e>>2]|0,c[d>>2]|0);c[d>>2]=0;i=b;return}function pq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+32|0;e=d+28|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;k=d+16|0;l=d+20|0;m=d+24|0;c[f>>2]=a;c[g>>2]=b;c[l>>2]=0;if((c[f>>2]|0)==0){c[e>>2]=37;n=c[e>>2]|0;i=d;return n|0}c[h>>2]=c[c[f>>2]>>2];if((c[g>>2]|0)==0){c[e>>2]=6;n=c[e>>2]|0;i=d;return n|0}do{if((c[(c[f>>2]|0)+72>>2]|0)!=1651078259){if((c[(c[f>>2]|0)+72>>2]|0)==1869968492){c[l>>2]=30328;break}c[m>>2]=Yo(c[h>>2]|0,c[(c[f>>2]|0)+72>>2]|0,0)|0;if((c[m>>2]|0)!=0){c[l>>2]=(c[m>>2]|0)+20}}else{c[l>>2]=30296}}while(0);do{if((c[l>>2]|0)!=0){c[j>>2]=nq(c[h>>2]|0,c[l>>2]|0,k)|0;if((c[j>>2]|0)==0){c[(c[k>>2]|0)+12>>2]=c[(c[f>>2]|0)+64>>2]<<10;c[(c[k>>2]|0)+16>>2]=c[(c[f>>2]|0)+68>>2]<<10;c[j>>2]=Ad[c[(c[l>>2]|0)+8>>2]&127](c[k>>2]|0,c[f>>2]|0)|0;m=c[k>>2]|0;if((c[j>>2]|0)!=0){oq(m);break}else{c[c[g>>2]>>2]=m;break}}}else{c[j>>2]=18}}while(0);c[e>>2]=c[j>>2];n=c[e>>2]|0;i=d;return n|0}function qq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+32|0;f=e+16|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[j>>2]=0;if((c[f>>2]|0)!=0?(c[(c[f>>2]|0)+4>>2]|0)!=0:0){c[k>>2]=c[(c[f>>2]|0)+4>>2];if((c[(c[k>>2]|0)+20>>2]|0)==0){c[j>>2]=18;l=c[j>>2]|0;i=e;return l|0}wd[c[(c[k>>2]|0)+20>>2]&31](c[f>>2]|0,c[g>>2]|0,c[h>>2]|0);if((c[g>>2]|0)==0){l=c[j>>2]|0;i=e;return l|0}yo((c[f>>2]|0)+12|0,c[g>>2]|0);l=c[j>>2]|0;i=e;return l|0}c[j>>2]=6;l=c[j>>2]|0;i=e;return l|0}function rq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e+12|0;g=e;h=e+4|0;j=e+8|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;if((c[h>>2]|0)==0){i=e;return}c[(c[h>>2]|0)+12>>2]=0;c[(c[h>>2]|0)+8>>2]=0;c[(c[h>>2]|0)+4>>2]=0;c[c[h>>2]>>2]=0;if((c[f>>2]|0)==0){i=e;return}if((c[(c[f>>2]|0)+4>>2]|0)==0){i=e;return}c[j>>2]=c[(c[f>>2]|0)+4>>2];if((c[(c[j>>2]|0)+24>>2]|0)==0){i=e;return}td[c[(c[j>>2]|0)+24>>2]&31](c[f>>2]|0,c[h>>2]|0);if((c[g>>2]|0)==1|(c[g>>2]|0)==3){c[c[h>>2]>>2]=c[c[h>>2]>>2]&-64;c[(c[h>>2]|0)+4>>2]=c[(c[h>>2]|0)+4>>2]&-64;c[(c[h>>2]|0)+8>>2]=(c[(c[h>>2]|0)+8>>2]|0)+63&-64;c[(c[h>>2]|0)+12>>2]=(c[(c[h>>2]|0)+12>>2]|0)+63&-64}if(!((c[g>>2]|0)==2|(c[g>>2]|0)==3)){i=e;return}g=c[h>>2]|0;c[g>>2]=c[g>>2]>>6;g=(c[h>>2]|0)+4|0;c[g>>2]=c[g>>2]>>6;g=(c[h>>2]|0)+8|0;c[g>>2]=c[g>>2]>>6;g=(c[h>>2]|0)+12|0;c[g>>2]=c[g>>2]>>6;i=e;return}



function Dd(a){a=a|0;var b=0;b=i;i=i+a|0;i=i+7&-8;return b|0}function Ed(){return i|0}function Fd(a){a=a|0;i=a}function Gd(a,b){a=a|0;b=b|0;if((p|0)==0){p=a;q=b}}function Hd(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0]}function Id(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0];a[k+4|0]=a[b+4|0];a[k+5|0]=a[b+5|0];a[k+6|0]=a[b+6|0];a[k+7|0]=a[b+7|0]}function Jd(a){a=a|0;E=a}function Kd(a){a=a|0;F=a}function Ld(a){a=a|0;G=a}function Md(a){a=a|0;H=a}function Nd(a){a=a|0;I=a}function Od(a){a=a|0;J=a}function Pd(a){a=a|0;K=a}function Qd(a){a=a|0;L=a}function Rd(a){a=a|0;M=a}function Sd(a){a=a|0;N=a}function Td(a){a=a|0;c[a>>2]=0;return}function Ud(a){a=a|0;var b=0,d=0,e=0;b=i;d=c[a>>2]|0;if((d|0)==0){i=b;return}else{e=d}while(1){d=c[e+16>>2]|0;Xz(e);if((d|0)==0){break}else{e=d}}i=b;return}function Vd(a,d,e,f,g){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;h=i;j=Wz(20)|0;c[j>>2]=d;k=j+4|0;b[k>>1]=e;c[j+8>>2]=f;c[j+12>>2]=g;e=j+16|0;c[e>>2]=0;l=c[a>>2]|0;if((l|0)!=0){m=l;l=0;while(1){if(((c[m>>2]|0)==(d|0)?(c[m+8>>2]|0)==(f|0):0)?(c[m+12>>2]|0)==(g|0):0){n=5;break}o=c[m+16>>2]|0;if((o|0)==0){break}else{p=m;m=o;l=p}}do{if((n|0)==5){g=c[m+16>>2]|0;if((l|0)==0){c[a>>2]=g;Xz(m);break}else{c[l+16>>2]=g;Xz(m);break}}}while(0);m=c[a>>2]|0;if((m|0)!=0){l=m;m=0;while(1){if((l|0)==0){n=18;break}if((b[k>>1]|0)>(b[l+4>>1]|0)){n=12;break}q=l+16|0;g=c[q>>2]|0;if((g|0)==0){n=16;break}else{f=l;l=g;m=f}}if((n|0)==12){if((m|0)==0){c[a>>2]=j;c[e>>2]=l;i=h;return}else{c[m+16>>2]=j;c[e>>2]=l;i=h;return}}else if((n|0)==16){c[q>>2]=j;i=h;return}else if((n|0)==18){i=h;return}}}c[a>>2]=j;i=h;return}function Wd(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;f=c[a>>2]|0;if((f|0)==0){g=1;i=e;return g|0}a=b[d>>1]|0;h=0;j=f;f=0;while(1){if((c[j>>2]|0)==(a&65535|0)){k=Wz(12)|0;c[k>>2]=c[j+8>>2];c[k+4>>2]=c[j+12>>2];c[k+8>>2]=0;if((h|0)==0){l=k;m=k}else{c[f+8>>2]=k;l=h;m=k}}else{l=h;m=f}j=c[j+16>>2]|0;if((j|0)==0){break}else{h=l;f=m}}m=(l|0)==0;if(m){g=1;i=e;return g|0}else{n=l}while(1){if((Ad[c[n>>2]&127](d,c[n+4>>2]|0)|0)==0){o=0;break}f=c[n+8>>2]|0;if((f|0)==0){o=1;break}else{n=f}}if(m){g=o;i=e;return g|0}else{p=l}while(1){l=c[p+8>>2]|0;Xz(p);if((l|0)==0){g=o;break}else{p=l}}i=e;return g|0}function Xd(){var a=0;a=i;if((uq(80)|0)!=0){Va(344)|0;je()}c[22]=0;c[24]=0;i=a;return}function Yd(b){b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+16|0;f=e;g=e+4|0;h=0;j=0;a:while(1){switch(Co(c[20]|0,b,h,g)|0){case 2:{k=3;break a;break};case 1:{k=4;break a;break};case 3:{k=5;break a;break};case 7:{k=6;break a;break};case 11:{k=7;break a;break};case 0:{break};default:{k=8;break a}}do{if((j|0)==0){l=Wz(8)|0;m=c[g>>2]|0;a[l]=c[m>>2];c[l+4>>2]=Yz(c[m>>2]|0,4)|0;m=Wz(8)|0;c[m>>2]=l;c[m+4>>2]=0;if((c[22]|0)==0){c[24]=m;c[22]=m;n=l;break}else{c[(c[24]|0)+4>>2]=m;c[24]=m;n=l;break}}else{n=j}}while(0);l=Wz(16)|0;c[(c[n+4>>2]|0)+(h<<2)>>2]=l;m=c[g>>2]|0;c[l>>2]=c[m+20>>2];a[l+4|0]=c[m+12>>2];c[l+8>>2]=m;c[l+12>>2]=0;l=h+1|0;if((l|0)<(d[n]|0|0)){h=l;j=n}else{o=n;k=14;break}}if((k|0)==3){c[f>>2]=b;Eb(104,f|0)|0;o=0;i=e;return o|0}else if((k|0)==4){c[f>>2]=b;Eb(144,f|0)|0;o=0;i=e;return o|0}else if((k|0)==5){c[f>>2]=b;Eb(184,f|0)|0;o=0;i=e;return o|0}else if((k|0)==6){c[f>>2]=b;Eb(224,f|0)|0;o=0;i=e;return o|0}else if((k|0)==7){c[f>>2]=b;Eb(264,f|0)|0;o=0;i=e;return o|0}else if((k|0)==8){c[f>>2]=b;Eb(296,f|0)|0;o=0;i=e;return o|0}else if((k|0)==14){i=e;return o|0}return 0}function Zd(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;h=c[22]|0;if((h|0)==0){j=0;i=g;return j|0}else{k=h}a:while(1){h=c[k>>2]|0;l=a[h]|0;if(!(l<<24>>24==0)){m=c[h+4>>2]|0;h=0;do{n=c[m+(h<<2)>>2]|0;if((bA(c[n>>2]|0,d)|0)==0?(a[n+4|0]|0)==f<<24>>24:0){break a}h=h+1|0}while((h|0)<(l&255|0))}l=c[k+4>>2]|0;if((l|0)==0){j=0;o=9;break}else{k=l}}if((o|0)==9){i=g;return j|0}o=Wz(8)|0;c[o>>2]=n;b[o+4>>1]=e;j=o;i=g;return j|0}function _d(a){a=a|0;var b=0;b=i;Xz(a);i=b;return}function $d(){var b=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;b=i;e=c[22]|0;if((e|0)==0){c[24]=0;c[22]=0;f=c[20]|0;vq(f)|0;c[20]=0;i=b;return}else{g=e}while(1){e=c[g>>2]|0;h=c[e+4>>2]|0;if((a[e]|0)==0){j=h}else{e=h;h=0;while(1){k=c[e+(h<<2)>>2]|0;Ho(c[k+8>>2]|0)|0;Xz(k);k=h+1|0;l=c[g>>2]|0;m=c[l+4>>2]|0;if((k|0)<(d[l]|0)){e=m;h=k}else{j=m;break}}}Xz(j);Xz(c[g>>2]|0);h=c[g+4>>2]|0;Xz(g);if((h|0)==0){break}else{g=h}}c[24]=0;c[22]=0;f=c[20]|0;vq(f)|0;c[20]=0;i=b;return}function ae(d,f,h,j){d=d|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0.0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0.0,R=0.0,S=0.0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,ba=0,ca=0,da=0;k=i;i=i+32|0;l=k+8|0;m=k;n=k+4|0;o=d+84|0;p=c[o>>2]|0;q=f+10|0;r=+(e[q>>1]|0);s=+(e[f+12>>1]|0);t=f+4|0;u=+g[t>>2]==0.0;v=Dn(d,j,0)|0;d=(v|0)==0;do{if(u){if(!d){if((v|0)==19){Va(424)|0;w=0;i=k;return w|0}else if((v|0)==16){Va(456)|0;w=0;i=k;return w|0}else{w=0;i=k;return w|0}}x=zo(c[o>>2]|0,0)|0;if((x|0)==0){y=Wz(64)|0;z=p+80|0;A=p+76|0;B=Wz(aa(c[z>>2]<<2,c[A>>2]|0)|0)|0;C=c[A>>2]|0;if((C|0)>0){D=p+88|0;E=p+84|0;F=C;G=c[z>>2]|0;H=0;while(1){if((G|0)>0){I=aa(H<<2,G)|0;J=aa(c[E>>2]|0,H)|0;K=(c[D>>2]|0)+J|0;J=B+I|0;I=0;while(1){a[J]=-1;a[J+1|0]=-1;a[J+2|0]=-1;a[J+3|0]=a[K]|0;I=I+1|0;L=c[z>>2]|0;if((I|0)>=(L|0)){break}else{K=K+1|0;J=J+4|0}}M=L;N=c[A>>2]|0}else{M=G;N=F}J=H+1|0;if((J|0)<(N|0)){F=N;G=M;H=J}else{O=M;P=N;break}}}else{O=c[z>>2]|0;P=C}g[y+4>>2]=+(O|0);g[y+8>>2]=+(P|0);g[y+12>>2]=+(c[p+100>>2]|0);g[y+16>>2]=+(c[p+104>>2]|0);g[y+20>>2]=+(c[p+40>>2]|0)*.015625;g[y+24>>2]=+(c[p+52>>2]|0)*.015625;pq(p,m)|0;rq(c[m>>2]|0,3,l);oq(c[m>>2]|0);Q=+(0-(c[l+12>>2]|0)|0);R=+(c[l+8>>2]|0);S=+(0-(c[l+4>>2]|0)|0);g[y+28>>2]=+(c[l>>2]|0);g[y+32>>2]=Q;g[y+36>>2]=R;g[y+40>>2]=S;H=c[h>>2]|0;c[y+44>>2]=H;G=255>>>(8-(e[f+8>>1]|0)|0)&j;F=b[f+14>>1]|0;D=((e[q>>1]|0)/(F&65535)|0)&65535;E=aa((G|0)%(D|0)|0,F&65535)|0;F=aa(e[f+16>>1]|0,(G|0)/(D|0)|0)|0;hc(3553,H|0);id(3553,0,E|0,F|0,c[z>>2]|0,c[A>>2]|0,6408,5121,B|0);S=+(E|0)/r;g[y+48>>2]=S;R=+(F|0)/s;g[y+52>>2]=R;g[y+56>>2]=+((c[z>>2]|0)+E|0)/r-S;g[y+60>>2]=+((c[A>>2]|0)+F|0)/s-R;Xz(B);T=y;break}else if((x|0)==16){Va(456)|0;w=0;i=k;return w|0}else if((x|0)==19){Va(424)|0;w=0;i=k;return w|0}else{w=0;i=k;return w|0}}else{if(!d){w=0;i=k;return w|0}wq(c[20]|0,n)|0;yq(c[n>>2]|0,~~(+g[t>>2]*16.0),1,0,0);pq(p,m)|0;if((ar(m,c[n>>2]|0,1)|0)!=0){oq(c[m>>2]|0);w=0;i=k;return w|0}sq(m,0,0,1)|0;F=c[m>>2]|0;E=Wz(64)|0;H=F+28|0;D=H+4|0;G=Wz(aa(c[D>>2]<<2,c[H>>2]|0)|0)|0;J=c[H>>2]|0;if((J|0)>0){K=H+12|0;I=H+8|0;U=c[D>>2]|0;V=J;W=0;while(1){if((U|0)>0){X=aa(W<<2,U)|0;Y=aa(c[I>>2]|0,W)|0;Z=(c[K>>2]|0)+Y|0;Y=G+X|0;X=0;while(1){a[Y]=-1;a[Y+1|0]=-1;a[Y+2|0]=-1;a[Y+3|0]=a[Z]|0;X=X+1|0;_=c[D>>2]|0;if((X|0)>=(_|0)){break}else{Z=Z+1|0;Y=Y+4|0}}$=c[H>>2]|0;ba=_}else{$=V;ba=U}Y=W+1|0;if((Y|0)<($|0)){U=ba;V=$;W=Y}else{ca=ba;da=$;break}}}else{ca=c[D>>2]|0;da=J}g[E+4>>2]=+(ca|0);g[E+8>>2]=+(da|0);g[E+12>>2]=+(c[F+20>>2]|0);g[E+16>>2]=+(c[F+24>>2]|0);g[E+20>>2]=+(c[p+40>>2]|0)*.015625;g[E+24>>2]=+(c[p+52>>2]|0)*.015625;W=c[h>>2]|0;c[E+44>>2]=W;V=255>>>(8-(e[f+8>>1]|0)|0)&j;U=b[f+14>>1]|0;K=((e[q>>1]|0)/(U&65535)|0)&65535;I=aa((V|0)%(K|0)|0,U&65535)|0;U=aa(e[f+16>>1]|0,(V|0)/(K|0)|0)|0;hc(3553,W|0);id(3553,0,I|0,U|0,c[D>>2]|0,c[H>>2]|0,6408,5121,G|0);R=+(I|0)/r;g[E+48>>2]=R;S=+(U|0)/s;g[E+52>>2]=S;g[E+56>>2]=+((c[D>>2]|0)+I|0)/r-R;g[E+60>>2]=+((c[H>>2]|0)+U|0)/s-S;Xz(G);T=E}}while(0);c[T>>2]=j;w=T;i=k;return w|0}function be(a,d,f){a=a|0;d=d|0;f=+f;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=i;j=c[(c[d>>2]|0)+8>>2]|0;k=j+88|0;l=~~f;m=((Nn((c[j+60>>2]|0)-(c[j+52>>2]|0)|0,c[(c[k>>2]|0)+16>>2]|0)|0)/64|0)+l|0;n=((Nn((c[j+64>>2]|0)-(c[j+56>>2]|0)|0,c[(c[k>>2]|0)+20>>2]|0)|0)/64|0)+l|0;c[a+20>>2]=0;b[a+18>>1]=0;b[a>>1]=b[d+4>>1]|0;g[a+4>>2]=f;c[a+24>>2]=0;d=a+8|0;b[d>>1]=8;l=a+10|0;b[l>>1]=64;k=a+12|0;b[k>>1]=64;b[a+14>>1]=m;b[a+16>>1]=n;a=64;while(1){j=a&65535;o=(j|0)/(m|0)|0;if((o|0)>0?(p=aa((255>>>(8-(e[d>>1]|0)|0)|0)/(o|0)|0,n)|0,(p|0)<=(e[k>>1]|0|0)):0){break}if((a&65535)<1024){p=j<<1&65535;b[l>>1]=p;a=p;continue}p=b[k>>1]|0;if((p&65535)<1024){b[l>>1]=64;b[k>>1]=(p&65535)<<1;a=64;continue}p=b[d>>1]|0;if((p&65535)>1){b[d>>1]=p+ -1<<16>>16;b[k>>1]=64;b[l>>1]=64;a=64;continue}else{Va(400)|0;a=b[l>>1]|0;continue}}i=h;return}function ce(a,d){a=a|0;d=d|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;g=a+8|0;h=d>>(e[g>>1]|0);d=a+18|0;if((h|0)<(e[d>>1]|0|0)){j=c[a+20>>2]|0}else{k=h+1|0;l=a+20|0;m=Zz(c[l>>2]|0,k<<2)|0;c[l>>2]=m;l=e[d>>1]|0;nA(m+(l<<2)|0,0,k-l<<2|0)|0;b[d>>1]=k;j=m}m=c[j+(h<<2)>>2]|0;if((m|0)!=0){n=m;i=f;return n|0}m=(255>>>(8-(e[g>>1]|0)|0))+1|0;g=e[a+10>>1]|0;j=e[a+12>>1]|0;k=aa(g<<2,j)|0;d=Wz(k)|0;nA(d|0,0,k|0)|0;k=Wz(8)|0;Fb(1,k|0);hc(3553,c[k>>2]|0);Bc(3553,0,6408,g|0,j|0,0,6408,5121,d|0);hd(3553,10240,9729.0);hd(3553,10241,9729.0);hd(3553,10242,33071.0);hd(3553,10243,33071.0);Xz(d);d=Yz(m,4)|0;c[k+4>>2]=d;nA(d|0,0,m<<2|0)|0;c[(c[a+20>>2]|0)+(h<<2)>>2]=k;n=k;i=f;return n|0}function de(d,f,h){d=d|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0.0,A=0,B=0,C=0.0,D=0.0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0,fa=0;j=i;i=i+16|0;k=j+8|0;l=j;m=c[(c[d>>2]|0)+8>>2]|0;n=c[m+8>>2]|0;o=ug(f,k)|0;p=0;a:while(1){switch(c[k>>2]|0){case 0:{break a;break};case 9:case 10:case 13:case 32:{q=p;break};default:{q=p+1|0}}o=ug(o,k)|0;p=q}q=n&64;if((p|0)==0){r=0;i=j;return r|0}n=Yz(p,4)|0;o=d+4|0;So(m,0,e[o>>1]<<6,0,96)|0;s=(c[d>>2]|0)+12|0;t=c[s>>2]|0;b:do{if((t|0)==0){u=11}else{v=b[o>>1]|0;w=t;while(1){if((b[w>>1]|0)==v<<16>>16?+g[w+4>>2]==0.0:0){x=w;break b}y=c[w+24>>2]|0;if((y|0)==0){u=11;break}else{w=y}}}}while(0);if((u|0)==11){t=Wz(28)|0;be(t,d,0.0);w=c[s>>2]|0;if((w|0)!=0){c[t+24>>2]=w}c[s>>2]=t;x=t}z=+g[h+24>>2];c:do{if(z>0.0){t=Yz(p,4)|0;s=(c[d>>2]|0)+12|0;w=c[s>>2]|0;if((w|0)!=0){v=b[o>>1]|0;y=w;do{if((b[y>>1]|0)==v<<16>>16?+g[y+4>>2]==z:0){A=y;B=t;break c}y=c[y+24>>2]|0}while((y|0)!=0)}y=Wz(28)|0;be(y,d,z);v=c[s>>2]|0;if((v|0)!=0){c[y+24>>2]=v}c[s>>2]=y;A=y;B=t}else{A=0;B=0}}while(0);Ao(m,32,0)|0;d=c[m+84>>2]|0;z=+(c[d+64>>2]|0)*.015625;C=+(c[d+68>>2]|0)*.015625;D=C==0.0?z:C;d=ug(f,k)|0;f=c[k>>2]|0;o=(B|0)==0;p=x+8|0;y=h+64|0;h=(q|0)==0;q=l+4|0;v=A+8|0;w=f;E=0;F=0;G=0;H=f;f=0;I=0;J=d;d:while(1){e:do{switch(w|0){case 9:case 10:case 13:case 32:{if((E|0)!=0?(a[E]|0)==0:0){c[f+44>>2]=E;K=E}else{K=f}if((w|0)==9){d=Wz(48)|0;a[d]=1;g[d+4>>2]=z;g[d+8>>2]=D;L=(c[y>>2]|0)==0;g[d+12>>2]=0.0;g[d+16>>2]=0.0;M=d+20|0;if(L){g[M>>2]=z;g[d+24>>2]=0.0}else{g[M>>2]=0.0;g[d+24>>2]=D}c[d+44>>2]=0;N=d}else if((w|0)==32){d=Wz(48)|0;a[d]=2;g[d+4>>2]=z;g[d+8>>2]=D;M=(c[y>>2]|0)==0;g[d+12>>2]=0.0;g[d+16>>2]=0.0;L=d+20|0;if(M){g[L>>2]=z;g[d+24>>2]=0.0}else{g[L>>2]=0.0;g[d+24>>2]=D}c[d+44>>2]=0;N=d}else if((w|0)==10){if((H|0)==13){O=10;P=0;Q=F;R=K;S=0;break e}else{u=62}}else if((w|0)==13){u=62}else{O=w;P=0;Q=F;R=K;S=0;break e}if((u|0)==62){u=0;d=Wz(48)|0;a[d]=3;L=d+12|0;c[d+44>>2]=0;c[L+0>>2]=0;c[L+4>>2]=0;c[L+8>>2]=0;c[L+12>>2]=0;N=d}if((N|0)==0|(K|0)==0){O=w;P=N;Q=F;R=K;S=0}else{c[K+44>>2]=N;O=w;P=0;Q=F;R=N;S=0}break};case 0:{break d;break};default:{d=Bo(m,w)|0;if(!o){L=ce(A,d)|0;M=255>>>(8-(e[v>>1]|0)|0)&d;T=L+4|0;U=c[(c[T>>2]|0)+(M<<2)>>2]|0;if((U|0)==0){V=ae(m,A,L,d)|0;c[(c[T>>2]|0)+(M<<2)>>2]=V;W=V}else{W=U}c[B+(F<<2)>>2]=W}U=ce(x,d)|0;V=255>>>(8-(e[p>>1]|0)|0)&d;M=U+4|0;T=c[(c[M>>2]|0)+(V<<2)>>2]|0;if((T|0)==0){L=ae(m,x,U,d)|0;c[(c[M>>2]|0)+(V<<2)>>2]=L;X=L}else{X=T}T=n+(F<<2)|0;c[T>>2]=X;do{if((E|0)!=0){if((a[E]|0)!=0){c[f+44>>2]=E;Y=E;u=34;break}C=+g[X+28>>2];Z=+g[X+32>>2];_=+g[X+36>>2];$=+g[X+40>>2];c[E+32>>2]=T;c[E+40>>2]=B+(F<<2);L=E+4|0;if((c[y>>2]|0)==0){aa=+g[L>>2];ba=Z+0.0;ca=$+0.0}else{da=+g[E+8>>2];aa=0.0;ba=Z+da;ca=$+da}da=C+aa;C=_+aa;V=E+12|0;if(+g[V>>2]>da){g[V>>2]=da}V=E+16|0;if(+g[V>>2]>ba){g[V>>2]=ba}V=E+20|0;if(+g[V>>2]<C){g[V>>2]=C}V=E+24|0;if(+g[V>>2]<ca){g[V>>2]=ca}g[L>>2]=+g[X+20>>2]+ +g[L>>2];V=E+8|0;g[V>>2]=+g[X+24>>2]+ +g[V>>2];if(h){ea=E;fa=f}else{To(m,I,d,0,l)|0;g[L>>2]=+g[L>>2]+ +(c[l>>2]|0)*.015625;g[V>>2]=+g[V>>2]+ +(c[q>>2]|0)*.015625;ea=E;fa=f}}else{Y=f;u=34}}while(0);if((u|0)==34){u=0;V=Wz(48)|0;a[V]=0;c[V+28>>2]=T;c[V+32>>2]=T;L=B+(F<<2)|0;c[V+36>>2]=L;c[V+40>>2]=L;g[V+4>>2]=+g[X+20>>2];g[V+8>>2]=+g[X+24>>2];L=V+12|0;M=X+28|0;c[L+0>>2]=c[M+0>>2];c[L+4>>2]=c[M+4>>2];c[L+8>>2]=c[M+8>>2];c[L+12>>2]=c[M+12>>2];c[V+44>>2]=0;ea=V;fa=Y}O=c[k>>2]|0;P=ea;Q=F+1|0;R=fa;S=d}}}while(0);t=(G|0)!=0|(P|0)==0;s=ug(J,k)|0;w=c[k>>2]|0;E=P;F=Q;G=t?G:P;H=O;f=t?R:P;I=S;J=s}if((E|0)==0|(E|0)==(f|0)){r=G;i=j;return r|0}c[f+44>>2]=E;r=G;i=j;return r|0}function ee(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0.0,m=0.0,n=0,o=0,p=0.0,q=0.0,r=0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0,D=0;e=i;f=Wz(28)|0;if((c[d+4>>2]|0)==0){h=0}else{h=+g[d+16>>2]>0.0}c[f+0>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0;c[f+20>>2]=0;c[f+24>>2]=0;if((b|0)==0){i=e;return f|0}j=d+64|0;k=d+16|0;l=0.0;m=0.0;d=f;n=b;while(1){do{if((a[n]|0)!=3){if((c[d>>2]|0)==0){c[d+4>>2]=n;c[d>>2]=n;b=d+8|0;o=n+12|0;c[b+0>>2]=c[o+0>>2];c[b+4>>2]=c[o+4>>2];c[b+8>>2]=c[o+8>>2];c[b+12>>2]=c[o+12>>2];p=+g[n+4>>2];q=+g[n+8>>2];r=d;s=n;break}o=(c[j>>2]|0)==0;t=o?l:0.0;u=(o?0.0:m)+ +g[n+16>>2];v=(o?0.0:m)+ +g[n+24>>2];w=+g[n+12>>2]+t;x=+g[n+20>>2]+t;o=d+8|0;t=+g[o>>2];if(t>w){g[o>>2]=w;y=w}else{y=t}o=d+12|0;if(+g[o>>2]>u){g[o>>2]=u}o=d+16|0;u=+g[o>>2];if(u<x){g[o>>2]=x;z=x}else{z=u}o=d+20|0;if(+g[o>>2]<v){g[o>>2]=v}c[d+4>>2]=n;v=l+ +g[n+4>>2];u=m+ +g[n+8>>2];if((h?(o=c[n+44>>2]|0,(o|0)!=0):0)?+g[o+20>>2]- +g[o+12>>2]+(z-y)>+g[k>>2]:0){A=v;B=u;C=(a[o]|0)==0?n:o;D=6}else{p=v;q=u;r=d;s=n}}else{A=l;B=m;C=n;D=6}}while(0);if((D|0)==6){D=0;o=Wz(28)|0;c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;c[o+12>>2]=0;c[o+16>>2]=0;c[o+20>>2]=0;c[o+24>>2]=0;c[d+24>>2]=o;p=A;q=B;r=o;s=C}n=c[s+44>>2]|0;if((n|0)==0){break}else{l=p;m=q;d=r}}i=e;return f|0}function fe(a,b,d,e,f){a=a|0;b=b|0;d=+d;e=+e;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0,T=0;h=i;i=i+32|0;j=h+16|0;k=h;l=h+8|0;m=c[(c[a>>2]|0)+8>>2]|0;n=(f|0)==0?8:f;f=n+16|0;o=+g[f>>2];p=de(a,b,n)|0;if((p|0)==0){g[f>>2]=o;i=h;return}q=+g[n+28>>2]+ +(c[(c[m+88>>2]|0)+32>>2]|0)*.015625;b=ee(p,n)|0;r=+g[b+8>>2];s=+g[b+12>>2];t=+g[b+16>>2];u=+g[b+20>>2];a=(b|0)==0;a:do{if(a){v=u;w=t;x=s;y=r}else{z=(c[n+64>>2]|0)==0;A=r;B=t;C=s;D=u;E=r;F=s;G=t;H=u;I=b;J=0.0;K=0.0;while(1){L=A+J;M=B+J;N=C+K;O=D+K;P=E>L?L:E;L=F>N?N:F;N=G<M?M:G;M=H<O?O:H;if(z){Q=J;R=q+K}else{Q=J-q;R=K}S=c[I+24>>2]|0;if((S|0)==0){v=M;w=N;x=L;y=P;break a}A=+g[S+8>>2];B=+g[S+16>>2];C=+g[S+12>>2];D=+g[S+20>>2];E=P;F=L;G=N;H=M;I=S;J=Q;K=R}}}while(0);g[j>>2]=y;g[j+4>>2]=x;g[j+8>>2]=w;g[j+12>>2]=v;if(!a){I=k+4|0;z=n+64|0;S=b;v=d;d=e;b:while(1){T=S;e=d;while(1){Jb();ge(k,T,n,j);Ja(+(v+ +g[k>>2]),+(e+ +g[I>>2]),0.0);he(l,m,T,n);Mc();T=c[T+24>>2]|0;if((c[z>>2]|0)!=0){break}if((T|0)==0){break b}else{e=q+e}}if((T|0)==0){break}else{S=T;v=v-q;d=e}}if(!a){a=b;while(1){b=c[a+24>>2]|0;Xz(a);if((b|0)==0){break}else{a=b}}}}Xz(c[p+36>>2]|0);Xz(c[p+28>>2]|0);a=p;while(1){p=c[a+44>>2]|0;Xz(a);if((p|0)==0){break}else{a=p}}g[f>>2]=o;i=h;return}function ge(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0.0,k=0.0,l=0.0,m=0,n=0,o=0.0,p=0,q=0.0,r=0.0,s=0.0;h=i;j=+g[e+16>>2];if(j==0.0){k=+g[f+8>>2]- +g[f>>2]}else{k=j}j=+g[e+20>>2];if(j==0.0){l=+g[f+12>>2]- +g[f+4>>2]}else{l=j}m=a[e]|0;n=m<<24>>24==0;do{if((c[e+64>>2]|0)==0){do{if(!n){if(m<<24>>24==2){j=+g[d+8>>2];o=k-(+g[d+16>>2]-j)-j;break}else if(m<<24>>24==1){j=+g[d+8>>2];o=(k-(+g[d+16>>2]-j))*.5-j;break}else{o=0.0;break}}else{o=-+g[d+8>>2]}}while(0);p=a[e+1|0]|0;if(p<<24>>24==2){j=+g[f+4>>2];q=o;r=l-(+g[f+12>>2]-j)-j;break}else if(p<<24>>24==0){q=o;r=-+g[f+4>>2];break}else if(p<<24>>24==1){j=+g[f+4>>2];q=o;r=(l-(+g[f+12>>2]-j))*.5-j;break}else{q=o;r=0.0;break}}else{do{if(!n){if(m<<24>>24==1){j=+g[f>>2];s=(k-(+g[f+8>>2]-j))*.5-j;break}else if(m<<24>>24==2){j=+g[f>>2];s=k-(+g[f+8>>2]-j)-j;break}else{s=0.0;break}}else{s=-+g[f>>2]}}while(0);p=a[e+1|0]|0;if(p<<24>>24==2){j=+g[d+12>>2];q=s;r=l-(+g[d+20>>2]-j)-j;break}else if(p<<24>>24==1){j=+g[d+12>>2];q=s;r=(l-(+g[d+20>>2]-j))*.5-j;break}else if(p<<24>>24==0){q=s;r=-+g[d+12>>2];break}else{q=s;r=0.0;break}}}while(0);g[b>>2]=q;g[b+4>>2]=r;i=h;return}function he(d,e,f,h){d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0.0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0.0,fa=0.0,ga=0.0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0;j=i;i=i+144|0;k=j+120|0;l=j;m=j+104|0;n=j+16|0;o=j+32|0;p=j+40|0;q=j+72|0;r=j+8|0;vf(l,0.0,0.0);s=h+24|0;if((c[f>>2]|0)==0){vf(d,0.0,0.0);i=j;return}t=h+48|0;u=m+4|0;v=m+8|0;w=m+12|0;x=h+12|0;y=f+4|0;z=(c[e+8>>2]&64|0)==0;A=l+4|0;B=p+4|0;C=p+8|0;D=p+12|0;E=p+16|0;F=p+20|0;G=p+24|0;H=p+28|0;I=q+4|0;J=q+8|0;K=q+12|0;L=q+16|0;M=q+20|0;N=q+24|0;O=q+28|0;P=h+64|0;Q=o+4|0;R=e+80|0;S=e+88|0;T=e+82|0;U=f+8|0;V=f+16|0;W=h+32|0;h=n+4|0;X=n+8|0;Y=n+12|0;Z=+g[s>>2]>0.0;_=0;while(1){if(Z){c[k+0>>2]=c[t+0>>2];c[k+4>>2]=c[t+4>>2];c[k+8>>2]=c[t+8>>2];c[k+12>>2]=c[t+12>>2];Hf(m,k);$=+g[m>>2];aa=+g[u>>2];ba=+g[v>>2];ca=+g[w>>2]}else{c[k+0>>2]=c[W+0>>2];c[k+4>>2]=c[W+4>>2];c[k+8>>2]=c[W+8>>2];c[k+12>>2]=c[W+12>>2];Hf(n,k);$=+g[n>>2];aa=+g[h>>2];ba=+g[X>>2];ca=+g[Y>>2]}if((c[x>>2]|0)!=0?(c[P>>2]|0)==0:0){da=+(Nn(b[R>>1]|0,c[(c[S>>2]|0)+20>>2]|0)|0)*.015625;ea=+(Nn(b[T>>1]|0,c[(c[S>>2]|0)+20>>2]|0)|0)*.015625;if(Z){fa=+g[s>>2]/3.0;Of(fa);Nf($,aa,ba,ca);Mf(0.0,0.0,0.0,0.0);ga=ea+fa}else{Of(0.0);Mf($,aa,ba,ca);ga=ea}ea=+g[U>>2];Pf(ga*-.5+ea,-da-ga*.5,ga+(+g[V>>2]-ea),ga)}Yb(+$,+aa,+ba,+ca);Db(3553);bc(32884);bc(32888);ha=f;ia=0;ja=_;while(1){ka=c[ha>>2]|0;la=a[ka]|0;do{if(la<<24>>24==2){if((c[P>>2]|0)==0){g[l>>2]=+g[ka+4>>2]+ +g[l>>2];ma=ia;na=ja;break}else{g[A>>2]=+g[ka+8>>2]+ +g[A>>2];ma=ia;na=ja;break}}else if(la<<24>>24==0){if(Z){oa=ka+36|0;pa=ka+40|0}else{oa=ka+28|0;pa=ka+32|0}qa=c[oa>>2]|0;ra=c[pa>>2]|0;if(!(qa>>>0>ra>>>0)){sa=qa;qa=ia;ta=ja;while(1){ua=c[sa>>2]|0;do{if(!z){To(e,qa,c[ua>>2]|0,0,o)|0;if((c[P>>2]|0)==0){g[l>>2]=+g[l>>2]+ +(c[o>>2]|0)*.015625;break}else{g[A>>2]=+g[A>>2]+ +(c[Q>>2]|0)*.015625;break}}}while(0);ea=+g[l>>2]+ +g[ua+12>>2];da=+g[A>>2]- +g[ua+16>>2];va=c[ua+44>>2]|0;if((ta|0)!=0&(ta|0)==(va|0)){wa=ta}else{hc(3553,va|0);wa=va}g[p>>2]=ea;g[B>>2]=da;va=ua+4|0;g[C>>2]=ea+ +g[va>>2];g[D>>2]=da;g[E>>2]=ea+ +g[va>>2];va=ua+8|0;g[F>>2]=da+ +g[va>>2];g[G>>2]=ea;g[H>>2]=da+ +g[va>>2];va=ua+48|0;g[q>>2]=+g[va>>2];xa=ua+52|0;g[I>>2]=+g[xa>>2];ya=ua+56|0;g[J>>2]=+g[va>>2]+ +g[ya>>2];g[K>>2]=+g[xa>>2];g[L>>2]=+g[va>>2]+ +g[ya>>2];ya=ua+60|0;g[M>>2]=+g[xa>>2]+ +g[ya>>2];g[N>>2]=+g[va>>2];g[O>>2]=+g[xa>>2]+ +g[ya>>2];db(2,5126,0,p|0);uc(2,5126,0,q|0);mc(6,0,4);if((c[P>>2]|0)==0){g[l>>2]=+g[ua+20>>2]+ +g[l>>2]}else{g[A>>2]=+g[ua+24>>2]+ +g[A>>2]}ya=c[ua>>2]|0;xa=sa+4|0;if(xa>>>0>ra>>>0){ma=ya;na=wa;break}else{sa=xa;qa=ya;ta=wa}}}else{ma=ia;na=ja}}else{ma=ia;na=ja}}while(0);if((ka|0)==(c[y>>2]|0)){break}else{ha=ka+44|0;ia=ma;ja=na}}Dc(32884);Dc(32888);bd(3553);if(!Z){break}vf(r,0.0,0.0);ja=r;ia=c[ja+4>>2]|0;ha=l;c[ha>>2]=c[ja>>2];c[ha+4>>2]=ia;Z=0;_=na}vf(d,0.0,0.0);i=j;return}function ie(){var a=0,b=0,d=0;a=i;i=i+16|0;b=a;c[160]=0;d=Wz(4)|0;c[762]=d;c[770]=Wz(4)|0;Td(d);Td(c[770]|0);c[130]=vg()|0;c[b+0>>2]=c[512>>2];c[b+4>>2]=c[516>>2];le(b);c[122]=0;rd[c[588>>2]&127](0);b=Hg()|0;d=3120;c[d>>2]=b;c[d+4>>2]=E;c[126]=0;c[154]=0;rd[c[564>>2]&127](0);c[3076>>2]=0;Xd();Ng();Pg();ye();if((qd[c[132]&7]()|0)==0){c[134]=0;Ae();$d();Og();Sg();wg(c[130]|0);Ud(c[770]|0);Ud(c[762]|0);Xz(c[770]|0);Xz(c[762]|0);xd[c[552>>2]&15]();xd[c[556>>2]&15]();i=a;return}else{td[c[548>>2]&31](4,5);i=a;return}}function je(){var a=0;a=i;xd[c[556>>2]&15]();i=a;return}function ke(a){a=a|0;var b=0,d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0.0,n=0.0,o=0;b=i;i=i+16|0;d=b;if((c[156]|0)==0){e=c[568>>2]|0;c[d+0>>2]=c[a+0>>2];c[d+4>>2]=c[a+4>>2];rd[e&127](d);zg(c[130]|0,+g[a>>2],+g[a+4>>2]);c[d+0>>2]=c[a+0>>2];c[d+4>>2]=c[a+4>>2];le(d);f=0}else{f=1}c[158]=f;f=a;a=c[f+4>>2]|0;d=512;c[d>>2]=c[f>>2];c[d+4>>2]=a;a=c[576>>2]|0;if((c[160]|0)==0){h=0;j=h&1;k=vd[a&63](j)|0;c[160]=k;i=b;return}d=vd[c[572>>2]&63](0)|0;f=Yz(d,8)|0;vd[c[572>>2]&63](f)|0;a:do{if((d|0)==0){l=0}else{m=+g[128];n=+g[516>>2];e=0;while(1){if(+g[f+(e<<3)>>2]==m?+g[f+(e<<3)+4>>2]==n:0){l=1;break a}o=e+1|0;if(o>>>0<d>>>0){e=o}else{l=0;break}}}}while(0);Xz(f);h=l;j=h&1;k=vd[a&63](j)|0;c[160]=k;i=b;return}function le(a){a=a|0;var b=0,d=0,e=0.0,f=0.0;b=i;i=i+16|0;d=b;e=+g[a>>2];f=+g[a+4>>2];ub(0,0,~~e|0,~~f|0);Xa(5889);Wa();bb(0.0,+e,+f,0.0,-1.0,1.0);Xa(5888);Wa();fc(0.0,0.0,0.0,1.0);La(770,771);Db(3042);qf();c[d+0>>2]=c[a+0>>2];c[d+4>>2]=c[a+4>>2];pf(d);i=b;return}function me(){return c[160]|0}function ne(a,d){a=a|0;d=d|0;var e=0,f=0,h=0,j=0,k=0.0,l=0.0;e=i;i=i+32|0;f=e+8|0;h=e;b[f>>1]=2;j=c[762]|0;c[f+8>>2]=j;c[f+4>>2]=j;k=+(a|0);l=+(d|0);vf(h,k,l);d=h;h=c[d+4>>2]|0;a=f+16|0;c[a>>2]=c[d>>2];c[a+4>>2]=h;g[764]=k;g[3060>>2]=l;Wd(c[762]|0,f)|0;Gg(f);i=e;return}function oe(d,e,f){d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0.0,n=0.0,o=0;h=i;i=i+32|0;j=h+8|0;k=h;b[j>>1]=1;l=c[762]|0;c[j+8>>2]=l;c[j+4>>2]=l;a[j+12|0]=f;m=+(d|0);n=+(e|0);vf(k,m,n);e=k;k=c[e+4>>2]|0;d=j+16|0;c[d>>2]=c[e>>2];c[d+4>>2]=k;g[764]=m;g[3060>>2]=n;if((f|0)>=3){o=c[762]|0;Wd(o,j)|0;Gg(j);i=h;return}c[3064+(f<<2)>>2]=1;o=c[762]|0;Wd(o,j)|0;Gg(j);i=h;return}function pe(){var a=0,b=0,d=0,e=0,f=0,h=0,j=0,k=0;a=i;Kc(16640);Jf();Ef();c[156]=1;b=Hg()|0;d=648;e=hA(b|0,E|0,c[d>>2]|0,c[d+4>>2]|0)|0;d=E;b=Hg()|0;f=648;c[f>>2]=b;c[f+4>>2]=E;zg(c[130]|0,+g[128],+g[516>>2]);Ag(c[130]|0);Bg(c[130]|0);f=672;b=fA(c[f>>2]|0,c[f+4>>2]|0,e|0,d|0)|0;d=E;e=672;c[e>>2]=b;c[e+4>>2]=d;e=656;f=fA(c[e>>2]|0,c[e+4>>2]|0,1,0)|0;e=E;h=656;c[h>>2]=f;c[h+4>>2]=e;h=664;j=c[h+4>>2]|0;if(d>>>0<j>>>0|(d|0)==(j|0)&b>>>0<(c[h>>2]|0)>>>0){c[156]=0;k=c[604>>2]|0;xd[k&15]();i=a;return}c[124]=~~(1.0e3/((+(b>>>0)+4294967296.0*+(d>>>0))/(+(f>>>0)+4294967296.0*+(e>>>0))));e=672;c[e>>2]=0;c[e+4>>2]=0;e=656;c[e>>2]=0;c[e+4>>2]=0;c[156]=0;k=c[604>>2]|0;xd[k&15]();i=a;return}function qe(){var a=0,b=0,d=0,e=0,f=0,g=0,h=0,j=0;a=i;i=i+16|0;b=a;d=c[126]|0;if((d|0)==0){e=0;f=0}else{g=1e3/(d|0)|0;e=g;f=((g|0)<0)<<31>>31}g=Hg()|0;d=E;Qg();Mg();Fg(c[130]|0);Eg();xd[c[600>>2]&15]();pe();if((c[158]|0)!=0){c[b+0>>2]=c[512>>2];c[b+4>>2]=c[516>>2];ke(b)}b=Hg()|0;h=E;j=fA(g|0,d|0,e|0,f|0)|0;f=hA(j|0,E|0,b|0,h|0)|0;Hg()|0;if(!((f|0)>0&(c[154]|0)!=0)){i=a;return}rd[c[592>>2]&127](f);i=a;return}function re(){var a=0,b=0;a=i;b=c[134]|0;if((b|0)!=0){xd[b&15]()}Ae();$d();Og();Sg();wg(c[130]|0);Ud(c[770]|0);Ud(c[762]|0);Xz(c[770]|0);Xz(c[762]|0);xd[c[552>>2]&15]();i=a;return}function se(a,b){a=a|0;b=b|0;c[174]=0;return 1}function te(a,b){a=a|0;b=b|0;b=i;if((c[174]|0)!=0){i=b;return 1}Vd(Fe(c[176]|0,0)|0,151,0,77,0);c[174]=1;i=b;return 1}function ue(){var a=0,b=0,d=0,e=0;a=i;i=i+64|0;b=a;c[132]=1;c[134]=6;ob(0,608)|0;dg(b);d=544|0;e=b+0|0;b=d+64|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(b|0));vd[c[136]&63](7)|0;i=a;return}function ve(){var a=0;a=i;De(c[176]|0);_d(c[172]|0);Wf(c[180]|0);Wf(c[178]|0);i=a;return}function we(){var a=0,b=0,d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;a=i;i=i+48|0;b=a;d=a+24|0;e=a+8|0;f=Tf(808)|0;c[178]=f;if((f|0)==0){Va(984)|0}f=Tf(832)|0;c[180]=f;if((f|0)==0){Va(1024)|0}Yd(848)|0;f=Zd(872,30,0)|0;c[172]=f;Eb(((f|0)!=0?880:896)|0,b|0)|0;f=728|0;h=8|0;j=f+68|0;do{c[f>>2]=c[h>>2];f=f+4|0;h=h+4|0}while((f|0)<(j|0));Gf(d,1.0,1.0,1.0,1.0);c[760>>2]=c[d+0>>2];c[764>>2]=c[d+4>>2];c[768>>2]=c[d+8>>2];c[772>>2]=c[d+12>>2];Gf(e,0.0,0.0,0.0,1.0);c[776>>2]=c[e+0>>2];c[780>>2]=c[e+4>>2];c[784>>2]=c[e+8>>2];c[788>>2]=c[e+12>>2];g[752>>2]=6.0;e=Ce(912,2)|0;c[176]=e;if((e|0)==0){Eb(936,b|0)|0}if((c[174]|0)!=0){k=c[762]|0;Vd(k,1,0,78,0);l=Hg()|0;m=E;n=800;o=n;c[o>>2]=l;p=n+4|0;q=p;c[q>>2]=m;r=c[130]|0;s=r+112|0;c[s>>2]=15;i=a;return 1}Vd(Fe(c[176]|0,0)|0,151,0,77,0);c[174]=1;k=c[762]|0;Vd(k,1,0,78,0);l=Hg()|0;m=E;n=800;o=n;c[o>>2]=l;p=n+4|0;q=p;c[q>>2]=m;r=c[130]|0;s=r+112|0;c[s>>2]=15;i=a;return 1}function xe(a){a=a|0;var b=0,d=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0.0,q=0.0;b=i;i=i+160|0;d=b;f=b+144|0;h=b+36|0;j=b+72|0;k=b+108|0;l=Hg()|0;m=E;n=800;o=hA(l|0,m|0,c[n>>2]|0,c[n+4>>2]|0)|0;p=(+(o>>>0)+4294967296.0*+(E>>>0))*.0010000000474974513;o=800;c[o>>2]=l;c[o+4>>2]=m;m=c[180]|0;yf(h,+(0-(e[m+4>>1]|0)|0)*.5,+(0-(e[m+6>>1]|0)|0)*.5);zf(j,+g[170]);m=d+0|0;o=j+0|0;j=m+36|0;do{c[m>>2]=c[o>>2];m=m+4|0;o=o+4|0}while((m|0)<(j|0));Af(h,d);yf(k,+g[a+120>>2],+g[a+124>>2]);m=d+0|0;o=k+0|0;j=m+36|0;do{c[m>>2]=c[o>>2];m=m+4|0;o=o+4|0}while((m|0)<(j|0));Af(h,d);Vf(c[178]|0,0.0,0.0);Mf(1.0,0.0,0.0,.5);Of(1.0);Nf(1.0,1.0,1.0,1.0);q=+g[a+12>>2]*.5;Qf(q,+g[a+16>>2]*.5,q);Kf(h);Vf(c[180]|0,0.0,0.0);Lf();g[170]=p*5.0+ +g[170];c[d>>2]=c[124];Gb(f|0,976,d|0)|0;fe(c[172]|0,f,5.0,5.0,728);i=b;return}function ye(){var a=0,b=0,d=0,e=0;a=i;i=i+112|0;b=a;Pe(b);d=1056|0;e=b+0|0;b=d+112|0;do{c[d>>2]=c[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(b|0));xd[c[1064>>2]&15]();e=Ig()|0;c[292]=e;d=e+24|0;c[d>>2]=100;c[d+4>>2]=0;Vd(e,201,0,79,0);Jg(c[292]|0,0);i=a;return}function ze(d,e){d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0.0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,aa=0,ba=0,ca=0;e=i;i=i+32|0;d=e+8|0;f=e;h=e+4|0;j=Hg()|0;k=E;l=c[294]|0;if((l|0)==0){i=e;return 1}m=d+4|0;n=l;while(1){l=c[n>>2]|0;o=n+8|0;p=c[o>>2]|0;if((a[l+4|0]|0)==1?(q=l+8|0,r=c[q>>2]|0,(c[r+8>>2]&2|0)!=0):0){if((r|0)==0){s=l+16|0;t=0}else{u=l+32|0;v=u;w=hA(j|0,k|0,c[v>>2]|0,c[v+4>>2]|0)|0;v=E;x=+g[r>>2]*1.0e3;r=~~x>>>0;y=+P(x)>=1.0?x>0.0?(fa(+O(x/4294967296.0),4294967295.0)|0)>>>0:~~+$((x- +(~~x>>>0))/4294967296.0)>>>0:0;z=l+16|0;x=(+(w>>>0)+4294967296.0*+(v>>>0))*+pd[c[1108>>2]&3](c[z>>2]|0);A=+P(x)>=1.0?x>0.0?(fa(+O(x/4294967296.0),4294967295.0)|0)>>>0:~~+$((x- +(~~x>>>0))/4294967296.0)>>>0:0;B=l+24|0;C=B;D=fA(~~x>>>0|0,A|0,c[C>>2]|0,c[C+4>>2]|0)|0;C=E;if((r|0)==0&(y|0)==0){F=D;G=C}else{A=zA(D|0,C|0,r|0,y|0)|0;F=A;G=E}A=B;c[A>>2]=F;c[A+4>>2]=G;A=u;B=fA(c[A>>2]|0,c[A+4>>2]|0,w|0,v|0)|0;v=u;c[v>>2]=B;c[v+4>>2]=E;s=z;t=c[q>>2]|0}wd[c[1148>>2]&31](c[s>>2]|0,f,h);q=c[h>>2]|0;if((q|0)<10){Ee(l,10-q|0,t+(q<<2)+12|0)}q=c[f>>2]|0;if((q|0)>0?(z=t+12|0,md[c[1144>>2]&63](c[s>>2]|0,q,z)|0,Ee(l,c[f>>2]|0,z),q=c[f>>2]|0,(q|0)>0):0){v=t+48|0;B=t+16|0;u=t+20|0;w=t+24|0;A=t+28|0;y=t+32|0;r=t+36|0;C=t+40|0;D=t+44|0;H=c[B>>2]|0;I=c[u>>2]|0;J=c[w>>2]|0;K=c[A>>2]|0;L=c[y>>2]|0;M=c[r>>2]|0;N=c[C>>2]|0;Q=c[D>>2]|0;R=c[v>>2]|0;S=c[z>>2]|0;T=0;while(1){T=T+1|0;if((T|0)==(q|0)){break}else{U=S;V=R;W=Q;X=N;Y=M;Z=L;_=K;aa=J;ba=I;S=H;R=U;Q=V;N=W;M=X;L=Y;K=Z;J=_;I=aa;H=ba}}c[z>>2]=H;c[B>>2]=I;c[u>>2]=J;c[w>>2]=K;c[A>>2]=L;c[y>>2]=M;c[r>>2]=N;c[C>>2]=Q;c[D>>2]=R;c[v>>2]=S}}if((vd[c[1164>>2]&63](c[l+16>>2]|0)|0)==2){q=c[n>>2]|0;a[q+4|0]=0;td[c[1136>>2]&31](c[q+16>>2]|0,0);b[d>>1]=151;c[m>>2]=q;Wd(q,d)|0;c[q+8>>2]=0;if((c[q+44>>2]|0)!=0){Be(q)}q=c[o>>2]|0;T=n+4|0;if((q|0)==0){c[296]=c[T>>2];ca=c[o>>2]|0}else{ca=q}q=c[T>>2]|0;if((q|0)==0){c[294]=ca;ba=c[o>>2]|0;if((ba|0)!=0){c[ba+4>>2]=0}}else{c[q+8>>2]=ca;q=c[o>>2]|0;if((q|0)!=0){c[q+4>>2]=c[T>>2]}}Xz(n)}if((p|0)==0){break}else{n=p}}i=e;return 1}function Ae(){var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;b=i;d=c[294]|0;Kg(c[292]|0);Lg(c[292]|0);if((d|0)==0){e=c[1068>>2]|0;xd[e&15]();i=b;return}else{f=d}while(1){d=f+8|0;g=c[d>>2]|0;a[(c[f>>2]|0)+4|0]=0;h=c[f>>2]|0;if((c[h+44>>2]|0)!=0){Be(h)}h=c[d>>2]|0;j=f+4|0;if((h|0)==0){c[296]=c[j>>2];k=c[d>>2]|0}else{k=h}h=c[j>>2]|0;if((h|0)==0){c[294]=k;l=c[d>>2]|0;if((l|0)!=0){c[l+4>>2]=0}}else{c[h+8>>2]=k;h=c[d>>2]|0;if((h|0)!=0){c[h+4>>2]=c[j>>2]}}Xz(f);if((g|0)==0){break}else{f=g}}e=c[1068>>2]|0;xd[e&15]();i=b;return}function Be(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;a:do{if((a[b+4|0]|0)!=0?(e=c[294]|0,(e|0)!=0):0){f=e;while(1){g=f+8|0;h=c[g>>2]|0;j=(h|0)==0;if((c[f>>2]|0)==(b|0)){break}if(j){break a}else{f=h}}e=f+4|0;if(j){c[296]=c[e>>2];k=c[g>>2]|0}else{k=h}l=c[e>>2]|0;if((l|0)==0){c[294]=k;m=c[g>>2]|0;if((m|0)!=0){c[m+4>>2]=0}}else{c[l+8>>2]=k;l=c[g>>2]|0;if((l|0)!=0){c[l+4>>2]=c[e>>2]}}Xz(f)}}while(0);Ud(b);rd[c[1100>>2]&127](c[b+16>>2]|0);Xz(b);i=d;return}function Ce(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0;d=i;e=Ie(a)|0;if((e|0)==0){f=0;i=d;return f|0}a=Wz(80)|0;c[a+8>>2]=b;h=a+56|0;td[c[e+16>>2]&31](e,h);g[a>>2]=+g[a+76>>2];if((b&1|0)!=0){j=a+72|0;k=c[j>>2]|0;l=Wz(k)|0;md[c[e>>2]&63](e,l,k)|0;k=md[c[1084>>2]&63](c[h>>2]|0,c[a+60>>2]|0,0)|0;c[a+12>>2]=k;md[c[1092>>2]&63](k,l,c[j>>2]|0)|0;c[a+4>>2]=1;Xz(l);Je(e);f=a;i=d;return f|0}if((b&2|0)==0){f=a;i=d;return f|0}c[a+52>>2]=e;c[a+4>>2]=(c[e+4>>2]|0)!=0;e=a+60|0;c[a+12>>2]=md[c[1084>>2]&63](c[h>>2]|0,c[e>>2]|0,1)|0;c[a+16>>2]=md[c[1084>>2]&63](c[h>>2]|0,c[e>>2]|0,1)|0;c[a+20>>2]=md[c[1084>>2]&63](c[h>>2]|0,c[e>>2]|0,1)|0;c[a+24>>2]=md[c[1084>>2]&63](c[h>>2]|0,c[e>>2]|0,1)|0;c[a+28>>2]=md[c[1084>>2]&63](c[h>>2]|0,c[e>>2]|0,1)|0;c[a+32>>2]=md[c[1084>>2]&63](c[h>>2]|0,c[e>>2]|0,1)|0;c[a+36>>2]=md[c[1084>>2]&63](c[h>>2]|0,c[e>>2]|0,1)|0;c[a+40>>2]=md[c[1084>>2]&63](c[h>>2]|0,c[e>>2]|0,1)|0;c[a+44>>2]=md[c[1084>>2]&63](c[h>>2]|0,c[e>>2]|0,1)|0;c[a+48>>2]=md[c[1084>>2]&63](c[h>>2]|0,c[e>>2]|0,1)|0;f=a;i=d;return f|0}function De(a){a=a|0;var b=0,d=0,e=0;b=i;d=(c[a+8>>2]&2|0)!=0?10:1;e=0;do{rd[c[1088>>2]&127](c[a+(e<<2)+12>>2]|0);e=e+1|0}while((e|0)<(d|0));Xz(a);i=b;return}function Ee(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+8192|0;f=e;g=(c[a+8>>2]|0)+52|0;h=c[g>>2]|0;j=(b|0)>0;if(j){k=0;l=h;while(1){m=c[d+(k<<2)>>2]|0;n=md[c[l>>2]&63](l,f,8192)|0;if((n|0)==0){o=k;break}md[c[1092>>2]&63](m,f,n)|0;m=k+1|0;if((n|0)<=0){o=k;break}if((m|0)>=(b|0)){o=m;break}k=m;l=c[g>>2]|0}if((o|0)!=0){p=o}else{q=8}}else{q=8}a:do{if((q|0)==8){if(((vd[c[h+8>>2]&63](h)|0)!=0?(c[a+40>>2]|0)!=0:0)?(md[c[h+4>>2]&63](h,0,0)|0,j):0){o=0;while(1){l=c[d+(o<<2)>>2]|0;k=c[g>>2]|0;m=md[c[k>>2]&63](k,f,8192)|0;if((m|0)==0){p=o;break a}md[c[1092>>2]&63](l,f,m)|0;l=o+1|0;if((m|0)<=0){p=o;break a}if((l|0)<(b|0)){o=l}else{p=l;break}}}else{p=0}}}while(0);md[c[1140>>2]&63](c[a+16>>2]|0,p,d)|0;i=e;return}function Fe(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;if((d|0)==0){f=Wz(48)|0;Td(f);c[f+16>>2]=qd[c[1096>>2]&7]()|0;a[f+4|0]=0;c[f+8>>2]=0;c[f+40>>2]=0;c[f+44>>2]=1;g=f}else{g=d}c[g+8>>2]=b;d=g+16|0;f=g+24|0;c[f>>2]=0;c[f+4>>2]=0;f=Hg()|0;h=g+32|0;c[h>>2]=f;c[h+4>>2]=E;if((c[b+8>>2]&2|0)==0){td[c[1120>>2]&31](c[d>>2]|0,c[g+40>>2]|0);td[c[1136>>2]&31](c[d>>2]|0,c[b+12>>2]|0)}else{h=c[b+52>>2]|0;md[c[h+4>>2]&63](h,0,0)|0;td[c[1120>>2]&31](c[d>>2]|0,0);Ee(g,10,b+12|0)}vd[c[1152>>2]&63](c[d>>2]|0)|0;a[g+4|0]=1;d=Wz(12)|0;c[d>>2]=g;b=c[296]|0;c[d+4>>2]=b;c[d+8>>2]=0;if((b|0)==0){c[294]=d;c[296]=d;i=e;return g|0}else{c[b+8>>2]=d;c[296]=d;i=e;return g|0}return 0}function Ge(){return}function He(){return}function Ie(a){a=a|0;var b=0,d=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;i=i+48|0;d=b;if((bA(a+((gA(a|0)|0)+ -3)|0,1192)|0)!=0){f=0;i=b;return f|0}h=Wz(56)|0;j=dh(a,1200)|0;c[h+24>>2]=j;do{if((j|0)!=0){Ug(j,d,44)|0;a=d+36|0;if((dA(a,1208,4)|0)!=0){k=d+40|0;do{Vg(j,c[k>>2]|0,1)|0;Ug(j,a,8)|0}while((dA(a,1208,4)|0)!=0)}c[h+28>>2]=Wg(j)|0;a=c[d+20>>2]|0;k=a>>>16;if(!((a&65535)<<16>>16==1)){Yg(j);break}a=h+32|0;c[h+36>>2]=c[d+24>>2];l=c[d+40>>2]|0;c[h+48>>2]=l;g[h+52>>2]=+(l>>>0)/+((c[d+28>>2]|0)>>>0);l=e[d+34>>1]|0;do{if((k|0)==1){if((l|0)==32){m=65535;break}else if((l|0)==8){m=4352;break}else if((l|0)==16){m=4353;break}else{n=14;break}}else if((k|0)==2){if((l|0)==16){m=4355;break}else if((l|0)==32){m=65535;break}else if((l|0)==8){m=4354;break}else{n=14;break}}else{n=14}}while(0);if((n|0)==14){m=65535}c[a>>2]=m;c[h+40>>2]=k;c[h+44>>2]=l;c[h>>2]=20;c[h+4>>2]=21;c[h+16>>2]=3;c[h+8>>2]=14;c[h+20>>2]=16;f=h;i=b;return f|0}}while(0);Xz(h);f=0;i=b;return f|0}function Je(a){a=a|0;var b=0;b=i;rd[c[a+20>>2]&127](a);i=b;return}function Ke(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;f=Ug(c[a+24>>2]|0,b,d)|0;i=e;return f|0}function Le(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;f=a+32|0;g=aa(aa((c[f+12>>2]|0)/8|0,b)|0,c[f+8>>2]|0)|0;if((d|0)==0){h=(c[a+28>>2]|0)+g|0}else{h=g}g=Vg(c[a+24>>2]|0,h,d)|0;i=e;return g|0}function Me(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;e=a+32|0;c[b+0>>2]=c[e+0>>2];c[b+4>>2]=c[e+4>>2];c[b+8>>2]=c[e+8>>2];c[b+12>>2]=c[e+12>>2];c[b+16>>2]=c[e+16>>2];c[b+20>>2]=c[e+20>>2];i=d;return}function Ne(a){a=a|0;var b=0,d=0;b=i;d=Xg(c[a+24>>2]|0)|0;i=b;return d|0}function Oe(a){a=a|0;var b=0;b=i;Yg(c[a+24>>2]|0);Xz(a);i=b;return}function Pe(a){a=a|0;g[a>>2]=-6.0e3;g[a+4>>2]=0.0;c[a+8>>2]=8;c[a+12>>2]=9;c[a+16>>2]=2;c[a+20>>2]=17;c[a+24>>2]=3;c[a+28>>2]=22;c[a+32>>2]=18;c[a+36>>2]=23;c[a+40>>2]=4;c[a+44>>2]=19;c[a+48>>2]=1;c[a+52>>2]=1;c[a+56>>2]=4;c[a+60>>2]=15;c[a+64>>2]=5;c[a+68>>2]=16;c[a+72>>2]=2;c[a+76>>2]=2;c[a+80>>2]=6;c[a+84>>2]=24;c[a+88>>2]=25;c[a+92>>2]=7;c[a+96>>2]=17;c[a+100>>2]=18;c[a+104>>2]=19;c[a+108>>2]=20;return}function Qe(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;d=i;e=Wz(12)|0;c[e+4>>2]=a;c[e+8>>2]=b;Ab(1,e|0);i=d;return e|0}function Re(a){a=a|0;var b=0;b=i;Sc(1,a|0);Xz(a);i=b;return}function Se(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;f=e;Ca(c[a>>2]|0,c[a+4>>2]|0,b|0,d|0,c[a+8>>2]|0);a=Kb()|0;if((a|0)==0){i=e;return a|0}c[f>>2]=1464;c[f+4>>2]=a;Eb(1240,f|0)|0;i=e;return a|0}function Te(a){a=a|0;var b=0;b=i;Ib(1,a|0);Xz(a);i=b;return}function Ue(a,b){a=a|0;b=+b;var d=0;d=i;xb(c[a>>2]|0,4099,+b);i=d;return}function Ve(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;tb(c[a>>2]|0,4099,d|0);i=b;return+(+g[d>>2])}function We(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0,g=0.0;d=i;i=i+16|0;e=d;f=+(b|0)/100.0;if(!(f<=-100.0)){g=+R(10.0,+(f/20.0))}else{g=0.0}xb(c[a>>2]|0,4106,+g);a=Kb()|0;if((a|0)==0){i=d;return}c[e>>2]=1416;c[e+4>>2]=a;Eb(1240,e|0)|0;i=d;return}function Xe(a){a=a|0;var b=0,d=0,e=0.0,f=0;b=i;i=i+16|0;d=b;tb(c[a>>2]|0,4106,d|0);e=+g[d>>2];if(e==0.0){f=-1e4;i=b;return f|0}f=~~(+Jc(+e)*20.0*100.0);i=b;return f|0}function Ye(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;e=d;zb(c[a>>2]|0,4103,(b|0)!=0|0);b=Kb()|0;if((b|0)==0){i=d;return}c[e>>2]=1392;c[e+4>>2]=b;Eb(1240,e|0)|0;i=d;return}function Ze(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;rb(c[a>>2]|0,4103,d|0);i=b;return c[d>>2]|0}function _e(a,b){a=a|0;b=+b;return}function $e(a){a=a|0;return 0.0}function af(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;if((b|0)==0){e=0}else{e=c[b>>2]|0}zb(c[a>>2]|0,4105,e|0);i=d;return}function bf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;f=e;g=c[a>>2]|0;if((b|0)>0){a=0;do{vb(g|0,1,c[d+(a<<2)>>2]|0);a=a+1|0}while((a|0)!=(b|0))}b=Kb()|0;if((b|0)==0){i=e;return b|0}c[f>>2]=1360;c[f+4>>2]=b;Eb(1240,f|0)|0;i=e;return b|0}function cf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;f=e;g=c[a>>2]|0;if((b|0)>0){a=0;do{jd(g|0,1,c[d+(a<<2)>>2]|0);a=a+1|0}while((a|0)!=(b|0))}b=Kb()|0;if((b|0)==0){i=e;return b|0}c[f>>2]=1328;c[f+4>>2]=b;Eb(1240,f|0)|0;i=e;return b|0}function df(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;gb(c[a>>2]|0);a=Kb()|0;if((a|0)==0){i=b;return a|0}c[d>>2]=1304;c[d+4>>2]=a;Eb(1240,d|0)|0;i=b;return a|0}function ef(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;ib(c[a>>2]|0);a=Kb()|0;if((a|0)==0){i=b;return a|0}c[d>>2]=1280;c[d+4>>2]=a;Eb(1240,d|0)|0;i=b;return a|0}function ff(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;vc(c[a>>2]|0);zb(c[a>>2]|0,4105,0);a=Kb()|0;if((a|0)==0){i=b;return a|0}c[d>>2]=1216;c[d+4>>2]=a;Eb(1240,d|0)|0;i=b;return a|0}function gf(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b;rb(c[a>>2]|0,4112,d|0);a=c[d>>2]|0;if((a|0)==4116){e=2}else if((a|0)==4115){e=1}else if((a|0)==4114){e=0}else{e=2}i=b;return e|0}function hf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=i;rb(c[a>>2]|0,4118,b|0);rb(c[a>>2]|0,4117,d|0);i=e;return}function jf(a){a=a|0;var b=0,c=0.0,d=0.0;b=i;c=+(a|0)/100.0;if(!(c<=-100.0)){d=+R(10.0,+(c/20.0))}else{d=0.0}pc(4106,+d);i=b;return}function kf(){var a=0,b=0,c=0.0,d=0;a=i;i=i+16|0;b=a;cb(4106,b|0);c=+g[b>>2];if(c==0.0){d=-1e4;i=a;return d|0}d=~~(+Jc(+c)*20.0*100.0);i=a;return d|0}function lf(){var a=0,b=0,d=0,e=0;a=i;i=i+16|0;b=a;d=Wz(4)|0;_c(1,d|0);zb(c[d>>2]|0,514,1);Ga(c[d>>2]|0,4100,0.0,0.0,0.0);e=Kb()|0;if((e|0)==0){i=a;return d|0}c[b>>2]=1440;c[b+4>>2]=e;Eb(1240,b|0)|0;i=a;return d|0}function mf(){var a=0,b=0,d=0;a=i;i=i+16|0;b=a;d=Kb()|0;if((d|0)==0){i=a;return d|0}c[b>>2]=1488;c[b+4>>2]=d;Eb(1240,b|0)|0;i=a;return d|0}function nf(){var a=0,b=0;a=i;b=c[374]|0;if((b|0)!=0){lc(b|0)}b=c[376]|0;if((b|0)==0){i=a;return}xc(b|0)|0;i=a;return}function of(){var a=0,b=0,d=0,e=0,f=0;a=i;i=i+16|0;b=a;d=a+12|0;e=a+8|0;dc(0,4096,1,d|0);dc(0,4096,1,e|0);f=c[e>>2]|0;c[b>>2]=c[d>>2];c[b+4>>2]=f;Eb(1512,b|0)|0;f=zc(0)|0;c[376]=f;if((f|0)==0){c[374]=0;Va(1592)|0;i=a;return}d=nb(f|0,0)|0;c[374]=d;if((d|0)==0){xc(c[376]|0)|0;c[376]=0;Eb(1544,b|0)|0;i=a;return}else{sb(d|0)|0;i=a;return}}function pf(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;i=i+16|0;d=b;e=c[410]|0;if((e|0)==0){c[410]=1664;Va(1960)|0;f=c[410]|0}else{f=e}e=c[f>>2]|0;c[d+0>>2]=c[a+0>>2];c[d+4>>2]=c[a+4>>2];rd[e&127](d);i=b;return}function qf(){var a=0,b=0;a=i;b=c[410]|0;if((b|0)==0){i=a;return}xd[c[b+4>>2]&15]();i=a;return}function rf(a){a=a|0;var b=0,d=0,e=0;b=i;Tb(1,1648);Rb(36160,c[412]|0);Hc(2,1656);qb(36161,c[414]|0);d=~~+g[a>>2];e=~~+g[a+4>>2];Nc(36161,6408,d|0,e|0);ab(36160,36064,36161,c[414]|0);qb(36161,c[1660>>2]|0);Nc(36161,33189,d|0,e|0);ab(36160,36096,36161,c[1660>>2]|0);e=$b(36160)|0;if((e|0)==36053){Rb(36160,0);i=b;return}else if((e|0)==36055){Va(1792)|0}else if((e|0)==36061){Va(1680)|0}else if((e|0)==36054){Va(1880)|0}Rb(36160,0);Fc(2,1656);Xb(1,1648);c[412]=0;Va(1752)|0;Rb(36160,0);i=b;return}function sf(){var a=0;a=i;if((c[412]|0)==0){i=a;return}Fc(2,1656);Xb(1,1648);i=a;return}function tf(){var a=0,b=0;a=i;b=c[412]|0;if((b|0)!=0){Rb(36160,b|0)}i=a;return}function uf(){var a=0;a=i;Rb(36160,0);i=a;return}function vf(a,b,c){a=a|0;b=+b;c=+c;g[a>>2]=b;g[a+4>>2]=c;return}function wf(a,b,c){a=a|0;b=+b;c=+c;g[a>>2]=b;g[a+4>>2]=c;return}function xf(a){a=a|0;var b=0,d=0,e=0;b=i;d=a+0|0;a=1984|0;e=d+36|0;do{c[d>>2]=c[a>>2];d=d+4|0;a=a+4|0}while((d|0)<(e|0));i=b;return}function yf(a,b,c){a=a|0;b=+b;c=+c;g[a>>2]=1.0;g[a+4>>2]=0.0;g[a+8>>2]=0.0;g[a+12>>2]=0.0;g[a+16>>2]=1.0;g[a+20>>2]=0.0;g[a+24>>2]=b;g[a+28>>2]=c;g[a+32>>2]=1.0;return}function zf(a,b){a=a|0;b=+b;var c=0.0,d=0.0;c=+T(+b);d=+S(+b);g[a>>2]=d;g[a+4>>2]=-c;g[a+8>>2]=0.0;g[a+12>>2]=c;g[a+16>>2]=d;g[a+20>>2]=0.0;g[a+24>>2]=0.0;g[a+28>>2]=0.0;g[a+32>>2]=1.0;return}function Af(a,b){a=a|0;b=b|0;var c=0;c=i;Bf(a,b);i=c;return}function Bf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0.0,l=0.0,m=0.0,n=0,o=0,p=0,q=0,r=0;d=i;i=i+48|0;e=d;f=e+0|0;h=a+0|0;j=f+36|0;do{c[f>>2]=c[h>>2];f=f+4|0;h=h+4|0}while((f|0)<(j|0));k=+g[e>>2];l=+g[e+4>>2];m=+g[e+8>>2];h=b+12|0;f=b+24|0;g[a>>2]=+g[b>>2]*k+ +g[h>>2]*l+ +g[f>>2]*m;j=b+4|0;n=b+16|0;o=b+28|0;g[a+4>>2]=+g[j>>2]*k+ +g[n>>2]*l+ +g[o>>2]*m;p=b+8|0;q=b+20|0;r=b+32|0;g[a+8>>2]=+g[p>>2]*k+ +g[q>>2]*l+ +g[r>>2]*m;m=+g[e+12>>2];l=+g[e+16>>2];k=+g[e+20>>2];g[a+12>>2]=+g[b>>2]*m+ +g[h>>2]*l+ +g[f>>2]*k;g[a+16>>2]=+g[j>>2]*m+ +g[n>>2]*l+ +g[o>>2]*k;g[a+20>>2]=+g[p>>2]*m+ +g[q>>2]*l+ +g[r>>2]*k;k=+g[e+24>>2];l=+g[e+28>>2];m=+g[e+32>>2];g[a+24>>2]=+g[b>>2]*k+ +g[h>>2]*l+ +g[f>>2]*m;g[a+28>>2]=+g[j>>2]*k+ +g[n>>2]*l+ +g[o>>2]*m;g[a+32>>2]=+g[p>>2]*k+ +g[q>>2]*l+ +g[r>>2]*m;i=d;return}function Cf(a){a=a|0;var b=0,d=0,e=0.0,f=0.0,h=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0,x=0,y=0;b=i;i=i+48|0;d=b;e=+g[a>>2];f=+g[a+16>>2];h=e*f;j=+g[a+32>>2];k=+g[a+12>>2];l=+g[a+28>>2];m=k*l;n=+g[a+8>>2];o=+g[a+24>>2];p=+g[a+4>>2];q=o*p;r=+g[a+20>>2];s=f*o;t=k*p;u=e*l;v=h*j+m*n+q*r-n*s-j*t-u*r;if(v==0.0){w=a+0|0;x=1984|0;y=w+36|0;do{c[w>>2]=c[x>>2];w=w+4|0;x=x+4|0}while((w|0)<(y|0));i=b;return}else{g[d>>2]=(f*j-l*r)/v;g[d+4>>2]=-(p*j-l*n)/v;g[d+8>>2]=(p*r-f*n)/v;g[d+12>>2]=-(k*j-o*r)/v;g[d+16>>2]=(e*j-o*n)/v;g[d+20>>2]=-(e*r-k*n)/v;g[d+24>>2]=(m-s)/v;g[d+28>>2]=-(u-q)/v;g[d+32>>2]=(h-t)/v;w=a+0|0;x=d+0|0;y=w+36|0;do{c[w>>2]=c[x>>2];w=w+4|0;x=x+4|0}while((w|0)<(y|0));i=b;return}}function Df(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0;d=+g[b>>2];e=+g[b+4>>2];f=+g[c+28>>2]+(d*+g[c+4>>2]+e*+g[c+16>>2]);g[a>>2]=+g[c+24>>2]+(d*+g[c>>2]+e*+g[c+12>>2]);g[a+4>>2]=f;return}function Ef(){var a=0,b=0,d=0,e=0,f=0;a=i;b=c[512]|0;d=c[b+16>>2]|0;if((d|0)==0){i=a;return}else{e=d;f=b}do{c[512]=e;Xz(f);f=c[512]|0;e=c[f+16>>2]|0}while((e|0)!=0);i=a;return}function Ff(a,b,d,e){a=+a;b=+b;d=+d;e=+e;var f=0,h=0,j=0,k=0.0;f=i;h=Wz(20)|0;j=c[512]|0;k=+g[j+4>>2]*b;b=+g[j+8>>2]*d;d=+g[j+12>>2]*e;g[h>>2]=+g[j>>2]*a;g[h+4>>2]=k;g[h+8>>2]=b;g[h+12>>2]=d;c[h+16>>2]=j;c[512]=h;i=f;return}function Gf(a,b,c,d,e){a=a|0;b=+b;c=+c;d=+d;e=+e;g[a>>2]=b;g[a+4>>2]=c;g[a+8>>2]=d;g[a+12>>2]=e;return}function Hf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;e=c[512]|0;g[b>>2]=+g[e>>2]*+g[b>>2];f=b+4|0;g[f>>2]=+g[e+4>>2]*+g[f>>2];f=b+8|0;g[f>>2]=+g[e+8>>2]*+g[f>>2];f=b+12|0;g[f>>2]=+g[e+12>>2]*+g[f>>2];c[a+0>>2]=c[b+0>>2];c[a+4>>2]=c[b+4>>2];c[a+8>>2]=c[b+8>>2];c[a+12>>2]=c[b+12>>2];i=d;return}function If(){var a=0,b=0,d=0;a=i;b=c[512]|0;d=c[b+16>>2]|0;if((d|0)==0){i=a;return}c[512]=d;Xz(b);i=a;return}function Jf(){var a=0,b=0,d=0,e=0,f=0;a=i;b=c[524]|0;d=c[b+36>>2]|0;if((d|0)==0){Wa();i=a;return}else{e=d;f=b}do{c[524]=e;Xz(f);f=c[524]|0;e=c[f+36>>2]|0}while((e|0)!=0);Wa();i=a;return}function Kf(a){a=a|0;var b=0,d=0,e=0,f=0,h=0;b=i;i=i+64|0;d=b;e=Wz(40)|0;f=e+0|0;h=a+0|0;a=f+36|0;do{c[f>>2]=c[h>>2];f=f+4|0;h=h+4|0}while((f|0)<(a|0));Bf(e,c[524]|0);c[e+36>>2]=c[524];c[524]=e;g[d>>2]=+g[e>>2];g[d+4>>2]=+g[e+4>>2];g[d+8>>2]=0.0;g[d+12>>2]=+g[e+8>>2];g[d+16>>2]=+g[e+12>>2];g[d+20>>2]=+g[e+16>>2];g[d+24>>2]=0.0;g[d+28>>2]=+g[e+20>>2];g[d+32>>2]=0.0;g[d+36>>2]=0.0;g[d+40>>2]=1.0;g[d+44>>2]=0.0;g[d+48>>2]=+g[e+24>>2];g[d+52>>2]=+g[e+28>>2];g[d+56>>2]=0.0;g[d+60>>2]=+g[e+32>>2];Ra(d|0);i=b;return}function Lf(){var a=0,b=0,d=0,e=0,f=0;a=i;i=i+64|0;b=a;d=c[524]|0;e=c[d+36>>2]|0;if((e|0)==0){f=d}else{c[524]=e;Xz(d);f=c[524]|0}g[b>>2]=+g[f>>2];g[b+4>>2]=+g[f+4>>2];g[b+8>>2]=0.0;g[b+12>>2]=+g[f+8>>2];g[b+16>>2]=+g[f+12>>2];g[b+20>>2]=+g[f+16>>2];g[b+24>>2]=0.0;g[b+28>>2]=+g[f+20>>2];g[b+32>>2]=0.0;g[b+36>>2]=0.0;g[b+40>>2]=1.0;g[b+44>>2]=0.0;g[b+48>>2]=+g[f+24>>2];g[b+52>>2]=+g[f+28>>2];g[b+56>>2]=0.0;g[b+60>>2]=+g[f+32>>2];Ra(b|0);i=a;return}function Mf(a,b,c,d){a=+a;b=+b;c=+c;d=+d;g[526]=a;g[2108>>2]=b;g[2112>>2]=c;g[2116>>2]=d;return}function Nf(a,b,c,d){a=+a;b=+b;c=+c;d=+d;g[530]=a;g[2124>>2]=b;g[2128>>2]=c;g[2132>>2]=d;return}function Of(a){a=+a;g[534]=a;return}function Pf(a,b,d,e){a=+a;b=+b;d=+d;e=+e;var f=0,h=0,j=0.0,k=0;f=i;i=i+32|0;h=f;g[h>>2]=a;g[h+4>>2]=b;j=a+d;g[h+8>>2]=j;g[h+12>>2]=b;g[h+16>>2]=j;j=b+e;g[h+20>>2]=j;g[h+24>>2]=a;g[h+28>>2]=j;k=c[512]|0;j=+g[526]*+g[k>>2];a=+g[2108>>2]*+g[k+4>>2];e=+g[2112>>2]*+g[k+8>>2];b=+g[2116>>2]*+g[k+12>>2];bc(32884);db(2,5126,0,h|0);Yb(+j,+a,+e,+b);mc(6,0,4);if(!(+g[534]>0.0)){Dc(32884);i=f;return}h=c[512]|0;Yb(+(+g[530]*+g[h>>2]),+(+g[2124>>2]*+g[h+4>>2]),+(+g[2128>>2]*+g[h+8>>2]),+(+g[2132>>2]*+g[h+12>>2]));Aa(+(+g[534]));mc(2,0,4);Dc(32884);i=f;return}function Qf(a,b,d){a=+a;b=+b;d=+d;var e=0,f=0,h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0,o=0;e=i;i=i+496|0;f=e;h=c[512]|0;j=+g[526]*+g[h>>2];k=+g[2108>>2]*+g[h+4>>2];l=+g[2112>>2]*+g[h+8>>2];m=+g[2116>>2]*+g[h+12>>2];g[f>>2]=a;g[f+4>>2]=b;h=f;n=f+8|0;o=2144;while(1){g[n>>2]=+g[o>>2]*d+a;g[n+4>>2]=+g[o+4>>2]*d+b;n=n+8|0;if((n-h|0)>=496){break}else{o=o+8|0}}bc(32884);db(2,5126,0,f|0);Yb(+j,+k,+l,+m);mc(6,0,62);if(!(+g[534]>0.0)){Dc(32884);i=e;return}f=c[512]|0;Yb(+(+g[530]*+g[f>>2]),+(+g[2124>>2]*+g[f+4>>2]),+(+g[2128>>2]*+g[f+8>>2]),+(+g[2132>>2]*+g[f+12>>2]));Aa(+(+g[534]));mc(2,1,61);Dc(32884);i=e;return}function Rf(){return}function Sf(){return}function Tf(a){a=a|0;var d=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;f=d;g=Xf(a)|0;if((g|0)==0){h=0;i=d;return h|0}a=Wz(8)|0;j=a+4|0;b[j>>1]=c[g>>2];k=a+6|0;b[k>>1]=c[g+4>>2];Fb(1,a|0);Db(3553);Hb(32873,f|0);hc(3553,c[a>>2]|0);Rc(3317,1);l=c[g+8>>2]|0;if((l|0)==0){Bc(3553,0,6408,e[j>>1]|0|0,e[k>>1]|0|0,0,6408,5121,c[g+12>>2]|0)}else if((l|0)==1){Bc(3553,0,6407,e[j>>1]|0|0,e[k>>1]|0|0,0,6407,5121,c[g+12>>2]|0)}hd(3553,10240,9729.0);hd(3553,10241,9729.0);hd(3553,10242,33071.0);hd(3553,10243,33071.0);hc(3553,c[f>>2]|0);bd(3553);h=a;i=d;return h|0}function Uf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0;e=i;i=i+48|0;f=e+32|0;h=e;j=e+16|0;Gf(j,1.0,1.0,1.0,1.0);c[f+0>>2]=c[j+0>>2];c[f+4>>2]=c[j+4>>2];c[f+8>>2]=c[j+8>>2];c[f+12>>2]=c[j+12>>2];Hf(h,f);Yb(+(+g[h>>2]),+(+g[h+4>>2]),+(+g[h+8>>2]),+(+g[h+12>>2]));Db(3553);hc(3553,c[a>>2]|0);bc(32884);bc(32888);db(2,5126,0,b|0);uc(2,5126,0,d|0);mc(6,0,4);Dc(32884);Dc(32888);bd(3553);i=e;return}function Vf(a,b,d){a=a|0;b=+b;d=+d;var f=0,h=0,j=0,k=0.0;f=i;i=i+64|0;h=f+32|0;j=f;g[h>>2]=0.0;g[h+4>>2]=0.0;k=+(e[a+4>>1]|0);g[h+8>>2]=k;g[h+12>>2]=0.0;g[h+16>>2]=k;k=+(e[a+6>>1]|0);g[h+20>>2]=k;g[h+24>>2]=0.0;g[h+28>>2]=k;c[j+0>>2]=c[2632>>2];c[j+4>>2]=c[2636>>2];c[j+8>>2]=c[2640>>2];c[j+12>>2]=c[2644>>2];c[j+16>>2]=c[2648>>2];c[j+20>>2]=c[2652>>2];c[j+24>>2]=c[2656>>2];c[j+28>>2]=c[2660>>2];Jb();Ja(+b,+d,0.0);Uf(a,h,j);Mc();i=f;return}function Wf(a){a=a|0;var b=0;b=i;yb(1,a|0);Xz(a);i=b;return}function Xf(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;b=i;c=dh(a,2664)|0;if((c|0)==0){d=0;i=b;return d|0}Vg(c,0,2)|0;a=Wg(c)|0;Vg(c,0,0)|0;e=Wz(a)|0;Ug(c,e,a)|0;f=Yf(e,a)|0;Xz(e);Yg(c);d=f;i=b;return d|0}function Yf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+624|0;e=d;f=d+488|0;g=bg(a,b)|0;if((g|0)==3){h=Zf(a,b)|0;i=d;return h|0}else if((g|0)==2){c[e>>2]=aj(f)|0;ih(e,90,488);Ah(e,a,b);jh(e,1)|0;b=c[e+28>>2]|0;a=c[e+32>>2]|0;f=Wz((aa(b*3|0,a)|0)+16|0)|0;c[f>>2]=b;c[f+4>>2]=a;c[f+8>>2]=1;a=f+16|0;c[f+12>>2]=a;c[e+44>>2]=2;lh(e)|0;b=aa(c[e+112>>2]|0,c[e+120>>2]|0)|0;g=yd[c[(c[e+4>>2]|0)+8>>2]&31](e,1,b,1)|0;j=e+140|0;k=e+116|0;if((c[j>>2]|0)>>>0<(c[k>>2]|0)>>>0){l=a;while(1){nh(e,g,1)|0;lA(l|0,c[g>>2]|0,b|0)|0;if((c[j>>2]|0)>>>0<(c[k>>2]|0)>>>0){l=l+b|0}else{break}}}fh(e);h=f;i=d;return h|0}else{h=0;i=d;return h|0}return 0}function Zf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;d=i;i=i+32|0;e=i;i=i+168|0;c[e>>2]=0;f=d+16|0;g=d;h=d+8|0;c[h>>2]=a;c[h+4>>2]=b;p=0;b=ta(13,2672,0,7,8)|0;a=p;p=0;if((a|0)!=0&(q|0)!=0){j=kA(c[a>>2]|0,e)|0;if((j|0)==0){Ea(a|0,q|0)}E=q}else{j=-1}do{if((j|0)!=1){c[f>>2]=b;if((b|0)==0){p=0;qa(21,2720)|0;a=p;p=0;if((a|0)!=0&(q|0)!=0){k=kA(c[a>>2]|0,e)|0;if((k|0)==0){Ea(a|0,q|0)}E=q}else{k=-1}if((k|0)==1){l=E;break}m=0;i=d;return m|0}p=0;a=qa(22,b|0)|0;n=p;p=0;if((n|0)!=0&(q|0)!=0){o=kA(c[n>>2]|0,e)|0;if((o|0)==0){Ea(n|0,q|0)}E=q}else{o=-1}if((o|0)!=1){c[g>>2]=a;if((a|0)!=0){p=0;a=ha(26,b|0,9,156)|0;n=p;p=0;if((n|0)!=0&(q|0)!=0){r=kA(c[n>>2]|0,e)|0;if((r|0)==0){Ea(n|0,q|0)}E=q}else{r=-1}if((r|0)==1){l=E;break}jA(a,1,e|0)|0;p=0;a=p;p=0;if((a|0)!=0&(q|0)!=0){s=kA(c[a>>2]|0,e)|0;if((s|0)==0){Ea(a|0,q|0)}E=q}else{s=-1}if((s|0)==1){l=E;break}l=0;break}p=0;qa(21,2752)|0;a=p;p=0;if((a|0)!=0&(q|0)!=0){t=kA(c[a>>2]|0,e)|0;if((t|0)==0){Ea(a|0,q|0)}E=q}else{t=-1}if((t|0)!=1){p=0;ra(8,f|0,0,0);a=p;p=0;if((a|0)!=0&(q|0)!=0){u=kA(c[a>>2]|0,e)|0;if((u|0)==0){Ea(a|0,q|0)}E=q}else{u=-1}if((u|0)!=1){m=0;i=d;return m|0}else{l=E}}else{l=E}}else{l=E}}else{l=E}}while(0);a:while(1){if((l|0)!=0){p=0;qa(21,2784)|0;u=p;p=0;if((u|0)!=0&(q|0)!=0){v=kA(c[u>>2]|0,e)|0;if((v|0)==0){Ea(u|0,q|0)}E=q}else{v=-1}if((v|0)==1){l=E;continue}p=0;ra(8,f|0,g|0,0);u=p;p=0;if((u|0)!=0&(q|0)!=0){w=kA(c[u>>2]|0,e)|0;if((w|0)==0){Ea(u|0,q|0)}E=q}else{w=-1}if((w|0)==1){l=E;continue}else{x=16;break}}p=0;ra(9,c[f>>2]|0,h|0,10);u=p;p=0;if((u|0)!=0&(q|0)!=0){y=kA(c[u>>2]|0,e)|0;if((y|0)==0){Ea(u|0,q|0)}E=q}else{y=-1}if((y|0)==1){l=E;continue}p=0;oa(10,c[f>>2]|0,c[g>>2]|0);u=p;p=0;if((u|0)!=0&(q|0)!=0){z=kA(c[u>>2]|0,e)|0;if((z|0)==0){Ea(u|0,q|0)}E=q}else{z=-1}if((z|0)==1){l=E;continue}p=0;u=va(80,c[f>>2]|0,c[g>>2]|0)|0;t=p;p=0;if((t|0)!=0&(q|0)!=0){A=kA(c[t>>2]|0,e)|0;if((A|0)==0){Ea(t|0,q|0)}E=q}else{A=-1}if((A|0)==1){l=E;continue}p=0;t=va(81,c[f>>2]|0,c[g>>2]|0)|0;s=p;p=0;if((s|0)!=0&(q|0)!=0){B=kA(c[s>>2]|0,e)|0;if((B|0)==0){Ea(s|0,q|0)}E=q}else{B=-1}if((B|0)==1){l=E;continue}p=0;s=va(82,c[f>>2]|0,c[g>>2]|0)|0;r=p;p=0;if((r|0)!=0&(q|0)!=0){C=kA(c[r>>2]|0,e)|0;if((C|0)==0){Ea(r|0,q|0)}E=q}else{C=-1}if((C|0)==1){l=E;continue}p=0;r=va(83,c[f>>2]|0,c[g>>2]|0)|0;b=p;p=0;if((b|0)!=0&(q|0)!=0){D=kA(c[b>>2]|0,e)|0;if((D|0)==0){Ea(b|0,q|0)}E=q}else{D=-1}if((D|0)==1){l=E;continue}if(!(r<<24>>24==3)){b=s&255;if(r<<24>>24==0){p=0;ma(21,c[f>>2]|0);r=p;p=0;if((r|0)!=0&(q|0)!=0){F=kA(c[r>>2]|0,e)|0;if((F|0)==0){Ea(r|0,q|0)}E=q}else{F=-1}if((F|0)==1){l=E;continue}G=3}else{G=b}}else{p=0;ma(20,c[f>>2]|0);b=p;p=0;if((b|0)!=0&(q|0)!=0){H=kA(c[b>>2]|0,e)|0;if((H|0)==0){Ea(b|0,q|0)}E=q}else{H=-1}if((H|0)==1){l=E;continue}G=3}p=0;b=ha(27,c[f>>2]|0,c[g>>2]|0,16)|0;r=p;p=0;if((r|0)!=0&(q|0)!=0){I=kA(c[r>>2]|0,e)|0;if((I|0)==0){Ea(r|0,q|0)}E=q}else{I=-1}if((I|0)==1){l=E;continue}if((b|0)==0){J=G}else{p=0;ma(22,c[f>>2]|0);b=p;p=0;if((b|0)!=0&(q|0)!=0){K=kA(c[b>>2]|0,e)|0;if((K|0)==0){Ea(b|0,q|0)}E=q}else{K=-1}if((K|0)==1){l=E;continue}J=G+1|0}p=0;b=va(84,c[f>>2]|0,c[g>>2]|0)|0;r=p;p=0;if((r|0)!=0&(q|0)!=0){L=kA(c[r>>2]|0,e)|0;if((L|0)==0){Ea(r|0,q|0)}E=q}else{L=-1}if((L|0)==1){l=E;continue}if(b<<24>>24==16){p=0;ma(23,c[f>>2]|0);b=p;p=0;if((b|0)!=0&(q|0)!=0){M=kA(c[b>>2]|0,e)|0;if((M|0)==0){Ea(b|0,q|0)}E=q}else{M=-1}if((M|0)==1){l=E;continue}}b=(J|0)==3;r=b&1;s=(aa(aa(t,u)|0,b?3:4)|0)+16|0;p=0;N=qa(23,s|0)|0;s=p;p=0;if((s|0)!=0&(q|0)!=0){O=kA(c[s>>2]|0,e)|0;if((O|0)==0){Ea(s|0,q|0)}E=q}else{O=-1}if((O|0)==1){l=E;continue}c[N>>2]=u;c[N+4>>2]=t;c[N+8>>2]=r;r=N+16|0;c[N+12>>2]=r;s=aa(J,u)|0;if((t|0)!=0){u=t;t=r;while(1){p=0;ra(11,c[f>>2]|0,t|0,0);r=p;p=0;if((r|0)!=0&(q|0)!=0){P=kA(c[r>>2]|0,e)|0;if((P|0)==0){Ea(r|0,q|0)}E=q}else{P=-1}if((P|0)==1){l=E;continue a}u=u+ -1|0;if((u|0)==0){break}else{t=t+s|0}}}p=0;ra(8,f|0,g|0,0);s=p;p=0;if((s|0)!=0&(q|0)!=0){Q=kA(c[s>>2]|0,e)|0;if((Q|0)==0){Ea(s|0,q|0)}E=q}else{Q=-1}if((Q|0)==1){l=E}else{x=42;break}}if((x|0)==16){m=0;i=d;return m|0}else if((x|0)==42){m=N;i=d;return m|0}return 0}function _f(a,b){a=a|0;b=b|0;var d=0;a=i;i=i+16|0;d=a;c[d>>2]=b;Eb(2704,d|0)|0;i=a;return}function $f(a,b){a=a|0;b=b|0;var d=0;a=i;i=i+16|0;d=a;c[d>>2]=b;Eb(2680,d|0)|0;i=a;return}function ag(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;f=Sk(a)|0;a=f+4|0;g=c[a>>2]|0;h=g>>>0<d>>>0?g:d;lA(b|0,c[f>>2]|0,h|0)|0;c[f>>2]=(c[f>>2]|0)+h;c[a>>2]=(c[a>>2]|0)-h;i=e;return}function bg(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;if(c>>>0<2){e=0;i=d;return e|0}f=a[b]|0;do{if(f<<24>>24==66){if((a[b+1|0]|0)==77){e=1;i=d;return e|0}else{g=c>>>0>10?10:c;break}}else{h=c>>>0>10?10:c;if(f<<24>>24==-1?(a[b+1|0]|0)==-40:0){if(!(h>>>0>6)){e=2;i=d;return e|0}j=b+6|0;k=h+ -6|0;if((aA(j,2800,k)|0)==0){e=2;i=d;return e|0}if((aA(j,2808,k)|0)==0){e=2;i=d;return e|0}else{g=h}}else{g=h}}}while(0);e=(aA(b,2816,g>>>0>8?8:g)|0)==0;i=d;return(e?3:0)|0}function cg(){var a=0;a=i;ue();i=a;return 0}function dg(a){a=a|0;c[a>>2]=24;c[a+4>>2]=11;c[a+8>>2]=10;c[a+12>>2]=11;c[a+16>>2]=12;c[a+20>>2]=24;c[a+24>>2]=25;c[a+28>>2]=25;c[a+32>>2]=26;c[a+36>>2]=26;c[a+40>>2]=13;c[a+44>>2]=27;c[a+48>>2]=28;c[a+52>>2]=28;c[a+56>>2]=12;c[a+60>>2]=13;return}function eg(a){a=a|0;var b=0,c=0;b=i;do{if((Ya()|0)==1){if((pb(800,600,8,8,8,8,16,0,65537)|0)==1){g[128]=800.0;g[516>>2]=600.0;xd[a&15]();c=1;break}else{Va(2840)|0;c=0;break}}else{Va(2864)|0;c=0}}while(0);i=b;return c|0}function fg(a,b){a=a|0;b=b|0;var d=0;d=i;c[708]=b;Yc(a|0,0,1);i=d;return}function gg(b,c){b=b|0;c=c|0;c=i;Va(2888)|0;a[b]=0;i=c;return}function hg(a){a=a|0;a=i;Va(2904)|0;i=a;return}function ig(a){a=a|0;a=i;Va(2920)|0;i=a;return}function jg(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;i=i+16|0;d=b;Va(2936)|0;if((a|0)==0){i=b;return 1}wf(d,100.0,100.0);e=d;d=c[e+4>>2]|0;f=a;c[f>>2]=c[e>>2];c[f+4>>2]=d;i=b;return 1}function kg(a){a=a|0;var b=0,c=0;b=i;if((a|0)==0){Va(3016)|0;c=0}else{Va(3032)|0;c=1}i=b;return c|0}function lg(a){a=a|0;a=i;Va(2960)|0;i=a;return}function mg(a,b){a=a|0;b=b|0;b=i;Va(2976)|0;i=b;return}function ng(a){a=a|0;a=i;Va(2992)|0;i=a;return}function og(a){a=a|0;return}function pg(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function qg(){var a=0;a=i;Pc();i=a;return}function rg(){var a=0,b=0,d=0;a=i;i=i+16|0;b=a+4|0;d=a;Zb();Sa(b|0,d|0);ne(~~+(c[b>>2]|0),~~+(c[d>>2]|0));if((qc(0)|0)!=1){i=a;return}oe(~~+(c[b>>2]|0),~~+(c[d>>2]|0),0);i=a;return}function sg(){var a=0;a=i;cd();xd[c[708]&15]();i=a;return}function tg(){var a=0;a=i;Pc();i=a;return}function ug(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;e=i;f=a[b]|0;a:do{if(f<<24>>24==0){g=b;h=0}else{j=0;k=f;l=b;m=0;while(1){n=k<<24>>24;if((n&192|0)==128){o=j;p=n&127|m<<6}else{if((n&128|0)==0){q=n;r=0}else{s=n;n=0;while(1){t=n+1|0;u=s<<25>>24;if((u&128|0)==0){q=u;r=t;break}else{s=u;n=t}}}o=r;p=q>>r}n=l+1|0;s=a[n]|0;if(s<<24>>24==0){g=n;h=p;break a}t=o+ -1|0;if((t|0)>0){j=t;k=s;l=n;m=p}else{g=n;h=p;break}}}}while(0);c[d>>2]=h;i=e;return g|0}function vg(){var a=0,d=0,e=0,f=0,h=0,j=0;a=i;i=i+64|0;d=a+16|0;e=a;f=Wz(164)|0;Td(f);h=f+4|0;j=f+20|0;c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;xf(d);h=j+0|0;j=d+0|0;d=h+36|0;do{c[h>>2]=c[j>>2];h=h+4|0;j=j+4|0}while((h|0)<(d|0));g[f+56>>2]=0.0;g[f+60>>2]=0.0;j=f+64|0;Gf(e,1.0,1.0,1.0,1.0);c[j+0>>2]=c[e+0>>2];c[j+4>>2]=c[e+4>>2];c[j+8>>2]=c[e+8>>2];c[j+12>>2]=c[e+12>>2];e=f+100|0;j=f+92|0;c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;c[e+16>>2]=0;c[e+20>>2]=0;c[e+24>>2]=0;c[e+28>>2]=0;b[e+32>>1]=0;c[j>>2]=1;c[f+88>>2]=1;c[f+84>>2]=1;c[f+80>>2]=1;c[f+96>>2]=1;j=f+136|0;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;c[j+16>>2]=0;c[j+20>>2]=0;c[j+24>>2]=0;i=a;return f|0}function wg(a){a=a|0;var d=0,e=0,f=0,g=0;d=i;i=i+32|0;e=d+12|0;f=d;if((c[a+152>>2]|0)!=0){c[a+156>>2]=1;i=d;return}if((c[a+128>>2]|0)!=0){xg(a)}if((((((c[774]|0)==(a|0)?(a|0)!=0:0)?(c[778]=0,c[774]=0,b[e>>1]=105,c[e+8>>2]=a,c[e+4>>2]=a,Wd(a,e)|0,e=c[778]|0,(c[774]|0)!=(e|0)):0)?(c[e+88>>2]|0)!=0:0)?(c[e+96>>2]|0)!=0:0)?(c[774]=e,(e|0)!=0):0){b[f>>1]=104;c[f+8>>2]=e;c[f+4>>2]=e;Wd(e,f)|0}Ud(a);f=c[a+136>>2]|0;if((f|0)!=0){e=a+148|0;g=f;do{f=g+144|0;c[e>>2]=c[f>>2];c[g+128>>2]=0;c[f>>2]=0;g=c[e>>2]|0}while((g|0)!=0)}if((c[772]|0)==(a|0)){c[772]=0}Xz(a);i=d;return}function xg(a){a=a|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;d=i;i=i+48|0;e=d+24|0;f=d;g=d+12|0;h=a+128|0;j=c[h>>2]|0;if((j|0)==0){i=d;return}k=j+136|0;l=k;m=0;while(1){n=c[l>>2]|0;o=(n|0)!=0;l=n+144|0;if(!(o&(n|0)!=(a|0))){break}else{m=n}}if(o){o=j+140|0;if((n|0)==(c[o>>2]|0)){c[o>>2]=m}o=c[l>>2]|0;if((m|0)==0){c[k>>2]=o}else{c[m+144>>2]=o}o=j+148|0;if((n|0)==(c[o>>2]|0)){c[o>>2]=c[l>>2]}l=j+132|0;b[l>>1]=(b[l>>1]|0)+ -1<<16>>16}c[h>>2]=0;c[a+144>>2]=0;if((((((c[774]|0)==(a|0)?(a|0)!=0:0)?(c[778]=0,c[774]=0,b[e>>1]=105,c[e+8>>2]=a,c[e+4>>2]=a,Wd(a,e)|0,e=c[778]|0,(c[774]|0)!=(e|0)):0)?(c[e+88>>2]|0)!=0:0)?(c[e+96>>2]|0)!=0:0)?(c[774]=e,(e|0)!=0):0){b[f>>1]=104;c[f+8>>2]=e;c[f+4>>2]=e;Wd(e,f)|0}b[g>>1]=102;c[g+8>>2]=a;c[g+4>>2]=a;Wd(a,g)|0;i=d;return}function yg(a){a=a|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=0,q=0.0,r=0;d=i;i=i+32|0;e=d+16|0;f=d;g[f>>2]=0.0;g[f+4>>2]=0.0;g[f+8>>2]=+g[a+12>>2];g[f+12>>2]=+g[a+16>>2];h=a+152|0;c[h>>2]=1;j=c[a+136>>2]|0;if((j|0)!=0){k=a+148|0;l=e+4|0;m=e+8|0;n=j;do{c[k>>2]=c[n+144>>2];j=n+12|0;o=+g[j>>2];p=n+16|0;q=+g[p>>2];r=c[n+104>>2]|0;if((r|0)!=0){td[r&31](n,f)}yg(n);if(!(!(o!=+g[j>>2])?!(q!=+g[p>>2]):0)){b[e>>1]=103;c[l>>2]=n;c[m>>2]=n;Wd(n,e)|0}n=c[k>>2]|0}while((n|0)!=0)}c[h>>2]=0;if((c[a+156>>2]|0)==0){i=d;return}wg(a);i=d;return}function zg(a,d,e){a=a|0;d=+d;e=+e;var f=0,h=0,j=0,k=0,l=0.0,m=0,n=0.0,o=0;f=i;i=i+32|0;h=f+16|0;j=f;k=a+12|0;l=+g[k>>2];m=a+16|0;n=+g[m>>2];g[h>>2]=0.0;g[h+4>>2]=0.0;g[h+8>>2]=d;g[h+12>>2]=e;o=c[a+104>>2]|0;if((o|0)!=0){td[o&31](a,h)}g[k>>2]=d;g[m>>2]=e;yg(a);if(!(l!=d|n!=e)){i=f;return}b[j>>1]=103;c[j+4>>2]=a;c[j+8>>2]=a;Wd(a,j)|0;i=f;return}function Ag(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;d=a+152|0;c[d>>2]=1;e=c[a+108>>2]|0;if((e|0)!=0){rd[e&127](a)}e=c[a+136>>2]|0;if((e|0)!=0){f=a+148|0;g=e;do{c[f>>2]=c[g+144>>2];Ag(g);g=c[f>>2]|0}while((g|0)!=0)}c[d>>2]=0;if((c[a+156>>2]|0)==0){i=b;return}wg(a);i=b;return}function Bg(a){a=a|0;var b=0,d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;b=i;i=i+160|0;d=b+144|0;e=b;f=b+36|0;h=b+72|0;j=b+112|0;k=b+120|0;l=b+128|0;m=b+136|0;yf(e,+g[a+4>>2],+g[a+8>>2]);n=a+12|0;o=a+16|0;yf(f,-(+g[a+56>>2]*+g[n>>2]),-(+g[a+60>>2]*+g[o>>2]));if((c[a+96>>2]|0)==0){i=b;return}p=a+152|0;c[p>>2]=1;Ff(+g[a+64>>2],+g[a+68>>2],+g[a+72>>2],+g[a+76>>2]);Kf(e);Kf(a+20|0);Kf(f);if((c[a+160>>2]|0)==0){f=c[a+112>>2]|0;if((f|0)!=0){rd[f&127](a)}f=c[a+136>>2]|0;if((f|0)!=0){e=a+148|0;q=f;do{c[e>>2]=c[q+144>>2];Bg(q);q=c[e>>2]|0}while((q|0)!=0)}}else{Cg(h,a);vf(k,0.0,0.0);c[d+0>>2]=c[k+0>>2];c[d+4>>2]=c[k+4>>2];Df(j,d,h);vf(m,+g[n>>2],+g[o>>2]);c[d+0>>2]=c[m+0>>2];c[d+4>>2]=c[m+4>>2];Df(l,d,h);Jb();Xa(5889);Jb();Xa(5889);Mc();Xa(5888);Mc()}Lf();Lf();Lf();If();c[p>>2]=0;if((c[a+156>>2]|0)==0){i=b;return}wg(a);i=b;return}function Cg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;d=i;i=i+192|0;e=d+144|0;f=d;h=d+36|0;j=d+72|0;k=d+108|0;xf(e);l=b;do{yf(j,+g[l+4>>2],+g[l+8>>2]);m=f+0|0;n=j+0|0;o=m+36|0;do{c[m>>2]=c[n>>2];m=m+4|0;n=n+4|0}while((m|0)<(o|0));yf(k,-(+g[l+56>>2]*+g[l+12>>2]),-(+g[l+60>>2]*+g[l+16>>2]));m=h+0|0;n=k+0|0;o=m+36|0;do{c[m>>2]=c[n>>2];m=m+4|0;n=n+4|0}while((m|0)<(o|0));Bf(e,h);Bf(e,l+20|0);Bf(e,f);l=c[l+128>>2]|0}while((l|0)!=0);m=a+0|0;n=e+0|0;o=m+36|0;do{c[m>>2]=c[n>>2];m=m+4|0;n=n+4|0}while((m|0)<(o|0));i=d;return}function Dg(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0.0,F=0.0;h=i;i=i+176|0;j=h+160|0;k=h+124|0;l=h+16|0;m=h;n=h+52|0;o=h+88|0;p=h+8|0;q=a+132|0;r=b[q>>1]|0;s=r<<16>>16;t=a+e|0;if((c[a+96>>2]|0)==0){u=0;i=h;return u|0}if((c[a+f>>2]|0)!=0){v=Yz(s,4)|0;w=c[a+136>>2]|0;x=r<<16>>16>0;if((w|0)!=0&x){r=s;s=w;do{r=r+ -1|0;c[v+(r<<2)>>2]=s;s=c[s+144>>2]|0}while((s|0)!=0&(r|0)>0)}a:do{if(x){r=d;s=c[r>>2]|0;w=c[r+4>>2]|0;r=s|0;y=0;while(1){z=m;c[z>>2]=s;c[z+4>>2]=w;z=c[v+(y<<2)>>2]|0;yf(n,+g[z+4>>2],+g[z+8>>2]);A=k+0|0;B=n+0|0;C=A+36|0;do{c[A>>2]=c[B>>2];A=A+4|0;B=B+4|0}while((A|0)<(C|0));yf(o,-(+g[z+56>>2]*+g[z+12>>2]),-(+g[z+60>>2]*+g[z+16>>2]));A=l+0|0;B=o+0|0;C=A+36|0;do{c[A>>2]=c[B>>2];A=A+4|0;B=B+4|0}while((A|0)<(C|0));Bf(l,z+20|0);Bf(l,k);Cf(l);c[j+0>>2]=c[m+0>>2];c[j+4>>2]=c[m+4>>2];Df(p,j,l);B=p;A=c[B+4>>2]|0;C=m;c[C>>2]=c[B>>2];c[C+4>>2]=A;c[j+0>>2]=c[m+0>>2];c[j+4>>2]=c[m+4>>2];D=Dg(z,j,e,f)|0;if((D|0)!=0){break}y=y+1|0;if((y|0)>=(b[q>>1]|0)){break a}}c[a+120>>2]=r;g[a+124>>2]=+g[d+4>>2];Xz(v);u=D;i=h;return u|0}}while(0);Xz(v)}E=+g[d>>2];if(!(E>=0.0)){u=0;i=h;return u|0}F=+g[d+4>>2];if(!(F>=0.0)){u=0;i=h;return u|0}if(!(E<=+g[a+12>>2])){u=0;i=h;return u|0}if(!(F<=+g[a+16>>2])){u=0;i=h;return u|0}if((c[t>>2]|0)==0){u=0;i=h;return u|0}g[a+120>>2]=E;g[a+124>>2]=F;u=a;i=h;return u|0}function Eg(){var a=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;a=i;i=i+32|0;d=a+12|0;e=a;f=c[774]|0;if((f|0)==0){i=a;return}a:do{if((c[f+88>>2]|0)!=0){g=(c[f+96>>2]|0)!=0;h=g&1;b:do{if(g){j=f;k=h;c:while(1){if((k|0)==0){break a}else{l=j}while(1){m=c[l+128>>2]|0;if((m|0)==0){n=k;break b}if((c[m+92>>2]|0)==0){j=m;k=0;continue c}if((c[m+96>>2]|0)==0){j=m;k=0;continue c}else{l=m}}}}else{n=h}}while(0);if((n|0)!=0){i=a;return}}}while(0);c[778]=0;c[774]=0;b[d>>1]=105;c[d+8>>2]=f;c[d+4>>2]=f;Wd(f,d)|0;d=c[778]|0;if((c[774]|0)==(d|0)){i=a;return}if((c[d+88>>2]|0)==0){i=a;return}if((c[d+96>>2]|0)==0){i=a;return}c[774]=d;if((d|0)==0){i=a;return}b[e>>1]=104;c[e+8>>2]=d;c[e+4>>2]=d;Wd(d,e)|0;i=a;return}function Fg(a){a=a|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+64|0;e=d+56|0;f=d;g=d+8|0;h=d+32|0;j=3104;k=c[j+4>>2]|0;l=f;c[l>>2]=c[j>>2];c[l+4>>2]=k;if((a|0)==0){c[772]=0;i=d;return}k=c[772]|0;c[e+0>>2]=c[f+0>>2];c[e+4>>2]=c[f+4>>2];f=Dg(a,e,80,84)|0;c[772]=f;if((k|0)==(f|0)){i=d;return}b[g>>1]=5;c[g+4>>2]=f;e=3104;a=c[e>>2]|0;l=c[e+4>>2]|0;e=g+16|0;c[e>>2]=a;c[e+4>>2]=l;b[h>>1]=6;c[h+4>>2]=k;e=h+16|0;c[e>>2]=a;c[e+4>>2]=l;l=(k|0)==0;if(l){m=f}else{f=k;do{c[f+116>>2]=0;f=c[f+128>>2]|0}while((f|0)!=0);m=c[772]|0}if((m|0)!=0){f=m;do{c[f+116>>2]=1;f=c[f+128>>2]|0}while((f|0)!=0)}a:do{if(l){n=0}else{f=h+8|0;m=k;while(1){if((c[m+116>>2]|0)!=0){n=m;break a}c[f>>2]=m;Wd(m,h)|0;e=c[m+128>>2]|0;if((e|0)==0){n=0;break}else{m=e}}}}while(0);h=c[772]|0;if((h|0)==0|(h|0)==(n|0)){i=d;return}k=g+8|0;l=h;do{c[k>>2]=l;Wd(l,g)|0;l=c[l+128>>2]|0}while(!((l|0)==0|(l|0)==(n|0)));i=d;return}function Gg(a){a=a|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=i;i=i+80|0;e=d+44|0;f=d+8|0;g=d;h=c[774]|0;j=a+16|0;k=j;l=c[k+4>>2]|0;m=3104;c[m>>2]=c[k>>2];c[m+4>>2]=l;if((b[a>>1]|0)==1){l=c[130]|0;c[e+0>>2]=c[3104>>2];c[e+4>>2]=c[3108>>2];n=Dg(l,e,88,92)|0}else{n=0}l=c[772]|0;a:do{if((l|0)!=0){c[a+4>>2]=l;m=a+8|0;k=l;do{Cg(e,k);Cf(e);o=f+0|0;p=e+0|0;q=o+36|0;do{c[o>>2]=c[p>>2];o=o+4|0;p=p+4|0}while((o|0)<(q|0));c[e+0>>2]=c[3104>>2];c[e+4>>2]=c[3108>>2];Df(g,e,f);p=g;o=c[p+4>>2]|0;q=j;c[q>>2]=c[p>>2];c[q+4>>2]=o;c[m>>2]=k;if((Wd(k,a)|0)==0){break a}k=c[k+128>>2]|0}while((k|0)!=0)}}while(0);if(!((n|0)!=0&(h|0)==(c[774]|0))){i=d;return}if((h|0)==(n|0)){i=d;return}c[778]=n;c[774]=0;if((h|0)==0){r=0;s=n}else{b[e>>1]=105;c[e+8>>2]=h;c[e+4>>2]=h;Wd(h,e)|0;r=c[774]|0;s=c[778]|0}if((r|0)==(s|0)){i=d;return}if((c[s+88>>2]|0)==0){i=d;return}if((c[s+96>>2]|0)==0){i=d;return}c[774]=s;if((s|0)==0){i=d;return}b[f>>1]=104;c[f+8>>2]=s;c[f+4>>2]=s;Wd(s,f)|0;i=d;return}function Hg(){var a=0,b=0,d=0,e=0;a=i;i=i+16|0;b=a;Ob(1,b|0)|0;d=((c[b+4>>2]|0)/1e6|0)+((c[b>>2]|0)*1e3|0)|0;b=3120;e=hA(d|0,((d|0)<0)<<31>>31|0,c[b>>2]|0,c[b+4>>2]|0)|0;i=a;return e|0}function Ig(){var a=0,b=0,d=0,e=0;a=i;b=Wz(64)|0;d=Wz(8)|0;Td(b);e=b+8|0;c[e>>2]=0;c[e+4>>2]=0;c[b+16>>2]=0;e=b+24|0;c[b+56>>2]=0;c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;c[d>>2]=0;c[d+4>>2]=b;c[b+40>>2]=d;if((c[782]|0)==0){c[782]=d;c[784]=d;i=a;return b|0}else{c[c[784]>>2]=d;c[784]=d;i=a;return b|0}return 0}function Jg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d;Ob(1,e|0)|0;f=((c[e+4>>2]|0)/1e6|0)+((c[e>>2]|0)*1e3|0)|0;e=3120;g=hA(f|0,((f|0)<0)<<31>>31|0,c[e>>2]|0,c[e+4>>2]|0)|0;e=a+48|0;c[e>>2]=g;c[e+4>>2]=E;c[a+56>>2]=0;c[a+36>>2]=b;c[a+32>>2]=1;i=d;return}function Kg(a){a=a|0;c[a+32>>2]=0;return}function Lg(a){a=a|0;var b=0;b=i;c[(c[a+40>>2]|0)+4>>2]=0;Ud(a);Xz(a);i=b;return}function Mg(){var a=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;a=i;i=i+32|0;d=a+16|0;e=a;f=c[782]|0;Ob(1,d|0)|0;g=((c[d+4>>2]|0)/1e6|0)+((c[d>>2]|0)*1e3|0)|0;d=3120;h=hA(g|0,((g|0)<0)<<31>>31|0,c[d>>2]|0,c[d+4>>2]|0)|0;d=E;if((f|0)==0){i=a;return}g=e+4|0;j=e+8|0;k=0;l=f;a:while(1){b:do{if((k|0)==0){f=l;while(1){m=f+4|0;n=c[m>>2]|0;if((n|0)!=0){o=m;p=n;q=f;break b}if((f|0)==(c[784]|0)){c[784]=0}c[782]=c[f>>2];n=c[f>>2]|0;Xz(f);if((n|0)==0){r=22;break a}else{f=n}}}else{f=l;while(1){n=f+4|0;m=c[n>>2]|0;if((m|0)!=0){o=n;p=m;q=f;break b}if((f|0)==(c[784]|0)){c[784]=k}c[k>>2]=c[f>>2];m=c[f>>2]|0;Xz(f);if((m|0)==0){r=22;break a}else{f=m}}}}while(0);f=p+32|0;do{if((c[f>>2]|0)!=0){m=p+56|0;n=(c[m>>2]|0)==0;s=p+48|0;t=hA(h|0,d|0,c[s>>2]|0,c[s+4>>2]|0)|0;s=E;if(n){n=p+8|0;u=c[n+4>>2]|0;if(s>>>0<u>>>0|(s|0)==(u|0)&t>>>0<(c[n>>2]|0)>>>0){break}}else{n=p+24|0;u=c[n+4>>2]|0;if(s>>>0<u>>>0|(s|0)==(u|0)&t>>>0<(c[n>>2]|0)>>>0){break}}b[e>>1]=201;c[g>>2]=p;c[j>>2]=p;Wd(p,e)|0;if((((c[o>>2]|0)!=0?(n=p+48|0,c[n>>2]=h,c[n+4>>2]=d,n=(c[m>>2]|0)+1|0,c[m>>2]=n,m=c[p+16>>2]|0,(m|0)!=0&(n|0)==(m|0)):0)?(c[f>>2]=0,b[e>>1]=202,c[g>>2]=p,c[j>>2]=p,Wd(p,e)|0,(c[o>>2]|0)!=0):0)?(c[p+36>>2]|0)!=0:0){c[(c[p+40>>2]|0)+4>>2]=0;Ud(p);Xz(p)}}}while(0);f=c[q>>2]|0;if((f|0)==0){r=22;break}else{k=q;l=f}}if((r|0)==22){i=a;return}}function Ng(){c[782]=0;c[784]=0;return}function Og(){var a=0,b=0,d=0;a=i;b=c[782]|0;if((b|0)==0){c[782]=0;c[784]=0;i=a;return}else{d=b}while(1){b=c[d+4>>2]|0;if((b|0)!=0){c[(c[b+40>>2]|0)+4>>2]=0;Ud(b);Xz(b)}b=c[d>>2]|0;Xz(d);if((b|0)==0){break}else{d=b}}c[782]=0;c[784]=0;i=a;return}function Pg(){var a=0,b=0,d=0;a=i;c[788]=0;c[790]=0;b=Hg()|0;d=3144;c[d>>2]=b;c[d+4>>2]=E;i=a;return}function Qg(){var a=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;a=i;i=i+16|0;d=a;e=c[790]|0;f=Hg()|0;g=3144;h=hA(f|0,E|0,c[g>>2]|0,c[g+4>>2]|0)|0;g=E;if(g>>>0<0|(g|0)==0&h>>>0<15){i=a;return}h=Hg()|0;g=3144;c[g>>2]=h;c[g+4>>2]=E;if((e|0)==0){i=a;return}g=d+4|0;h=d+8|0;f=d+12|0;j=0;k=e;a:while(1){b:do{if((j|0)==0){e=k;while(1){l=e+4|0;m=c[l>>2]|0;if((m|0)!=0){n=l;o=m;p=e;break b}c[790]=c[e>>2];m=c[e>>2]|0;Xz(e);if((m|0)==0){q=16;break a}else{e=m}}}else{e=k;while(1){m=e+4|0;l=c[m>>2]|0;if((l|0)!=0){n=m;o=l;p=e;break b}l=c[e>>2]|0;c[j>>2]=l;if((l|0)==0){c[788]=j}l=c[e>>2]|0;Xz(e);if((l|0)==0){q=16;break a}else{e=l}}}}while(0);e=Rg(o)|0;b[d>>1]=211;l=c[n>>2]|0;c[g>>2]=l;c[h>>2]=l;c[f>>2]=c[(c[n>>2]|0)+4>>2];Wd(c[n>>2]|0,d)|0;if((e|0)!=0){b[d>>1]=212;Wd(c[n>>2]|0,d)|0;e=c[n>>2]|0;if((e|0)!=0){Ud(e);Xz(e)}c[n>>2]=0}e=c[p>>2]|0;if((e|0)==0){q=16;break}else{j=p;k=e}}if((q|0)==16){i=a;return}}function Rg(f){f=f|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0.0,q=0.0,r=0,s=0;j=i;k=3144;l=c[k>>2]|0;m=c[k+4>>2]|0;k=f+48|0;n=c[k>>2]|0;o=c[k+4>>2]|0;if(m>>>0>o>>>0|(m|0)==(o|0)&l>>>0>n>>>0){k=hA(l|0,m|0,n|0,o|0)|0;o=f+16|0;p=(+(k>>>0)+4294967296.0*+(E>>>0))/(+((c[o>>2]|0)>>>0)+4294967296.0*+((c[o+4>>2]|0)>>>0));if(p>1.0){q=1.0}else{q=p}}else{q=0.0}switch(c[f+24>>2]|0){case 0:{o=f+32|0;k=~~+Tg(+(a[o]|0),+(a[o+1|0]|0),q,c[f+8>>2]|0);a[c[f+4>>2]|0]=k;r=q==1.0;s=r&1;i=j;return s|0};case 5:{k=f+32|0;o=~~+Tg(+((c[k>>2]|0)>>>0),+((c[k+4>>2]|0)>>>0),q,c[f+8>>2]|0)>>>0;c[c[f+4>>2]>>2]=o;r=q==1.0;s=r&1;i=j;return s|0};case 2:{o=f+32|0;k=~~+Tg(+(c[o>>2]|0),+(c[o+4>>2]|0),q,c[f+8>>2]|0);c[c[f+4>>2]>>2]=k;r=q==1.0;s=r&1;i=j;return s|0};case 6:{k=f+32|0;p=+Tg(+g[k>>2],+g[k+4>>2],q,c[f+8>>2]|0);g[c[f+4>>2]>>2]=p;r=q==1.0;s=r&1;i=j;return s|0};case 7:{p=+Tg(+h[f+32>>3],+h[f+40>>3],q,c[f+8>>2]|0);h[c[f+4>>2]>>3]=p;r=q==1.0;s=r&1;i=j;return s|0};case 3:{k=f+32|0;o=~~+Tg(+(d[k]|0),+(d[k+1|0]|0),q,c[f+8>>2]|0)&255;a[c[f+4>>2]|0]=o;r=q==1.0;s=r&1;i=j;return s|0};case 1:{o=f+32|0;k=~~+Tg(+(b[o>>1]|0),+(b[o+2>>1]|0),q,c[f+8>>2]|0);b[c[f+4>>2]>>1]=k;r=q==1.0;s=r&1;i=j;return s|0};case 4:{k=f+32|0;o=~~+Tg(+(e[k>>1]|0),+(e[k+2>>1]|0),q,c[f+8>>2]|0)&65535;b[c[f+4>>2]>>1]=o;r=q==1.0;s=r&1;i=j;return s|0};default:{r=q==1.0;s=r&1;i=j;return s|0}}return 0}function Sg(){var a=0,b=0,d=0,e=0;a=i;b=c[790]|0;if((b|0)!=0){d=b;while(1){b=d+4|0;e=c[b>>2]|0;if((e|0)!=0){Ud(e);Xz(e);c[b>>2]=0}b=c[d>>2]|0;Xz(d);if((b|0)==0){break}else{d=b}}}c[790]=0;c[788]=0;i=a;return}function Tg(a,b,c,d){a=+a;b=+b;c=+c;d=d|0;var e=0,f=0.0,g=0.0,h=0.0,j=0.0,k=0.0,l=0.0;e=i;switch(d|0){case 5:{f=(b-a)*(c*c*+T(+(c*3.1415927410125732*6.0+1.5707963705062866))+ +R(+c,10.0))*.5+a;i=e;return+f};case 7:{g=1.0-c;do{if(!(g<.3636363744735718)){if(g<.7272727489471436){h=g+-.5454545617103577;j=h*h*7.5625+.75;break}if(g<.9090909361839294){h=g+-.8181818127632141;j=h*h*7.5625+.9375;break}else{h=g+-.9545454382896423;j=h*h*7.5625+.984375;break}}else{j=g*g*7.5625}}while(0);f=(b-a)*(1.0-j)+a;i=e;return+f};case 6:{j=1.0-c;f=(b-a)*(1.0-(j*j*+T(+(j*3.1415927410125732*6.0+1.5707963705062866))+ +R(+j,10.0))*.5)+a;i=e;return+f};case 2:{f=(b-a)*+T(+(c*3.1415927410125732*.5))+a;i=e;return+f};case 0:{f=(b-a)*c+a;i=e;return+f};case 8:{do{if(!(c<.3636363744735718)){if(c<.7272727489471436){j=c+-.5454545617103577;k=j*j*7.5625+.75;break}if(c<.9090909361839294){j=c+-.8181818127632141;k=j*j*7.5625+.9375;break}else{j=c+-.9545454382896423;k=j*j*7.5625+.984375;break}}else{k=c*7.5625*c}}while(0);f=(b-a)*k+a;i=e;return+f};case 3:{f=(b-a)*(+T(+((c+-.5)*3.1415927410125732))+1.0)*.5+a;i=e;return+f};case 1:{f=(b-a)*(+T(+(c*3.1415927410125732*.5+-1.5707963705062866))+1.0)+a;i=e;return+f};case 4:{k=+T(+(c*3.1415927410125732));if(c<.5){l=k*.5}else{l=k*-.5+1.0}f=(b-a)*l+a;i=e;return+f};default:{f=b;i=e;return+f}}return 0.0}function Ug(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;f=md[c[a+4>>2]&63](a,b,d)|0;i=e;return f|0}function Vg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;f=md[c[a+8>>2]&63](a,b,d)|0;i=e;return f|0}function Wg(a){a=a|0;var b=0,d=0;b=i;d=vd[c[a+12>>2]&63](a)|0;i=b;return d|0}function Xg(a){a=a|0;var b=0,d=0;b=i;d=vd[c[a+16>>2]&63](a)|0;i=b;return d|0}function Yg(a){a=a|0;var b=0;b=i;rd[c[a+24>>2]&127](a);i=b;return}function Zg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;f=a+28|0;a=za(b|0,1,d|0,c[f>>2]|0)|0;if((a|0)!=0){g=a;i=e;return g|0}g=((Qa(c[f>>2]|0)|0)!=0)<<31>>31;i=e;return g|0}function _g(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;f=oc(c[a+28>>2]|0,b|0,d|0)|0;i=e;return f|0}function $g(a){a=a|0;var b=0,d=0;b=i;d=_a(c[a+28>>2]|0)|0;i=b;return d|0}function ah(a){a=a|0;var b=0,d=0;b=i;d=Wc(c[a+28>>2]|0)|0;i=b;return d|0}function bh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;f=a+28|0;a=Pb(b|0,1,d|0,c[f>>2]|0)|0;if((a|0)!=0){g=a;i=e;return g|0}g=((Qa(c[f>>2]|0)|0)!=0)<<31>>31;i=e;return g|0}function ch(a){a=a|0;var b=0;b=i;sc(c[a+28>>2]|0)|0;Xz(a);i=b;return}function dh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;e=Cc(a|0,b|0)|0;if((e|0)==0){f=0;i=d;return f|0}b=Wz(32)|0;c[b+28>>2]=e;c[b>>2]=1;c[b+4>>2]=29;c[b+8>>2]=30;c[b+12>>2]=27;c[b+16>>2]=28;c[b+20>>2]=31;c[b+24>>2]=29;f=b;i=d;return f|0}function eh(a){a=a|0;var b=0,d=0;b=i;d=c[a+4>>2]|0;if((d|0)==0){i=b;return}td[c[d+36>>2]&31](a,1);d=a+20|0;if((c[a+16>>2]|0)==0){c[d>>2]=100;i=b;return}else{c[d>>2]=200;c[a+312>>2]=0;i=b;return}}function fh(a){a=a|0;var b=0,d=0,e=0;b=i;d=a+4|0;e=c[d>>2]|0;if((e|0)!=0){rd[c[e+40>>2]&127](a)}c[d>>2]=0;c[a+20>>2]=0;i=b;return}function gh(a){a=a|0;var b=0,d=0;b=i;d=md[c[c[a+4>>2]>>2]&63](a,0,132)|0;c[d+128>>2]=0;i=b;return d|0}function hh(a){a=a|0;var b=0,d=0;b=i;d=md[c[c[a+4>>2]>>2]&63](a,0,280)|0;c[d+276>>2]=0;i=b;return d|0}function ih(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;c[a+4>>2]=0;if((b|0)!=90){f=c[a>>2]|0;c[f+20>>2]=13;c[f+24>>2]=90;c[f+28>>2]=b;rd[c[f>>2]&127](a)}if((d|0)==488){g=a}else{f=c[a>>2]|0;c[f+20>>2]=22;c[f+24>>2]=488;c[f+28>>2]=d;rd[c[f>>2]&127](a);g=a}f=c[a>>2]|0;d=a+12|0;b=c[d>>2]|0;nA(a|0,0,488)|0;c[a>>2]=f;c[d>>2]=b;c[a+16>>2]=1;lk(g);c[a+8>>2]=0;c[a+24>>2]=0;c[a+312>>2]=0;g=a+164|0;b=g+48|0;do{c[g>>2]=0;g=g+4|0}while((g|0)<(b|0));wi(a);ki(a);c[a+20>>2]=200;i=e;return}function jh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;e=a+20|0;if(!(((c[e>>2]|0)+ -200|0)>>>0<2)){f=c[a>>2]|0;c[f+20>>2]=21;c[f+24>>2]=c[e>>2];rd[c[f>>2]&127](a)}f=kh(a)|0;if((f|0)==1){g=1;i=d;return g|0}else if((f|0)==2){if((b|0)==0){h=a}else{b=c[a>>2]|0;c[b+20>>2]=53;rd[c[b>>2]&127](a);h=a}eh(h);g=2;i=d;return g|0}else{g=f;i=d;return g|0}return 0}function kh(a){a=a|0;var b=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0;b=i;e=a+20|0;switch(c[e>>2]|0){case 202:{f=1;i=b;return f|0};case 210:case 208:case 207:case 206:case 205:case 204:case 203:{f=vd[c[c[a+460>>2]>>2]&63](a)|0;i=b;return f|0};case 201:{g=a+460|0;break};case 200:{j=a+460|0;rd[c[(c[j>>2]|0)+4>>2]&127](a);rd[c[(c[a+24>>2]|0)+8>>2]&127](a);c[e>>2]=201;g=j;break};default:{j=c[a>>2]|0;c[j+20>>2]=21;c[j+24>>2]=c[e>>2];rd[c[j>>2]&127](a);f=0;i=b;return f|0}}j=vd[c[c[g>>2]>>2]&63](a)|0;if((j|0)!=1){f=j;i=b;return f|0}j=c[a+36>>2]|0;if((j|0)==4){do{if((c[a+296>>2]|0)!=0){g=a+300|0;k=d[g]|0;if((k|0)==0){c[a+40>>2]=4;break}else if((k|0)==2){c[a+40>>2]=5;break}else{k=c[a>>2]|0;c[k+20>>2]=116;c[k+24>>2]=d[g]|0;td[c[k+4>>2]&31](a,-1);c[a+40>>2]=5;break}}else{c[a+40>>2]=4}}while(0);c[a+44>>2]=4}else if((j|0)==1){c[a+40>>2]=1;c[a+44>>2]=1}else if((j|0)==3){j=c[a+216>>2]|0;k=c[j>>2]|0;g=c[j+88>>2]|0;l=c[j+176>>2]|0;j=(k|0)==1;do{if(!(j&(g|0)==2&(l|0)==3)){if(j&(g|0)==34&(l|0)==35){c[a+40>>2]=7;break}if((k|0)==82&(g|0)==71&(l|0)==66){c[a+40>>2]=2;break}if((k|0)==114&(g|0)==103&(l|0)==98){c[a+40>>2]=6;break}if((c[a+284>>2]|0)!=0){c[a+40>>2]=3;break}if((c[a+296>>2]|0)==0){m=c[a>>2]|0;c[m+24>>2]=k;c[m+28>>2]=g;c[m+32>>2]=l;c[m+20>>2]=113;td[c[m+4>>2]&31](a,1);c[a+40>>2]=3;break}m=a+300|0;n=d[m]|0;if((n|0)==0){c[a+40>>2]=2;break}else if((n|0)==1){c[a+40>>2]=3;break}else{n=c[a>>2]|0;c[n+20>>2]=116;c[n+24>>2]=d[m]|0;td[c[n+4>>2]&31](a,-1);c[a+40>>2]=3;break}}else{c[a+40>>2]=3}}while(0);c[a+44>>2]=2}else{c[a+40>>2]=0;c[a+44>>2]=0}l=c[a+428>>2]|0;c[a+48>>2]=l;c[a+52>>2]=l;h[a+56>>3]=1.0;c[a+64>>2]=0;c[a+68>>2]=0;c[a+72>>2]=0;c[a+76>>2]=1;c[a+80>>2]=1;c[a+84>>2]=0;c[a+88>>2]=2;c[a+92>>2]=1;c[a+96>>2]=256;c[a+136>>2]=0;c[a+100>>2]=0;c[a+104>>2]=0;c[a+108>>2]=0;c[e>>2]=202;f=1;i=b;return f|0}function lh(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;b=i;d=a+20|0;e=c[d>>2]|0;do{if((e|0)==203){f=5}else if((e|0)==202){Gi(a);if((c[a+64>>2]|0)==0){c[d>>2]=203;f=5;break}c[d>>2]=207;g=1;i=b;return g|0}else if((e|0)!=204){h=c[a>>2]|0;c[h+20>>2]=21;c[h+24>>2]=c[d>>2];rd[c[h>>2]&127](a)}}while(0);if((f|0)==5){f=a+460|0;a:do{if((c[(c[f>>2]|0)+16>>2]|0)!=0){d=a+8|0;e=a+332|0;h=c[d>>2]|0;while(1){if((h|0)!=0){rd[c[h>>2]&127](a)}j=vd[c[c[f>>2]>>2]&63](a)|0;if((j|0)==2){break a}else if((j|0)==0){g=0;break}k=c[d>>2]|0;if((k|0)==0){h=0;continue}if((j&-3|0)!=1){h=k;continue}j=k+4|0;l=(c[j>>2]|0)+1|0;c[j>>2]=l;j=k+8|0;m=c[j>>2]|0;if((l|0)<(m|0)){h=k;continue}c[j>>2]=(c[e>>2]|0)+m;h=k}i=b;return g|0}}while(0);c[a+152>>2]=c[a+144>>2]}g=mh(a)|0;i=b;return g|0}function mh(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;b=i;d=a+20|0;e=a+444|0;if((c[d>>2]|0)!=204){rd[c[c[e>>2]>>2]&127](a);c[a+140>>2]=0;c[d>>2]=204}a:do{if((c[(c[e>>2]|0)+8>>2]|0)!=0){f=a+140|0;g=a+116|0;h=a+8|0;j=a+448|0;k=c[f>>2]|0;while(1){l=c[g>>2]|0;if(!(k>>>0<l>>>0)){rd[c[(c[e>>2]|0)+4>>2]&127](a);rd[c[c[e>>2]>>2]&127](a);c[f>>2]=0;if((c[(c[e>>2]|0)+8>>2]|0)==0){break a}else{k=0;continue}}m=c[h>>2]|0;if((m|0)==0){n=k}else{c[m+4>>2]=k;c[m+8>>2]=l;rd[c[m>>2]&127](a);n=c[f>>2]|0}Cd[c[(c[j>>2]|0)+4>>2]&31](a,0,f,0);m=c[f>>2]|0;if((m|0)==(n|0)){o=0;break}else{k=m}}i=b;return o|0}}while(0);c[d>>2]=(c[a+68>>2]|0)!=0?206:205;o=1;i=b;return o|0}function nh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+16|0;f=e;g=a+20|0;if((c[g>>2]|0)!=205){h=c[a>>2]|0;c[h+20>>2]=21;c[h+24>>2]=c[g>>2];rd[c[h>>2]&127](a)}h=a+140|0;g=c[h>>2]|0;j=c[a+116>>2]|0;if(!(g>>>0<j>>>0)){k=c[a>>2]|0;c[k+20>>2]=126;td[c[k+4>>2]&31](a,-1);l=0;i=e;return l|0}k=c[a+8>>2]|0;if((k|0)!=0){c[k+4>>2]=g;c[k+8>>2]=j;rd[c[k>>2]&127](a)}c[f>>2]=0;Cd[c[(c[a+448>>2]|0)+4>>2]&31](a,b,f,d);d=c[f>>2]|0;c[h>>2]=(c[h>>2]|0)+d;l=d;i=e;return l|0}function oh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;e=b+4|0;f=md[c[c[e>>2]>>2]&63](b,1,192)|0;c[b+468>>2]=f;c[f>>2]=30;c[f+8>>2]=31;c[f+60>>2]=0;c[f+124>>2]=0;c[f+64>>2]=0;c[f+128>>2]=0;c[f+68>>2]=0;c[f+132>>2]=0;c[f+72>>2]=0;c[f+136>>2]=0;c[f+76>>2]=0;c[f+140>>2]=0;c[f+80>>2]=0;c[f+144>>2]=0;c[f+84>>2]=0;c[f+148>>2]=0;c[f+88>>2]=0;c[f+152>>2]=0;c[f+92>>2]=0;c[f+156>>2]=0;c[f+96>>2]=0;c[f+160>>2]=0;c[f+100>>2]=0;c[f+164>>2]=0;c[f+104>>2]=0;c[f+168>>2]=0;c[f+108>>2]=0;c[f+172>>2]=0;c[f+112>>2]=0;c[f+176>>2]=0;c[f+116>>2]=0;c[f+180>>2]=0;c[f+120>>2]=0;c[f+184>>2]=0;a[f+188|0]=113;if((c[b+224>>2]|0)==0){i=d;return}f=b+36|0;g=md[c[c[e>>2]>>2]&63](b,1,c[f>>2]<<8)|0;c[b+160>>2]=g;if((c[f>>2]|0)>0){h=0}else{i=d;return}do{nA(g+(h<<8)|0,-1,256)|0;h=h+1|0}while((h|0)<(c[f>>2]|0));i=d;return}function ph(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=i;e=c[b+468>>2]|0;f=b+224|0;g=b+412|0;h=c[g>>2]|0;j=(h|0)==0;do{if((c[f>>2]|0)!=0){k=b+416|0;l=c[k>>2]|0;if(j){if((l|0)==0){m=7}else{m=11}}else{if(((l|0)>=(h|0)?(l|0)<=(c[b+436>>2]|0):0)?(c[b+340>>2]|0)==1:0){m=7}else{m=11}}do{if((m|0)==7){l=c[b+420>>2]|0;if((l|0)!=0){n=l+ -1|0;if((n|0)==(c[b+424>>2]|0)){o=n}else{m=11;break}}else{o=c[b+424>>2]|0}if((o|0)>13){m=11}}}while(0);if((m|0)==11){n=c[b>>2]|0;c[n+20>>2]=17;c[n+24>>2]=c[g>>2];c[n+28>>2]=c[k>>2];c[n+32>>2]=c[b+420>>2];c[n+36>>2]=c[b+424>>2];rd[c[n>>2]&127](b)}n=b+340|0;l=c[n>>2]|0;if((l|0)>0){p=b+160|0;q=b+420|0;r=b+424|0;s=0;while(1){t=c[(c[b+(s<<2)+344>>2]|0)+4>>2]|0;u=c[p>>2]|0;v=c[g>>2]|0;if((v|0)!=0){if((c[u+(t<<8)>>2]|0)<0){w=c[b>>2]|0;c[w+20>>2]=118;c[w+24>>2]=t;c[w+28>>2]=0;td[c[w+4>>2]&31](b,-1);x=c[g>>2]|0}else{x=v}}else{x=0}a:do{if((x|0)<=(c[k>>2]|0)){v=x;while(1){w=u+(t<<8)+(v<<2)|0;y=c[w>>2]|0;if((c[q>>2]|0)!=(((y|0)<0?0:y)|0)){y=c[b>>2]|0;c[y+20>>2]=118;c[y+24>>2]=t;c[y+28>>2]=v;td[c[y+4>>2]&31](b,-1)}c[w>>2]=c[r>>2];if((v|0)>=(c[k>>2]|0)){break a}v=v+1|0}}}while(0);t=s+1|0;u=c[n>>2]|0;if((t|0)<(u|0)){s=t}else{z=q;A=u;break}}}else{z=b+420|0;A=l}q=(c[g>>2]|0)==0;s=e+4|0;if((c[z>>2]|0)==0){if(q){c[s>>2]=85;B=A;break}else{c[s>>2]=86;B=A;break}}else{if(q){c[s>>2]=87;B=A;break}else{c[s>>2]=88;B=A;break}}}else{if((j?(c[b+420>>2]|0)==0:0)?(c[b+424>>2]|0)==0:0){s=c[b+416>>2]|0;if((s|0)<64?(s|0)!=(c[b+436>>2]|0):0){m=36}}else{m=36}if((m|0)==36){s=c[b>>2]|0;c[s+20>>2]=125;td[c[s+4>>2]&31](b,-1)}c[e+4>>2]=89;B=c[b+340>>2]|0}}while(0);j=b+340|0;if((B|0)<=0){C=e+12|0;c[C>>2]=0;D=e+16|0;c[D>>2]=0;E=e+20|0;c[E>>2]=-16;F=b+280|0;G=c[F>>2]|0;H=e+56|0;I=G;c[H>>2]=I;i=d;return}B=e+60|0;A=b+4|0;z=e+24|0;x=e+40|0;o=b+436|0;h=e+124|0;s=b+420|0;q=0;do{n=c[b+(q<<2)+344>>2]|0;k=c[f>>2]|0;if((k|0)!=0){if((c[g>>2]|0)==0?(c[s>>2]|0)==0:0){m=43}else{J=k}}else{m=43}if((m|0)==43){m=0;k=c[n+20>>2]|0;if(k>>>0>15){r=c[b>>2]|0;c[r+20>>2]=50;c[r+24>>2]=k;rd[c[r>>2]&127](b)}r=B+(k<<2)|0;k=c[r>>2]|0;if((k|0)==0){p=md[c[c[A>>2]>>2]&63](b,1,64)|0;c[r>>2]=p;K=p}else{K=k}k=K+0|0;p=k+64|0;do{a[k]=0;k=k+1|0}while((k|0)<(p|0));c[z+(q<<2)>>2]=0;c[x+(q<<2)>>2]=0;J=c[f>>2]|0}if((J|0)==0){if((c[o>>2]|0)!=0){m=51}}else{if((c[g>>2]|0)!=0){m=51}}if((m|0)==51){m=0;k=c[n+24>>2]|0;if(k>>>0>15){p=c[b>>2]|0;c[p+20>>2]=50;c[p+24>>2]=k;rd[c[p>>2]&127](b)}p=h+(k<<2)|0;k=c[p>>2]|0;if((k|0)==0){l=md[c[c[A>>2]>>2]&63](b,1,256)|0;c[p>>2]=l;L=l}else{L=k}nA(L|0,0,256)|0}q=q+1|0}while((q|0)<(c[j>>2]|0));C=e+12|0;c[C>>2]=0;D=e+16|0;c[D>>2]=0;E=e+20|0;c[E>>2]=-16;F=b+280|0;G=c[F>>2]|0;H=e+56|0;I=G;c[H>>2]=I;i=d;return}function qh(a){a=a|0;return}function rh(a,e){a=a|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;f=i;g=c[a+468>>2]|0;if((c[a+280>>2]|0)!=0){h=g+56|0;j=c[h>>2]|0;if((j|0)==0){wh(a);k=c[h>>2]|0}else{k=j}c[h>>2]=k+ -1}k=g+20|0;if((c[k>>2]|0)==-1){i=f;return 1}h=a+368|0;if((c[h>>2]|0)<=0){i=f;return 1}j=g+60|0;l=g+40|0;m=g+24|0;g=a+424|0;n=0;a:while(1){o=c[e+(n<<2)>>2]|0;p=c[a+(n<<2)+372>>2]|0;q=c[(c[a+(p<<2)+344>>2]|0)+20>>2]|0;r=j+(q<<2)|0;s=c[r>>2]|0;t=l+(p<<2)|0;u=c[t>>2]|0;if((xh(a,s+u|0)|0)==0){c[t>>2]=0;v=c[m+(p<<2)>>2]|0}else{w=xh(a,s+(u+1)|0)|0;x=s+(u+2+w)|0;u=xh(a,x)|0;if((u|0)!=0){s=(c[r>>2]|0)+20|0;if((xh(a,s)|0)==0){y=u;z=s}else{r=u;u=s;while(1){s=r<<1;A=u+1|0;if((s|0)==32768){break a}if((xh(a,A)|0)==0){y=s;z=A;break}else{r=s;u=A}}}}else{y=0;z=x}do{if((y|0)>=(1<<(d[a+q+232|0]|0)>>1|0)){u=w<<2;if((y|0)>(1<<(d[a+q+248|0]|0)>>1|0)){c[t>>2]=u+12;break}else{c[t>>2]=u+4;break}}else{c[t>>2]=0}}while(0);t=z+14|0;q=y>>1;if((q|0)==0){B=y}else{x=q;q=y;while(1){u=(xh(a,t)|0)==0;r=(u?0:x)|q;u=x>>1;if((u|0)==0){B=r;break}else{x=u;q=r}}}q=m+(p<<2)|0;x=(c[q>>2]|0)+((w|0)==0?B+1|0:~B)|0;c[q>>2]=x;v=x}b[o>>1]=v<<c[g>>2];x=n+1|0;if((x|0)<(c[h>>2]|0)){n=x}else{C=24;break}}if((C|0)==24){i=f;return 1}C=c[a>>2]|0;c[C+20>>2]=117;td[c[C+4>>2]&31](a,-1);c[k>>2]=-1;i=f;return 1}function sh(a,e){a=a|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;f=i;g=c[a+468>>2]|0;if((c[a+280>>2]|0)!=0){h=g+56|0;j=c[h>>2]|0;if((j|0)==0){wh(a);k=c[h>>2]|0}else{k=j}c[h>>2]=k+ -1}k=g+20|0;if((c[k>>2]|0)==-1){i=f;return 1}h=c[a+432>>2]|0;j=c[e>>2]|0;e=c[(c[a+344>>2]|0)+24>>2]|0;l=g+124+(e<<2)|0;m=a+416|0;n=g+188|0;g=a+424|0;o=a+e+264|0;e=(c[a+412>>2]|0)+ -1|0;a:while(1){p=(c[l>>2]|0)+(e*3|0)|0;if((xh(a,p)|0)==0){q=e;r=p}else{s=20;break}while(1){t=q+1|0;if((xh(a,r+1|0)|0)!=0){break}if((t|0)<(c[m>>2]|0)){q=t;r=r+3|0}else{s=10;break a}}p=xh(a,n)|0;u=r+2|0;v=xh(a,u)|0;if((v|0)!=0){if((xh(a,u)|0)!=0){w=v<<1;x=(c[l>>2]|0)+((q|0)<(d[o]|0|0)?189:217)|0;if((xh(a,x)|0)==0){y=w;z=x}else{A=w;w=x;while(1){x=A<<1;B=w+1|0;if((x|0)==32768){s=16;break a}if((xh(a,B)|0)==0){y=x;z=B;break}else{A=x;w=B}}}}else{y=v;z=u}w=z+14|0;A=y>>1;if((A|0)==0){C=y}else{B=A;A=y;while(1){x=(xh(a,w)|0)==0;D=(x?0:B)|A;x=B>>1;if((x|0)==0){C=D;break}else{B=x;A=D}}}}else{C=0}b[j+(c[h+(t<<2)>>2]<<1)>>1]=((p|0)==0?C+1|0:~C)<<c[g>>2];if((t|0)<(c[m>>2]|0)){e=t}else{s=20;break}}if((s|0)==10){t=c[a>>2]|0;c[t+20>>2]=117;td[c[t+4>>2]&31](a,-1);c[k>>2]=-1;i=f;return 1}else if((s|0)==16){t=c[a>>2]|0;c[t+20>>2]=117;td[c[t+4>>2]&31](a,-1);c[k>>2]=-1;i=f;return 1}else if((s|0)==20){i=f;return 1}return 0}function th(a,d){a=a|0;d=d|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;g=c[a+468>>2]|0;if((c[a+280>>2]|0)!=0){h=g+56|0;j=c[h>>2]|0;if((j|0)==0){wh(a);k=c[h>>2]|0}else{k=j}c[h>>2]=k+ -1}k=g+188|0;g=1<<c[a+424>>2];h=a+368|0;if((c[h>>2]|0)>0){l=0}else{i=f;return 1}do{if((xh(a,k)|0)!=0){j=c[d+(l<<2)>>2]|0;b[j>>1]=e[j>>1]|0|g}l=l+1|0}while((l|0)<(c[h>>2]|0));i=f;return 1}function uh(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;e=i;f=c[a+468>>2]|0;if((c[a+280>>2]|0)!=0){g=f+56|0;h=c[g>>2]|0;if((h|0)==0){wh(a);j=c[g>>2]|0}else{j=h}c[g>>2]=j+ -1}j=f+20|0;if((c[j>>2]|0)==-1){i=e;return 1}g=c[a+432>>2]|0;h=c[d>>2]|0;d=c[(c[a+344>>2]|0)+24>>2]|0;k=c[a+424>>2]|0;l=1<<k;m=-1<<k;k=a+416|0;n=c[k>>2]|0;while(1){if((b[h+(c[g+(n<<2)>>2]<<1)>>1]|0)!=0){o=n;break}p=n+ -1|0;if((p|0)==0){o=0;break}else{n=p}}n=f+124+(d<<2)|0;d=f+188|0;f=l&65535;p=m&65535;q=(c[a+412>>2]|0)+ -1|0;a:while(1){r=(c[n>>2]|0)+(q*3|0)|0;if((q|0)>=(o|0)?(xh(a,r)|0)!=0:0){s=24;break}else{t=q;u=r}while(1){v=t+1|0;w=h+(c[g+(v<<2)>>2]<<1)|0;if((b[w>>1]|0)!=0){s=13;break}if((xh(a,u+1|0)|0)!=0){s=18;break}if((v|0)<(c[k>>2]|0)){t=v;u=u+3|0}else{s=22;break a}}do{if((s|0)==13){s=0;if((xh(a,u+2|0)|0)!=0){r=b[w>>1]|0;x=r<<16>>16;if(r<<16>>16<0){b[w>>1]=x+m;break}else{b[w>>1]=x+l;break}}}else if((s|0)==18){s=0;if((xh(a,d)|0)==0){b[w>>1]=f;break}else{b[w>>1]=p;break}}}while(0);if((v|0)<(c[k>>2]|0)){q=v}else{s=24;break}}if((s|0)==22){v=c[a>>2]|0;c[v+20>>2]=117;td[c[v+4>>2]&31](a,-1);c[j>>2]=-1;i=e;return 1}else if((s|0)==24){i=e;return 1}return 0}function vh(a,e){a=a|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;f=i;g=c[a+468>>2]|0;if((c[a+280>>2]|0)!=0){h=g+56|0;j=c[h>>2]|0;if((j|0)==0){wh(a);k=c[h>>2]|0}else{k=j}c[h>>2]=k+ -1}k=g+20|0;if((c[k>>2]|0)==-1){i=f;return 1}h=c[a+432>>2]|0;j=a+368|0;if((c[j>>2]|0)<=0){i=f;return 1}l=g+60|0;m=g+40|0;n=g+24|0;o=a+436|0;p=g+124|0;q=g+188|0;g=0;a:while(1){r=c[e+(g<<2)>>2]|0;s=c[a+(g<<2)+372>>2]|0;t=c[a+(s<<2)+344>>2]|0;u=c[t+20>>2]|0;v=l+(u<<2)|0;w=c[v>>2]|0;x=m+(s<<2)|0;y=c[x>>2]|0;if((xh(a,w+y|0)|0)==0){c[x>>2]=0;z=c[n+(s<<2)>>2]|0}else{A=xh(a,w+(y+1)|0)|0;B=w+(y+2+A)|0;y=xh(a,B)|0;if((y|0)!=0){w=(c[v>>2]|0)+20|0;if((xh(a,w)|0)==0){C=y;D=w}else{v=y;y=w;while(1){w=v<<1;E=y+1|0;if((w|0)==32768){F=14;break a}if((xh(a,E)|0)==0){C=w;D=E;break}else{v=w;y=E}}}}else{C=0;D=B}do{if((C|0)>=(1<<(d[a+u+232|0]|0)>>1|0)){y=A<<2;if((C|0)>(1<<(d[a+u+248|0]|0)>>1|0)){c[x>>2]=y+12;break}else{c[x>>2]=y+4;break}}else{c[x>>2]=0}}while(0);x=D+14|0;u=C>>1;if((u|0)==0){G=C}else{B=u;u=C;while(1){y=(xh(a,x)|0)==0;v=(y?0:B)|u;y=B>>1;if((y|0)==0){G=v;break}else{B=y;u=v}}}u=n+(s<<2)|0;B=(c[u>>2]|0)+((A|0)==0?G+1|0:~G)|0;c[u>>2]=B;z=B}b[r>>1]=z;b:do{if((c[o>>2]|0)!=0){B=c[t+24>>2]|0;u=p+(B<<2)|0;x=a+B+264|0;B=0;while(1){v=(c[u>>2]|0)+(B*3|0)|0;if((xh(a,v)|0)==0){H=B;I=v}else{break b}while(1){J=H+1|0;if((xh(a,I+1|0)|0)!=0){break}if((J|0)<(c[o>>2]|0)){H=J;I=I+3|0}else{F=28;break a}}v=xh(a,q)|0;y=I+2|0;E=xh(a,y)|0;if((E|0)!=0){if((xh(a,y)|0)!=0){w=E<<1;K=(c[u>>2]|0)+((H|0)<(d[x]|0|0)?189:217)|0;if((xh(a,K)|0)==0){L=w;M=K}else{N=w;w=K;while(1){K=N<<1;O=w+1|0;if((K|0)==32768){F=34;break a}if((xh(a,O)|0)==0){L=K;M=O;break}else{N=K;w=O}}}}else{L=E;M=y}w=M+14|0;N=L>>1;if((N|0)==0){P=L}else{O=N;N=L;while(1){K=(xh(a,w)|0)==0;Q=(K?0:O)|N;K=O>>1;if((K|0)==0){P=Q;break}else{O=K;N=Q}}}}else{P=0}b[r+(c[h+(J<<2)>>2]<<1)>>1]=(v|0)==0?P+1|0:P^65535;if((J|0)<(c[o>>2]|0)){B=J}else{break}}}}while(0);r=g+1|0;if((r|0)<(c[j>>2]|0)){g=r}else{F=39;break}}if((F|0)==14){g=c[a>>2]|0;c[g+20>>2]=117;td[c[g+4>>2]&31](a,-1);c[k>>2]=-1;i=f;return 1}else if((F|0)==28){g=c[a>>2]|0;c[g+20>>2]=117;td[c[g+4>>2]&31](a,-1);c[k>>2]=-1;i=f;return 1}else if((F|0)==34){g=c[a>>2]|0;c[g+20>>2]=117;td[c[g+4>>2]&31](a,-1);c[k>>2]=-1;i=f;return 1}else if((F|0)==39){i=f;return 1}return 0}function wh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;d=i;e=c[b+468>>2]|0;if((vd[c[(c[b+464>>2]|0)+8>>2]&63](b)|0)==0){f=c[b>>2]|0;c[f+20>>2]=25;rd[c[f>>2]&127](b)}f=b+340|0;if((c[f>>2]|0)<=0){g=e+12|0;c[g>>2]=0;h=e+16|0;c[h>>2]=0;j=e+20|0;c[j>>2]=-16;k=b+280|0;l=c[k>>2]|0;m=e+56|0;n=l;c[m>>2]=n;i=d;return}o=b+224|0;p=e+60|0;q=e+24|0;r=e+40|0;s=b+436|0;t=b+412|0;u=e+124|0;v=b+420|0;w=0;do{x=c[b+(w<<2)+344>>2]|0;y=c[o>>2]|0;if((y|0)!=0){if((c[t>>2]|0)==0?(c[v>>2]|0)==0:0){z=8}else{A=y}}else{z=8}if((z|0)==8){z=0;y=(c[p+(c[x+20>>2]<<2)>>2]|0)+0|0;B=y+64|0;do{a[y]=0;y=y+1|0}while((y|0)<(B|0));c[q+(w<<2)>>2]=0;c[r+(w<<2)>>2]=0;A=c[o>>2]|0}if((A|0)==0){if((c[s>>2]|0)!=0){z=12}}else{if((c[t>>2]|0)!=0){z=12}}if((z|0)==12){z=0;nA(c[u+(c[x+24>>2]<<2)>>2]|0,0,256)|0}w=w+1|0}while((w|0)<(c[f>>2]|0));g=e+12|0;c[g>>2]=0;h=e+16|0;c[h>>2]=0;j=e+20|0;c[j>>2]=-16;k=b+280|0;l=c[k>>2]|0;m=e+56|0;n=l;c[m>>2]=n;i=d;return}function xh(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;f=i;g=c[b+468>>2]|0;h=g+16|0;j=c[h>>2]|0;k=g+20|0;if((j|0)<32768){l=b+440|0;m=b+24|0;n=g+12|0;o=c[k>>2]|0;while(1){p=o+ -1|0;c[k>>2]=p;if((o|0)<1){a:do{if((c[l>>2]|0)==0){q=c[m>>2]|0;r=q+4|0;if((c[r>>2]|0)==0?(vd[c[q+12>>2]&63](b)|0)==0:0){s=c[b>>2]|0;c[s+20>>2]=25;rd[c[s>>2]&127](b)}c[r>>2]=(c[r>>2]|0)+ -1;r=c[q>>2]|0;c[q>>2]=r+1;q=a[r]|0;if(!(q<<24>>24==-1)){t=q&255;break}while(1){q=c[m>>2]|0;r=q+4|0;if((c[r>>2]|0)==0?(vd[c[q+12>>2]&63](b)|0)==0:0){s=c[b>>2]|0;c[s+20>>2]=25;rd[c[s>>2]&127](b)}c[r>>2]=(c[r>>2]|0)+ -1;r=c[q>>2]|0;c[q>>2]=r+1;u=d[r]|0;if((u|0)==0){t=255;break a}else if((u|0)!=255){break}}c[l>>2]=u;t=0}else{t=0}}while(0);c[n>>2]=c[n>>2]<<8|t;r=c[k>>2]|0;q=r+8|0;c[k>>2]=q;if((q|0)<0){s=r+9|0;c[k>>2]=s;if((s|0)==0){c[h>>2]=32768;v=0}else{v=s}}else{v=q}}else{v=p}q=c[h>>2]<<1;c[h>>2]=q;if((q|0)<32768){o=v}else{w=q;x=n;y=n;z=v;break}}}else{v=g+12|0;w=j;x=v;y=v;z=c[k>>2]|0}k=d[e]|0;v=c[3168+((k&127)<<2)>>2]|0;j=v>>8;g=v>>16;n=w-g|0;c[h>>2]=n;w=n<<z;z=c[x>>2]|0;if((z|0)>=(w|0)){c[y>>2]=z-w;c[h>>2]=g;h=k&128;if((n|0)<(g|0)){a[e]=h^j;A=k;B=A>>7;i=f;return B|0}else{a[e]=h^v;A=k^128;B=A>>7;i=f;return B|0}}if((n|0)>=32768){A=k;B=A>>7;i=f;return B|0}h=k&128;if((n|0)<(g|0)){a[e]=h^v;A=k^128;B=A>>7;i=f;return B|0}else{a[e]=h^j;A=k;B=A>>7;i=f;return B|0}return 0}function yh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;d=i;e=c[a+24>>2]|0;if((b|0)<=0){i=d;return}f=e+4|0;g=c[f>>2]|0;if((g|0)<(b|0)){h=e+12|0;j=b;k=g;while(1){l=j-k|0;vd[c[h>>2]&63](a)|0;m=c[f>>2]|0;if((l|0)>(m|0)){j=l;k=m}else{n=l;o=m;break}}}else{n=b;o=g}c[e>>2]=(c[e>>2]|0)+n;c[f>>2]=o-n;i=d;return}function zh(a){a=a|0;return}function Ah(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;if((b|0)==0|(d|0)==0){f=c[a>>2]|0;c[f+20>>2]=43;rd[c[f>>2]&127](a)}f=a+24|0;g=c[f>>2]|0;if((g|0)==0){h=md[c[c[a+4>>2]>>2]&63](a,0,28)|0;c[f>>2]=h;j=h}else{j=g}c[j+8>>2]=32;c[j+12>>2]=29;c[j+16>>2]=14;c[j+20>>2]=90;c[j+24>>2]=33;c[j+4>>2]=d;c[j>>2]=b;i=e;return}function Bh(a){a=a|0;return}function Ch(a){a=a|0;var b=0,d=0;b=i;d=c[a>>2]|0;c[d+20>>2]=123;td[c[d+4>>2]&31](a,-1);d=a+24|0;c[c[d>>2]>>2]=3624;c[(c[d>>2]|0)+4>>2]=2;i=b;return 1}function Dh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=i;e=a+4|0;f=md[c[c[e>>2]>>2]&63](a,1,116)|0;c[a+452>>2]=f;c[f>>2]=34;c[f+8>>2]=35;c[f+112>>2]=0;if((b|0)==0){b=md[c[(c[e>>2]|0)+4>>2]&63](a,1,1280)|0;c[f+32>>2]=b;c[f+36>>2]=b+128;c[f+40>>2]=b+256;c[f+44>>2]=b+384;c[f+48>>2]=b+512;c[f+52>>2]=b+640;c[f+56>>2]=b+768;c[f+60>>2]=b+896;c[f+64>>2]=b+1024;c[f+68>>2]=b+1152;if((c[a+436>>2]|0)==0){nA(b|0,0,1280)|0}c[f+4>>2]=31;c[f+12>>2]=92;c[f+16>>2]=0;i=d;return}b=a+36|0;if((c[b>>2]|0)>0){g=a+224|0;h=f+72|0;j=0;k=c[a+216>>2]|0;while(1){l=k+12|0;m=c[l>>2]|0;if((c[g>>2]|0)==0){n=m}else{n=m*3|0}m=c[(c[e>>2]|0)+20>>2]|0;o=ik(c[k+28>>2]|0,c[k+8>>2]|0)|0;p=ik(c[k+32>>2]|0,c[l>>2]|0)|0;c[h+(j<<2)>>2]=ud[m&3](a,1,1,o,p,n)|0;p=j+1|0;if((p|0)<(c[b>>2]|0)){j=p;k=k+88|0}else{q=h;break}}}else{q=f+72|0}c[f+4>>2]=30;c[f+12>>2]=91;c[f+16>>2]=q;i=d;return}function Eh(a){a=a|0;var b=0,d=0,e=0;b=i;c[a+148>>2]=0;d=c[a+452>>2]|0;do{if((c[a+340>>2]|0)<=1){e=c[a+344>>2]|0;if((c[a+332>>2]|0)==1){c[d+28>>2]=c[e+76>>2];break}else{c[d+28>>2]=c[e+12>>2];break}}else{c[d+28>>2]=1}}while(0);c[d+20>>2]=0;c[d+24>>2]=0;i=b;return}function Fh(a){a=a|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;e=c[a+452>>2]|0;if((c[e+16>>2]|0)==0){f=a+156|0;c[f>>2]=0;i=d;return}a:do{if(((c[a+80>>2]|0)!=0?(c[a+224>>2]|0)!=0:0)?(g=a+160|0,(c[g>>2]|0)!=0):0){h=e+112|0;j=c[h>>2]|0;if((j|0)==0){k=a+36|0;l=md[c[c[a+4>>2]>>2]&63](a,1,(c[k>>2]|0)*24|0)|0;c[h>>2]=l;m=k;n=l}else{m=a+36|0;n=j}if((c[m>>2]|0)>0){j=0;l=n;k=c[a+216>>2]|0;h=0;while(1){o=c[k+80>>2]|0;if((o|0)==0){break a}if((b[o>>1]|0)==0){break a}if((b[o+2>>1]|0)==0){break a}if((b[o+16>>1]|0)==0){break a}if((b[o+32>>1]|0)==0){break a}if((b[o+18>>1]|0)==0){break a}if((b[o+4>>1]|0)==0){break a}o=c[g>>2]|0;if((c[o+(j<<8)>>2]|0)<0){break a}p=o+(j<<8)+4|0;c[l+4>>2]=c[p>>2];q=(c[p>>2]|0)==0?h:1;p=o+(j<<8)+8|0;c[l+8>>2]=c[p>>2];r=(c[p>>2]|0)==0?q:1;q=o+(j<<8)+12|0;c[l+12>>2]=c[q>>2];p=(c[q>>2]|0)==0?r:1;r=o+(j<<8)+16|0;c[l+16>>2]=c[r>>2];q=(c[r>>2]|0)==0?p:1;p=o+(j<<8)+20|0;c[l+20>>2]=c[p>>2];h=(c[p>>2]|0)==0?q:1;j=j+1|0;if((j|0)>=(c[m>>2]|0)){break}else{l=l+24|0;k=k+88|0}}if((h|0)!=0){c[e+12>>2]=93;f=a+156|0;c[f>>2]=0;i=d;return}}}}while(0);c[e+12>>2]=91;f=a+156|0;c[f>>2]=0;i=d;return}function Gh(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;b=i;i=i+16|0;d=b;e=a+452|0;f=c[e>>2]|0;g=a+340|0;if((c[g>>2]|0)>0){h=a+4|0;j=f+72|0;k=a+148|0;l=0;do{m=c[a+(l<<2)+344>>2]|0;n=c[m+12>>2]|0;o=aa(n,c[k>>2]|0)|0;c[d+(l<<2)>>2]=Bd[c[(c[h>>2]|0)+32>>2]&15](a,c[j+(c[m+4>>2]<<2)>>2]|0,o,n,1)|0;l=l+1|0}while((l|0)<(c[g>>2]|0))}l=f+24|0;j=c[l>>2]|0;h=f+28|0;k=c[h>>2]|0;a:do{if((j|0)<(k|0)){n=f+20|0;o=a+360|0;m=a+468|0;p=f+32|0;q=k;r=c[n>>2]|0;s=j;b:while(1){if(r>>>0<(c[o>>2]|0)>>>0){t=r;while(1){u=c[g>>2]|0;if((u|0)>0){v=0;w=0;while(1){x=c[a+(w<<2)+344>>2]|0;y=c[x+56>>2]|0;z=aa(y,t)|0;A=c[x+60>>2]|0;if((A|0)>0?(x=c[d+(w<<2)>>2]|0,(y|0)>0):0){B=v;C=0;while(1){D=(y|0)>1?y:1;E=B;F=(c[x+(C+s<<2)>>2]|0)+(z<<7)|0;G=0;while(1){c[p+(E<<2)>>2]=F;G=G+1|0;if((G|0)>=(y|0)){break}else{E=E+1|0;F=F+128|0}}F=B+D|0;E=C+1|0;if((E|0)<(A|0)){B=F;C=E}else{H=F;break}}}else{H=v}w=w+1|0;if((w|0)>=(u|0)){break}else{v=H}}}v=t+1|0;if((Ad[c[(c[m>>2]|0)+4>>2]&127](a,p)|0)==0){break b}if(v>>>0<(c[o>>2]|0)>>>0){t=v}else{break}}I=c[h>>2]|0}else{I=q}c[n>>2]=0;v=s+1|0;if((v|0)<(I|0)){q=I;r=0;s=v}else{break a}}c[l>>2]=s;c[n>>2]=t;J=0;i=b;return J|0}}while(0);t=a+148|0;l=(c[t>>2]|0)+1|0;c[t>>2]=l;t=c[a+332>>2]|0;if(!(l>>>0<t>>>0)){rd[c[(c[a+460>>2]|0)+12>>2]&127](a);J=4;i=b;return J|0}I=c[e>>2]|0;do{if((c[g>>2]|0)<=1){e=c[a+344>>2]|0;if(l>>>0<(t+ -1|0)>>>0){c[I+28>>2]=c[e+12>>2];break}else{c[I+28>>2]=c[e+76>>2];break}}else{c[I+28>>2]=1}}while(0);c[I+20>>2]=0;c[I+24>>2]=0;J=3;i=b;return J|0}function Hh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;d=i;e=c[a+452>>2]|0;f=a+332|0;g=(c[f>>2]|0)+ -1|0;h=a+144|0;j=a+152|0;k=a+460|0;l=a+148|0;m=a+156|0;while(1){n=c[h>>2]|0;o=c[j>>2]|0;if((n|0)>=(o|0)){if((n|0)!=(o|0)){break}if((c[l>>2]|0)>>>0>(c[m>>2]|0)>>>0){break}}if((vd[c[c[k>>2]>>2]&63](a)|0)==0){p=0;q=21;break}}if((q|0)==21){i=d;return p|0}q=a+36|0;k=c[q>>2]|0;if((k|0)>0){l=a+4|0;j=e+72|0;e=a+472|0;h=k;k=0;o=c[a+216>>2]|0;while(1){if((c[o+52>>2]|0)==0){r=h}else{n=o+12|0;s=c[n>>2]|0;t=aa(s,c[m>>2]|0)|0;u=Bd[c[(c[l>>2]|0)+32>>2]&15](a,c[j+(k<<2)>>2]|0,t,s,0)|0;if((c[m>>2]|0)>>>0<g>>>0){v=c[n>>2]|0}else{s=c[n>>2]|0;n=((c[o+32>>2]|0)>>>0)%(s>>>0)|0;v=(n|0)==0?s:n}n=c[(c[e>>2]|0)+(k<<2)+4>>2]|0;if((v|0)>0){s=o+28|0;t=o+40|0;w=o+36|0;x=c[s>>2]|0;y=0;z=c[b+(k<<2)>>2]|0;while(1){if((x|0)==0){A=0}else{B=0;C=c[u+(y<<2)>>2]|0;D=0;while(1){nd[n&63](a,o,C,z,D);E=B+1|0;F=c[s>>2]|0;if(E>>>0<F>>>0){B=E;C=C+128|0;D=(c[w>>2]|0)+D|0}else{A=F;break}}}y=y+1|0;if((y|0)==(v|0)){break}else{x=A;z=z+(c[t>>2]<<2)|0}}}r=c[q>>2]|0}k=k+1|0;if((k|0)>=(r|0)){break}else{h=r;o=o+88|0}}}o=(c[m>>2]|0)+1|0;c[m>>2]=o;p=o>>>0<(c[f>>2]|0)>>>0?3:4;i=d;return p|0}function Ih(a){a=a|0;return 0}function Jh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0;d=i;e=a+452|0;f=c[e>>2]|0;g=(c[a+360>>2]|0)+ -1|0;h=a+332|0;j=c[h>>2]|0;k=j+ -1|0;l=f+24|0;m=c[l>>2]|0;n=f+28|0;o=c[n>>2]|0;do{if((m|0)<(o|0)){p=f+20|0;q=a+436|0;r=a+468|0;s=f+32|0;t=a+340|0;u=a+472|0;v=a+148|0;w=a+368|0;x=o;y=c[p>>2]|0;z=m;a:while(1){if(y>>>0>g>>>0){A=x}else{B=y;while(1){if((c[q>>2]|0)!=0){nA(c[s>>2]|0,0,c[w>>2]<<7|0)|0}if((Ad[c[(c[r>>2]|0)+4>>2]&127](a,s)|0)==0){break a}C=c[t>>2]|0;if((C|0)>0){D=B>>>0<g>>>0;E=C;C=0;F=0;while(1){G=c[a+(F<<2)+344>>2]|0;if((c[G+52>>2]|0)!=0){H=c[G+4>>2]|0;I=c[(c[u>>2]|0)+(H<<2)+4>>2]|0;J=G+56|0;K=c[(D?J:G+72|0)>>2]|0;L=G+40|0;M=c[L>>2]|0;N=aa(c[G+68>>2]|0,B)|0;O=G+60|0;P=c[O>>2]|0;if((P|0)>0){Q=aa(M,z)|0;R=G+76|0;S=G+36|0;b:do{if((K|0)>0){T=P;U=M;V=C;W=(c[b+(H<<2)>>2]|0)+(Q<<2)|0;X=0;while(1){if(!((c[v>>2]|0)>>>0<k>>>0)?(X+z|0)>=(c[R>>2]|0):0){Y=T;Z=U}else{_=N;$=0;ba=19}if((ba|0)==19){while(1){ba=0;nd[I&63](a,G,c[s+($+V<<2)>>2]|0,W,_);$=$+1|0;if(($|0)==(K|0)){break}else{_=(c[S>>2]|0)+_|0;ba=19}}Y=c[O>>2]|0;Z=c[L>>2]|0}ca=(c[J>>2]|0)+V|0;da=X+1|0;if((da|0)>=(Y|0)){ea=ca;break b}T=Y;U=Z;V=ca;W=W+(Z<<2)|0;X=da}}else{X=C;W=0;while(1){V=(c[J>>2]|0)+X|0;U=W+1|0;if((U|0)<(P|0)){X=V;W=U}else{ea=V;break}}}}while(0);fa=c[t>>2]|0;ga=ea}else{fa=E;ga=C}}else{fa=E;ga=(c[G+64>>2]|0)+C|0}F=F+1|0;if((F|0)>=(fa|0)){break}else{E=fa;C=ga}}}C=B+1|0;if(C>>>0>g>>>0){break}else{B=C}}A=c[n>>2]|0}c[p>>2]=0;C=z+1|0;if((C|0)<(A|0)){x=A;y=0;z=C}else{ba=27;break}}if((ba|0)==27){ha=v;ia=c[h>>2]|0;break}c[l>>2]=z;c[p>>2]=B;ja=0;i=d;return ja|0}else{ha=a+148|0;ia=j}}while(0);j=a+156|0;c[j>>2]=(c[j>>2]|0)+1;j=(c[ha>>2]|0)+1|0;c[ha>>2]=j;if(!(j>>>0<ia>>>0)){rd[c[(c[a+460>>2]|0)+12>>2]&127](a);ja=4;i=d;return ja|0}ha=c[e>>2]|0;do{if((c[a+340>>2]|0)<=1){e=c[a+344>>2]|0;if(j>>>0<(ia+ -1|0)>>>0){c[ha+28>>2]=c[e+12>>2];break}else{c[ha+28>>2]=c[e+76>>2];break}}else{c[ha+28>>2]=1}}while(0);c[ha+20>>2]=0;c[ha+24>>2]=0;ja=3;i=d;return ja|0}function Kh(a,d){a=a|0;d=d|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0;f=i;i=i+128|0;g=f;h=c[a+452>>2]|0;j=a+332|0;k=(c[j>>2]|0)+ -1|0;l=a+144|0;m=a+152|0;n=a+460|0;o=a+412|0;p=a+148|0;q=a+156|0;while(1){r=c[l>>2]|0;s=c[m>>2]|0;if((r|0)>(s|0)){break}t=c[n>>2]|0;if((c[t+20>>2]|0)!=0){break}if((r|0)==(s|0)?(c[p>>2]|0)>>>0>((c[q>>2]|0)+((c[o>>2]|0)==0)|0)>>>0:0){break}if((vd[c[t>>2]&63](a)|0)==0){u=0;v=75;break}}if((v|0)==75){i=f;return u|0}v=a+36|0;o=c[v>>2]|0;if((o|0)>0){p=a+4|0;n=h+72|0;m=h+112|0;h=a+472|0;l=g+4|0;t=g+18|0;s=g+32|0;r=g+16|0;w=g+2|0;x=o;o=0;y=c[a+216>>2]|0;while(1){if((c[y+52>>2]|0)==0){z=x}else{A=c[q>>2]|0;if(A>>>0<k>>>0){B=c[y+12>>2]|0;C=B;D=B<<1;E=B;F=0}else{B=c[y+12>>2]|0;G=((c[y+32>>2]|0)>>>0)%(B>>>0)|0;H=(G|0)==0?B:G;C=B;D=H;E=H;F=1}if((A|0)==0){I=Bd[c[(c[p>>2]|0)+32>>2]&15](a,c[n+(o<<2)>>2]|0,0,D,0)|0;J=1}else{H=aa(C,A+ -1|0)|0;A=Bd[c[(c[p>>2]|0)+32>>2]&15](a,c[n+(o<<2)>>2]|0,H,C+D|0,0)|0;I=A+(c[y+12>>2]<<2)|0;J=0}A=c[m>>2]|0;H=o*6|0;B=c[y+80>>2]|0;G=e[B>>1]|0;K=e[B+2>>1]|0;L=e[B+16>>1]|0;M=e[B+32>>1]|0;N=e[B+18>>1]|0;O=e[B+4>>1]|0;B=c[(c[h>>2]|0)+(o<<2)+4>>2]|0;if((E|0)>0){P=(J|0)!=0;Q=(F|0)!=0;R=y+28|0;S=A+((H|1)<<2)|0;T=A+(H+2<<2)|0;U=A+(H+3<<2)|0;V=A+(H+4<<2)|0;W=A+(H+5<<2)|0;H=y+36|0;A=G*9|0;X=O<<7;Y=O<<8;O=G*5|0;Z=N<<7;_=N<<8;N=M<<7;$=M<<8;M=G*36|0;G=L<<7;ba=L<<8;L=K<<7;ca=K<<8;K=y+40|0;da=E+ -1|0;ea=0;fa=c[d+(o<<2)>>2]|0;while(1){ga=c[I+(ea<<2)>>2]|0;if(P&(ea|0)==0){ha=ga}else{ha=c[I+(ea+ -1<<2)>>2]|0}if(Q&(ea|0)==(da|0)){ia=ga}else{ia=c[I+(ea+1<<2)>>2]|0}ja=b[ha>>1]|0;ka=b[ga>>1]|0;la=b[ia>>1]|0;ma=(c[R>>2]|0)+ -1|0;na=ja;oa=ja;ja=ka;pa=ka;ka=la;qa=la;la=0;ra=ga;ga=ia;sa=0;ta=ha;while(1){kk(ra,g,1);if(la>>>0<ma>>>0){ua=b[ta+128>>1]|0;va=b[ra+128>>1]|0;wa=b[ga+128>>1]|0}else{ua=oa;va=pa;wa=qa}xa=c[S>>2]|0;if((xa|0)!=0?(b[w>>1]|0)==0:0){ya=aa(M,ja-va|0)|0;if((ya|0)>-1){za=(ya+L|0)/(ca|0)|0;if((xa|0)>0){Aa=1<<xa;Ba=(za|0)<(Aa|0)?za:Aa+ -1|0}else{Ba=za}}else{za=(L-ya|0)/(ca|0)|0;if((xa|0)>0){ya=1<<xa;Ca=(za|0)<(ya|0)?za:ya+ -1|0}else{Ca=za}Ba=0-Ca|0}b[w>>1]=Ba}za=c[T>>2]|0;if((za|0)!=0?(b[r>>1]|0)==0:0){ya=aa(M,oa-qa|0)|0;if((ya|0)>-1){xa=(ya+G|0)/(ba|0)|0;if((za|0)>0){Aa=1<<za;Da=(xa|0)<(Aa|0)?xa:Aa+ -1|0}else{Da=xa}}else{xa=(G-ya|0)/(ba|0)|0;if((za|0)>0){ya=1<<za;Ea=(xa|0)<(ya|0)?xa:ya+ -1|0}else{Ea=xa}Da=0-Ea|0}b[r>>1]=Da}xa=c[U>>2]|0;if((xa|0)!=0?(b[s>>1]|0)==0:0){ya=aa(A,oa-(pa<<1)+qa|0)|0;if((ya|0)>-1){za=(ya+N|0)/($|0)|0;if((xa|0)>0){Aa=1<<xa;Fa=(za|0)<(Aa|0)?za:Aa+ -1|0}else{Fa=za}}else{za=(N-ya|0)/($|0)|0;if((xa|0)>0){ya=1<<xa;Ga=(za|0)<(ya|0)?za:ya+ -1|0}else{Ga=za}Fa=0-Ga|0}b[s>>1]=Fa}za=c[V>>2]|0;if((za|0)!=0?(b[t>>1]|0)==0:0){ya=aa(O,na-ka-ua+wa|0)|0;if((ya|0)>-1){xa=(ya+Z|0)/(_|0)|0;if((za|0)>0){Aa=1<<za;Ha=(xa|0)<(Aa|0)?xa:Aa+ -1|0}else{Ha=xa}}else{xa=(Z-ya|0)/(_|0)|0;if((za|0)>0){ya=1<<za;Ia=(xa|0)<(ya|0)?xa:ya+ -1|0}else{Ia=xa}Ha=0-Ia|0}b[t>>1]=Ha}xa=c[W>>2]|0;if((xa|0)!=0?(b[l>>1]|0)==0:0){ya=aa(A,ja-(pa<<1)+va|0)|0;if((ya|0)>-1){za=(ya+X|0)/(Y|0)|0;if((xa|0)>0){Aa=1<<xa;Ja=(za|0)<(Aa|0)?za:Aa+ -1|0}else{Ja=za}}else{za=(X-ya|0)/(Y|0)|0;if((xa|0)>0){ya=1<<xa;Ka=(za|0)<(ya|0)?za:ya+ -1|0}else{Ka=za}Ja=0-Ka|0}b[l>>1]=Ja}nd[B&63](a,y,g,fa,sa);la=la+1|0;if(la>>>0>ma>>>0){break}else{za=qa;ya=pa;xa=oa;oa=ua;pa=va;qa=wa;ra=ra+128|0;ga=ga+128|0;sa=(c[H>>2]|0)+sa|0;ta=ta+128|0;ka=za;ja=ya;na=xa}}ea=ea+1|0;if((ea|0)==(E|0)){break}else{fa=fa+(c[K>>2]<<2)|0}}}z=c[v>>2]|0}o=o+1|0;if((o|0)>=(z|0)){break}else{x=z;y=y+88|0}}}y=(c[q>>2]|0)+1|0;c[q>>2]=y;u=y>>>0<(c[j>>2]|0)>>>0?3:4;i=f;return u|0}function Lh(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;d=i;e=b+4|0;f=md[c[c[e>>2]>>2]&63](b,1,32)|0;g=b+480|0;c[g>>2]=f;c[f>>2]=36;h=b+40|0;switch(c[h>>2]|0){case 5:case 4:{if((c[b+36>>2]|0)!=4){j=c[b>>2]|0;c[j+20>>2]=11;rd[c[j>>2]&127](b)}break};case 7:case 6:case 3:case 2:{if((c[b+36>>2]|0)!=3){j=c[b>>2]|0;c[j+20>>2]=11;rd[c[j>>2]&127](b)}break};case 1:{if((c[b+36>>2]|0)!=1){j=c[b>>2]|0;c[j+20>>2]=11;rd[c[j>>2]&127](b)}break};default:{if((c[b+36>>2]|0)<1){j=c[b>>2]|0;c[j+20>>2]=11;rd[c[j>>2]&127](b)}}}j=b+304|0;if((c[j>>2]|0)!=0?(k=c[h>>2]|0,!((k|0)==6|(k|0)==2)):0){k=c[b>>2]|0;c[k+20>>2]=28;rd[c[k>>2]&127](b)}k=c[b+44>>2]|0;do{if((k|0)==4){c[b+120>>2]=4;l=c[h>>2]|0;if((l|0)==5){c[f+4>>2]=8;Sh(b);break}else if((l|0)==4){c[f+4>>2]=9;break}else{l=c[b>>2]|0;c[l+20>>2]=28;rd[c[l>>2]&127](b);break}}else if((k|0)==6){c[b+120>>2]=3;if((c[h>>2]|0)!=6){l=c[b>>2]|0;c[l+20>>2]=28;rd[c[l>>2]&127](b);break}l=c[j>>2]|0;if((l|0)==0){c[f+4>>2]=6;break}else if((l|0)==1){c[f+4>>2]=7;break}else{l=c[b>>2]|0;c[l+20>>2]=28;rd[c[l>>2]&127](b);break}}else if((k|0)==1){c[b+120>>2]=1;l=c[h>>2]|0;if((l|0)==7|(l|0)==3|(l|0)==1){c[f+4>>2]=1;m=b+36|0;if((c[m>>2]|0)<=1){break}n=b+216|0;o=1;do{c[(c[n>>2]|0)+(o*88|0)+52>>2]=0;o=o+1|0}while((o|0)<(c[m>>2]|0))}else if((l|0)==2){m=c[j>>2]|0;if((m|0)==1){c[f+4>>2]=3}else if((m|0)==0){c[f+4>>2]=2}else{m=c[b>>2]|0;c[m+20>>2]=28;rd[c[m>>2]&127](b)}m=c[g>>2]|0;o=md[c[c[e>>2]>>2]&63](b,1,3072)|0;c[m+28>>2]=o;m=0;do{c[o+(m<<2)>>2]=m*19595;c[o+(m+256<<2)>>2]=m*38470;c[o+(m+512<<2)>>2]=(m*7471|0)+32768;m=m+1|0}while((m|0)!=256)}else{m=c[b>>2]|0;c[m+20>>2]=28;rd[c[m>>2]&127](b);break}}else if((k|0)==2){c[b+120>>2]=3;m=c[h>>2]|0;if((m|0)==1){c[f+4>>2]=4;break}else if((m|0)==2){o=c[j>>2]|0;if((o|0)==1){c[f+4>>2]=7;break}else if((o|0)==0){c[f+4>>2]=6;break}else{o=c[b>>2]|0;c[o+20>>2]=28;rd[c[o>>2]&127](b);break}}else if((m|0)==7){c[f+4>>2]=5;o=c[g>>2]|0;l=o+8|0;c[l>>2]=md[c[c[e>>2]>>2]&63](b,1,1024)|0;n=o+12|0;c[n>>2]=md[c[c[e>>2]>>2]&63](b,1,1024)|0;p=o+16|0;c[p>>2]=md[c[c[e>>2]>>2]&63](b,1,1024)|0;q=o+20|0;c[q>>2]=md[c[c[e>>2]>>2]&63](b,1,1024)|0;r=md[c[c[e>>2]>>2]&63](b,1,1280)|0;s=o+24|0;c[s>>2]=r;o=c[l>>2]|0;l=c[p>>2]|0;p=0;t=-128;while(1){c[o+(p<<2)>>2]=(t*183763|0)+32768>>16;c[(c[n>>2]|0)+(p<<2)>>2]=(t*232260|0)+32768>>16;c[l+(p<<2)>>2]=aa(t,-93603)|0;u=(aa(t,-45107)|0)+32768|0;c[(c[q>>2]|0)+(p<<2)>>2]=u;p=p+1|0;if((p|0)==256){break}else{t=t+1|0}}nA(r|0,0,512)|0;t=(c[s>>2]|0)+512|0;c[s>>2]=t;a[t]=0;t=1;while(1){a[(c[s>>2]|0)+t|0]=t;p=t+1|0;if((p|0)==256){v=256;break}else{t=p}}do{a[(c[s>>2]|0)+v|0]=-1;v=v+1|0}while((v|0)!=768)}else if((m|0)==3){c[f+4>>2]=5;Sh(b);break}else{s=c[b>>2]|0;c[s+20>>2]=28;rd[c[s>>2]&127](b);break}}else{if((k|0)==(c[h>>2]|0)){c[b+120>>2]=c[b+36>>2];c[f+4>>2]=9;break}else{s=c[b>>2]|0;c[s+20>>2]=28;rd[c[s>>2]&127](b);break}}}while(0);if((c[b+84>>2]|0)==0){c[b+124>>2]=c[b+120>>2];i=d;return}else{c[b+124>>2]=1;i=d;return}}function Mh(a){a=a|0;return}function Nh(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0;g=i;jk(c[b>>2]|0,d,e,0,f,c[a+112>>2]|0);i=g;return}function Oh(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;k=c[(c[b+480>>2]|0)+28>>2]|0;l=c[b+112>>2]|0;if((h|0)<=0){i=j;return}b=e+4|0;m=e+8|0;if((l|0)==0){i=j;return}else{n=g;o=f;p=h}while(1){h=p+ -1|0;f=c[(c[e>>2]|0)+(o<<2)>>2]|0;g=c[(c[b>>2]|0)+(o<<2)>>2]|0;q=c[(c[m>>2]|0)+(o<<2)>>2]|0;r=o+1|0;s=n+4|0;t=c[n>>2]|0;u=0;do{a[t+u|0]=((c[k+((d[g+u|0]|0|256)<<2)>>2]|0)+(c[k+((d[f+u|0]|0)<<2)>>2]|0)+(c[k+((d[q+u|0]|0|512)<<2)>>2]|0)|0)>>>16;u=u+1|0}while((u|0)!=(l|0));if((h|0)>0){n=s;o=r;p=h}else{break}}i=j;return}function Ph(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;j=i;k=c[(c[b+480>>2]|0)+28>>2]|0;l=c[b+112>>2]|0;if((h|0)<=0){i=j;return}b=e+4|0;m=e+8|0;if((l|0)==0){i=j;return}else{n=g;o=f;p=h}while(1){h=p+ -1|0;f=c[(c[e>>2]|0)+(o<<2)>>2]|0;g=c[(c[b>>2]|0)+(o<<2)>>2]|0;q=c[(c[m>>2]|0)+(o<<2)>>2]|0;r=o+1|0;s=n+4|0;t=c[n>>2]|0;u=0;do{v=d[g+u|0]|0;a[t+u|0]=((c[k+((v|256)<<2)>>2]|0)+(c[k+(((d[f+u|0]|0)+128+v&255)<<2)>>2]|0)+(c[k+((v+128+(d[q+u|0]|0)&255|512)<<2)>>2]|0)|0)>>>16;u=u+1|0}while((u|0)!=(l|0));if((h|0)>0){n=s;o=r;p=h}else{break}}i=j;return}function Qh(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=i;j=c[b+112>>2]|0;if((g|0)<1|(j|0)==0){i=h;return}else{k=f;l=e;m=g}while(1){g=m+ -1|0;e=l+1|0;f=c[(c[d>>2]|0)+(l<<2)>>2]|0;b=k+4|0;n=0;o=c[k>>2]|0;while(1){p=a[f+n|0]|0;a[o+2|0]=p;a[o+1|0]=p;a[o]=p;n=n+1|0;if((n|0)==(j|0)){break}else{o=o+3|0}}if((g|0)>0){k=b;l=e;m=g}else{break}}i=h;return}function Rh(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;j=i;k=c[b+480>>2]|0;l=c[b+112>>2]|0;b=c[k+24>>2]|0;m=c[k+8>>2]|0;n=c[k+12>>2]|0;o=c[k+16>>2]|0;p=c[k+20>>2]|0;if((h|0)<=0){i=j;return}k=e+4|0;q=e+8|0;if((l|0)==0){i=j;return}else{r=g;s=f;t=h}while(1){h=t+ -1|0;f=c[(c[e>>2]|0)+(s<<2)>>2]|0;g=c[(c[k>>2]|0)+(s<<2)>>2]|0;u=c[(c[q>>2]|0)+(s<<2)>>2]|0;v=s+1|0;w=r+4|0;x=0;y=c[r>>2]|0;while(1){z=d[f+x|0]|0;A=d[g+x|0]|0;B=d[u+x|0]|0;a[y]=a[b+((c[m+(B<<2)>>2]|0)+z)|0]|0;a[y+1|0]=a[b+(((c[o+(B<<2)>>2]|0)+(c[p+(A<<2)>>2]|0)>>16)+z)|0]|0;a[y+2|0]=a[b+((c[n+(A<<2)>>2]|0)+z)|0]|0;x=x+1|0;if((x|0)==(l|0)){break}else{y=y+3|0}}if((h|0)>0){r=w;s=v;t=h}else{break}}i=j;return}function Sh(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;d=c[a+480>>2]|0;e=a+4|0;f=d+8|0;c[f>>2]=md[c[c[e>>2]>>2]&63](a,1,1024)|0;g=d+12|0;c[g>>2]=md[c[c[e>>2]>>2]&63](a,1,1024)|0;h=d+16|0;c[h>>2]=md[c[c[e>>2]>>2]&63](a,1,1024)|0;j=d+20|0;c[j>>2]=md[c[c[e>>2]>>2]&63](a,1,1024)|0;c[d+24>>2]=c[a+336>>2];a=c[f>>2]|0;f=c[h>>2]|0;h=0;d=-128;while(1){c[a+(h<<2)>>2]=(d*91881|0)+32768>>16;c[(c[g>>2]|0)+(h<<2)>>2]=(d*116130|0)+32768>>16;c[f+(h<<2)>>2]=aa(d,-46802)|0;e=(aa(d,-22553)|0)+32768|0;c[(c[j>>2]|0)+(h<<2)>>2]=e;h=h+1|0;if((h|0)==256){break}else{d=d+1|0}}i=b;return}function Th(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;h=i;j=c[b+112>>2]|0;if((g|0)<=0){i=h;return}b=d+4|0;k=d+8|0;l=(j|0)==0;m=f;f=e;e=g;while(1){g=e+ -1|0;n=c[(c[d>>2]|0)+(f<<2)>>2]|0;o=c[(c[b>>2]|0)+(f<<2)>>2]|0;p=c[(c[k>>2]|0)+(f<<2)>>2]|0;q=f+1|0;r=m+4|0;if(!l){s=0;t=c[m>>2]|0;while(1){a[t]=a[n+s|0]|0;a[t+1|0]=a[o+s|0]|0;a[t+2|0]=a[p+s|0]|0;s=s+1|0;if((s|0)==(j|0)){break}else{t=t+3|0}}}if((g|0)>0){m=r;f=q;e=g}else{break}}i=h;return}function Uh(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;j=i;k=c[b+112>>2]|0;if((h|0)<=0){i=j;return}b=e+4|0;l=e+8|0;m=(k|0)==0;n=g;g=f;f=h;while(1){h=f+ -1|0;o=c[(c[e>>2]|0)+(g<<2)>>2]|0;p=c[(c[b>>2]|0)+(g<<2)>>2]|0;q=c[(c[l>>2]|0)+(g<<2)>>2]|0;r=g+1|0;s=n+4|0;if(!m){t=0;u=c[n>>2]|0;while(1){v=a[p+t|0]|0;w=v&255;x=d[q+t|0]|0;a[u]=(d[o+t|0]|0)+128+w;a[u+1|0]=v;a[u+2|0]=w+128+x;t=t+1|0;if((t|0)==(k|0)){break}else{u=u+3|0}}}if((h|0)>0){n=s;g=r;f=h}else{break}}i=j;return}function Vh(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;j=i;k=c[b+480>>2]|0;l=c[b+112>>2]|0;m=c[b+336>>2]|0;b=c[k+8>>2]|0;n=c[k+12>>2]|0;o=c[k+16>>2]|0;p=c[k+20>>2]|0;if((h|0)<=0){i=j;return}k=e+4|0;q=e+8|0;r=e+12|0;s=(l|0)==0;t=g;g=f;f=h;while(1){h=f+ -1|0;u=c[(c[e>>2]|0)+(g<<2)>>2]|0;v=c[(c[k>>2]|0)+(g<<2)>>2]|0;w=c[(c[q>>2]|0)+(g<<2)>>2]|0;x=c[(c[r>>2]|0)+(g<<2)>>2]|0;y=g+1|0;z=t+4|0;if(!s){A=0;B=c[t>>2]|0;while(1){C=d[v+A|0]|0;D=d[w+A|0]|0;E=(d[u+A|0]|0)^255;a[B]=a[m+(E-(c[b+(D<<2)>>2]|0))|0]|0;a[B+1|0]=a[m+(E-((c[o+(D<<2)>>2]|0)+(c[p+(C<<2)>>2]|0)>>16))|0]|0;a[B+2|0]=a[m+(E-(c[n+(C<<2)>>2]|0))|0]|0;a[B+3|0]=a[x+A|0]|0;A=A+1|0;if((A|0)==(l|0)){break}else{B=B+4|0}}}if((h|0)>0){t=z;g=y;f=h}else{break}}i=j;return}function Wh(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=i;j=c[b+36>>2]|0;k=c[b+112>>2]|0;if((g|0)<=0){i=h;return}b=(j|0)>0;l=(k|0)==0;m=e;e=f;f=g;while(1){f=f+ -1|0;if(b){g=0;do{if(!l){n=0;o=c[(c[d+(g<<2)>>2]|0)+(m<<2)>>2]|0;p=(c[e>>2]|0)+g|0;while(1){a[p]=a[o]|0;n=n+1|0;if((n|0)==(k|0)){break}else{o=o+1|0;p=p+j|0}}}g=g+1|0}while((g|0)!=(j|0))}if((f|0)<=0){break}else{m=m+1|0;e=e+4|0}}i=h;return}function Xh(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;d=a+4|0;e=md[c[c[d>>2]>>2]&63](a,1,84)|0;c[a+472>>2]=e;c[e>>2]=37;f=a+36|0;if((c[f>>2]|0)<=0){i=b;return}g=e+44|0;e=0;h=c[a+216>>2]|0;while(1){j=md[c[c[d>>2]>>2]&63](a,1,256)|0;c[h+84>>2]=j;nA(j|0,0,256)|0;c[g+(e<<2)>>2]=-1;e=e+1|0;if((e|0)>=(c[f>>2]|0)){break}else{h=h+88|0}}i=b;return}function Yh(a){a=a|0;var d=0,f=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0.0,x=0,y=0;d=i;f=c[a+472>>2]|0;j=a+36|0;if((c[j>>2]|0)<=0){i=d;return}k=f+44|0;l=a+72|0;m=0;n=c[a+216>>2]|0;o=0;p=0;while(1){q=n+36|0;r=n+40|0;a:do{switch((c[q>>2]<<8)+(c[r>>2]|0)|0){case 1290:{s=0;t=36;break};case 1028:{s=0;t=13;break};case 771:{s=0;t=12;break};case 2313:{s=0;t=17;break};case 2570:{s=0;t=18;break};case 1542:{s=0;t=15;break};case 1285:{s=0;t=14;break};case 2827:{s=0;t=19;break};case 516:{s=0;t=39;break};case 3591:{s=0;t=26;break};case 4104:{s=0;t=25;break};case 2064:{s=0;t=33;break};case 2056:{u=c[l>>2]|0;if((u|0)==2){s=u;t=43;break a}else if((u|0)==0){s=0;t=41;break a}else if((u|0)==1){s=u;t=42;break a}else{u=c[a>>2]|0;c[u+20>>2]=49;rd[c[u>>2]&127](a);s=o;t=p;break a}break};case 3341:{s=0;t=21;break};case 2052:{s=0;t=29;break};case 1539:{s=0;t=30;break};case 1026:{s=0;t=31;break};case 1806:{s=0;t=34;break};case 257:{s=0;t=10;break};case 258:{s=0;t=40;break};case 1548:{s=0;t=35;break};case 1032:{s=0;t=37;break};case 2565:{s=0;t=28;break};case 513:{s=0;t=32;break};case 3598:{s=0;t=22;break};case 1799:{s=0;t=16;break};case 774:{s=0;t=38;break};case 4112:{s=0;t=24;break};case 3078:{s=0;t=27;break};case 514:{s=0;t=11;break};case 3855:{s=0;t=23;break};case 3084:{s=0;t=20;break};default:{u=c[a>>2]|0;c[u+20>>2]=7;c[u+24>>2]=c[q>>2];c[u+28>>2]=c[r>>2];rd[c[u>>2]&127](a);s=o;t=p}}}while(0);c[f+(m<<2)+4>>2]=t;do{if(((c[n+52>>2]|0)!=0?(r=k+(m<<2)|0,(c[r>>2]|0)!=(s|0)):0)?(q=c[n+80>>2]|0,(q|0)!=0):0){c[r>>2]=s;if((s|0)==1){r=c[n+84>>2]|0;u=0;do{c[r+(u<<2)>>2]=(aa(b[3632+(u<<1)>>1]|0,e[q+(u<<1)>>1]|0)|0)+2048>>12;u=u+1|0}while((u|0)!=64)}else if((s|0)==2){u=c[n+84>>2]|0;r=0;v=0;while(1){w=+h[3760+(v<<3)>>3];g[u+(r<<2)>>2]=+(e[q+(r<<1)>>1]|0)*w*.125;x=r|1;g[u+(x<<2)>>2]=+(e[q+(x<<1)>>1]|0)*w*1.387039845*.125;y=x+1|0;g[u+(y<<2)>>2]=+(e[q+(y<<1)>>1]|0)*w*1.306562965*.125;y=r|3;g[u+(y<<2)>>2]=+(e[q+(y<<1)>>1]|0)*w*1.175875602*.125;x=y+1|0;g[u+(x<<2)>>2]=+(e[q+(x<<1)>>1]|0)*w*.125;x=y+2|0;g[u+(x<<2)>>2]=+(e[q+(x<<1)>>1]|0)*w*.785694958*.125;x=y+3|0;g[u+(x<<2)>>2]=+(e[q+(x<<1)>>1]|0)*w*.5411961*.125;x=r|7;g[u+(x<<2)>>2]=+(e[q+(x<<1)>>1]|0)*w*.275899379*.125;v=v+1|0;if((v|0)==8){break}else{r=r+8|0}}}else if((s|0)==0){r=c[n+84>>2]|0;v=0;do{c[r+(v<<2)>>2]=e[q+(v<<1)>>1]|0;v=v+1|0}while((v|0)!=64)}else{v=c[a>>2]|0;c[v+20>>2]=49;rd[c[v>>2]&127](a);break}}}while(0);m=m+1|0;if((m|0)>=(c[j>>2]|0)){break}else{n=n+88|0;o=s;p=t}}i=d;return}function Zh(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;d=a+4|0;e=md[c[c[d>>2]>>2]&63](a,1,220)|0;c[a+468>>2]=e;c[e>>2]=38;c[e+8>>2]=39;if((c[a+224>>2]|0)==0){c[e+84>>2]=0;c[e+68>>2]=0;c[e+88>>2]=0;c[e+72>>2]=0;c[e+92>>2]=0;c[e+76>>2]=0;c[e+96>>2]=0;c[e+80>>2]=0;i=b;return}f=a+36|0;g=md[c[c[d>>2]>>2]&63](a,1,c[f>>2]<<8)|0;c[a+160>>2]=g;if((c[f>>2]|0)>0){a=0;do{nA(g+(a<<8)|0,-1,256)|0;a=a+1|0}while((a|0)<(c[f>>2]|0))}f=e+48|0;c[f+0>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;i=b;return}function _h(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;b=i;d=c[a+468>>2]|0;e=a+412|0;f=c[e>>2]|0;g=(f|0)==0;if((c[a+224>>2]|0)==0){if((g?(c[a+420>>2]|0)==0:0)?(c[a+424>>2]|0)==0:0){h=c[a+416>>2]|0;if((c[a+220>>2]|0)!=0|(h|0)<64?(h|0)!=(c[a+436>>2]|0):0){j=46}}else{j=46}if((j|0)==46){h=c[a>>2]|0;c[h+20>>2]=125;td[c[h+4>>2]&31](a,-1)}h=a+436|0;c[d+4>>2]=(c[h>>2]|0)==63?98:99;k=a+340|0;if((c[k>>2]|0)>0){l=d+68|0;m=d+24|0;n=d+84|0;o=0;do{p=c[a+(o<<2)+344>>2]|0;q=c[p+20>>2]|0;ei(a,1,q,l+(q<<2)|0);if((c[h>>2]|0)!=0){q=c[p+24>>2]|0;ei(a,0,q,n+(q<<2)|0)}c[m+(o<<2)>>2]=0;o=o+1|0}while((o|0)<(c[k>>2]|0))}k=a+368|0;if((c[k>>2]|0)<=0){r=d+16|0;c[r>>2]=0;s=d+12|0;c[s>>2]=0;t=d+40|0;c[t>>2]=0;u=a+280|0;v=c[u>>2]|0;w=d+44|0;x=v;c[w>>2]=x;i=b;return}o=d+68|0;m=d+100|0;n=d+84|0;l=d+140|0;q=d+180|0;p=0;do{y=c[a+(c[a+(p<<2)+372>>2]<<2)+344>>2]|0;c[m+(p<<2)>>2]=c[o+(c[y+20>>2]<<2)>>2];c[l+(p<<2)>>2]=c[n+(c[y+24>>2]<<2)>>2];a:do{if((c[y+52>>2]|0)==0){c[q+(p<<2)>>2]=0}else{z=c[y+40>>2]|0;A=c[y+36>>2]|0;switch(c[h>>2]|0){case 15:{B=z+ -1|0;C=A+ -1|0;c[q+(p<<2)>>2]=(c[3880+((B>>>0>3?3:B)<<4)+((C>>>0>3?3:C)<<2)>>2]|0)+1;break a;break};case 8:{C=z+ -1|0;B=A+ -1|0;c[q+(p<<2)>>2]=(c[3840+((C>>>0>2?2:C)*12|0)+((B>>>0>2?2:B)<<2)>>2]|0)+1;break a;break};case 48:{B=z+ -1|0;C=A+ -1|0;c[q+(p<<2)>>2]=(c[4192+((B>>>0>6?6:B)*28|0)+((C>>>0>6?6:C)<<2)>>2]|0)+1;break a;break};case 24:{C=z+ -1|0;B=A+ -1|0;c[q+(p<<2)>>2]=(c[3944+((C>>>0>4?4:C)*20|0)+((B>>>0>4?4:B)<<2)>>2]|0)+1;break a;break};case 35:{B=z+ -1|0;C=A+ -1|0;c[q+(p<<2)>>2]=(c[4048+((B>>>0>5?5:B)*24|0)+((C>>>0>5?5:C)<<2)>>2]|0)+1;break a;break};case 0:{c[q+(p<<2)>>2]=1;break a;break};case 3:{C=z+ -1|0;B=A+ -1|0;c[q+(p<<2)>>2]=(c[3824+((C>>>0>1?1:C)<<3)+((B>>>0>1?1:B)<<2)>>2]|0)+1;break a;break};default:{B=z+ -1|0;z=A+ -1|0;c[q+(p<<2)>>2]=(c[4392+((B>>>0>7?7:B)<<5)+((z>>>0>7?7:z)<<2)>>2]|0)+1;break a}}}}while(0);p=p+1|0}while((p|0)<(c[k>>2]|0));r=d+16|0;c[r>>2]=0;s=d+12|0;c[s>>2]=0;t=d+40|0;c[t>>2]=0;u=a+280|0;v=c[u>>2]|0;w=d+44|0;x=v;c[w>>2]=x;i=b;return}k=a+416|0;p=c[k>>2]|0;if(g){if((p|0)==0){j=7}else{j=11}}else{if(((p|0)>=(f|0)?(p|0)<=(c[a+436>>2]|0):0)?(c[a+340>>2]|0)==1:0){j=7}else{j=11}}do{if((j|0)==7){p=c[a+420>>2]|0;if((p|0)!=0){f=p+ -1|0;if((f|0)==(c[a+424>>2]|0)){D=f}else{j=11;break}}else{D=c[a+424>>2]|0}if((D|0)>13){j=11}}}while(0);if((j|0)==11){j=c[a>>2]|0;c[j+20>>2]=17;c[j+24>>2]=c[e>>2];c[j+28>>2]=c[k>>2];c[j+32>>2]=c[a+420>>2];c[j+36>>2]=c[a+424>>2];rd[c[j>>2]&127](a)}j=a+340|0;D=c[j>>2]|0;if((D|0)>0){f=a+160|0;p=a+420|0;g=a+424|0;q=0;while(1){h=c[(c[a+(q<<2)+344>>2]|0)+4>>2]|0;n=c[f>>2]|0;l=c[e>>2]|0;if((l|0)!=0){if((c[n+(h<<8)>>2]|0)<0){o=c[a>>2]|0;c[o+20>>2]=118;c[o+24>>2]=h;c[o+28>>2]=0;td[c[o+4>>2]&31](a,-1);E=c[e>>2]|0}else{E=l}}else{E=0}b:do{if((E|0)<=(c[k>>2]|0)){l=E;while(1){o=n+(h<<8)+(l<<2)|0;m=c[o>>2]|0;if((c[p>>2]|0)!=(((m|0)<0?0:m)|0)){m=c[a>>2]|0;c[m+20>>2]=118;c[m+24>>2]=h;c[m+28>>2]=l;td[c[m+4>>2]&31](a,-1)}c[o>>2]=c[g>>2];if((l|0)>=(c[k>>2]|0)){break b}l=l+1|0}}}while(0);h=q+1|0;n=c[j>>2]|0;if((h|0)<(n|0)){q=h}else{F=p;G=n;break}}}else{F=a+420|0;G=D}D=c[e>>2]|0;p=(D|0)==0;q=d+4|0;do{if((c[F>>2]|0)==0){if(p){c[q>>2]=94;break}else{c[q>>2]=95;break}}else{if(p){c[q>>2]=96;break}else{c[q>>2]=97;break}}}while(0);c:do{if((G|0)>0){q=d+48|0;p=d+20|0;k=p+4|0;g=d+64|0;E=D;f=0;while(1){n=c[a+(f<<2)+344>>2]|0;if((E|0)==0){if((c[F>>2]|0)==0){h=c[n+20>>2]|0;ei(a,1,h,q+(h<<2)|0)}}else{h=c[n+24>>2]|0;n=q+(h<<2)|0;ei(a,0,h,n);c[g>>2]=c[n>>2]}c[k+(f<<2)>>2]=0;n=f+1|0;if((n|0)>=(c[j>>2]|0)){H=p;break c}E=c[e>>2]|0;f=n}}else{H=d+20|0}}while(0);c[H>>2]=0;r=d+16|0;c[r>>2]=0;s=d+12|0;c[s>>2]=0;t=d+40|0;c[t>>2]=0;u=a+280|0;v=c[u>>2]|0;w=d+44|0;x=v;c[w>>2]=x;i=b;return}function $h(a){a=a|0;var b=0,d=0;b=(c[a+468>>2]|0)+16|0;d=(c[a+464>>2]|0)+24|0;c[d>>2]=(c[d>>2]|0)+((c[b>>2]|0)/8|0);c[b>>2]=0;return}function ai(a,e){a=a|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;f=i;i=i+48|0;g=f+20|0;h=f;j=c[a+468>>2]|0;k=c[a+424>>2]|0;l=a+280|0;if((c[l>>2]|0)!=0?(m=j+44|0,(c[m>>2]|0)==0):0){n=j+16|0;o=c[a+464>>2]|0;p=o+24|0;c[p>>2]=(c[p>>2]|0)+((c[n>>2]|0)/8|0);c[n>>2]=0;if((vd[c[o+8>>2]&63](a)|0)==0){q=0;i=f;return q|0}o=a+340|0;n=j+20|0;if((c[o>>2]|0)>0){p=n+4|0;r=0;do{c[p+(r<<2)>>2]=0;r=r+1|0}while((r|0)<(c[o>>2]|0))}c[n>>2]=0;c[m>>2]=c[l>>2];if((c[a+440>>2]|0)==0){c[j+40>>2]=0}}if((c[j+40>>2]|0)==0){c[g+16>>2]=a;l=a+24|0;m=c[l>>2]|0;n=c[m>>2]|0;c[g>>2]=n;o=c[m+4>>2]|0;r=g+4|0;c[r>>2]=o;p=j+12|0;s=c[p>>2]|0;t=j+16|0;u=c[t>>2]|0;v=j+20|0;c[h+0>>2]=c[v+0>>2];c[h+4>>2]=c[v+4>>2];c[h+8>>2]=c[v+8>>2];c[h+12>>2]=c[v+12>>2];c[h+16>>2]=c[v+16>>2];w=a+368|0;do{if((c[w>>2]|0)>0){x=j+48|0;y=g+8|0;z=g+12|0;A=u;B=0;C=s;while(1){D=c[e+(B<<2)>>2]|0;E=c[a+(B<<2)+372>>2]|0;F=c[x+(c[(c[a+(E<<2)+344>>2]|0)+20>>2]<<2)>>2]|0;if((A|0)<8){if((hi(g,C,A,0)|0)==0){q=0;G=28;break}H=c[y>>2]|0;I=c[z>>2]|0;if((I|0)<8){J=I;K=H;L=1;G=17}else{M=I;N=H;G=15}}else{M=A;N=C;G=15}if((G|0)==15){G=0;H=N>>M+ -8&255;I=c[F+(H<<2)+144>>2]|0;if((I|0)==0){J=M;K=N;L=9;G=17}else{O=M-I|0;P=N;Q=d[F+H+1168|0]|0}}if((G|0)==17){G=0;H=ii(g,K,J,F,L)|0;if((H|0)<0){q=0;G=28;break}O=c[z>>2]|0;P=c[y>>2]|0;Q=H}if((Q|0)==0){R=O;S=P;T=0}else{if((O|0)<(Q|0)){if((hi(g,P,O,Q)|0)==0){q=0;G=28;break}U=c[z>>2]|0;V=c[y>>2]|0}else{U=O;V=P}H=U-Q|0;F=c[4648+(Q<<2)>>2]|0;I=V>>H&F;R=H;S=V;T=I-((I|0)>(c[4648+(Q+ -1<<2)>>2]|0)?0:F)|0}F=h+(E<<2)+4|0;E=(c[F>>2]|0)+T|0;c[F>>2]=E;b[D>>1]=E<<k;E=B+1|0;if((E|0)<(c[w>>2]|0)){A=R;B=E;C=S}else{G=25;break}}if((G|0)==25){W=c[g>>2]|0;X=c[l>>2]|0;Y=c[r>>2]|0;Z=R;_=S;break}else if((G|0)==28){i=f;return q|0}}else{W=n;X=m;Y=o;Z=u;_=s}}while(0);c[X>>2]=W;c[(c[l>>2]|0)+4>>2]=Y;c[p>>2]=_;c[t>>2]=Z;c[v+0>>2]=c[h+0>>2];c[v+4>>2]=c[h+4>>2];c[v+8>>2]=c[h+8>>2];c[v+12>>2]=c[h+12>>2];c[v+16>>2]=c[h+16>>2]}h=j+44|0;c[h>>2]=(c[h>>2]|0)+ -1;q=1;i=f;return q|0}function bi(a,e){a=a|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;f=i;i=i+32|0;g=f;h=c[a+468>>2]|0;j=a+280|0;if((c[j>>2]|0)!=0?(k=h+44|0,(c[k>>2]|0)==0):0){l=h+16|0;m=c[a+464>>2]|0;n=m+24|0;c[n>>2]=(c[n>>2]|0)+((c[l>>2]|0)/8|0);c[l>>2]=0;if((vd[c[m+8>>2]&63](a)|0)==0){o=0;i=f;return o|0}m=a+340|0;l=h+20|0;if((c[m>>2]|0)>0){n=l+4|0;p=0;do{c[n+(p<<2)>>2]=0;p=p+1|0}while((p|0)<(c[m>>2]|0))}c[l>>2]=0;c[k>>2]=c[j>>2];if((c[a+440>>2]|0)==0){c[h+40>>2]=0}}if((c[h+40>>2]|0)==0){j=c[a+416>>2]|0;k=c[a+424>>2]|0;l=c[a+432>>2]|0;m=h+20|0;p=c[m>>2]|0;if((p|0)==0){c[g+16>>2]=a;n=a+24|0;q=c[n>>2]|0;c[g>>2]=c[q>>2];r=g+4|0;c[r>>2]=c[q+4>>2];q=h+12|0;s=c[q>>2]|0;t=h+16|0;u=c[t>>2]|0;v=c[e>>2]|0;e=c[h+64>>2]|0;w=c[a+412>>2]|0;a:do{if((w|0)<=(j|0)){a=g+8|0;x=g+12|0;y=u;z=s;A=w;while(1){if((y|0)<8){if((hi(g,z,y,0)|0)==0){o=0;B=36;break}C=c[a>>2]|0;D=c[x>>2]|0;if((D|0)<8){E=D;F=C;G=1;B=19}else{H=D;I=C;B=17}}else{H=y;I=z;B=17}if((B|0)==17){B=0;C=I>>H+ -8&255;D=c[e+(C<<2)+144>>2]|0;if((D|0)==0){E=H;F=I;G=9;B=19}else{J=H-D|0;K=I;L=d[e+C+1168|0]|0}}if((B|0)==19){B=0;C=ii(g,F,E,e,G)|0;if((C|0)<0){o=0;B=36;break}J=c[x>>2]|0;K=c[a>>2]|0;L=C}M=L>>4;C=L&15;if((C|0)==0){if((M|0)==0){N=0;O=J;P=K;break a}else if((M|0)!=15){B=27;break}Q=J;R=K;S=A+15|0}else{D=M+A|0;if((J|0)<(C|0)){if((hi(g,K,J,C)|0)==0){o=0;B=36;break}T=c[x>>2]|0;U=c[a>>2]|0}else{T=J;U=K}V=T-C|0;W=c[4648+(C<<2)>>2]|0;X=U>>V&W;b[v+(c[l+(D<<2)>>2]<<1)>>1]=X-((X|0)>(c[4648+(C+ -1<<2)>>2]|0)?0:W)<<k;Q=V;R=U;S=D}if((S|0)<(j|0)){y=Q;z=R;A=S+1|0}else{N=0;O=Q;P=R;break a}}if((B|0)==27){A=1<<M;do{if((J|0)<(M|0)){if((hi(g,K,J,M)|0)==0){o=0;i=f;return o|0}else{Y=c[x>>2]|0;Z=c[a>>2]|0;break}}else{Y=J;Z=K}}while(0);a=Y-M|0;N=A+ -1+(Z>>a&c[4648+(M<<2)>>2])|0;O=a;P=Z;break}else if((B|0)==36){i=f;return o|0}}else{N=0;O=u;P=s}}while(0);c[c[n>>2]>>2]=c[g>>2];c[(c[n>>2]|0)+4>>2]=c[r>>2];c[q>>2]=P;c[t>>2]=O;_=N}else{_=p+ -1|0}c[m>>2]=_}_=h+44|0;c[_>>2]=(c[_>>2]|0)+ -1;o=1;i=f;return o|0}function ci(a,d){a=a|0;d=d|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;f=i;i=i+32|0;g=f;h=c[a+468>>2]|0;j=a+280|0;if((c[j>>2]|0)!=0?(k=h+44|0,(c[k>>2]|0)==0):0){l=h+16|0;m=c[a+464>>2]|0;n=m+24|0;c[n>>2]=(c[n>>2]|0)+((c[l>>2]|0)/8|0);c[l>>2]=0;if((vd[c[m+8>>2]&63](a)|0)==0){o=0;i=f;return o|0}m=a+340|0;l=h+20|0;if((c[m>>2]|0)>0){n=l+4|0;p=0;do{c[n+(p<<2)>>2]=0;p=p+1|0}while((p|0)<(c[m>>2]|0))}c[l>>2]=0;c[k>>2]=c[j>>2];if((c[a+440>>2]|0)==0){c[h+40>>2]=0}}c[g+16>>2]=a;j=a+24|0;k=c[j>>2]|0;l=c[k>>2]|0;c[g>>2]=l;m=c[k+4>>2]|0;p=g+4|0;c[p>>2]=m;n=h+12|0;q=c[n>>2]|0;r=h+16|0;s=c[r>>2]|0;t=1<<c[a+424>>2];u=a+368|0;do{if((c[u>>2]|0)>0){a=g+8|0;v=g+12|0;w=s;x=0;y=q;while(1){if((w|0)<1){if((hi(g,y,w,1)|0)==0){o=0;z=19;break}A=c[v>>2]|0;B=c[a>>2]|0}else{A=w;B=y}C=A+ -1|0;if((1<<C&B|0)!=0){D=c[d+(x<<2)>>2]|0;b[D>>1]=e[D>>1]|0|t}D=x+1|0;if((D|0)<(c[u>>2]|0)){w=C;x=D;y=B}else{z=17;break}}if((z|0)==17){E=c[g>>2]|0;F=c[j>>2]|0;G=c[p>>2]|0;H=C;I=B;break}else if((z|0)==19){i=f;return o|0}}else{E=l;F=k;G=m;H=s;I=q}}while(0);c[F>>2]=E;c[(c[j>>2]|0)+4>>2]=G;c[n>>2]=I;c[r>>2]=H;H=h+44|0;c[H>>2]=(c[H>>2]|0)+ -1;o=1;i=f;return o|0}function di(a,e){a=a|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0;f=i;i=i+288|0;g=f+256|0;h=f;j=c[a+468>>2]|0;k=a+280|0;if((c[k>>2]|0)!=0?(l=j+44|0,(c[l>>2]|0)==0):0){m=j+16|0;n=c[a+464>>2]|0;o=n+24|0;c[o>>2]=(c[o>>2]|0)+((c[m>>2]|0)/8|0);c[m>>2]=0;if((vd[c[n+8>>2]&63](a)|0)==0){p=0;i=f;return p|0}n=a+340|0;m=j+20|0;if((c[n>>2]|0)>0){o=m+4|0;q=0;do{c[o+(q<<2)>>2]=0;q=q+1|0}while((q|0)<(c[n>>2]|0))}c[m>>2]=0;c[l>>2]=c[k>>2];if((c[a+440>>2]|0)==0){c[j+40>>2]=0}}do{if((c[j+40>>2]|0)==0){k=c[a+416>>2]|0;l=c[a+424>>2]|0;m=1<<l;n=-1<<l;l=c[a+432>>2]|0;c[g+16>>2]=a;q=a+24|0;o=c[q>>2]|0;c[g>>2]=c[o>>2];r=g+4|0;c[r>>2]=c[o+4>>2];o=j+12|0;s=c[o>>2]|0;t=j+16|0;u=c[t>>2]|0;v=j+20|0;w=c[v>>2]|0;x=c[e>>2]|0;y=c[j+64>>2]|0;z=c[a+412>>2]|0;A=g+8|0;B=g+12|0;a:do{if((w|0)==0){C=u;D=s;E=z;F=0;while(1){if((C|0)<8){if((hi(g,D,C,0)|0)==0){G=F;break a}H=c[A>>2]|0;I=c[B>>2]|0;if((I|0)<8){J=I;K=H;L=1;M=18}else{N=I;O=H;M=16}}else{N=C;O=D;M=16}if((M|0)==16){M=0;H=O>>N+ -8&255;I=c[y+(H<<2)+144>>2]|0;if((I|0)==0){J=N;K=O;L=9;M=18}else{P=N-I|0;Q=O;R=d[y+H+1168|0]|0}}if((M|0)==18){M=0;H=ii(g,K,J,y,L)|0;if((H|0)<0){G=F;break a}P=c[B>>2]|0;Q=c[A>>2]|0;R=H}S=R>>4;H=R&15;if((H|0)==1){M=22}else if((H|0)==0){if((S|0)==15){T=P;U=Q;V=15;W=0}else{break}}else{H=c[a>>2]|0;c[H+20>>2]=121;td[c[H+4>>2]&31](a,-1);M=22}if((M|0)==22){M=0;if((P|0)<1){if((hi(g,Q,P,1)|0)==0){G=F;break a}X=c[B>>2]|0;Y=c[A>>2]|0}else{X=P;Y=Q}H=X+ -1|0;T=H;U=Y;V=S;W=(1<<H&Y|0)==0?n:m}H=T;I=U;Z=E;_=V;b:while(1){$=x+(c[l+(Z<<2)>>2]<<1)|0;do{if((b[$>>1]|0)==0){if((_|0)<1){aa=H;ba=I;ca=Z;break b}else{da=H;ea=I;fa=_+ -1|0}}else{if((H|0)<1){if((hi(g,I,H,1)|0)==0){G=F;break a}ga=c[B>>2]|0;ha=c[A>>2]|0}else{ga=H;ha=I}ia=ga+ -1|0;if((1<<ia&ha|0)!=0?(ja=b[$>>1]|0,ka=ja<<16>>16,(ka&m|0)==0):0){if(ja<<16>>16>-1){b[$>>1]=ka+m;da=ia;ea=ha;fa=_;break}else{b[$>>1]=ka+n;da=ia;ea=ha;fa=_;break}}else{da=ia;ea=ha;fa=_}}}while(0);$=Z+1|0;if((Z|0)<(k|0)){H=da;I=ea;Z=$;_=fa}else{aa=da;ba=ea;ca=$;break}}if((W|0)==0){la=F}else{_=c[l+(ca<<2)>>2]|0;b[x+(_<<1)>>1]=W;c[h+(F<<2)>>2]=_;la=F+1|0}if((ca|0)<(k|0)){C=aa;D=ba;E=ca+1|0;F=la}else{ma=0;na=aa;oa=ba;M=59;break a}}D=1<<S;if((S|0)!=0){if((P|0)<(S|0)){if((hi(g,Q,P,S)|0)==0){G=F;break}pa=c[B>>2]|0;qa=c[A>>2]|0}else{pa=P;qa=Q}C=pa-S|0;_=(qa>>C&c[4648+(S<<2)>>2])+D|0;if((_|0)==0){ma=0;na=C;oa=qa;M=59}else{ra=_;sa=C;ta=qa;ua=E;va=F;M=47}}else{ra=D;sa=P;ta=Q;ua=E;va=F;M=47}}else{ra=w;sa=u;ta=s;ua=z;va=0;M=47}}while(0);c:do{if((M|0)==47){z=sa;s=ta;u=ua;while(1){w=x+(c[l+(u<<2)>>2]<<1)|0;do{if((b[w>>1]|0)!=0){if((z|0)<1){if((hi(g,s,z,1)|0)==0){G=va;break c}wa=c[B>>2]|0;xa=c[A>>2]|0}else{wa=z;xa=s}y=wa+ -1|0;if((1<<y&xa|0)!=0?(D=b[w>>1]|0,C=D<<16>>16,(C&m|0)==0):0){if(D<<16>>16>-1){b[w>>1]=C+m;ya=y;za=xa;break}else{b[w>>1]=C+n;ya=y;za=xa;break}}else{ya=y;za=xa}}else{ya=z;za=s}}while(0);if((u|0)<(k|0)){z=ya;s=za;u=u+1|0}else{break}}ma=ra+ -1|0;na=ya;oa=za;M=59}}while(0);if((M|0)==59){c[c[q>>2]>>2]=c[g>>2];c[(c[q>>2]|0)+4>>2]=c[r>>2];c[o>>2]=oa;c[t>>2]=na;c[v>>2]=ma;break}if((G|0)==0){p=0;i=f;return p|0}else{Aa=G}while(1){k=Aa+ -1|0;b[x+(c[h+(k<<2)>>2]<<1)>>1]=0;if((k|0)==0){p=0;break}else{Aa=k}}i=f;return p|0}}while(0);Aa=j+44|0;c[Aa>>2]=(c[Aa>>2]|0)+ -1;p=1;i=f;return p|0}function ei(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;h=i;i=i+1296|0;j=h+1028|0;k=h;if(f>>>0>3){l=c[b>>2]|0;c[l+20>>2]=52;c[l+24>>2]=f;rd[c[l>>2]&127](b)}l=(e|0)!=0;if(l){m=b+(f<<2)+180|0}else{m=b+(f<<2)+196|0}e=c[m>>2]|0;if((e|0)==0){m=c[b>>2]|0;c[m+20>>2]=52;c[m+24>>2]=f;rd[c[m>>2]&127](b)}m=c[g>>2]|0;if((m|0)==0){f=md[c[c[b+4>>2]>>2]&63](b,1,1424)|0;c[g>>2]=f;n=b;o=f}else{n=b;o=m}c[o+140>>2]=e;m=1;f=0;while(1){g=a[e+m|0]|0;p=g&255;q=p+f|0;if((q|0)>256){r=c[b>>2]|0;c[r+20>>2]=9;rd[c[r>>2]&127](n)}if(g<<24>>24==0){s=f}else{nA(j+f|0,m&255|0,p|0)|0;s=q}m=m+1|0;if((m|0)==17){break}else{f=s}}a[j+s|0]=0;f=a[j]|0;if(f<<24>>24==0){t=1;u=0}else{m=f;q=0;p=0;g=f<<24>>24;while(1){if((m<<24>>24|0)==(g|0)){f=q;r=p;while(1){v=r+1|0;c[k+(r<<2)>>2]=f;w=f+1|0;x=a[j+v|0]|0;if((x<<24>>24|0)==(g|0)){f=w;r=v}else{y=x;z=w;A=v;break}}}else{y=m;z=q;A=p}if((z|0)>=(1<<g|0)){r=c[b>>2]|0;c[r+20>>2]=9;rd[c[r>>2]&127](n)}if(y<<24>>24==0){t=1;u=0;break}else{m=y;q=z<<1;p=A;g=g+1|0}}}while(1){g=e+t|0;if((a[g]|0)==0){c[o+(t<<2)>>2]=-1;B=u}else{c[o+(t<<2)+72>>2]=u-(c[k+(u<<2)>>2]|0);A=(d[g]|0)+u|0;c[o+(t<<2)>>2]=c[k+(A+ -1<<2)>>2];B=A}t=t+1|0;if((t|0)==17){break}else{u=B}}c[o+68>>2]=1048575;nA(o+144|0,0,1024)|0;B=1;u=0;while(1){t=e+B|0;A=a[t]|0;a:do{if(A<<24>>24==0){C=u}else{g=8-B|0;p=1<<g;if((p|0)>0){D=1;E=u}else{z=1;q=u;while(1){y=q+1|0;if((z|0)<(A&255|0)){z=z+1|0;q=y}else{C=y;break a}}}while(1){q=e+E+17|0;z=p;y=c[k+(E<<2)>>2]<<g;while(1){c[o+(y<<2)+144>>2]=B;a[o+y+1168|0]=a[q]|0;z=z+ -1|0;if((z|0)<=0){break}else{y=y+1|0}}y=E+1|0;if((D|0)<(d[t]|0)){D=D+1|0;E=y}else{C=y;break}}}}while(0);B=B+1|0;if((B|0)==9){break}else{u=C}}if(l&(s|0)>0){F=0}else{i=h;return}do{if((d[e+F+17|0]|0)>15){l=c[b>>2]|0;c[l+20>>2]=9;rd[c[l>>2]&127](n)}F=F+1|0}while((F|0)!=(s|0));i=h;return}function fi(a,e){a=a|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0;f=i;i=i+48|0;g=f+20|0;h=f;j=c[a+468>>2]|0;k=a+280|0;if((c[k>>2]|0)!=0?(l=j+44|0,(c[l>>2]|0)==0):0){m=j+16|0;n=c[a+464>>2]|0;o=n+24|0;c[o>>2]=(c[o>>2]|0)+((c[m>>2]|0)/8|0);c[m>>2]=0;if((vd[c[n+8>>2]&63](a)|0)==0){p=0;i=f;return p|0}n=a+340|0;m=j+20|0;if((c[n>>2]|0)>0){o=m+4|0;q=0;do{c[o+(q<<2)>>2]=0;q=q+1|0}while((q|0)<(c[n>>2]|0))}c[m>>2]=0;c[l>>2]=c[k>>2];if((c[a+440>>2]|0)==0){c[j+40>>2]=0}}if((c[j+40>>2]|0)==0){k=c[a+432>>2]|0;l=c[a+436>>2]|0;c[g+16>>2]=a;m=a+24|0;n=c[m>>2]|0;q=c[n>>2]|0;c[g>>2]=q;o=c[n+4>>2]|0;r=g+4|0;c[r>>2]=o;s=j+12|0;t=c[s>>2]|0;u=j+16|0;v=c[u>>2]|0;w=j+20|0;c[h+0>>2]=c[w+0>>2];c[h+4>>2]=c[w+4>>2];c[h+8>>2]=c[w+8>>2];c[h+12>>2]=c[w+12>>2];c[h+16>>2]=c[w+16>>2];x=a+368|0;do{if((c[x>>2]|0)>0){y=j+100|0;z=g+8|0;A=g+12|0;B=j+140|0;C=j+180|0;D=v;E=0;F=t;a:while(1){G=c[e+(E<<2)>>2]|0;H=c[y+(E<<2)>>2]|0;if((D|0)<8){if((hi(g,F,D,0)|0)==0){p=0;I=65;break}J=c[z>>2]|0;K=c[A>>2]|0;if((K|0)<8){L=K;M=J;N=1;I=17}else{O=K;P=J;I=15}}else{O=D;P=F;I=15}if((I|0)==15){I=0;J=P>>O+ -8&255;K=c[H+(J<<2)+144>>2]|0;if((K|0)==0){L=O;M=P;N=9;I=17}else{Q=O-K|0;R=P;S=d[H+J+1168|0]|0}}if((I|0)==17){I=0;J=ii(g,M,L,H,N)|0;if((J|0)<0){p=0;I=65;break}Q=c[A>>2]|0;R=c[z>>2]|0;S=J}J=c[B+(E<<2)>>2]|0;H=c[C+(E<<2)>>2]|0;K=(S|0)!=0;b:do{if((H|0)==0){if(K){if((Q|0)<(S|0)){if((hi(g,R,Q,S)|0)==0){p=0;I=65;break a}T=c[A>>2]|0;U=c[z>>2]|0}else{T=Q;U=R}V=T-S|0;W=U;X=1;I=46}else{V=Q;W=R;X=1;I=46}}else{if(K){if((Q|0)<(S|0)){if((hi(g,R,Q,S)|0)==0){p=0;I=65;break a}Y=c[A>>2]|0;Z=c[z>>2]|0}else{Y=Q;Z=R}_=Y-S|0;$=c[4648+(S<<2)>>2]|0;aa=Z>>_&$;ba=_;ca=Z;da=aa-((aa|0)>(c[4648+(S+ -1<<2)>>2]|0)?0:$)|0}else{ba=Q;ca=R;da=0}$=h+(c[a+(E<<2)+372>>2]<<2)+4|0;aa=(c[$>>2]|0)+da|0;c[$>>2]=aa;b[G>>1]=aa;if((H|0)>1){aa=ba;$=ca;_=1;while(1){if((aa|0)<8){if((hi(g,$,aa,0)|0)==0){p=0;I=65;break a}ea=c[z>>2]|0;fa=c[A>>2]|0;if((fa|0)<8){ga=fa;ha=ea;ia=1;I=31}else{ja=fa;ka=ea;I=29}}else{ja=aa;ka=$;I=29}if((I|0)==29){I=0;ea=ka>>ja+ -8&255;fa=c[J+(ea<<2)+144>>2]|0;if((fa|0)==0){ga=ja;ha=ka;ia=9;I=31}else{la=ja-fa|0;ma=ka;na=d[J+ea+1168|0]|0}}if((I|0)==31){I=0;ea=ii(g,ha,ga,J,ia)|0;if((ea|0)<0){p=0;I=65;break a}la=c[A>>2]|0;ma=c[z>>2]|0;na=ea}ea=na>>4;fa=na&15;if((fa|0)==0){if((ea|0)!=15){oa=la;pa=ma;break b}qa=la;ra=ma;sa=_+15|0}else{ta=ea+_|0;if((la|0)<(fa|0)){if((hi(g,ma,la,fa)|0)==0){p=0;I=65;break a}ua=c[A>>2]|0;va=c[z>>2]|0}else{ua=la;va=ma}ea=ua-fa|0;wa=c[4648+(fa<<2)>>2]|0;xa=va>>ea&wa;b[G+(c[k+(ta<<2)>>2]<<1)>>1]=xa-((xa|0)>(c[4648+(fa+ -1<<2)>>2]|0)?0:wa);qa=ea;ra=va;sa=ta}ta=sa+1|0;if((ta|0)<(H|0)){aa=qa;$=ra;_=ta}else{V=qa;W=ra;X=ta;I=46;break}}}else{V=ba;W=ca;X=1;I=46}}}while(0);c:do{if((I|0)==46){I=0;if((X|0)>(l|0)){oa=V;pa=W}else{H=V;G=W;K=X;while(1){if((H|0)<8){if((hi(g,G,H,0)|0)==0){p=0;I=65;break a}_=c[z>>2]|0;$=c[A>>2]|0;if(($|0)<8){ya=$;za=_;Aa=1;I=52}else{Ba=$;Ca=_;I=50}}else{Ba=H;Ca=G;I=50}if((I|0)==50){I=0;_=Ca>>Ba+ -8&255;$=c[J+(_<<2)+144>>2]|0;if(($|0)==0){ya=Ba;za=Ca;Aa=9;I=52}else{Da=Ba-$|0;Ea=Ca;Fa=d[J+_+1168|0]|0}}if((I|0)==52){I=0;_=ii(g,za,ya,J,Aa)|0;if((_|0)<0){p=0;I=65;break a}Da=c[A>>2]|0;Ea=c[z>>2]|0;Fa=_}_=Fa>>4;$=Fa&15;if(($|0)==0){if((_|0)==15){Ga=15;Ha=Da;Ia=Ea}else{oa=Da;pa=Ea;break c}}else{if((Da|0)<($|0)){if((hi(g,Ea,Da,$)|0)==0){p=0;I=65;break a}Ja=c[A>>2]|0;Ka=c[z>>2]|0}else{Ja=Da;Ka=Ea}Ga=_;Ha=Ja-$|0;Ia=Ka}$=K+1+Ga|0;if(($|0)>(l|0)){oa=Ha;pa=Ia;break}else{H=Ha;G=Ia;K=$}}}}}while(0);J=E+1|0;if((J|0)<(c[x>>2]|0)){D=oa;E=J;F=pa}else{I=62;break}}if((I|0)==62){La=c[g>>2]|0;Ma=c[m>>2]|0;Na=c[r>>2]|0;Oa=oa;Pa=pa;break}else if((I|0)==65){i=f;return p|0}}else{La=q;Ma=n;Na=o;Oa=v;Pa=t}}while(0);c[Ma>>2]=La;c[(c[m>>2]|0)+4>>2]=Na;c[s>>2]=Pa;c[u>>2]=Oa;c[w+0>>2]=c[h+0>>2];c[w+4>>2]=c[h+4>>2];c[w+8>>2]=c[h+8>>2];c[w+12>>2]=c[h+12>>2];c[w+16>>2]=c[h+16>>2]}h=j+44|0;c[h>>2]=(c[h>>2]|0)+ -1;p=1;i=f;return p|0}



function sq(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;g=i;i=i+256|0;h=g+248|0;j=g+244|0;k=g+240|0;l=g+252|0;m=g+80|0;n=g+40|0;o=g+32|0;p=g+16|0;q=g+12|0;r=g+8|0;s=g+4|0;t=g;u=g+24|0;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;a[l]=f;c[o>>2]=0;c[r>>2]=0;if((((c[h>>2]|0)!=0?(c[q>>2]=c[c[h>>2]>>2],(c[q>>2]|0)!=0):0)?(c[s>>2]=c[(c[q>>2]|0)+4>>2],c[t>>2]=c[c[q>>2]>>2],(c[t>>2]|0)!=0):0)?(c[s>>2]|0)!=0:0){if((c[s>>2]|0)!=30296){if((c[(c[s>>2]|0)+28>>2]|0)!=0){nA(m|0,0,160)|0;f=n+0|0;e=f+40|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(e|0));c[m+156>>2]=n;c[m>>2]=c[t>>2];c[m+72>>2]=c[(c[s>>2]|0)+4>>2];c[o>>2]=nq(c[t>>2]|0,30296,p)|0;if((c[o>>2]|0)==0){c[r>>2]=c[p>>2];if((c[k>>2]|0)!=0){qq(c[q>>2]|0,0,c[k>>2]|0)|0}c[o>>2]=Ad[c[(c[s>>2]|0)+28>>2]&127](c[q>>2]|0,m)|0;if((c[o>>2]|0)==0){c[o>>2]=$o(c[c[q>>2]>>2]|0,m,c[j>>2]|0)|0}if((a[l]|0)==0?(c[k>>2]|0)!=0:0){c[u>>2]=0-(c[c[k>>2]>>2]|0);c[u+4>>2]=0-(c[(c[k>>2]|0)+4>>2]|0);qq(c[q>>2]|0,0,u)|0}if((c[o>>2]|0)==0?(c[o>>2]=cq(c[r>>2]|0,m)|0,(c[o>>2]|0)==0):0){m=(c[r>>2]|0)+12|0;u=(c[q>>2]|0)+12|0;c[m+0>>2]=c[u+0>>2];c[m+4>>2]=c[u+4>>2];if((a[l]|0)!=0){oq(c[q>>2]|0)}c[c[h>>2]>>2]=c[r>>2]}}}else{v=24}}}else{v=24}if((v|0)==24){c[o>>2]=6}if((c[o>>2]|0)==0){w=c[o>>2]|0;i=g;return w|0}if((c[r>>2]|0)==0){w=c[o>>2]|0;i=g;return w|0}oq(c[r>>2]|0);w=c[o>>2]|0;i=g;return w|0}function tq(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;i=i+16|0;d=b+8|0;e=b;f=b+4|0;c[d>>2]=a;c[f>>2]=30360;while(1){if((c[c[f>>2]>>2]|0)==0){break}c[e>>2]=ap(c[d>>2]|0,c[c[f>>2]>>2]|0)|0;c[f>>2]=(c[f>>2]|0)+4}i=b;return}function uq(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;i=i+16|0;d=b+12|0;e=b;f=b+4|0;g=b+8|0;c[e>>2]=a;c[g>>2]=ir()|0;if((c[g>>2]|0)==0){c[d>>2]=7;h=c[d>>2]|0;i=b;return h|0}c[f>>2]=hp(c[g>>2]|0,c[e>>2]|0)|0;if((c[f>>2]|0)!=0){mr(c[g>>2]|0)}else{tq(c[c[e>>2]>>2]|0)}c[d>>2]=c[f>>2];h=c[d>>2]|0;i=b;return h|0}function vq(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b+4|0;e=b;c[d>>2]=a;if((c[d>>2]|0)==0){i=b;return 0}c[e>>2]=c[c[d>>2]>>2];ip(c[d>>2]|0)|0;mr(c[e>>2]|0);i=b;return 0}function wq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+32|0;e=d+20|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;k=d+16|0;c[f>>2]=a;c[g>>2]=b;c[k>>2]=0;if((c[f>>2]|0)==0){c[e>>2]=6;l=c[e>>2]|0;i=d;return l|0}c[j>>2]=c[c[f>>2]>>2];c[k>>2]=Sn(c[j>>2]|0,132,h)|0;if((c[h>>2]|0)==0){c[(c[k>>2]|0)+128>>2]=c[f>>2];xq((c[k>>2]|0)+64|0,c[j>>2]|0);xq((c[k>>2]|0)+96|0,c[j>>2]|0)}c[c[g>>2]>>2]=c[k>>2];c[e>>2]=c[h>>2];l=c[e>>2]|0;i=d;return l|0}function xq(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;f=e+4|0;g=e;c[f>>2]=b;c[g>>2]=d;c[(c[f>>2]|0)+24>>2]=c[g>>2];c[(c[f>>2]|0)+8>>2]=0;c[(c[f>>2]|0)+12>>2]=0;c[c[f>>2]>>2]=0;c[(c[f>>2]|0)+4>>2]=0;c[(c[f>>2]|0)+20>>2]=-1;a[(c[f>>2]|0)+28|0]=0;i=e;return}function yq(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+32|0;h=g+16|0;j=g;k=g+4|0;l=g+8|0;m=g+12|0;c[h>>2]=a;c[j>>2]=b;c[k>>2]=d;c[l>>2]=e;c[m>>2]=f;c[(c[h>>2]|0)+60>>2]=c[j>>2];c[(c[h>>2]|0)+44>>2]=c[k>>2];c[(c[h>>2]|0)+48>>2]=c[l>>2];c[(c[h>>2]|0)+56>>2]=c[m>>2];if((c[(c[h>>2]|0)+56>>2]|0)>=65536){n=c[l>>2]|0;o=c[h>>2]|0;p=o+52|0;c[p>>2]=n;q=c[h>>2]|0;zq(q);i=g;return}c[(c[h>>2]|0)+56>>2]=65536;n=c[l>>2]|0;o=c[h>>2]|0;p=o+52|0;c[p>>2]=n;q=c[h>>2]|0;zq(q);i=g;return}function zq(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;if((c[d>>2]|0)==0){i=b;return}Aq((c[d>>2]|0)+64|0);Aq((c[d>>2]|0)+96|0);i=b;return}function Aq(b){b=b|0;var d=0,e=0;d=i;i=i+16|0;e=d;c[e>>2]=b;c[c[e>>2]>>2]=0;c[(c[e>>2]|0)+20>>2]=-1;a[(c[e>>2]|0)+28|0]=0;i=d;return}function Bq(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+48|0;f=e+44|0;g=e+40|0;h=e+36|0;j=e+32|0;k=e+24|0;l=e+8|0;m=e+4|0;n=e;o=e+16|0;c[f>>2]=b;c[g>>2]=d;c[h>>2]=0;c[k>>2]=(c[c[g>>2]>>2]|0)-(c[(c[f>>2]|0)+8>>2]|0);c[k+4>>2]=(c[(c[g>>2]|0)+4>>2]|0)-(c[(c[f>>2]|0)+12>>2]|0);if((c[k>>2]|0)==0?(c[k+4>>2]|0)==0:0){p=c[h>>2]|0;i=e;return p|0}c[n>>2]=Hn(k)|0;c[l>>2]=Lp(c[k>>2]|0,c[k+4>>2]|0)|0;Qp(k,c[(c[f>>2]|0)+60>>2]|0,(c[l>>2]|0)+5898240|0);if((a[(c[f>>2]|0)+20|0]|0)!=0){c[h>>2]=Cq(c[f>>2]|0,c[l>>2]|0,c[n>>2]|0)|0;if((c[h>>2]|0)!=0){p=c[h>>2]|0;i=e;return p|0}}else{c[(c[f>>2]|0)+4>>2]=c[l>>2];c[h>>2]=Dq(c[f>>2]|0,c[n>>2]|0)|0;if((c[h>>2]|0)!=0){p=c[h>>2]|0;i=e;return p|0}}c[j>>2]=(c[f>>2]|0)+64;c[m>>2]=1;while(1){if((c[m>>2]|0)<0){break}c[o>>2]=(c[c[g>>2]>>2]|0)+(c[k>>2]|0);c[o+4>>2]=(c[(c[g>>2]|0)+4>>2]|0)+(c[k+4>>2]|0);c[h>>2]=Eq(c[j>>2]|0,o,1)|0;if((c[h>>2]|0)!=0){q=11;break}c[k>>2]=0-(c[k>>2]|0);c[k+4>>2]=0-(c[k+4>>2]|0);c[m>>2]=(c[m>>2]|0)+ -1;c[j>>2]=(c[j>>2]|0)+32}if((q|0)==11){p=c[h>>2]|0;i=e;return p|0}c[c[f>>2]>>2]=c[l>>2];l=(c[f>>2]|0)+8|0;q=c[g>>2]|0;c[l+0>>2]=c[q+0>>2];c[l+4>>2]=c[q+4>>2];c[(c[f>>2]|0)+16>>2]=c[n>>2];p=c[h>>2]|0;i=e;return p|0}function Cq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+48|0;g=f+32|0;h=f;j=f+4|0;k=f+8|0;l=f+16|0;m=f+24|0;n=f+28|0;c[g>>2]=b;c[h>>2]=d;c[j>>2]=e;Qp(k,c[(c[g>>2]|0)+60>>2]|0,(c[h>>2]|0)+5898240|0);c[l>>2]=(c[(c[g>>2]|0)+8>>2]|0)+(c[k>>2]|0);c[l+4>>2]=(c[(c[g>>2]|0)+12>>2]|0)+(c[k+4>>2]|0);c[n>>2]=(c[g>>2]|0)+64;c[m>>2]=er(c[n>>2]|0,l)|0;if((c[m>>2]|0)!=0){o=c[m>>2]|0;i=f;return o|0}c[l>>2]=(c[(c[g>>2]|0)+8>>2]|0)-(c[k>>2]|0);c[l+4>>2]=(c[(c[g>>2]|0)+12>>2]|0)-(c[k+4>>2]|0);c[n>>2]=(c[n>>2]|0)+32;c[m>>2]=er(c[n>>2]|0,l)|0;c[(c[g>>2]|0)+24>>2]=c[h>>2];a[(c[g>>2]|0)+20|0]=0;c[(c[g>>2]|0)+36>>2]=c[j>>2];o=c[m>>2]|0;i=f;return o|0}function Dq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+32|0;e=d+16|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=0;c[h>>2]=Rp(c[c[e>>2]>>2]|0,c[(c[e>>2]|0)+4>>2]|0)|0;if((c[h>>2]|0)==0){k=c[g>>2]|0;i=d;return k|0}c[j>>2]=0;c[j>>2]=(c[h>>2]|0)<0?1:0;c[g>>2]=Uq(c[e>>2]|0,c[j>>2]|0,c[f>>2]|0)|0;if((c[g>>2]|0)!=0){k=c[g>>2]|0;i=d;return k|0}c[g>>2]=Vq(c[e>>2]|0,1-(c[j>>2]|0)|0,c[f>>2]|0)|0;k=c[g>>2]|0;i=d;return k|0}function Eq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+32|0;g=f+20|0;h=f;j=f+4|0;k=f+24|0;l=f+12|0;m=f+16|0;n=f+8|0;c[h>>2]=b;c[j>>2]=d;a[k]=e;c[l>>2]=0;e=c[c[h>>2]>>2]|0;if((a[(c[h>>2]|0)+16|0]|0)==0){if((((e>>>0>0?((c[(c[(c[h>>2]|0)+8>>2]|0)+((c[c[h>>2]>>2]|0)-1<<3)>>2]|0)-(c[c[j>>2]>>2]|0)|0)>-2:0)?((c[(c[(c[h>>2]|0)+8>>2]|0)+((c[c[h>>2]>>2]|0)-1<<3)>>2]|0)-(c[c[j>>2]>>2]|0)|0)<2:0)?((c[(c[(c[h>>2]|0)+8>>2]|0)+((c[c[h>>2]>>2]|0)-1<<3)+4>>2]|0)-(c[(c[j>>2]|0)+4>>2]|0)|0)>-2:0)?((c[(c[(c[h>>2]|0)+8>>2]|0)+((c[c[h>>2]>>2]|0)-1<<3)+4>>2]|0)-(c[(c[j>>2]|0)+4>>2]|0)|0)<2:0){c[g>>2]=c[l>>2];o=c[g>>2]|0;i=f;return o|0}c[l>>2]=dr(c[h>>2]|0,1)|0;if((c[l>>2]|0)==0){c[m>>2]=(c[(c[h>>2]|0)+8>>2]|0)+(c[c[h>>2]>>2]<<3);c[n>>2]=(c[(c[h>>2]|0)+12>>2]|0)+(c[c[h>>2]>>2]|0);d=c[m>>2]|0;m=c[j>>2]|0;c[d+0>>2]=c[m+0>>2];c[d+4>>2]=c[m+4>>2];a[c[n>>2]|0]=1;n=c[h>>2]|0;c[n>>2]=(c[n>>2]|0)+1}}else{n=(c[(c[h>>2]|0)+8>>2]|0)+(e-1<<3)|0;e=c[j>>2]|0;c[n+0>>2]=c[e+0>>2];c[n+4>>2]=c[e+4>>2]}a[(c[h>>2]|0)+16|0]=a[k]|0;c[g>>2]=c[l>>2];o=c[g>>2]|0;i=f;return o|0}function Fq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;f=i;i=i+416|0;g=f+404|0;h=f+400|0;j=f+396|0;k=f+392|0;l=f+120|0;m=f+116|0;n=f+112|0;o=f+408|0;p=f+108|0;q=f+104|0;r=f+96|0;s=f+88|0;t=f+80|0;u=f+76|0;v=f+72|0;w=f+28|0;x=f;y=f+4|0;z=f+8|0;A=f+16|0;B=f+24|0;C=f+32|0;D=f+36|0;E=f+40|0;F=f+48|0;G=f+56|0;H=f+60|0;I=f+64|0;J=f+68|0;c[g>>2]=b;c[h>>2]=d;c[j>>2]=e;c[k>>2]=0;c[n>>2]=l+240;a[o]=1;if(((((((((c[(c[g>>2]|0)+8>>2]|0)-(c[c[h>>2]>>2]|0)|0)>-2?((c[(c[g>>2]|0)+8>>2]|0)-(c[c[h>>2]>>2]|0)|0)<2:0)?((c[(c[g>>2]|0)+12>>2]|0)-(c[(c[h>>2]|0)+4>>2]|0)|0)>-2:0)?((c[(c[g>>2]|0)+12>>2]|0)-(c[(c[h>>2]|0)+4>>2]|0)|0)<2:0)?((c[c[h>>2]>>2]|0)-(c[c[j>>2]>>2]|0)|0)>-2:0)?((c[c[h>>2]>>2]|0)-(c[c[j>>2]>>2]|0)|0)<2:0)?((c[(c[h>>2]|0)+4>>2]|0)-(c[(c[j>>2]|0)+4>>2]|0)|0)>-2:0)?((c[(c[h>>2]|0)+4>>2]|0)-(c[(c[j>>2]|0)+4>>2]|0)|0)<2:0){e=(c[g>>2]|0)+8|0;d=c[j>>2]|0;c[e+0>>2]=c[d+0>>2];c[e+4>>2]=c[d+4>>2];K=c[k>>2]|0;i=f;return K|0}c[m>>2]=l;d=c[m>>2]|0;e=c[j>>2]|0;c[d+0>>2]=c[e+0>>2];c[d+4>>2]=c[e+4>>2];e=(c[m>>2]|0)+8|0;d=c[h>>2]|0;c[e+0>>2]=c[d+0>>2];c[e+4>>2]=c[d+4>>2];d=(c[m>>2]|0)+16|0;e=(c[g>>2]|0)+8|0;c[d+0>>2]=c[e+0>>2];c[d+4>>2]=c[e+4>>2];a:while(1){L=c[g>>2]|0;if(!((c[m>>2]|0)>>>0>=l>>>0)){M=37;break}e=c[L>>2]|0;c[q>>2]=e;c[p>>2]=e;if((c[m>>2]|0)>>>0<(c[n>>2]|0)>>>0?!((Gq(c[m>>2]|0,p,q)|0)<<24>>24!=0):0){if((a[(c[g>>2]|0)+20|0]|0)!=0){c[c[g>>2]>>2]=c[p>>2]}Hq(c[m>>2]|0);c[m>>2]=(c[m>>2]|0)+16;continue}do{if((a[o]|0)!=0){a[o]=0;if((a[(c[g>>2]|0)+20|0]|0)!=0){c[k>>2]=Cq(c[g>>2]|0,c[p>>2]|0,0)|0;break}else{c[(c[g>>2]|0)+4>>2]=c[p>>2];c[k>>2]=Dq(c[g>>2]|0,0)|0;break}}else{if((Iq(Rp(c[c[g>>2]>>2]|0,c[p>>2]|0)|0)|0)>491520){e=(c[g>>2]|0)+8|0;d=(c[m>>2]|0)+16|0;c[e+0>>2]=c[d+0>>2];c[e+4>>2]=c[d+4>>2];c[(c[g>>2]|0)+4>>2]=c[p>>2];c[(c[g>>2]|0)+48>>2]=0;c[k>>2]=Dq(c[g>>2]|0,0)|0;c[(c[g>>2]|0)+48>>2]=c[(c[g>>2]|0)+52>>2]}}}while(0);if((c[k>>2]|0)!=0){M=38;break}c[w>>2]=0;c[t>>2]=(Rp(c[p>>2]|0,c[q>>2]|0)|0)/2|0;c[u>>2]=(c[p>>2]|0)+(c[t>>2]|0);d=c[(c[g>>2]|0)+60>>2]|0;c[x>>2]=On(d,Hp(c[t>>2]|0)|0)|0;if((a[(c[g>>2]|0)+40|0]|0)!=0){c[w>>2]=Lp((c[c[m>>2]>>2]|0)-(c[(c[m>>2]|0)+16>>2]|0)|0,(c[(c[m>>2]|0)+4>>2]|0)-(c[(c[m>>2]|0)+20>>2]|0)|0)|0}c[y>>2]=(c[g>>2]|0)+64;c[z>>2]=0;while(1){if((c[z>>2]|0)>1){break}c[v>>2]=5898240-(aa(c[z>>2]|0,11796480)|0);Qp(r,c[x>>2]|0,(c[u>>2]|0)+(c[v>>2]|0)|0);c[r>>2]=(c[r>>2]|0)+(c[(c[m>>2]|0)+8>>2]|0);d=r+4|0;c[d>>2]=(c[d>>2]|0)+(c[(c[m>>2]|0)+12>>2]|0);Qp(s,c[(c[g>>2]|0)+60>>2]|0,(c[q>>2]|0)+(c[v>>2]|0)|0);c[s>>2]=(c[s>>2]|0)+(c[c[m>>2]>>2]|0);d=s+4|0;c[d>>2]=(c[d>>2]|0)+(c[(c[m>>2]|0)+4>>2]|0);if((a[(c[g>>2]|0)+40|0]|0)!=0){d=(c[(c[y>>2]|0)+8>>2]|0)+((c[c[y>>2]>>2]|0)-1<<3)|0;c[A+0>>2]=c[d+0>>2];c[A+4>>2]=c[d+4>>2];c[B>>2]=Lp((c[s>>2]|0)-(c[A>>2]|0)|0,(c[s+4>>2]|0)-(c[A+4>>2]|0)|0)|0;if((Iq(Rp(c[w>>2]|0,c[B>>2]|0)|0)|0)>5898240){c[C>>2]=Lp((c[(c[m>>2]|0)+16>>2]|0)-(c[A>>2]|0)|0,(c[(c[m>>2]|0)+20>>2]|0)-(c[A+4>>2]|0)|0)|0;c[D>>2]=Lp((c[c[m>>2]>>2]|0)-(c[s>>2]|0)|0,(c[(c[m>>2]|0)+4>>2]|0)-(c[s+4>>2]|0)|0)|0;c[E>>2]=(c[s>>2]|0)-(c[A>>2]|0);c[E+4>>2]=(c[s+4>>2]|0)-(c[A+4>>2]|0);c[G>>2]=Hn(E)|0;c[H>>2]=Iq(Jp((c[B>>2]|0)-(c[D>>2]|0)|0)|0)|0;c[I>>2]=Iq(Jp((c[C>>2]|0)-(c[D>>2]|0)|0)|0)|0;c[J>>2]=In(c[G>>2]|0,c[H>>2]|0,c[I>>2]|0)|0;Qp(F,c[J>>2]|0,c[C>>2]|0);c[F>>2]=(c[F>>2]|0)+(c[A>>2]|0);d=F+4|0;c[d>>2]=(c[d>>2]|0)+(c[A+4>>2]|0);a[(c[y>>2]|0)+16|0]=0;c[k>>2]=Eq(c[y>>2]|0,F,0)|0;if((c[k>>2]|0)!=0){M=38;break a}c[k>>2]=Eq(c[y>>2]|0,s,0)|0;if((c[k>>2]|0)!=0){M=38;break a}c[k>>2]=Jq(c[y>>2]|0,r,A)|0;if((c[k>>2]|0)!=0){M=38;break a}c[k>>2]=Eq(c[y>>2]|0,s,0)|0;if((c[k>>2]|0)!=0){M=38;break a}}else{M=34}}else{M=34}if((M|0)==34?(M=0,c[k>>2]=Jq(c[y>>2]|0,r,s)|0,(c[k>>2]|0)!=0):0){M=38;break a}c[z>>2]=(c[z>>2]|0)+1;c[y>>2]=(c[y>>2]|0)+32}c[m>>2]=(c[m>>2]|0)+ -16;c[c[g>>2]>>2]=c[q>>2]}if((M|0)==37){q=L+8|0;L=c[j>>2]|0;c[q+0>>2]=c[L+0>>2];c[q+4>>2]=c[L+4>>2];K=c[k>>2]|0;i=f;return K|0}else if((M|0)==38){K=c[k>>2]|0;i=f;return K|0}return 0}function Gq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;i=i+48|0;f=e+36|0;g=e;h=e+4|0;j=e+8|0;k=e+16|0;l=e+24|0;m=e+28|0;n=e+32|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[j>>2]=(c[(c[f>>2]|0)+8>>2]|0)-(c[(c[f>>2]|0)+16>>2]|0);c[j+4>>2]=(c[(c[f>>2]|0)+12>>2]|0)-(c[(c[f>>2]|0)+20>>2]|0);c[k>>2]=(c[c[f>>2]>>2]|0)-(c[(c[f>>2]|0)+8>>2]|0);c[k+4>>2]=(c[(c[f>>2]|0)+4>>2]|0)-(c[(c[f>>2]|0)+12>>2]|0);if(((c[j>>2]|0)>-2?(c[j>>2]|0)<2:0)?(c[j+4>>2]|0)>-2:0){o=(c[j+4>>2]|0)<2}else{o=0}c[m>>2]=o&1;if(((c[k>>2]|0)>-2?(c[k>>2]|0)<2:0)?(c[k+4>>2]|0)>-2:0){p=(c[k+4>>2]|0)<2}else{p=0}c[n>>2]=p&1;p=(c[n>>2]|0)!=0;do{if((c[m>>2]|0)!=0){if(!p){n=Lp(c[k>>2]|0,c[k+4>>2]|0)|0;c[c[h>>2]>>2]=n;c[c[g>>2]>>2]=n}}else{n=Lp(c[j>>2]|0,c[j+4>>2]|0)|0;if(p){c[c[h>>2]>>2]=n;c[c[g>>2]>>2]=n;break}else{c[c[g>>2]>>2]=n;n=Lp(c[k>>2]|0,c[k+4>>2]|0)|0;c[c[h>>2]>>2]=n;break}}}while(0);c[l>>2]=Iq(Rp(c[c[g>>2]>>2]|0,c[c[h>>2]>>2]|0)|0)|0;i=e;return(c[l>>2]|0)<1966080&255|0}function Hq(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;i=i+16|0;d=b+8|0;e=b;f=b+4|0;c[d>>2]=a;c[(c[d>>2]|0)+32>>2]=c[(c[d>>2]|0)+16>>2];c[f>>2]=c[(c[d>>2]|0)+8>>2];a=((c[(c[d>>2]|0)+16>>2]|0)+(c[f>>2]|0)|0)/2|0;c[(c[d>>2]|0)+24>>2]=a;c[e>>2]=a;a=((c[c[d>>2]>>2]|0)+(c[f>>2]|0)|0)/2|0;c[(c[d>>2]|0)+8>>2]=a;c[f>>2]=a;c[(c[d>>2]|0)+16>>2]=((c[e>>2]|0)+(c[f>>2]|0)|0)/2|0;c[(c[d>>2]|0)+36>>2]=c[(c[d>>2]|0)+20>>2];c[f>>2]=c[(c[d>>2]|0)+12>>2];a=((c[(c[d>>2]|0)+20>>2]|0)+(c[f>>2]|0)|0)/2|0;c[(c[d>>2]|0)+28>>2]=a;c[e>>2]=a;a=((c[(c[d>>2]|0)+4>>2]|0)+(c[f>>2]|0)|0)/2|0;c[(c[d>>2]|0)+12>>2]=a;c[f>>2]=a;c[(c[d>>2]|0)+20>>2]=((c[e>>2]|0)+(c[f>>2]|0)|0)/2|0;i=b;return}function Iq(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=c[d>>2]|0;i=b;return((c[d>>2]|0)>=0?a:0-a|0)|0}function Jq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+32|0;g=f+20|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;m=f+16|0;c[g>>2]=b;c[h>>2]=d;c[j>>2]=e;c[k>>2]=dr(c[g>>2]|0,2)|0;if((c[k>>2]|0)!=0){n=c[g>>2]|0;o=n+16|0;a[o]=0;p=c[k>>2]|0;i=f;return p|0}c[l>>2]=(c[(c[g>>2]|0)+8>>2]|0)+(c[c[g>>2]>>2]<<3);c[m>>2]=(c[(c[g>>2]|0)+12>>2]|0)+(c[c[g>>2]>>2]|0);e=c[l>>2]|0;d=c[h>>2]|0;c[e+0>>2]=c[d+0>>2];c[e+4>>2]=c[d+4>>2];d=(c[l>>2]|0)+8|0;l=c[j>>2]|0;c[d+0>>2]=c[l+0>>2];c[d+4>>2]=c[l+4>>2];a[c[m>>2]|0]=0;a[(c[m>>2]|0)+1|0]=1;m=c[g>>2]|0;c[m>>2]=(c[m>>2]|0)+2;n=c[g>>2]|0;o=n+16|0;a[o]=0;p=c[k>>2]|0;i=f;return p|0}function Kq(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;g=i;i=i+464|0;h=g+144|0;j=g+132|0;k=g+136|0;l=g+140|0;m=g+148|0;n=g+152|0;o=g+448|0;p=g+452|0;q=g+456|0;r=g+128|0;s=g+124|0;t=g+120|0;u=g+112|0;v=g+104|0;w=g+96|0;x=g+88|0;y=g+84|0;z=g+80|0;A=g+32|0;B=g;C=g+4|0;D=g+8|0;E=g+12|0;F=g+16|0;G=g+20|0;H=g+24|0;I=g+36|0;J=g+40|0;K=g+44|0;L=g+48|0;M=g+56|0;N=g+64|0;O=g+68|0;P=g+72|0;Q=g+76|0;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;c[l>>2]=f;c[m>>2]=0;c[p>>2]=n+256;a[q]=1;if(((((((((((((c[(c[h>>2]|0)+8>>2]|0)-(c[c[j>>2]>>2]|0)|0)>-2?((c[(c[h>>2]|0)+8>>2]|0)-(c[c[j>>2]>>2]|0)|0)<2:0)?((c[(c[h>>2]|0)+12>>2]|0)-(c[(c[j>>2]|0)+4>>2]|0)|0)>-2:0)?((c[(c[h>>2]|0)+12>>2]|0)-(c[(c[j>>2]|0)+4>>2]|0)|0)<2:0)?((c[c[j>>2]>>2]|0)-(c[c[k>>2]>>2]|0)|0)>-2:0)?((c[c[j>>2]>>2]|0)-(c[c[k>>2]>>2]|0)|0)<2:0)?((c[(c[j>>2]|0)+4>>2]|0)-(c[(c[k>>2]|0)+4>>2]|0)|0)>-2:0)?((c[(c[j>>2]|0)+4>>2]|0)-(c[(c[k>>2]|0)+4>>2]|0)|0)<2:0)?((c[c[k>>2]>>2]|0)-(c[c[l>>2]>>2]|0)|0)>-2:0)?((c[c[k>>2]>>2]|0)-(c[c[l>>2]>>2]|0)|0)<2:0)?((c[(c[k>>2]|0)+4>>2]|0)-(c[(c[l>>2]|0)+4>>2]|0)|0)>-2:0)?((c[(c[k>>2]|0)+4>>2]|0)-(c[(c[l>>2]|0)+4>>2]|0)|0)<2:0){f=(c[h>>2]|0)+8|0;e=c[l>>2]|0;c[f+0>>2]=c[e+0>>2];c[f+4>>2]=c[e+4>>2];R=c[m>>2]|0;i=g;return R|0}c[o>>2]=n;e=c[o>>2]|0;f=c[l>>2]|0;c[e+0>>2]=c[f+0>>2];c[e+4>>2]=c[f+4>>2];f=(c[o>>2]|0)+8|0;e=c[k>>2]|0;c[f+0>>2]=c[e+0>>2];c[f+4>>2]=c[e+4>>2];e=(c[o>>2]|0)+16|0;f=c[j>>2]|0;c[e+0>>2]=c[f+0>>2];c[e+4>>2]=c[f+4>>2];f=(c[o>>2]|0)+24|0;e=(c[h>>2]|0)+8|0;c[f+0>>2]=c[e+0>>2];c[f+4>>2]=c[e+4>>2];a:while(1){S=c[h>>2]|0;if(!((c[o>>2]|0)>>>0>=n>>>0)){T=41;break}e=c[S>>2]|0;c[s>>2]=e;c[t>>2]=e;c[r>>2]=e;if((c[o>>2]|0)>>>0<(c[p>>2]|0)>>>0?!((Lq(c[o>>2]|0,r,s,t)|0)<<24>>24!=0):0){if((a[(c[h>>2]|0)+20|0]|0)!=0){c[c[h>>2]>>2]=c[r>>2]}Mq(c[o>>2]|0);c[o>>2]=(c[o>>2]|0)+24;continue}do{if((a[q]|0)!=0){a[q]=0;if((a[(c[h>>2]|0)+20|0]|0)!=0){c[m>>2]=Cq(c[h>>2]|0,c[r>>2]|0,0)|0;break}else{c[(c[h>>2]|0)+4>>2]=c[r>>2];c[m>>2]=Dq(c[h>>2]|0,0)|0;break}}else{if((Iq(Rp(c[c[h>>2]>>2]|0,c[r>>2]|0)|0)|0)>368640){e=(c[h>>2]|0)+8|0;f=(c[o>>2]|0)+24|0;c[e+0>>2]=c[f+0>>2];c[e+4>>2]=c[f+4>>2];c[(c[h>>2]|0)+4>>2]=c[r>>2];c[(c[h>>2]|0)+48>>2]=0;c[m>>2]=Dq(c[h>>2]|0,0)|0;c[(c[h>>2]|0)+48>>2]=c[(c[h>>2]|0)+52>>2]}}}while(0);if((c[m>>2]|0)!=0){T=42;break}c[C>>2]=0;c[x>>2]=(Rp(c[r>>2]|0,c[s>>2]|0)|0)/2|0;c[z>>2]=(Rp(c[s>>2]|0,c[t>>2]|0)|0)/2|0;c[y>>2]=Nq(c[r>>2]|0,c[s>>2]|0)|0;c[A>>2]=Nq(c[s>>2]|0,c[t>>2]|0)|0;f=c[(c[h>>2]|0)+60>>2]|0;c[D>>2]=On(f,Hp(c[x>>2]|0)|0)|0;f=c[(c[h>>2]|0)+60>>2]|0;c[E>>2]=On(f,Hp(c[z>>2]|0)|0)|0;if((a[(c[h>>2]|0)+40|0]|0)!=0){c[C>>2]=Lp((c[c[o>>2]>>2]|0)-(c[(c[o>>2]|0)+24>>2]|0)|0,(c[(c[o>>2]|0)+4>>2]|0)-(c[(c[o>>2]|0)+28>>2]|0)|0)|0}c[F>>2]=(c[h>>2]|0)+64;c[G>>2]=0;while(1){if((c[G>>2]|0)>1){break}c[B>>2]=5898240-(aa(c[G>>2]|0,11796480)|0);Qp(u,c[D>>2]|0,(c[y>>2]|0)+(c[B>>2]|0)|0);c[u>>2]=(c[u>>2]|0)+(c[(c[o>>2]|0)+16>>2]|0);f=u+4|0;c[f>>2]=(c[f>>2]|0)+(c[(c[o>>2]|0)+20>>2]|0);Qp(v,c[E>>2]|0,(c[A>>2]|0)+(c[B>>2]|0)|0);c[v>>2]=(c[v>>2]|0)+(c[(c[o>>2]|0)+8>>2]|0);f=v+4|0;c[f>>2]=(c[f>>2]|0)+(c[(c[o>>2]|0)+12>>2]|0);Qp(w,c[(c[h>>2]|0)+60>>2]|0,(c[t>>2]|0)+(c[B>>2]|0)|0);c[w>>2]=(c[w>>2]|0)+(c[c[o>>2]>>2]|0);f=w+4|0;c[f>>2]=(c[f>>2]|0)+(c[(c[o>>2]|0)+4>>2]|0);if((a[(c[h>>2]|0)+40|0]|0)!=0){f=(c[(c[F>>2]|0)+8>>2]|0)+((c[c[F>>2]>>2]|0)-1<<3)|0;c[H+0>>2]=c[f+0>>2];c[H+4>>2]=c[f+4>>2];c[I>>2]=Lp((c[w>>2]|0)-(c[H>>2]|0)|0,(c[w+4>>2]|0)-(c[H+4>>2]|0)|0)|0;if((Iq(Rp(c[C>>2]|0,c[I>>2]|0)|0)|0)>5898240){c[J>>2]=Lp((c[(c[o>>2]|0)+24>>2]|0)-(c[H>>2]|0)|0,(c[(c[o>>2]|0)+28>>2]|0)-(c[H+4>>2]|0)|0)|0;c[K>>2]=Lp((c[c[o>>2]>>2]|0)-(c[w>>2]|0)|0,(c[(c[o>>2]|0)+4>>2]|0)-(c[w+4>>2]|0)|0)|0;c[L>>2]=(c[w>>2]|0)-(c[H>>2]|0);c[L+4>>2]=(c[w+4>>2]|0)-(c[H+4>>2]|0);c[N>>2]=Hn(L)|0;c[O>>2]=Iq(Jp((c[I>>2]|0)-(c[K>>2]|0)|0)|0)|0;c[P>>2]=Iq(Jp((c[J>>2]|0)-(c[K>>2]|0)|0)|0)|0;c[Q>>2]=In(c[N>>2]|0,c[O>>2]|0,c[P>>2]|0)|0;Qp(M,c[Q>>2]|0,c[J>>2]|0);c[M>>2]=(c[M>>2]|0)+(c[H>>2]|0);f=M+4|0;c[f>>2]=(c[f>>2]|0)+(c[H+4>>2]|0);a[(c[F>>2]|0)+16|0]=0;c[m>>2]=Eq(c[F>>2]|0,M,0)|0;if((c[m>>2]|0)!=0){T=42;break a}c[m>>2]=Eq(c[F>>2]|0,w,0)|0;if((c[m>>2]|0)!=0){T=42;break a}c[m>>2]=Oq(c[F>>2]|0,v,u,H)|0;if((c[m>>2]|0)!=0){T=42;break a}c[m>>2]=Eq(c[F>>2]|0,w,0)|0;if((c[m>>2]|0)!=0){T=42;break a}}else{T=38}}else{T=38}if((T|0)==38?(T=0,c[m>>2]=Oq(c[F>>2]|0,u,v,w)|0,(c[m>>2]|0)!=0):0){T=42;break a}c[G>>2]=(c[G>>2]|0)+1;c[F>>2]=(c[F>>2]|0)+32}c[o>>2]=(c[o>>2]|0)+ -24;c[c[h>>2]>>2]=c[t>>2]}if((T|0)==41){t=S+8|0;S=c[l>>2]|0;c[t+0>>2]=c[S+0>>2];c[t+4>>2]=c[S+4>>2];R=c[m>>2]|0;i=g;return R|0}else if((T|0)==42){R=c[m>>2]|0;i=g;return R|0}return 0}function Lq(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;f=i;i=i+64|0;g=f+60|0;h=f+56|0;j=f+52|0;k=f+48|0;l=f+40|0;m=f+32|0;n=f+24|0;o=f+12|0;p=f+8|0;q=f+4|0;r=f;s=f+16|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;c[l>>2]=(c[(c[g>>2]|0)+16>>2]|0)-(c[(c[g>>2]|0)+24>>2]|0);c[l+4>>2]=(c[(c[g>>2]|0)+20>>2]|0)-(c[(c[g>>2]|0)+28>>2]|0);c[m>>2]=(c[(c[g>>2]|0)+8>>2]|0)-(c[(c[g>>2]|0)+16>>2]|0);c[m+4>>2]=(c[(c[g>>2]|0)+12>>2]|0)-(c[(c[g>>2]|0)+20>>2]|0);c[n>>2]=(c[c[g>>2]>>2]|0)-(c[(c[g>>2]|0)+8>>2]|0);c[n+4>>2]=(c[(c[g>>2]|0)+4>>2]|0)-(c[(c[g>>2]|0)+12>>2]|0);if(((c[l>>2]|0)>-2?(c[l>>2]|0)<2:0)?(c[l+4>>2]|0)>-2:0){t=(c[l+4>>2]|0)<2}else{t=0}c[q>>2]=t&1;if(((c[m>>2]|0)>-2?(c[m>>2]|0)<2:0)?(c[m+4>>2]|0)>-2:0){u=(c[m+4>>2]|0)<2}else{u=0}c[r>>2]=u&1;if(((c[n>>2]|0)>-2?(c[n>>2]|0)<2:0)?(c[n+4>>2]|0)>-2:0){v=(c[n+4>>2]|0)<2}else{v=0}c[s>>2]=v&1;v=(c[r>>2]|0)!=0;r=(c[s>>2]|0)!=0;do{if((c[q>>2]|0)!=0){if(v){if(r){break}s=Lp(c[n>>2]|0,c[n+4>>2]|0)|0;c[c[k>>2]>>2]=s;c[c[j>>2]>>2]=s;c[c[h>>2]>>2]=s;break}s=Lp(c[m>>2]|0,c[m+4>>2]|0)|0;if(r){c[c[k>>2]>>2]=s;c[c[j>>2]>>2]=s;c[c[h>>2]>>2]=s;break}else{c[c[j>>2]>>2]=s;c[c[h>>2]>>2]=s;s=Lp(c[n>>2]|0,c[n+4>>2]|0)|0;c[c[k>>2]>>2]=s;break}}else{s=Lp(c[l>>2]|0,c[l+4>>2]|0)|0;if(v){if(r){c[c[k>>2]>>2]=s;c[c[j>>2]>>2]=s;c[c[h>>2]>>2]=s;break}else{c[c[h>>2]>>2]=s;u=Lp(c[n>>2]|0,c[n+4>>2]|0)|0;c[c[k>>2]>>2]=u;u=Nq(c[c[h>>2]>>2]|0,c[c[k>>2]>>2]|0)|0;c[c[j>>2]>>2]=u;break}}else{c[c[h>>2]>>2]=s;s=Lp(c[m>>2]|0,c[m+4>>2]|0)|0;if(r){c[c[k>>2]>>2]=s;c[c[j>>2]>>2]=s;break}else{c[c[j>>2]>>2]=s;s=Lp(c[n>>2]|0,c[n+4>>2]|0)|0;c[c[k>>2]>>2]=s;break}}}}while(0);c[o>>2]=Iq(Rp(c[c[h>>2]>>2]|0,c[c[j>>2]>>2]|0)|0)|0;c[p>>2]=Iq(Rp(c[c[j>>2]>>2]|0,c[c[k>>2]>>2]|0)|0)|0;if((c[o>>2]|0)>=1474560){w=0;x=w&1;y=x&255;i=f;return y|0}w=(c[p>>2]|0)<1474560;x=w&1;y=x&255;i=f;return y|0}function Mq(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;i=i+32|0;d=b+16|0;e=b;f=b+4|0;g=b+8|0;h=b+12|0;c[d>>2]=a;c[(c[d>>2]|0)+48>>2]=c[(c[d>>2]|0)+24>>2];c[g>>2]=c[(c[d>>2]|0)+8>>2];c[h>>2]=c[(c[d>>2]|0)+16>>2];a=((c[c[d>>2]>>2]|0)+(c[g>>2]|0)|0)/2|0;c[e>>2]=a;c[(c[d>>2]|0)+8>>2]=a;a=((c[(c[d>>2]|0)+24>>2]|0)+(c[h>>2]|0)|0)/2|0;c[f>>2]=a;c[(c[d>>2]|0)+40>>2]=a;c[g>>2]=((c[g>>2]|0)+(c[h>>2]|0)|0)/2|0;a=((c[e>>2]|0)+(c[g>>2]|0)|0)/2|0;c[e>>2]=a;c[(c[d>>2]|0)+16>>2]=a;a=((c[f>>2]|0)+(c[g>>2]|0)|0)/2|0;c[f>>2]=a;c[(c[d>>2]|0)+32>>2]=a;c[(c[d>>2]|0)+24>>2]=((c[e>>2]|0)+(c[f>>2]|0)|0)/2|0;c[(c[d>>2]|0)+52>>2]=c[(c[d>>2]|0)+28>>2];c[g>>2]=c[(c[d>>2]|0)+12>>2];c[h>>2]=c[(c[d>>2]|0)+20>>2];a=((c[(c[d>>2]|0)+4>>2]|0)+(c[g>>2]|0)|0)/2|0;c[e>>2]=a;c[(c[d>>2]|0)+12>>2]=a;a=((c[(c[d>>2]|0)+28>>2]|0)+(c[h>>2]|0)|0)/2|0;c[f>>2]=a;c[(c[d>>2]|0)+44>>2]=a;c[g>>2]=((c[g>>2]|0)+(c[h>>2]|0)|0)/2|0;h=((c[e>>2]|0)+(c[g>>2]|0)|0)/2|0;c[e>>2]=h;c[(c[d>>2]|0)+20>>2]=h;h=((c[f>>2]|0)+(c[g>>2]|0)|0)/2|0;c[f>>2]=h;c[(c[d>>2]|0)+36>>2]=h;c[(c[d>>2]|0)+28>>2]=((c[e>>2]|0)+(c[f>>2]|0)|0)/2|0;i=b;return}function Nq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;b=c[e>>2]|0;a=b+((Rp(c[e>>2]|0,c[f>>2]|0)|0)/2|0)|0;i=d;return a|0}function Oq(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=i;i=i+32|0;h=g+24|0;j=g;k=g+4|0;l=g+8|0;m=g+12|0;n=g+16|0;o=g+20|0;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;c[l>>2]=f;c[m>>2]=dr(c[h>>2]|0,3)|0;if((c[m>>2]|0)!=0){p=c[h>>2]|0;q=p+16|0;a[q]=0;r=c[m>>2]|0;i=g;return r|0}c[n>>2]=(c[(c[h>>2]|0)+8>>2]|0)+(c[c[h>>2]>>2]<<3);c[o>>2]=(c[(c[h>>2]|0)+12>>2]|0)+(c[c[h>>2]>>2]|0);f=c[n>>2]|0;e=c[j>>2]|0;c[f+0>>2]=c[e+0>>2];c[f+4>>2]=c[e+4>>2];e=(c[n>>2]|0)+8|0;f=c[k>>2]|0;c[e+0>>2]=c[f+0>>2];c[e+4>>2]=c[f+4>>2];f=(c[n>>2]|0)+16|0;n=c[l>>2]|0;c[f+0>>2]=c[n+0>>2];c[f+4>>2]=c[n+4>>2];a[c[o>>2]|0]=2;a[(c[o>>2]|0)+1|0]=2;a[(c[o>>2]|0)+2|0]=1;o=c[h>>2]|0;c[o>>2]=(c[o>>2]|0)+3;p=c[h>>2]|0;q=p+16|0;a[q]=0;r=c[m>>2]|0;i=g;return r|0}function Pq(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+16|0;h=g+4|0;j=g;k=g+8|0;c[h>>2]=b;c[j>>2]=e;a[k]=f;a[(c[h>>2]|0)+20|0]=1;f=(c[h>>2]|0)+8|0;e=c[j>>2]|0;c[f+0>>2]=c[e+0>>2];c[f+4>>2]=c[e+4>>2];a[(c[h>>2]|0)+21|0]=a[k]|0;if((c[(c[h>>2]|0)+48>>2]|0)==0){if((d[(c[h>>2]|0)+21|0]|0|0)!=0){l=(c[(c[h>>2]|0)+44>>2]|0)==0}else{l=0}}else{l=1}a[(c[h>>2]|0)+40|0]=l&1;l=(c[h>>2]|0)+28|0;k=c[j>>2]|0;c[l+0>>2]=c[k+0>>2];c[l+4>>2]=c[k+4>>2];c[c[h>>2]>>2]=0;i=g;return 0}function Qq(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+32|0;e=d+16|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;c[e>>2]=b;c[f>>2]=0;b=c[e>>2]|0;if((a[(c[e>>2]|0)+21|0]|0)!=0){c[g>>2]=b+64;c[f>>2]=Rq(c[e>>2]|0,c[c[e>>2]>>2]|0,0)|0;if((c[f>>2]|0)!=0){k=c[f>>2]|0;i=d;return k|0}c[f>>2]=Sq(c[e>>2]|0,1)|0;if((c[f>>2]|0)!=0){k=c[f>>2]|0;i=d;return k|0}l=(c[e>>2]|0)+8|0;m=(c[e>>2]|0)+28|0;c[l+0>>2]=c[m+0>>2];c[l+4>>2]=c[m+4>>2];c[f>>2]=Rq(c[e>>2]|0,(c[(c[e>>2]|0)+24>>2]|0)+11796480|0,0)|0;if((c[f>>2]|0)!=0){k=c[f>>2]|0;i=d;return k|0}Tq(c[g>>2]|0,0);k=c[f>>2]|0;i=d;return k|0}if(!((c[b+8>>2]|0)==(c[(c[e>>2]|0)+28>>2]|0)?(c[(c[e>>2]|0)+12>>2]|0)==(c[(c[e>>2]|0)+32>>2]|0):0)){n=8}if((n|0)==8?(c[f>>2]=Bq(c[e>>2]|0,(c[e>>2]|0)+28|0)|0,(c[f>>2]|0)!=0):0){k=c[f>>2]|0;i=d;return k|0}c[(c[e>>2]|0)+4>>2]=c[(c[e>>2]|0)+24>>2];c[h>>2]=Rp(c[c[e>>2]>>2]|0,c[(c[e>>2]|0)+4>>2]|0)|0;if((c[h>>2]|0)!=0){c[j>>2]=0;c[j>>2]=(c[h>>2]|0)<0?1:0;c[f>>2]=Uq(c[e>>2]|0,c[j>>2]|0,c[(c[e>>2]|0)+36>>2]|0)|0;if((c[f>>2]|0)!=0){k=c[f>>2]|0;i=d;return k|0}c[f>>2]=Vq(c[e>>2]|0,1-(c[j>>2]|0)|0,c[(c[e>>2]|0)+36>>2]|0)|0;if((c[f>>2]|0)!=0){k=c[f>>2]|0;i=d;return k|0}}Tq((c[e>>2]|0)+64|0,0);Tq((c[e>>2]|0)+96|0,1);k=c[f>>2]|0;i=d;return k|0}function Rq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;e=i;i=i+64|0;f=e+60|0;g=e+56|0;h=e+52|0;j=e+48|0;k=e+40|0;l=e+32|0;m=e+28|0;n=e+20|0;o=e+16|0;p=e+8|0;q=e+4|0;r=e;s=e+24|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[j>>2]=0;if((c[(c[f>>2]|0)+44>>2]|0)==1){c[c[f>>2]>>2]=c[g>>2];c[(c[f>>2]|0)+4>>2]=(c[g>>2]|0)+11796480;c[j>>2]=br(c[f>>2]|0,c[h>>2]|0)|0;t=c[j>>2]|0;i=e;return t|0}if((c[(c[f>>2]|0)+44>>2]|0)==2){c[m>>2]=5898240-(aa(c[h>>2]|0,11796480)|0);c[n>>2]=c[(c[f>>2]|0)+60>>2];c[o>>2]=(c[f>>2]|0)+64+(c[h>>2]<<5);Qp(l,c[n>>2]|0,(c[g>>2]|0)+(c[m>>2]|0)|0);Qp(k,c[n>>2]|0,c[g>>2]|0);c[k>>2]=(c[k>>2]|0)+((c[(c[f>>2]|0)+8>>2]|0)+(c[l>>2]|0));d=k+4|0;c[d>>2]=(c[d>>2]|0)+((c[(c[f>>2]|0)+12>>2]|0)+(c[l+4>>2]|0));c[j>>2]=Eq(c[o>>2]|0,k,0)|0;if((c[j>>2]|0)!=0){t=c[j>>2]|0;i=e;return t|0}Qp(l,c[n>>2]|0,(c[g>>2]|0)-(c[m>>2]|0)|0);Qp(k,c[n>>2]|0,c[g>>2]|0);c[k>>2]=(c[k>>2]|0)+((c[l>>2]|0)+(c[(c[f>>2]|0)+8>>2]|0));n=k+4|0;c[n>>2]=(c[n>>2]|0)+((c[l+4>>2]|0)+(c[(c[f>>2]|0)+12>>2]|0));c[j>>2]=Eq(c[o>>2]|0,k,0)|0;t=c[j>>2]|0;i=e;return t|0}if((c[(c[f>>2]|0)+44>>2]|0)!=0){t=c[j>>2]|0;i=e;return t|0}c[q>>2]=5898240-(aa(c[h>>2]|0,11796480)|0);c[r>>2]=c[(c[f>>2]|0)+60>>2];c[s>>2]=(c[f>>2]|0)+64+(c[h>>2]<<5);Qp(p,c[r>>2]|0,(c[g>>2]|0)+(c[q>>2]|0)|0);c[p>>2]=(c[p>>2]|0)+(c[(c[f>>2]|0)+8>>2]|0);h=p+4|0;c[h>>2]=(c[h>>2]|0)+(c[(c[f>>2]|0)+12>>2]|0);c[j>>2]=Eq(c[s>>2]|0,p,0)|0;if((c[j>>2]|0)!=0){t=c[j>>2]|0;i=e;return t|0}Qp(p,c[r>>2]|0,(c[g>>2]|0)-(c[q>>2]|0)|0);c[p>>2]=(c[p>>2]|0)+(c[(c[f>>2]|0)+8>>2]|0);q=p+4|0;c[q>>2]=(c[q>>2]|0)+(c[(c[f>>2]|0)+12>>2]|0);c[j>>2]=Eq(c[s>>2]|0,p,0)|0;t=c[j>>2]|0;i=e;return t|0}function Sq(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;f=i;i=i+48|0;g=f+20|0;h=f+37|0;j=f+32|0;k=f+28|0;l=f+24|0;m=f+16|0;n=f+12|0;o=f+8|0;p=f+4|0;q=f;r=f+36|0;c[g>>2]=b;a[h]=e;c[j>>2]=(c[g>>2]|0)+64;c[k>>2]=(c[g>>2]|0)+96;c[m>>2]=0;c[l>>2]=(c[c[k>>2]>>2]|0)-(c[(c[k>>2]|0)+20>>2]|0);if((c[l>>2]|0)<=0){s=c[m>>2]|0;i=f;return s|0}c[m>>2]=dr(c[j>>2]|0,c[l>>2]|0)|0;if((c[m>>2]|0)!=0){s=c[m>>2]|0;i=f;return s|0}c[n>>2]=(c[(c[j>>2]|0)+8>>2]|0)+(c[c[j>>2]>>2]<<3);c[o>>2]=(c[(c[j>>2]|0)+12>>2]|0)+(c[c[j>>2]>>2]|0);c[p>>2]=(c[(c[k>>2]|0)+8>>2]|0)+(c[c[k>>2]>>2]<<3)+ -8;c[q>>2]=(c[(c[k>>2]|0)+12>>2]|0)+(c[c[k>>2]>>2]|0)+ -1;while(1){if(!((c[p>>2]|0)>>>0>=((c[(c[k>>2]|0)+8>>2]|0)+(c[(c[k>>2]|0)+20>>2]<<3)|0)>>>0)){break}g=c[n>>2]|0;e=c[p>>2]|0;c[g+0>>2]=c[e+0>>2];c[g+4>>2]=c[e+4>>2];a[c[o>>2]|0]=a[c[q>>2]|0]|0;e=c[o>>2]|0;g=d[e]|0;do{if((a[h]|0)!=0){a[e]=g&-13}else{a[r]=g&12;if((d[r]|0)!=4?(d[r]|0)!=8:0){break}b=c[o>>2]|0;a[b]=d[b]^12}}while(0);c[p>>2]=(c[p>>2]|0)+ -8;c[q>>2]=(c[q>>2]|0)+ -1;c[n>>2]=(c[n>>2]|0)+8;c[o>>2]=(c[o>>2]|0)+1}c[c[k>>2]>>2]=c[(c[k>>2]|0)+20>>2];o=c[j>>2]|0;c[o>>2]=(c[o>>2]|0)+(c[l>>2]|0);a[(c[j>>2]|0)+16|0]=0;a[(c[k>>2]|0)+16|0]=0;s=c[m>>2]|0;i=f;return s|0}function Tq(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;f=i;i=i+48|0;g=f+20|0;h=f+37|0;j=f+32|0;k=f+28|0;l=f+24|0;m=f+16|0;n=f+8|0;o=f+4|0;p=f;q=f+36|0;c[g>>2]=b;a[h]=e;c[j>>2]=c[(c[g>>2]|0)+20>>2];c[k>>2]=c[c[g>>2]>>2];if((c[k>>2]|0)>>>0<=((c[j>>2]|0)+1|0)>>>0){c[c[g>>2]>>2]=c[j>>2];r=c[g>>2]|0;s=r+20|0;c[s>>2]=-1;t=c[g>>2]|0;u=t+16|0;a[u]=0;i=f;return}e=(c[k>>2]|0)+ -1|0;c[k>>2]=e;c[c[g>>2]>>2]=e;e=(c[(c[g>>2]|0)+8>>2]|0)+(c[j>>2]<<3)|0;b=(c[(c[g>>2]|0)+8>>2]|0)+(c[k>>2]<<3)|0;c[e+0>>2]=c[b+0>>2];c[e+4>>2]=c[b+4>>2];a:do{if((a[h]|0)!=0){c[l>>2]=(c[(c[g>>2]|0)+8>>2]|0)+(c[j>>2]<<3)+8;c[m>>2]=(c[(c[g>>2]|0)+8>>2]|0)+(c[k>>2]<<3)+ -8;while(1){if(!((c[l>>2]|0)>>>0<(c[m>>2]|0)>>>0)){break}b=c[l>>2]|0;c[n+0>>2]=c[b+0>>2];c[n+4>>2]=c[b+4>>2];b=c[l>>2]|0;e=c[m>>2]|0;c[b+0>>2]=c[e+0>>2];c[b+4>>2]=c[e+4>>2];e=c[m>>2]|0;c[e+0>>2]=c[n+0>>2];c[e+4>>2]=c[n+4>>2];c[l>>2]=(c[l>>2]|0)+8;c[m>>2]=(c[m>>2]|0)+ -8}c[o>>2]=(c[(c[g>>2]|0)+12>>2]|0)+(c[j>>2]|0)+1;c[p>>2]=(c[(c[g>>2]|0)+12>>2]|0)+(c[k>>2]|0)+ -1;while(1){if(!((c[o>>2]|0)>>>0<(c[p>>2]|0)>>>0)){break a}a[q]=a[c[o>>2]|0]|0;a[c[o>>2]|0]=a[c[p>>2]|0]|0;a[c[p>>2]|0]=a[q]|0;c[o>>2]=(c[o>>2]|0)+1;c[p>>2]=(c[p>>2]|0)+ -1}}}while(0);p=(c[(c[g>>2]|0)+12>>2]|0)+(c[j>>2]|0)|0;a[p]=d[p]|4;p=(c[(c[g>>2]|0)+12>>2]|0)+((c[k>>2]|0)-1)|0;a[p]=d[p]|8;r=c[g>>2]|0;s=r+20|0;c[s>>2]=-1;t=c[g>>2]|0;u=t+16|0;a[u]=0;i=f;return}function Uq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;f=i;i=i+64|0;g=f+52|0;h=f+48|0;j=f+44|0;k=f+40|0;l=f+36|0;m=f+32|0;n=f+28|0;o=f+20|0;p=f+16|0;q=f+8|0;r=f;s=f+56|0;t=f+24|0;c[g>>2]=b;c[h>>2]=d;c[j>>2]=e;c[k>>2]=(c[g>>2]|0)+64+(c[h>>2]<<5);c[r>>2]=0;c[n>>2]=5898240-(aa(c[h>>2]|0,11796480)|0);c[m>>2]=(Rp(c[c[g>>2]>>2]|0,c[(c[g>>2]|0)+4>>2]|0)|0)/2|0;if((a[(c[k>>2]|0)+16|0]|0)!=0?(c[j>>2]|0)!=0:0){h=c[(c[g>>2]|0)+60>>2]|0;c[t>>2]=Iq(Nn(h,Kp(c[m>>2]|0)|0)|0)|0;if((c[(c[g>>2]|0)+16>>2]|0)>=(c[t>>2]|0)){u=(c[j>>2]|0)>=(c[t>>2]|0)}else{u=0}a[s]=u&1}else{a[s]=0}u=c[g>>2]|0;if((a[s]|0)!=0){c[l>>2]=(c[u>>2]|0)+(c[m>>2]|0);c[p>>2]=Hp(c[m>>2]|0)|0;c[o>>2]=On(c[(c[g>>2]|0)+60>>2]|0,c[p>>2]|0)|0;Qp(q,c[o>>2]|0,(c[l>>2]|0)+(c[n>>2]|0)|0);c[q>>2]=(c[q>>2]|0)+(c[(c[g>>2]|0)+8>>2]|0);l=q+4|0;c[l>>2]=(c[l>>2]|0)+(c[(c[g>>2]|0)+12>>2]|0);v=c[k>>2]|0;w=Eq(v,q,0)|0;c[r>>2]=w;x=c[r>>2]|0;i=f;return x|0}else{Qp(q,c[u+60>>2]|0,(c[(c[g>>2]|0)+4>>2]|0)+(c[n>>2]|0)|0);c[q>>2]=(c[q>>2]|0)+(c[(c[g>>2]|0)+8>>2]|0);n=q+4|0;c[n>>2]=(c[n>>2]|0)+(c[(c[g>>2]|0)+12>>2]|0);a[(c[k>>2]|0)+16|0]=0;v=c[k>>2]|0;w=Eq(v,q,0)|0;c[r>>2]=w;x=c[r>>2]|0;i=f;return x|0}return 0}function Vq(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;g=i;i=i+96|0;h=g+84|0;j=g+64|0;k=g+80|0;l=g+76|0;m=g+72|0;n=g+68|0;o=g+60|0;p=g+56|0;q=g+16|0;r=g;s=g+4|0;t=g+89|0;u=g+88|0;v=g+8|0;w=g+24|0;x=g+32|0;y=g+40|0;z=g+44|0;A=g+48|0;c[h>>2]=b;c[j>>2]=e;c[k>>2]=f;c[l>>2]=(c[h>>2]|0)+64+(c[j>>2]<<5);if((c[(c[h>>2]|0)+48>>2]|0)==0){c[m>>2]=br(c[h>>2]|0,c[j>>2]|0)|0;B=c[m>>2]|0;i=g;return B|0}c[o>>2]=0;c[p>>2]=c[(c[h>>2]|0)+60>>2];c[q>>2]=0;c[r>>2]=0;c[s>>2]=0;c[n>>2]=5898240-(aa(c[j>>2]|0,11796480)|0);a[t]=(c[(c[h>>2]|0)+48>>2]|0)==1;a[u]=(c[(c[h>>2]|0)+48>>2]|0)!=2;do{if((a[t]|0)==0){c[q>>2]=Rp(c[c[h>>2]>>2]|0,c[(c[h>>2]|0)+4>>2]|0)|0;if((c[q>>2]|0)==11796480){c[q>>2]=c[n>>2];c[r>>2]=c[c[h>>2]>>2]}else{c[q>>2]=(c[q>>2]|0)/2|0;c[r>>2]=(c[c[h>>2]>>2]|0)+(c[q>>2]|0)+(c[n>>2]|0)}c[s>>2]=Hp(c[q>>2]|0)|0;c[o>>2]=Nn(c[(c[h>>2]|0)+56>>2]|0,c[s>>2]|0)|0;if((c[o>>2]|0)<65536){if((d[u]|0)==0?(Iq(c[q>>2]|0)|0)<=57:0){break}a[t]=1}}}while(0);if((a[t]|0)==0){c[z>>2]=On(c[(c[h>>2]|0)+60>>2]|0,c[s>>2]|0)|0;Qp(A,c[z>>2]|0,c[r>>2]|0);c[A>>2]=(c[A>>2]|0)+(c[(c[h>>2]|0)+8>>2]|0);z=A+4|0;c[z>>2]=(c[z>>2]|0)+(c[(c[h>>2]|0)+12>>2]|0);c[m>>2]=Eq(c[l>>2]|0,A,0)|0;if((c[m>>2]|0)!=0){B=c[m>>2]|0;i=g;return B|0}if((c[k>>2]|0)!=0){B=c[m>>2]|0;i=g;return B|0}Qp(A,c[(c[h>>2]|0)+60>>2]|0,(c[(c[h>>2]|0)+4>>2]|0)+(c[n>>2]|0)|0);c[A>>2]=(c[A>>2]|0)+(c[(c[h>>2]|0)+8>>2]|0);z=A+4|0;c[z>>2]=(c[z>>2]|0)+(c[(c[h>>2]|0)+12>>2]|0);c[m>>2]=Eq(c[l>>2]|0,A,0)|0;B=c[m>>2]|0;i=g;return B|0}A=c[p>>2]|0;z=c[h>>2]|0;if((a[u]|0)!=0){Qp(v,A,(c[z+4>>2]|0)+(c[n>>2]|0)|0);c[v>>2]=(c[v>>2]|0)+(c[(c[h>>2]|0)+8>>2]|0);u=v+4|0;c[u>>2]=(c[u>>2]|0)+(c[(c[h>>2]|0)+12>>2]|0);a[(c[l>>2]|0)+16|0]=0;c[m>>2]=Eq(c[l>>2]|0,v,0)|0;B=c[m>>2]|0;i=g;return B|0}v=Nn(A,c[z+56>>2]|0)|0;Qp(w,v,c[r>>2]|0);c[w>>2]=(c[w>>2]|0)+(c[(c[h>>2]|0)+8>>2]|0);v=w+4|0;c[v>>2]=(c[v>>2]|0)+(c[(c[h>>2]|0)+12>>2]|0);v=c[p>>2]|0;z=65536-(c[o>>2]|0)|0;c[y>>2]=In(v,z,Iq(Jp(c[q>>2]|0)|0)|0)|0;Qp(x,c[y>>2]|0,(c[r>>2]|0)+(c[n>>2]|0)|0);c[x>>2]=(c[x>>2]|0)+(c[w>>2]|0);q=x+4|0;c[q>>2]=(c[q>>2]|0)+(c[w+4>>2]|0);c[m>>2]=Eq(c[l>>2]|0,x,0)|0;if((c[m>>2]|0)!=0){B=c[m>>2]|0;i=g;return B|0}Qp(x,c[y>>2]|0,(c[r>>2]|0)-(c[n>>2]|0)|0);c[x>>2]=(c[x>>2]|0)+(c[w>>2]|0);r=x+4|0;c[r>>2]=(c[r>>2]|0)+(c[w+4>>2]|0);c[m>>2]=Eq(c[l>>2]|0,x,0)|0;if((c[m>>2]|0)!=0){B=c[m>>2]|0;i=g;return B|0}if((c[k>>2]|0)!=0){B=c[m>>2]|0;i=g;return B|0}Qp(x,c[p>>2]|0,(c[(c[h>>2]|0)+4>>2]|0)+(c[n>>2]|0)|0);c[x>>2]=(c[x>>2]|0)+(c[(c[h>>2]|0)+8>>2]|0);n=x+4|0;c[n>>2]=(c[n>>2]|0)+(c[(c[h>>2]|0)+12>>2]|0);c[m>>2]=Eq(c[l>>2]|0,x,0)|0;B=c[m>>2]|0;i=g;return B|0}function Wq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;f=i;i=i+48|0;g=f+36|0;h=f+32|0;j=f+28|0;k=f+24|0;l=f+20|0;m=f+16|0;n=f+8|0;o=f+4|0;p=f;q=f+12|0;c[g>>2]=b;c[h>>2]=d;c[j>>2]=e;c[k>>2]=0;c[l>>2]=0;c[m>>2]=0;c[n>>2]=c[c[g>>2]>>2];c[o>>2]=c[(c[g>>2]|0)+8>>2];c[p>>2]=c[(c[g>>2]|0)+12>>2];c[q>>2]=0;while(1){if(!((c[n>>2]|0)>>>0>0)){r=10;break}e=c[q>>2]|0;if((a[c[p>>2]|0]&4|0)==0){if((e|0)==0){break}}else{if((e|0)!=0){break}c[q>>2]=1}if((a[c[p>>2]|0]&8|0)!=0){c[q>>2]=0;c[m>>2]=(c[m>>2]|0)+1}c[n>>2]=(c[n>>2]|0)+ -1;c[l>>2]=(c[l>>2]|0)+1;c[o>>2]=(c[o>>2]|0)+8;c[p>>2]=(c[p>>2]|0)+1}if((r|0)==10?(c[q>>2]|0)==0:0){a[(c[g>>2]|0)+28|0]=1;s=c[l>>2]|0;t=c[h>>2]|0;c[t>>2]=s;u=c[m>>2]|0;v=c[j>>2]|0;c[v>>2]=u;w=c[k>>2]|0;i=f;return w|0}c[l>>2]=0;c[m>>2]=0;s=c[l>>2]|0;t=c[h>>2]|0;c[t>>2]=s;u=c[m>>2]|0;v=c[j>>2]|0;c[v>>2]=u;w=c[k>>2]|0;i=f;return w|0}function Xq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;i=i+48|0;f=e+36|0;g=e+32|0;h=e+28|0;j=e+24|0;k=e+20|0;l=e+16|0;m=e+8|0;n=e+4|0;o=e;p=e+12|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[l>>2]=0;c[o>>2]=0;c[p>>2]=Wq((c[f>>2]|0)+64|0,j,k)|0;if((c[p>>2]|0)==0?(c[p>>2]=Wq((c[f>>2]|0)+96|0,m,n)|0,(c[p>>2]|0)==0):0){c[l>>2]=(c[j>>2]|0)+(c[m>>2]|0);c[o>>2]=(c[k>>2]|0)+(c[n>>2]|0)}c[c[g>>2]>>2]=c[l>>2];c[c[h>>2]>>2]=c[o>>2];i=e;return c[p>>2]|0}function Yq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;g=f+12|0;h=f;j=f+4|0;k=f+8|0;c[g>>2]=b;c[h>>2]=d;c[j>>2]=e;if(!((c[h>>2]|0)==0|(c[h>>2]|0)==1)){i=f;return}c[k>>2]=(c[g>>2]|0)+64+(c[h>>2]<<5);if((a[(c[k>>2]|0)+28|0]|0)==0){i=f;return}Zq(c[k>>2]|0,c[j>>2]|0);i=f;return}function Zq(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+48|0;g=f+16|0;h=f+28|0;j=f+24|0;k=f+20|0;l=f+12|0;m=f+8|0;n=f+4|0;o=f;p=f+32|0;c[g>>2]=d;c[h>>2]=e;lA((c[(c[h>>2]|0)+4>>2]|0)+(b[(c[h>>2]|0)+2>>1]<<3)|0,c[(c[g>>2]|0)+8>>2]|0,c[c[g>>2]>>2]<<3|0)|0;c[j>>2]=c[c[g>>2]>>2];c[k>>2]=c[(c[g>>2]|0)+12>>2];c[l>>2]=(c[(c[h>>2]|0)+8>>2]|0)+(b[(c[h>>2]|0)+2>>1]|0);while(1){if(!((c[j>>2]|0)>>>0>0)){break}do{if((a[c[k>>2]|0]&1|0)==0){e=c[l>>2]|0;if((a[c[k>>2]|0]&2|0)!=0){a[e]=2;break}else{a[e]=0;break}}else{a[c[l>>2]|0]=1}}while(0);c[j>>2]=(c[j>>2]|0)+ -1;c[k>>2]=(c[k>>2]|0)+1;c[l>>2]=(c[l>>2]|0)+1}c[m>>2]=c[c[g>>2]>>2];c[n>>2]=c[(c[g>>2]|0)+12>>2];c[o>>2]=(c[(c[h>>2]|0)+12>>2]|0)+(b[c[h>>2]>>1]<<1);b[p>>1]=b[(c[h>>2]|0)+2>>1]|0;while(1){if(!((c[m>>2]|0)>>>0>0)){break}if((a[c[n>>2]|0]&8|0)!=0){l=b[p>>1]|0;k=c[o>>2]|0;c[o>>2]=k+2;b[k>>1]=l;l=c[h>>2]|0;b[l>>1]=(b[l>>1]|0)+1<<16>>16}c[m>>2]=(c[m>>2]|0)+ -1;c[n>>2]=(c[n>>2]|0)+1;b[p>>1]=(b[p>>1]|0)+1<<16>>16}b[(c[h>>2]|0)+2>>1]=(b[(c[h>>2]|0)+2>>1]|0)+(c[c[g>>2]>>2]|0);i=f;return}function _q(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;Yq(c[e>>2]|0,0,c[f>>2]|0);Yq(c[e>>2]|0,1,c[f>>2]|0);i=d;return}function $q(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;g=i;i=i+128|0;h=g+112|0;j=g+108|0;k=g+104|0;l=g+116|0;m=g+96|0;n=g+88|0;o=g+80|0;p=g+76|0;q=g+72|0;r=g+68|0;s=g+64|0;t=g+12|0;u=g;v=g+4|0;w=g+8|0;x=g+16|0;y=g+24|0;z=g+32|0;A=g+40|0;B=g+48|0;C=g+56|0;c[j>>2]=d;c[k>>2]=e;a[l]=f;if((c[k>>2]|0)!=0?(c[j>>2]|0)!=0:0){zq(c[j>>2]|0);c[u>>2]=0;c[t>>2]=0;a:while(1){if((c[t>>2]|0)>=(b[c[k>>2]>>1]|0)){D=36;break}c[w>>2]=b[(c[(c[k>>2]|0)+12>>2]|0)+(c[t>>2]<<1)>>1]|0;c[q>>2]=(c[(c[k>>2]|0)+4>>2]|0)+(c[w>>2]<<3);if((c[w>>2]|0)>>>0<=(c[u>>2]|0)>>>0){c[u>>2]=(c[w>>2]|0)+1}else{f=(c[(c[k>>2]|0)+4>>2]|0)+(c[u>>2]<<3)|0;c[o+0>>2]=c[f+0>>2];c[o+4>>2]=c[f+4>>2];f=(c[(c[k>>2]|0)+4>>2]|0)+(c[w>>2]<<3)|0;c[m+0>>2]=c[f+0>>2];c[m+4>>2]=c[f+4>>2];c[n+0>>2]=c[o+0>>2];c[n+4>>2]=c[o+4>>2];c[p>>2]=(c[(c[k>>2]|0)+4>>2]|0)+(c[u>>2]<<3);c[r>>2]=(c[(c[k>>2]|0)+8>>2]|0)+(c[u>>2]|0);c[v>>2]=a[c[r>>2]|0]&3;if((c[v>>2]|0)==2){D=38;break}if((c[v>>2]|0)==0){if((a[(c[(c[k>>2]|0)+8>>2]|0)+(c[w>>2]|0)|0]&3|0)==1){c[o+0>>2]=c[m+0>>2];c[o+4>>2]=c[m+4>>2];c[q>>2]=(c[q>>2]|0)+ -8}else{c[o>>2]=((c[o>>2]|0)+(c[m>>2]|0)|0)/2|0;c[o+4>>2]=((c[o+4>>2]|0)+(c[m+4>>2]|0)|0)/2|0}c[p>>2]=(c[p>>2]|0)+ -8;c[r>>2]=(c[r>>2]|0)+ -1}c[s>>2]=Pq(c[j>>2]|0,o,a[l]|0)|0;if((c[s>>2]|0)!=0){D=37;break}b:while(1){if(!((c[p>>2]|0)>>>0<(c[q>>2]|0)>>>0)){break}c[p>>2]=(c[p>>2]|0)+8;c[r>>2]=(c[r>>2]|0)+1;c[v>>2]=a[c[r>>2]|0]&3;f=c[v>>2]|0;if((f|0)==0){c[n>>2]=c[c[p>>2]>>2];c[n+4>>2]=c[(c[p>>2]|0)+4>>2];while(1){if(!((c[p>>2]|0)>>>0<(c[q>>2]|0)>>>0)){D=25;break b}c[p>>2]=(c[p>>2]|0)+8;c[r>>2]=(c[r>>2]|0)+1;c[v>>2]=a[c[r>>2]|0]&3;e=c[p>>2]|0;c[y+0>>2]=c[e+0>>2];c[y+4>>2]=c[e+4>>2];if((c[v>>2]|0)==1){break}if((c[v>>2]|0)!=0){D=38;break a}c[z>>2]=((c[n>>2]|0)+(c[y>>2]|0)|0)/2|0;c[z+4>>2]=((c[n+4>>2]|0)+(c[y+4>>2]|0)|0)/2|0;c[s>>2]=Fq(c[j>>2]|0,n,z)|0;if((c[s>>2]|0)!=0){D=37;break a}c[n+0>>2]=c[y+0>>2];c[n+4>>2]=c[y+4>>2]}c[s>>2]=Fq(c[j>>2]|0,n,y)|0;if((c[s>>2]|0)!=0){D=37;break a}else{continue}}else if((f|0)==1){c[x>>2]=c[c[p>>2]>>2];c[x+4>>2]=c[(c[p>>2]|0)+4>>2];c[s>>2]=Bq(c[j>>2]|0,x)|0;if((c[s>>2]|0)!=0){D=37;break a}else{continue}}else{if(((c[p>>2]|0)+8|0)>>>0>(c[q>>2]|0)>>>0){D=38;break a}if((a[(c[r>>2]|0)+1|0]&3|0)!=2){D=38;break a}c[p>>2]=(c[p>>2]|0)+16;c[r>>2]=(c[r>>2]|0)+2;e=(c[p>>2]|0)+ -16|0;c[A+0>>2]=c[e+0>>2];c[A+4>>2]=c[e+4>>2];e=(c[p>>2]|0)+ -8|0;c[B+0>>2]=c[e+0>>2];c[B+4>>2]=c[e+4>>2];if(!((c[p>>2]|0)>>>0<=(c[q>>2]|0)>>>0)){D=30;break}e=c[p>>2]|0;c[C+0>>2]=c[e+0>>2];c[C+4>>2]=c[e+4>>2];c[s>>2]=Kq(c[j>>2]|0,A,B,C)|0;if((c[s>>2]|0)!=0){D=37;break a}else{continue}}}if((D|0)==25){D=0;c[s>>2]=Fq(c[j>>2]|0,n,o)|0}else if((D|0)==30){D=0;c[s>>2]=Kq(c[j>>2]|0,A,B,o)|0}if((c[s>>2]|0)!=0){D=37;break}if((a[(c[j>>2]|0)+20|0]|0)==0?(c[s>>2]=Qq(c[j>>2]|0)|0,(c[s>>2]|0)!=0):0){D=37;break}c[u>>2]=(c[w>>2]|0)+1}c[t>>2]=(c[t>>2]|0)+1}if((D|0)==36){c[h>>2]=0;E=c[h>>2]|0;i=g;return E|0}else if((D|0)==37){c[h>>2]=c[s>>2];E=c[h>>2]|0;i=g;return E|0}else if((D|0)==38){c[h>>2]=20;E=c[h>>2]|0;i=g;return E|0}}c[h>>2]=6;E=c[h>>2]|0;i=g;return E|0}function ar(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=i;i=i+48|0;h=g+36|0;j=g+32|0;k=g+40|0;l=g+28|0;m=g+24|0;n=g+20|0;o=g+12|0;p=g+8|0;q=g+4|0;r=g;s=g+16|0;c[h>>2]=d;c[j>>2]=e;a[k]=f;c[l>>2]=6;c[m>>2]=0;c[n>>2]=c[(c[j>>2]|0)+128>>2];c[n>>2]=c[n>>2];if((c[h>>2]|0)==0){t=c[l>>2]|0;i=g;return t|0}c[m>>2]=c[c[h>>2]>>2];if((c[m>>2]|0)==0){t=c[l>>2]|0;i=g;return t|0}if((c[(c[m>>2]|0)+4>>2]|0)!=30328){t=c[l>>2]|0;i=g;return t|0}c[l>>2]=mq(c[m>>2]|0,o)|0;if((c[l>>2]|0)!=0){t=c[l>>2]|0;i=g;return t|0}c[m>>2]=c[o>>2];c[p>>2]=c[m>>2];c[q>>2]=(c[p>>2]|0)+20;c[l>>2]=$q(c[j>>2]|0,c[q>>2]|0,0)|0;if((c[l>>2]|0)==0?(Xq(c[j>>2]|0,r,s)|0,op(c[c[m>>2]>>2]|0,c[q>>2]|0)|0,c[l>>2]=mp(c[c[m>>2]>>2]|0,c[r>>2]|0,c[s>>2]|0,c[q>>2]|0)|0,(c[l>>2]|0)==0):0){b[(c[q>>2]|0)+2>>1]=0;b[c[q>>2]>>1]=0;_q(c[j>>2]|0,c[q>>2]|0);if((a[k]|0)!=0){oq(c[c[h>>2]>>2]|0)}c[c[h>>2]>>2]=c[m>>2];t=c[l>>2]|0;i=g;return t|0}oq(c[m>>2]|0);c[m>>2]=0;if((a[k]|0)!=0){t=c[l>>2]|0;i=g;return t|0}c[c[h>>2]>>2]=0;t=c[l>>2]|0;i=g;return t|0}function br(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+32|0;f=e+24|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;m=e+20|0;c[f>>2]=b;c[g>>2]=d;c[k>>2]=c[(c[f>>2]|0)+60>>2];c[l>>2]=0;c[m>>2]=(c[f>>2]|0)+64+(c[g>>2]<<5);c[j>>2]=5898240-(aa(c[g>>2]|0,11796480)|0);c[h>>2]=Rp(c[c[f>>2]>>2]|0,c[(c[f>>2]|0)+4>>2]|0)|0;if((c[h>>2]|0)==11796480){c[h>>2]=0-(c[j>>2]|0)<<1}c[l>>2]=cr(c[m>>2]|0,(c[f>>2]|0)+8|0,c[k>>2]|0,(c[c[f>>2]>>2]|0)+(c[j>>2]|0)|0,c[h>>2]|0)|0;a[(c[m>>2]|0)+16|0]=0;i=e;return c[l>>2]|0}function cr(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;g=i;i=i+96|0;h=g+84|0;j=g+80|0;k=g+76|0;l=g+72|0;m=g+68|0;n=g+64|0;o=g+60|0;p=g+56|0;q=g+52|0;r=g+44|0;s=g+40|0;t=g+32|0;u=g+24|0;v=g+16|0;w=g+8|0;x=g;y=g+48|0;c[h>>2]=a;c[j>>2]=b;c[k>>2]=d;c[l>>2]=e;c[m>>2]=f;c[y>>2]=0;Qp(t,c[k>>2]|0,c[l>>2]|0);c[t>>2]=(c[t>>2]|0)+(c[c[j>>2]>>2]|0);f=t+4|0;c[f>>2]=(c[f>>2]|0)+(c[(c[j>>2]|0)+4>>2]|0);c[n>>2]=c[m>>2];c[o>>2]=c[l>>2];c[q>>2]=(c[m>>2]|0)>=0?5898240:-5898240;while(1){if((c[n>>2]|0)==0){z=11;break}c[p>>2]=c[n>>2];if((c[p>>2]|0)<=5898240){if((c[p>>2]|0)<-5898240){c[p>>2]=-5898240}}else{c[p>>2]=5898240}c[r>>2]=(c[o>>2]|0)+(c[p>>2]|0);c[s>>2]=c[p>>2];if((c[s>>2]|0)<0){c[s>>2]=0-(c[s>>2]|0)}c[s>>2]=c[s>>2]>>1;Qp(u,c[k>>2]|0,c[r>>2]|0);c[u>>2]=(c[u>>2]|0)+(c[c[j>>2]>>2]|0);m=u+4|0;c[m>>2]=(c[m>>2]|0)+(c[(c[j>>2]|0)+4>>2]|0);m=c[k>>2]|0;l=(Jp(c[s>>2]|0)|0)<<2;c[x>>2]=In(m,l,(65536+(Hp(c[s>>2]|0)|0)|0)*3|0)|0;Qp(v,c[x>>2]|0,(c[o>>2]|0)+(c[q>>2]|0)|0);c[v>>2]=(c[v>>2]|0)+(c[t>>2]|0);l=v+4|0;c[l>>2]=(c[l>>2]|0)+(c[t+4>>2]|0);Qp(w,c[x>>2]|0,(c[r>>2]|0)-(c[q>>2]|0)|0);c[w>>2]=(c[w>>2]|0)+(c[u>>2]|0);l=w+4|0;c[l>>2]=(c[l>>2]|0)+(c[u+4>>2]|0);c[y>>2]=Oq(c[h>>2]|0,v,w,u)|0;if((c[y>>2]|0)!=0){z=11;break}c[t+0>>2]=c[u+0>>2];c[t+4>>2]=c[u+4>>2];c[n>>2]=(c[n>>2]|0)-(c[p>>2]|0);c[o>>2]=c[r>>2]}if((z|0)==11){i=g;return c[y>>2]|0}return 0}function dr(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;i=i+32|0;e=d+24|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;k=d+16|0;l=d+20|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=c[(c[e>>2]|0)+4>>2];c[h>>2]=(c[c[e>>2]>>2]|0)+(c[f>>2]|0);c[j>>2]=0;if(!((c[h>>2]|0)>>>0>(c[g>>2]|0)>>>0)){m=c[j>>2]|0;i=d;return m|0}c[k>>2]=c[g>>2];c[l>>2]=c[(c[e>>2]|0)+24>>2];while(1){if(!((c[k>>2]|0)>>>0<(c[h>>2]|0)>>>0)){break}c[k>>2]=(c[k>>2]|0)+(((c[k>>2]|0)>>>1)+16)}h=Yn(c[l>>2]|0,8,c[g>>2]|0,c[k>>2]|0,c[(c[e>>2]|0)+8>>2]|0,j)|0;c[(c[e>>2]|0)+8>>2]=h;if((c[j>>2]|0)!=0){m=c[j>>2]|0;i=d;return m|0}h=Yn(c[l>>2]|0,1,c[g>>2]|0,c[k>>2]|0,c[(c[e>>2]|0)+12>>2]|0,j)|0;c[(c[e>>2]|0)+12>>2]=h;if((c[j>>2]|0)!=0){m=c[j>>2]|0;i=d;return m|0}c[(c[e>>2]|0)+4>>2]=c[k>>2];m=c[j>>2]|0;i=d;return m|0}function er(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;f=e+4|0;g=e;c[f>>2]=b;c[g>>2]=d;if((c[(c[f>>2]|0)+20>>2]|0)>=0){Tq(c[f>>2]|0,0)}c[(c[f>>2]|0)+20>>2]=c[c[f>>2]>>2];a[(c[f>>2]|0)+16|0]=0;d=Eq(c[f>>2]|0,c[g>>2]|0,0)|0;i=e;return d|0}function fr(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;e=d+12|0;f=d;g=d+4|0;h=d+8|0;c[f>>2]=a;c[g>>2]=b;if((c[f>>2]|0)==0){c[e>>2]=40;j=c[e>>2]|0;i=d;return j|0}c[(c[f>>2]|0)+12>>2]=0;c[(c[f>>2]|0)+16>>2]=c[g>>2];c[c[f>>2]>>2]=0;c[(c[f>>2]|0)+8>>2]=0;c[(c[f>>2]|0)+20>>2]=0;c[(c[f>>2]|0)+24>>2]=0;c[h>>2]=Cc(c[g>>2]|0,30400)|0;if((c[h>>2]|0)==0){c[e>>2]=1;j=c[e>>2]|0;i=d;return j|0}oc(c[h>>2]|0,0,2)|0;g=_a(c[h>>2]|0)|0;c[(c[f>>2]|0)+4>>2]=g;g=c[h>>2]|0;if((c[(c[f>>2]|0)+4>>2]|0)!=0){oc(g|0,0,0)|0;c[(c[f>>2]|0)+12>>2]=c[h>>2];c[(c[f>>2]|0)+20>>2]=16;c[(c[f>>2]|0)+24>>2]=58;c[e>>2]=0;j=c[e>>2]|0;i=d;return j|0}else{sc(g|0)|0;c[e>>2]=81;j=c[e>>2]|0;i=d;return j|0}return 0}function gr(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+32|0;g=f+20|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;m=f+16|0;c[h>>2]=a;c[j>>2]=b;c[k>>2]=d;c[l>>2]=e;if((c[l>>2]|0)==0?(c[j>>2]|0)>>>0>(c[(c[h>>2]|0)+4>>2]|0)>>>0:0){c[g>>2]=1;n=c[g>>2]|0;i=f;return n|0}c[m>>2]=c[(c[h>>2]|0)+12>>2];if((c[(c[h>>2]|0)+8>>2]|0)!=(c[j>>2]|0)){oc(c[m>>2]|0,c[j>>2]|0,0)|0}c[g>>2]=za(c[k>>2]|0,1,c[l>>2]|0,c[m>>2]|0)|0;n=c[g>>2]|0;i=f;return n|0}function hr(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;sc(c[(c[d>>2]|0)+12>>2]|0)|0;c[(c[d>>2]|0)+12>>2]=0;c[(c[d>>2]|0)+4>>2]=0;c[c[d>>2]>>2]=0;i=b;return}function ir(){var a=0,b=0,d=0;a=i;i=i+16|0;b=a;c[b>>2]=Wz(16)|0;if((c[b>>2]|0)==0){d=c[b>>2]|0;i=a;return d|0}c[c[b>>2]>>2]=0;c[(c[b>>2]|0)+4>>2]=102;c[(c[b>>2]|0)+12>>2]=17;c[(c[b>>2]|0)+8>>2]=26;d=c[b>>2]|0;i=a;return d|0}function jr(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;c[e>>2]=c[e>>2];e=Wz(c[f>>2]|0)|0;i=d;return e|0}function kr(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;g=f+12|0;h=f;j=f+4|0;k=f+8|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;c[g>>2]=c[g>>2];c[h>>2]=c[h>>2];h=Zz(c[k>>2]|0,c[j>>2]|0)|0;i=f;return h|0}function lr(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;c[e>>2]=c[e>>2];Xz(c[f>>2]|0);i=d;return}function mr(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;Xz(c[d>>2]|0);i=b;return}function nr(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;c[e>>2]=c[e>>2];e=eo(30488,c[f>>2]|0)|0;i=d;return e|0}function or(b){b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=i;i=i+64|0;f=e+44|0;g=e+36|0;h=e+40|0;j=e+32|0;k=e+28|0;l=e+49|0;m=e+20|0;n=e+16|0;o=e+12|0;p=e+8|0;q=e+48|0;r=e+4|0;s=e;t=e+24|0;c[g>>2]=b;if(((a[c[g>>2]|0]|0)==117?(a[(c[g>>2]|0)+1|0]|0)==110:0)?(a[(c[g>>2]|0)+2|0]|0)==105:0){c[j>>2]=0;c[k>>2]=(c[g>>2]|0)+3;c[h>>2]=4;while(1){if((c[h>>2]|0)<=0){break}a[l]=a[c[k>>2]|0]|0;c[m>>2]=(d[l]|0)-48;do{if((c[m>>2]|0)>>>0>=10){c[m>>2]=(d[l]|0)-65;if((c[m>>2]|0)>>>0>=6){c[m>>2]=16;break}else{c[m>>2]=(c[m>>2]|0)+10;break}}}while(0);if((c[m>>2]|0)>>>0>=16){break}c[j>>2]=(c[j>>2]<<4)+(c[m>>2]|0);c[h>>2]=(c[h>>2]|0)+ -1;c[k>>2]=(c[k>>2]|0)+1}if((c[h>>2]|0)==0){if((a[c[k>>2]|0]|0)==0){c[f>>2]=c[j>>2];u=c[f>>2]|0;i=e;return u|0}if((a[c[k>>2]|0]|0)==46){c[f>>2]=c[j>>2]|-2147483648;u=c[f>>2]|0;i=e;return u|0}}}if((a[c[g>>2]|0]|0)==117){c[o>>2]=0;c[p>>2]=(c[g>>2]|0)+1;c[n>>2]=6;while(1){if((c[n>>2]|0)<=0){break}a[q]=a[c[p>>2]|0]|0;c[r>>2]=(d[q]|0)-48;do{if((c[r>>2]|0)>>>0>=10){c[r>>2]=(d[q]|0)-65;if((c[r>>2]|0)>>>0>=6){c[r>>2]=16;break}else{c[r>>2]=(c[r>>2]|0)+10;break}}}while(0);if((c[r>>2]|0)>>>0>=16){break}c[o>>2]=(c[o>>2]<<4)+(c[r>>2]|0);c[n>>2]=(c[n>>2]|0)+ -1;c[p>>2]=(c[p>>2]|0)+1}if((c[n>>2]|0)<=2){if((a[c[p>>2]|0]|0)==0){c[f>>2]=c[o>>2];u=c[f>>2]|0;i=e;return u|0}if((a[c[p>>2]|0]|0)==46){c[f>>2]=c[o>>2]|-2147483648;u=c[f>>2]|0;i=e;return u|0}}}c[s>>2]=c[g>>2];c[t>>2]=0;while(1){if((a[c[s>>2]|0]|0)==0){break}if((a[c[s>>2]|0]|0)==46?(c[s>>2]|0)>>>0>(c[g>>2]|0)>>>0:0){v=35;break}c[s>>2]=(c[s>>2]|0)+1}if((v|0)==35){c[t>>2]=c[s>>2]}v=c[g>>2]|0;if((c[t>>2]|0)!=0){c[f>>2]=xr(v,c[t>>2]|0)|0|-2147483648;u=c[f>>2]|0;i=e;return u|0}else{c[f>>2]=xr(v,c[s>>2]|0)|0;u=c[f>>2]|0;i=e;return u|0}return 0}function pr(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;h=i;i=i+144|0;j=h+128|0;k=h+124|0;l=h+120|0;m=h+116|0;n=h+112|0;o=h+108|0;p=h+104|0;q=h+64|0;r=h+16|0;s=h+12|0;t=h+8|0;u=h+4|0;v=h;w=h+56|0;c[j>>2]=a;c[k>>2]=b;c[l>>2]=d;c[m>>2]=e;c[n>>2]=f;c[o>>2]=g;g=q+0|0;f=g+40|0;do{c[g>>2]=0;g=g+4|0}while((g|0)<(f|0));c[(c[k>>2]|0)+16>>2]=0;c[(c[k>>2]|0)+20>>2]=0;g=Yn(c[j>>2]|0,8,0,(c[l>>2]|0)+10|0,0,p)|0;c[(c[k>>2]|0)+20>>2]=g;if((c[p>>2]|0)!=0){x=c[p>>2]|0;i=h;return x|0}c[u>>2]=c[(c[k>>2]|0)+20>>2];c[s>>2]=0;while(1){if(!((c[s>>2]|0)>>>0<(c[l>>2]|0)>>>0)){break}c[w>>2]=Ad[c[m>>2]&127](c[o>>2]|0,c[s>>2]|0)|0;if((c[w>>2]|0)!=0){ur(c[w>>2]|0,c[s>>2]|0,r,q);c[v>>2]=or(c[w>>2]|0)|0;if((c[v>>2]&2147483647|0)!=0){vr(c[v>>2]|0,q);c[c[u>>2]>>2]=c[v>>2];c[(c[u>>2]|0)+4>>2]=c[s>>2];c[u>>2]=(c[u>>2]|0)+8}if((c[n>>2]|0)!=0){td[c[n>>2]&31](c[o>>2]|0,c[w>>2]|0)}}c[s>>2]=(c[s>>2]|0)+1}c[s>>2]=0;while(1){if(!((c[s>>2]|0)>>>0<10)){break}if((c[q+(c[s>>2]<<2)>>2]|0)==1){c[c[u>>2]>>2]=c[36552+(c[s>>2]<<2)>>2];c[(c[u>>2]|0)+4>>2]=c[r+(c[s>>2]<<2)>>2];c[u>>2]=(c[u>>2]|0)+8}c[s>>2]=(c[s>>2]|0)+1}c[t>>2]=((c[u>>2]|0)-(c[(c[k>>2]|0)+20>>2]|0)|0)/8|0;if((c[t>>2]|0)==0){Vn(c[j>>2]|0,c[(c[k>>2]|0)+20>>2]|0);c[(c[k>>2]|0)+20>>2]=0;if((c[p>>2]|0)==0){c[p>>2]=163}}else{if((c[t>>2]|0)>>>0<(((c[l>>2]|0)>>>0)/2|0)>>>0){u=Yn(c[j>>2]|0,8,c[l>>2]|0,c[t>>2]|0,c[(c[k>>2]|0)+20>>2]|0,p)|0;c[(c[k>>2]|0)+20>>2]=u;c[p>>2]=0}Qz(c[(c[k>>2]|0)+20>>2]|0,c[t>>2]|0,8,103)}c[(c[k>>2]|0)+16>>2]=c[t>>2];x=c[p>>2]|0;i=h;return x|0}function qr(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=i;i=i+32|0;e=d+28|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;k=d+16|0;l=d+20|0;m=d+24|0;c[f>>2]=a;c[g>>2]=b;c[l>>2]=0;c[h>>2]=c[(c[f>>2]|0)+20>>2];c[j>>2]=(c[h>>2]|0)+(c[(c[f>>2]|0)+16>>2]<<3)+ -8;while(1){if(!((c[h>>2]|0)>>>0<=(c[j>>2]|0)>>>0)){break}c[k>>2]=(c[h>>2]|0)+((((c[j>>2]|0)-(c[h>>2]|0)|0)/8|0)>>1<<3);n=c[k>>2]|0;if((c[c[k>>2]>>2]|0)==(c[g>>2]|0)){o=4;break}c[m>>2]=c[n>>2]&2147483647;if((c[m>>2]|0)==(c[g>>2]|0)){c[l>>2]=c[k>>2]}if((c[h>>2]|0)==(c[j>>2]|0)){break}f=c[k>>2]|0;if((c[m>>2]|0)>>>0<(c[g>>2]|0)>>>0){c[h>>2]=f+8;continue}else{c[j>>2]=f+ -8;continue}}if((o|0)==4){c[l>>2]=n}if((c[l>>2]|0)!=0){c[e>>2]=c[(c[l>>2]|0)+4>>2];p=c[e>>2]|0;i=d;return p|0}else{c[e>>2]=0;p=c[e>>2]|0;i=d;return p|0}return 0}function rr(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=i;i=i+48|0;e=d+32|0;f=d+28|0;g=d+24|0;h=d+20|0;j=d+16|0;k=d+8|0;l=d+4|0;m=d;n=d+12|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=0;c[h>>2]=(c[c[f>>2]>>2]|0)+1;c[j>>2]=0;c[k>>2]=c[(c[e>>2]|0)+16>>2];while(1){if(!((c[j>>2]|0)>>>0<(c[k>>2]|0)>>>0)){break}c[l>>2]=(c[j>>2]|0)+(((c[k>>2]|0)-(c[j>>2]|0)|0)>>>1);c[m>>2]=(c[(c[e>>2]|0)+20>>2]|0)+(c[l>>2]<<3);o=c[m>>2]|0;if((c[c[m>>2]>>2]|0)==(c[h>>2]|0)){p=4;break}c[n>>2]=c[o>>2]&2147483647;if((c[n>>2]|0)==(c[h>>2]|0)){c[g>>2]=c[(c[m>>2]|0)+4>>2]}b=c[l>>2]|0;if((c[n>>2]|0)>>>0<(c[h>>2]|0)>>>0){c[j>>2]=b+1;continue}else{c[k>>2]=b;continue}}if((p|0)==4){c[g>>2]=c[o+4>>2];q=c[h>>2]|0;r=c[f>>2]|0;c[r>>2]=q;s=c[g>>2]|0;i=d;return s|0}if((c[g>>2]|0)!=0){q=c[h>>2]|0;r=c[f>>2]|0;c[r>>2]=q;s=c[g>>2]|0;i=d;return s|0}c[h>>2]=0;if(!((c[j>>2]|0)>>>0<(c[(c[e>>2]|0)+16>>2]|0)>>>0)){q=c[h>>2]|0;r=c[f>>2]|0;c[r>>2]=q;s=c[g>>2]|0;i=d;return s|0}c[m>>2]=(c[(c[e>>2]|0)+20>>2]|0)+(c[j>>2]<<3);c[g>>2]=c[(c[m>>2]|0)+4>>2];c[h>>2]=c[c[m>>2]>>2]&2147483647;q=c[h>>2]|0;r=c[f>>2]|0;c[r>>2]=q;s=c[g>>2]|0;i=d;return s|0}function sr(a){a=a|0;var d=0,e=0;d=i;i=i+16|0;e=d;c[e>>2]=a;c[e>>2]=(c[e>>2]|0)>>>0>=258?0:a;i=d;return 31552+(b[36032+(c[e>>2]<<1)>>1]|0)|0}function tr(a){a=a|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d+4|0;f=d;c[f>>2]=a;if((c[f>>2]|0)>>>0>=391){c[e>>2]=0;g=c[e>>2]|0;i=d;return g|0}else{c[e>>2]=31552+(b[35248+(c[f>>2]<<1)>>1]|0);g=c[e>>2]|0;i=d;return g|0}return 0}function ur(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+32|0;g=f+16|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;c[l>>2]=0;while(1){if(!((c[l>>2]|0)>>>0<10)){m=7;break}e=(cA(36592+(c[36680+(c[l>>2]<<2)>>2]|0)|0,c[g>>2]|0)|0)==0;n=c[l>>2]|0;if(e){break}c[l>>2]=n+1}if((m|0)==7){i=f;return}if((c[(c[k>>2]|0)+(n<<2)>>2]|0)!=0){i=f;return}c[(c[k>>2]|0)+(c[l>>2]<<2)>>2]=1;c[(c[j>>2]|0)+(c[l>>2]<<2)>>2]=c[h>>2];i=f;return}function vr(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;e=d+8|0;f=d;g=d+4|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=0;while(1){if(!((c[g>>2]|0)>>>0<10)){h=6;break}j=c[g>>2]|0;if((c[e>>2]|0)==(c[36552+(c[g>>2]<<2)>>2]|0)){break}c[g>>2]=j+1}if((h|0)==6){i=d;return}c[(c[f>>2]|0)+(j<<2)>>2]=2;i=d;return}function wr(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+32|0;e=d+24|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;k=d+16|0;l=d+20|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=c[f>>2];c[j>>2]=c[g>>2];c[k>>2]=c[c[h>>2]>>2]&2147483647;c[l>>2]=c[c[j>>2]>>2]&2147483647;do{if((c[k>>2]|0)==(c[l>>2]|0)){if((c[c[h>>2]>>2]|0)>>>0>(c[c[j>>2]>>2]|0)>>>0){c[e>>2]=1;break}if((c[c[h>>2]>>2]|0)>>>0<(c[c[j>>2]>>2]|0)>>>0){c[e>>2]=-1;break}else{c[e>>2]=0;break}}else{if((c[k>>2]|0)>>>0>(c[l>>2]|0)>>>0){c[e>>2]=1;break}if((c[k>>2]|0)>>>0<(c[l>>2]|0)>>>0){c[e>>2]=-1;break}else{c[e>>2]=0;break}}}while(0);i=d;return c[e>>2]|0}function xr(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;f=i;i=i+64|0;g=f+48|0;h=f+44|0;j=f+40|0;k=f+36|0;l=f+32|0;m=f+28|0;n=f+24|0;o=f+16|0;p=f+12|0;q=f+8|0;r=f+4|0;s=f;t=f+20|0;c[h>>2]=b;c[j>>2]=e;c[k>>2]=0;c[o>>2]=36720;a:do{if((c[h>>2]|0)!=0?!((c[h>>2]|0)>>>0>=(c[j>>2]|0)>>>0):0){e=c[h>>2]|0;c[h>>2]=e+1;c[k>>2]=a[e]|0;c[l>>2]=d[(c[o>>2]|0)+1|0]|0;c[o>>2]=(c[o>>2]|0)+2;c[m>>2]=0;c[n>>2]=c[l>>2];while(1){if((c[m>>2]|0)>=(c[n>>2]|0)){break a}c[p>>2]=(c[m>>2]|0)+(c[n>>2]|0)>>1;c[q>>2]=(c[o>>2]|0)+(c[p>>2]<<1);c[q>>2]=36720+(d[c[q>>2]|0]<<8|d[(c[q>>2]|0)+1|0]);c[r>>2]=a[c[q>>2]|0]&127;if((c[r>>2]|0)==(c[k>>2]|0)){break}e=c[p>>2]|0;if((c[r>>2]|0)<(c[k>>2]|0)){c[m>>2]=e+1;continue}else{c[n>>2]=e;continue}}c[o>>2]=c[q>>2];while(1){if((c[h>>2]|0)>>>0>=(c[j>>2]|0)>>>0){break}e=c[h>>2]|0;c[h>>2]=e+1;c[k>>2]=a[e]|0;e=(a[c[o>>2]|0]&128|0)!=0;c[o>>2]=(c[o>>2]|0)+1;if(e){if((c[k>>2]|0)!=(a[c[o>>2]|0]&127|0)){break a}else{continue}}c[l>>2]=a[c[o>>2]|0]&127;if((a[c[o>>2]|0]&128|0)!=0){c[o>>2]=(c[o>>2]|0)+2}c[o>>2]=(c[o>>2]|0)+1;while(1){if((c[l>>2]|0)<=0){break a}c[s>>2]=d[c[o>>2]|0]<<8|d[(c[o>>2]|0)+1|0];c[t>>2]=36720+(c[s>>2]|0);if((c[k>>2]|0)==(a[c[t>>2]|0]&127|0)){break}c[l>>2]=(c[l>>2]|0)+ -1;c[o>>2]=(c[o>>2]|0)+2}c[o>>2]=c[t>>2]}if((a[c[o>>2]|0]&128|0)==0?(a[(c[o>>2]|0)+1|0]&128|0)!=0:0){c[g>>2]=d[(c[o>>2]|0)+2|0]<<8|d[(c[o>>2]|0)+3|0];u=c[g>>2]|0;i=f;return u|0}}}while(0);c[g>>2]=0;u=c[g>>2]|0;i=f;return u|0}function yr(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;e=d+12|0;f=d;g=d+4|0;h=d+8|0;c[e>>2]=a;c[f>>2]=b;c[h>>2]=0;c[c[f>>2]>>2]=0;c[h>>2]=Sn(c[e>>2]|0,24,g)|0;if((c[g>>2]|0)!=0){j=c[g>>2]|0;i=d;return j|0}c[(c[h>>2]|0)+8>>2]=c[e>>2];ms(c[h>>2]|0);c[c[f>>2]>>2]=c[h>>2];j=c[g>>2]|0;i=d;return j|0}function zr(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e+12|0;g=e;h=e+4|0;j=e+8|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;if((c[f>>2]|0)==0){i=e;return}if((c[g>>2]|0)!=0?(c[h>>2]|0)>=3076:0){c[j>>2]=c[g>>2];c[c[f>>2]>>2]=(c[g>>2]|0)+1032;c[(c[f>>2]|0)+4>>2]=(c[g>>2]|0)+(c[h>>2]|0)-(c[c[f>>2]>>2]|0);c[(c[f>>2]|0)+12>>2]=c[j>>2];i=e;return}c[c[f>>2]>>2]=0;c[(c[f>>2]|0)+4>>2]=0;c[(c[f>>2]|0)+12>>2]=0;i=e;return}function Ar(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[f>>2]=c[f>>2];c[g>>2]=c[g>>2];c[h>>2]=c[h>>2];i=e;return}function Br(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+32|0;f=e+20|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;c[g>>2]=a;c[h>>2]=d;c[j>>2]=c[(c[h>>2]|0)+4>>2];c[k>>2]=c[c[h>>2]>>2];if(((c[g>>2]|0)!=0?(c[c[g>>2]>>2]|0)!=0:0)?(c[(c[g>>2]|0)+4>>2]|0)!=0:0){if((c[j>>2]|0)==0){c[f>>2]=20;m=c[f>>2]|0;i=e;return m|0}if((b[(c[j>>2]|0)+2>>1]|0)!=0?(b[c[j>>2]>>1]|0)>0:0){if((c[(c[j>>2]|0)+12>>2]|0)!=0?(c[(c[j>>2]|0)+4>>2]|0)!=0:0){if((b[(c[j>>2]|0)+2>>1]|0)!=((b[(c[(c[j>>2]|0)+12>>2]|0)+((b[c[j>>2]>>1]|0)-1<<1)>>1]|0)+1|0)){c[f>>2]=20;m=c[f>>2]|0;i=e;return m|0}c[l>>2]=c[(c[g>>2]|0)+12>>2];if((c[(c[h>>2]|0)+8>>2]&2|0)!=0){c[f>>2]=19;m=c[f>>2]|0;i=e;return m|0}if((c[k>>2]|0)==0){c[f>>2]=20;m=c[f>>2]|0;i=e;return m|0}if((c[(c[k>>2]|0)+4>>2]|0)!=0?(c[c[k>>2]>>2]|0)!=0:0){if((c[(c[k>>2]|0)+12>>2]|0)==0){c[f>>2]=20;m=c[f>>2]|0;i=e;return m|0}d=(c[l>>2]|0)+128|0;a=c[j>>2]|0;c[d+0>>2]=c[a+0>>2];c[d+4>>2]=c[a+4>>2];c[d+8>>2]=c[a+8>>2];c[d+12>>2]=c[a+12>>2];c[d+16>>2]=c[a+16>>2];a=(c[l>>2]|0)+104|0;d=c[k>>2]|0;c[a+0>>2]=c[d+0>>2];c[a+4>>2]=c[d+4>>2];c[a+8>>2]=c[d+8>>2];c[a+12>>2]=c[d+12>>2];c[a+16>>2]=c[d+16>>2];c[a+20>>2]=c[d+20>>2];c[(c[l>>2]|0)+28>>2]=c[c[g>>2]>>2];c[(c[l>>2]|0)+32>>2]=(c[(c[l>>2]|0)+28>>2]|0)+((((c[(c[g>>2]|0)+4>>2]|0)>>>0)/4|0)<<2);g=c[l>>2]|0;if((c[(c[h>>2]|0)+8>>2]&1|0)!=0){n=Ir(g)|0}else{n=Jr(g)|0}c[f>>2]=n;m=c[f>>2]|0;i=e;return m|0}c[f>>2]=0;m=c[f>>2]|0;i=e;return m|0}c[f>>2]=20;m=c[f>>2]|0;i=e;return m|0}c[f>>2]=0;m=c[f>>2]|0;i=e;return m|0}c[f>>2]=96;m=c[f>>2]|0;i=e;return m|0}function Cr(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b+4|0;e=b;c[d>>2]=a;c[e>>2]=c[(c[d>>2]|0)+8>>2];Vn(c[e>>2]|0,c[d>>2]|0);c[d>>2]=0;i=b;return}function Dr(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b+4|0;e=b;c[d>>2]=a;c[e>>2]=c[(c[d>>2]|0)+4>>2];wd[c[(c[(c[(c[d>>2]|0)+12>>2]|0)+56>>2]|0)+8>>2]&31](c[(c[d>>2]|0)+52>>2]|0,c[(c[e>>2]|0)+164>>2]|0,c[(c[e>>2]|0)+168>>2]|0);i=b;return 0}function Er(d,e,f,g){d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;h=i;i=i+128|0;j=h+112|0;k=h+108|0;l=h+104|0;m=h+100|0;n=h+96|0;o=h+92|0;p=h+88|0;q=h+72|0;r=h+16|0;s=h+12|0;t=h+8|0;u=h+4|0;v=h;w=h+24|0;c[k>>2]=d;c[l>>2]=e;c[m>>2]=f;c[n>>2]=g;do{if((c[(c[l>>2]|0)+72>>2]|0)!=(c[(c[k>>2]|0)+16>>2]|0)){c[o>>2]=6}else{g=c[(c[k>>2]|0)+12>>2]|0;if((c[m>>2]|0)!=2){if((g|0)==92752){c[j>>2]=19;x=c[j>>2]|0;i=h;return x|0}}else{if((g|0)==92824){c[j>>2]=19;x=c[j>>2]|0;i=h;return x|0}}c[p>>2]=(c[l>>2]|0)+108;if((c[n>>2]|0)!=0){xo(c[p>>2]|0,c[c[n>>2]>>2]|0,c[(c[n>>2]|0)+4>>2]|0)}pp(c[p>>2]|0,q);c[q>>2]=(c[q>>2]|0)+32&-64;c[q+4>>2]=(c[q+4>>2]|0)+32&-64;c[q+8>>2]=(c[q+8>>2]|0)+32&-64;c[q+12>>2]=(c[q+12>>2]|0)+32&-64;c[r>>2]=(c[q+8>>2]|0)-(c[q>>2]|0)>>6;c[s>>2]=(c[q+12>>2]|0)-(c[q+4>>2]|0)>>6;if(!((c[r>>2]|0)>>>0>65535)?!((c[s>>2]|0)>>>0>65535):0){c[u>>2]=(c[l>>2]|0)+76;c[v>>2]=c[(c[k>>2]|0)+8>>2];if((c[(c[(c[l>>2]|0)+156>>2]|0)+4>>2]&1|0)!=0){Vn(c[v>>2]|0,c[(c[u>>2]|0)+12>>2]|0);c[(c[u>>2]|0)+12>>2]=0;g=(c[(c[l>>2]|0)+156>>2]|0)+4|0;c[g>>2]=c[g>>2]&-2}g=c[r>>2]|0;if((c[m>>2]&2|0)!=0){c[t>>2]=(g+15|0)>>>4<<1;a[(c[u>>2]|0)+18|0]=1}else{c[t>>2]=g+3&-4;a[(c[u>>2]|0)+18|0]=2;b[(c[u>>2]|0)+16>>1]=256}c[(c[u>>2]|0)+4>>2]=c[r>>2];c[c[u>>2]>>2]=c[s>>2];c[(c[u>>2]|0)+8>>2]=c[t>>2];g=Yn(c[v>>2]|0,c[s>>2]|0,0,c[t>>2]|0,0,o)|0;c[(c[u>>2]|0)+12>>2]=g;if((c[o>>2]|0)!=0){break}g=(c[(c[l>>2]|0)+156>>2]|0)+4|0;c[g>>2]=c[g>>2]|1;xo(c[p>>2]|0,0-(c[q>>2]|0)|0,0-(c[q+4>>2]|0)|0);c[w>>2]=c[u>>2];c[w+4>>2]=c[p>>2];c[w+8>>2]=0;if((a[(c[u>>2]|0)+18|0]|0)==2){g=w+8|0;c[g>>2]=c[g>>2]|1}c[o>>2]=Ad[c[(c[k>>2]|0)+56>>2]&127](c[(c[k>>2]|0)+52>>2]|0,w)|0;xo(c[p>>2]|0,c[q>>2]|0,c[q+4>>2]|0);if((c[o>>2]|0)!=0){break}c[(c[l>>2]|0)+72>>2]=1651078259;c[(c[l>>2]|0)+100>>2]=c[q>>2]>>6;c[(c[l>>2]|0)+104>>2]=c[q+12>>2]>>6;break}c[o>>2]=6}}while(0);c[j>>2]=c[o>>2];x=c[j>>2]|0;i=h;return x|0}function Fr(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+32|0;g=f+16|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;c[l>>2]=0;if((c[(c[h>>2]|0)+72>>2]|0)!=(c[(c[g>>2]|0)+16>>2]|0)){c[l>>2]=6;m=c[l>>2]|0;i=f;return m|0}if((c[j>>2]|0)!=0){wo((c[h>>2]|0)+108|0,c[j>>2]|0)}if((c[k>>2]|0)==0){m=c[l>>2]|0;i=f;return m|0}xo((c[h>>2]|0)+108|0,c[c[k>>2]>>2]|0,c[(c[k>>2]|0)+4>>2]|0);m=c[l>>2]|0;i=f;return m|0}function Gr(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;d=c[h>>2]|0;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;if((c[(c[g>>2]|0)+72>>2]|0)!=(c[(c[f>>2]|0)+16>>2]|0)){i=e;return}pp((c[g>>2]|0)+108|0,c[h>>2]|0);i=e;return}function Hr(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;d=md[c[(c[(c[(c[f>>2]|0)+12>>2]|0)+56>>2]|0)+12>>2]&63](c[(c[f>>2]|0)+52>>2]|0,c[g>>2]|0,c[h>>2]|0)|0;i=e;return d|0}function Ir(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;c[d>>2]=c[d>>2];i=b;return 19}function Jr(e){e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+16|0;g=f+8|0;h=f;j=f+4|0;c[h>>2]=e;Kr(c[h>>2]|0,c[(c[h>>2]|0)+144>>2]&256);c[(c[h>>2]|0)+24>>2]=c[(c[h>>2]|0)+12>>2];e=c[h>>2]|0;if((c[(c[h>>2]|0)+144>>2]&8|0)==0){k=(c[h>>2]|0)+180|0;if((c[e+144>>2]&16|0)!=0){a[k]=4}else{a[k]=0}if((c[(c[h>>2]|0)+144>>2]&32|0)==0){k=(c[h>>2]|0)+180|0;a[k]=(d[k]|0)+1}}else{a[e+180|0]=2}a[(c[h>>2]|0)+181|0]=((c[(c[h>>2]|0)+144>>2]&512|0)!=0^1)&1;c[(c[h>>2]|0)+164>>2]=20;c[(c[h>>2]|0)+168>>2]=1;c[(c[h>>2]|0)+172>>2]=2;c[(c[h>>2]|0)+176>>2]=59;c[(c[h>>2]|0)+1024>>2]=0;b[(c[h>>2]|0)+960>>1]=0;b[(c[h>>2]|0)+962>>1]=(c[(c[h>>2]|0)+104>>2]|0)-1;b[(c[h>>2]|0)+56>>1]=c[(c[h>>2]|0)+108>>2];c[(c[h>>2]|0)+60>>2]=c[(c[h>>2]|0)+116>>2];e=Pr(c[h>>2]|0,0)|0;c[j>>2]=e;if((e|0)!=0){c[g>>2]=c[j>>2];l=c[g>>2]|0;i=f;return l|0}if(((a[(c[h>>2]|0)+181|0]|0)!=0?(d[(c[h>>2]|0)+180|0]|0)!=2:0)?(c[(c[h>>2]|0)+164>>2]=21,c[(c[h>>2]|0)+168>>2]=3,c[(c[h>>2]|0)+172>>2]=4,c[(c[h>>2]|0)+176>>2]=60,c[(c[h>>2]|0)+1024>>2]=0,b[(c[h>>2]|0)+960>>1]=0,b[(c[h>>2]|0)+962>>1]=(c[(c[h>>2]|0)+108>>2]|0)-1,e=Pr(c[h>>2]|0,1)|0,c[j>>2]=e,(e|0)!=0):0){c[g>>2]=c[j>>2];l=c[g>>2]|0;i=f;return l|0}c[g>>2]=0;l=c[g>>2]|0;i=f;return l|0}function Kr(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;b=c[e>>2]|0;if((c[f>>2]|0)!=0){c[b>>2]=12;c[(c[e>>2]|0)+16>>2]=256;c[(c[e>>2]|0)+20>>2]=30}else{c[b>>2]=6;c[(c[e>>2]|0)+16>>2]=32;c[(c[e>>2]|0)+20>>2]=2}c[(c[e>>2]|0)+4>>2]=1<<c[c[e>>2]>>2];c[(c[e>>2]|0)+8>>2]=(c[(c[e>>2]|0)+4>>2]|0)/2|0;c[(c[e>>2]|0)+12>>2]=(c[c[e>>2]>>2]|0)-6;i=d;return}function Lr(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+16|0;g=f+12|0;h=f;j=f+4|0;k=f+8|0;c[g>>2]=a;c[h>>2]=d;c[j>>2]=e;c[k>>2]=c[(c[g>>2]|0)+112>>2];c[j>>2]=c[j>>2];b[(c[g>>2]|0)+156>>1]=0-(c[k>>2]|0);j=aa(0-(b[c[h>>2]>>1]|0)|0,c[k>>2]|0)|0;c[(c[g>>2]|0)+148>>2]=j;if((c[k>>2]|0)<=0){l=c[g>>2]|0;m=l+158|0;b[m>>1]=0;n=c[g>>2]|0;o=n+160|0;b[o>>1]=0;i=f;return}j=aa((c[(c[g>>2]|0)+104>>2]|0)-1|0,c[k>>2]|0)|0;k=(c[g>>2]|0)+148|0;c[k>>2]=(c[k>>2]|0)+j;l=c[g>>2]|0;m=l+158|0;b[m>>1]=0;n=c[g>>2]|0;o=n+160|0;b[o>>1]=0;i=f;return}function Mr(f,g,h,j,k,l){f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;m=i;i=i+48|0;n=m+20|0;o=m+40|0;p=m+36|0;q=m+32|0;r=m+28|0;s=m+24|0;t=m+16|0;u=m+12|0;v=m+8|0;w=m+4|0;x=m;y=m+43|0;z=m+42|0;c[n>>2]=f;b[o>>1]=g;c[p>>2]=h;c[q>>2]=j;c[r>>2]=k;c[s>>2]=l;b[o>>1]=b[o>>1]|0;c[r>>2]=c[r>>2];c[s>>2]=c[s>>2];c[t>>2]=((c[p>>2]|0)+(c[(c[n>>2]|0)+4>>2]|0)-1&0-(c[(c[n>>2]|0)+4>>2]|0))>>c[c[n>>2]>>2];if(((c[q>>2]|0)-(c[p>>2]|0)-(c[(c[n>>2]|0)+4>>2]|0)|0)<=(c[(c[n>>2]|0)+20>>2]|0)){c[u>>2]=c[t>>2]}else{c[u>>2]=(c[q>>2]&0-(c[(c[n>>2]|0)+4>>2]|0))>>c[c[n>>2]>>2]}if((c[u>>2]|0)<0){i=m;return}if((c[t>>2]|0)>=(e[(c[n>>2]|0)+56>>1]|0)){i=m;return}if((c[t>>2]|0)<0){c[t>>2]=0}if((c[u>>2]|0)>=(e[(c[n>>2]|0)+56>>1]|0)){c[u>>2]=(e[(c[n>>2]|0)+56>>1]|0)-1}c[w>>2]=(c[t>>2]>>3&65535)<<16>>16;c[x>>2]=(c[u>>2]>>3&65535)<<16>>16;a[y]=255>>(c[t>>2]&7);a[z]=~(127>>(c[u>>2]&7));if((b[(c[n>>2]|0)+158>>1]|0)>(c[w>>2]|0)){b[(c[n>>2]|0)+158>>1]=c[w>>2]}if((b[(c[n>>2]|0)+160>>1]|0)<(c[x>>2]|0)){b[(c[n>>2]|0)+160>>1]=c[x>>2]}c[v>>2]=(c[(c[n>>2]|0)+60>>2]|0)+(c[(c[n>>2]|0)+148>>2]|0)+(c[w>>2]|0);c[x>>2]=(c[x>>2]|0)-(c[w>>2]|0);w=d[y]|0;if((c[x>>2]|0)<=0){y=c[v>>2]|0;a[y]=d[y]|w&d[z];i=m;return}y=c[v>>2]|0;a[y]=d[y]|w;c[x>>2]=(c[x>>2]|0)+ -1;while(1){if((c[x>>2]|0)<=0){break}w=(c[v>>2]|0)+1|0;c[v>>2]=w;a[w]=-1;c[x>>2]=(c[x>>2]|0)+ -1}x=(c[v>>2]|0)+1|0;a[x]=d[x]|d[z];i=m;return}function Nr(f,g,h,j,k,l){f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;m=i;i=i+48|0;n=m+32|0;o=m+40|0;p=m+28|0;q=m+24|0;r=m+12|0;s=m+16|0;t=m+8|0;u=m+4|0;v=m;w=m+38|0;x=m+36|0;y=m+20|0;c[n>>2]=f;b[o>>1]=g;c[p>>2]=h;c[q>>2]=j;c[r>>2]=k;c[s>>2]=l;c[t>>2]=(c[p>>2]|0)+(c[(c[n>>2]|0)+4>>2]|0)-1&0-(c[(c[n>>2]|0)+4>>2]|0);c[u>>2]=c[q>>2]&0-(c[(c[n>>2]|0)+4>>2]|0);c[v>>2]=c[t>>2];if((c[t>>2]|0)>(c[u>>2]|0)){c[y>>2]=c[(c[r>>2]|0)+12>>2]&7;if((c[t>>2]|0)!=((c[u>>2]|0)+(c[(c[n>>2]|0)+4>>2]|0)|0)){i=m;return}l=c[y>>2]|0;do{if((l|0)==4){c[v>>2]=(((c[p>>2]|0)+(c[q>>2]|0)-1|0)/2|0)+(c[(c[n>>2]|0)+8>>2]|0)&0-(c[(c[n>>2]|0)+4>>2]|0)}else if((l|0)==0){c[v>>2]=c[u>>2]}else if((l|0)==5|(l|0)==1){if((c[(c[r>>2]|0)+28>>2]|0)==(c[s>>2]|0)?(c[(c[r>>2]|0)+16>>2]|0)<=0:0){if((c[(c[r>>2]|0)+12>>2]&16|0)==0){i=m;return}if(((c[q>>2]|0)-(c[p>>2]|0)|0)<(c[(c[n>>2]|0)+8>>2]|0)){i=m;return}}if((c[(c[s>>2]|0)+28>>2]|0)==(c[r>>2]|0)?(c[(c[r>>2]|0)+20>>2]|0)==(b[o>>1]|0):0){if((c[(c[r>>2]|0)+12>>2]&32|0)==0){i=m;return}if(((c[q>>2]|0)-(c[p>>2]|0)|0)<(c[(c[n>>2]|0)+8>>2]|0)){i=m;return}}if((c[y>>2]|0)==1){c[v>>2]=c[u>>2];break}else{c[v>>2]=(((c[p>>2]|0)+(c[q>>2]|0)-1|0)/2|0)+(c[(c[n>>2]|0)+8>>2]|0)&0-(c[(c[n>>2]|0)+4>>2]|0);break}}else{i=m;return}}while(0);if((c[v>>2]|0)>=0){if((c[v>>2]>>c[c[n>>2]>>2]|0)>=(e[(c[n>>2]|0)+56>>1]|0)){c[v>>2]=c[u>>2]}}else{c[v>>2]=c[t>>2]}c[t>>2]=(c[v>>2]|0)==(c[t>>2]|0)?c[u>>2]|0:c[t>>2]|0;c[t>>2]=c[t>>2]>>c[c[n>>2]>>2];b[w>>1]=c[t>>2]>>3;b[x>>1]=c[t>>2]&7;if(((c[t>>2]|0)>=0?(c[t>>2]|0)<(e[(c[n>>2]|0)+56>>1]|0):0)?(d[(c[(c[n>>2]|0)+60>>2]|0)+((c[(c[n>>2]|0)+148>>2]|0)+(b[w>>1]|0))|0]&128>>b[x>>1]|0)!=0:0){i=m;return}}c[t>>2]=c[v>>2]>>c[c[n>>2]>>2];if((c[t>>2]|0)<0){i=m;return}if((c[t>>2]|0)>=(e[(c[n>>2]|0)+56>>1]|0)){i=m;return}b[w>>1]=c[t>>2]>>3;b[x>>1]=c[t>>2]&7;if((b[(c[n>>2]|0)+158>>1]|0)>(b[w>>1]|0)){b[(c[n>>2]|0)+158>>1]=b[w>>1]|0}if((b[(c[n>>2]|0)+160>>1]|0)<(b[w>>1]|0)){b[(c[n>>2]|0)+160>>1]=b[w>>1]|0}t=(c[(c[n>>2]|0)+60>>2]|0)+((c[(c[n>>2]|0)+148>>2]|0)+(b[w>>1]|0))|0;a[t]=d[t]|(128>>b[x>>1]&255)<<24>>24;i=m;return}function Or(a){a=a|0;var d=0,e=0;d=i;i=i+16|0;e=d;c[e>>2]=a;a=(c[e>>2]|0)+148|0;c[a>>2]=(c[a>>2]|0)+(b[(c[e>>2]|0)+156>>1]|0);i=d;return}function Pr(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+16|0;g=f+4|0;h=f;j=f+14|0;k=f+8|0;l=f+10|0;m=f+12|0;c[h>>2]=d;a[j]=e;while(1){if((c[(c[h>>2]|0)+1024>>2]|0)<0){n=14;break}e=aa(b[(c[h>>2]|0)+960+(c[(c[h>>2]|0)+1024>>2]<<2)+2>>1]|0,c[(c[h>>2]|0)+4>>2]|0)|0;c[(c[h>>2]|0)+80>>2]=e;e=aa(b[(c[h>>2]|0)+960+(c[(c[h>>2]|0)+1024>>2]<<2)>>1]|0,c[(c[h>>2]|0)+4>>2]|0)|0;c[(c[h>>2]|0)+76>>2]=e;c[(c[h>>2]|0)+40>>2]=c[(c[h>>2]|0)+28>>2];c[(c[h>>2]|0)+44>>2]=0;e=(Ur(c[h>>2]|0,a[j]|0)|0)<<24>>24!=0;d=c[h>>2]|0;if(!e){if((c[d+92>>2]|0)!=0?(Vr(c[h>>2]|0)|0)<<24>>24!=0:0){n=12;break}e=(c[h>>2]|0)+1024|0;c[e>>2]=(c[e>>2]|0)+ -1;continue}if((c[d+44>>2]|0)!=98){n=5;break}c[(c[h>>2]|0)+44>>2]=0;b[k>>1]=b[(c[h>>2]|0)+960+(c[(c[h>>2]|0)+1024>>2]<<2)>>1]|0;b[l>>1]=b[(c[h>>2]|0)+960+(c[(c[h>>2]|0)+1024>>2]<<2)+2>>1]|0;b[m>>1]=((b[k>>1]|0)+(b[l>>1]|0)|0)/2|0;if((c[(c[h>>2]|0)+1024>>2]|0)>=7){n=8;break}if((b[m>>1]|0)<(b[k>>1]|0)){n=8;break}b[(c[h>>2]|0)+960+((c[(c[h>>2]|0)+1024>>2]|0)+1<<2)>>1]=b[m>>1]|0;b[(c[h>>2]|0)+960+((c[(c[h>>2]|0)+1024>>2]|0)+1<<2)+2>>1]=b[l>>1]|0;b[(c[h>>2]|0)+960+(c[(c[h>>2]|0)+1024>>2]<<2)+2>>1]=(b[m>>1]|0)-1;d=(c[h>>2]|0)+1024|0;c[d>>2]=(c[d>>2]|0)+1}if((n|0)==5){c[g>>2]=1;o=c[g>>2]|0;i=f;return o|0}else if((n|0)==8){c[(c[h>>2]|0)+1024>>2]=0;c[(c[h>>2]|0)+44>>2]=20;c[g>>2]=c[(c[h>>2]|0)+44>>2];o=c[g>>2]|0;i=f;return o|0}else if((n|0)==12){c[g>>2]=c[(c[h>>2]|0)+44>>2];o=c[g>>2]|0;i=f;return o|0}else if((n|0)==14){c[g>>2]=0;o=c[g>>2]|0;i=f;return o|0}return 0}function Qr(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[f>>2]=c[f>>2];c[g>>2]=c[g>>2];c[h>>2]=c[h>>2];i=e;return}function Rr(e,f,g,h,j,k){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;l=i;i=i+48|0;m=l+32|0;n=l+36|0;o=l+28|0;p=l+24|0;q=l+20|0;r=l+16|0;s=l+8|0;t=l+4|0;u=l+38|0;v=l;w=l+12|0;c[m>>2]=e;b[n>>1]=f;c[o>>2]=g;c[p>>2]=h;c[q>>2]=j;c[r>>2]=k;c[q>>2]=c[q>>2];c[r>>2]=c[r>>2];if(((c[p>>2]|0)-(c[o>>2]|0)|0)>=(c[(c[m>>2]|0)+4>>2]|0)){i=l;return}c[s>>2]=(c[o>>2]|0)+(c[(c[m>>2]|0)+4>>2]|0)-1&0-(c[(c[m>>2]|0)+4>>2]|0);c[t>>2]=c[p>>2]&0-(c[(c[m>>2]|0)+4>>2]|0);if((c[s>>2]|0)!=(c[t>>2]|0)){i=l;return}c[v>>2]=(c[(c[m>>2]|0)+60>>2]|0)+(b[n>>1]>>3);a[u]=128>>(b[n>>1]&7);c[s>>2]=c[s>>2]>>c[c[m>>2]>>2];if((c[s>>2]|0)<0){i=l;return}if((c[s>>2]|0)>=(c[(c[m>>2]|0)+104>>2]|0)){i=l;return}c[w>>2]=(c[v>>2]|0)+(0-(aa(c[s>>2]|0,c[(c[m>>2]|0)+112>>2]|0)|0));if((c[(c[m>>2]|0)+112>>2]|0)>0){s=aa((c[(c[m>>2]|0)+104>>2]|0)-1|0,c[(c[m>>2]|0)+112>>2]|0)|0;c[w>>2]=(c[w>>2]|0)+s}s=c[w>>2]|0;a[s]=d[s]|d[u];i=l;return}function Sr(e,f,g,h,j,k){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;l=i;i=i+48|0;m=l+36|0;n=l+40|0;o=l+32|0;p=l+28|0;q=l+24|0;r=l+16|0;s=l+12|0;t=l+8|0;u=l+4|0;v=l;w=l+42|0;x=l+20|0;c[m>>2]=e;b[n>>1]=f;c[o>>2]=g;c[p>>2]=h;c[q>>2]=j;c[r>>2]=k;c[s>>2]=(c[o>>2]|0)+(c[(c[m>>2]|0)+4>>2]|0)-1&0-(c[(c[m>>2]|0)+4>>2]|0);c[t>>2]=c[p>>2]&0-(c[(c[m>>2]|0)+4>>2]|0);c[u>>2]=c[s>>2];if((c[s>>2]|0)>(c[t>>2]|0)){c[x>>2]=c[(c[q>>2]|0)+12>>2]&7;if((c[s>>2]|0)!=((c[t>>2]|0)+(c[(c[m>>2]|0)+4>>2]|0)|0)){i=l;return}k=c[x>>2]|0;do{if((k|0)==5|(k|0)==1){if((c[(c[q>>2]|0)+28>>2]|0)==(c[r>>2]|0)?(c[(c[q>>2]|0)+16>>2]|0)<=0:0){if((c[(c[q>>2]|0)+12>>2]&16|0)==0){i=l;return}if(((c[p>>2]|0)-(c[o>>2]|0)|0)<(c[(c[m>>2]|0)+8>>2]|0)){i=l;return}}if((c[(c[r>>2]|0)+28>>2]|0)==(c[q>>2]|0)?(c[(c[q>>2]|0)+20>>2]|0)==(b[n>>1]|0):0){if((c[(c[q>>2]|0)+12>>2]&32|0)==0){i=l;return}if(((c[p>>2]|0)-(c[o>>2]|0)|0)<(c[(c[m>>2]|0)+8>>2]|0)){i=l;return}}if((c[x>>2]|0)==1){c[u>>2]=c[t>>2];break}else{c[u>>2]=(((c[o>>2]|0)+(c[p>>2]|0)-1|0)/2|0)+(c[(c[m>>2]|0)+8>>2]|0)&0-(c[(c[m>>2]|0)+4>>2]|0);break}}else if((k|0)==4){c[u>>2]=(((c[o>>2]|0)+(c[p>>2]|0)-1|0)/2|0)+(c[(c[m>>2]|0)+8>>2]|0)&0-(c[(c[m>>2]|0)+4>>2]|0)}else if((k|0)==0){c[u>>2]=c[t>>2]}else{i=l;return}}while(0);if((c[u>>2]|0)>=0){if((c[u>>2]>>c[c[m>>2]>>2]|0)>=(c[(c[m>>2]|0)+104>>2]|0)){c[u>>2]=c[t>>2]}}else{c[u>>2]=c[s>>2]}c[s>>2]=(c[u>>2]|0)==(c[s>>2]|0)?c[t>>2]|0:c[s>>2]|0;c[s>>2]=c[s>>2]>>c[c[m>>2]>>2];c[v>>2]=(c[(c[m>>2]|0)+60>>2]|0)+(b[n>>1]>>3);a[w]=128>>(b[n>>1]&7);t=aa(c[s>>2]|0,c[(c[m>>2]|0)+112>>2]|0)|0;c[v>>2]=(c[v>>2]|0)+(0-t);if((c[(c[m>>2]|0)+112>>2]|0)>0){t=aa((c[(c[m>>2]|0)+104>>2]|0)-1|0,c[(c[m>>2]|0)+112>>2]|0)|0;c[v>>2]=(c[v>>2]|0)+t}if(((c[s>>2]|0)>=0?(c[s>>2]|0)<(c[(c[m>>2]|0)+104>>2]|0):0)?(d[c[v>>2]|0]&d[w]|0)!=0:0){i=l;return}}c[v>>2]=(c[(c[m>>2]|0)+60>>2]|0)+(b[n>>1]>>3);a[w]=128>>(b[n>>1]&7);c[s>>2]=c[u>>2]>>c[c[m>>2]>>2];if((c[s>>2]|0)<0){i=l;return}if((c[s>>2]|0)>=(c[(c[m>>2]|0)+104>>2]|0)){i=l;return}u=aa(c[s>>2]|0,c[(c[m>>2]|0)+112>>2]|0)|0;c[v>>2]=(c[v>>2]|0)+(0-u);if((c[(c[m>>2]|0)+112>>2]|0)>0){u=aa((c[(c[m>>2]|0)+104>>2]|0)-1|0,c[(c[m>>2]|0)+112>>2]|0)|0;c[v>>2]=(c[v>>2]|0)+u}u=c[v>>2]|0;a[u]=d[u]|d[w];i=l;return}function Tr(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;c[d>>2]=c[d>>2];i=b;return}function Ur(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=i;i=i+32|0;g=f+21|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;m=f+16|0;n=f+20|0;c[h>>2]=d;c[j>>2]=e;c[(c[h>>2]|0)+92>>2]=0;a[(c[h>>2]|0)+87|0]=0;a[(c[h>>2]|0)+86|0]=0;c[(c[h>>2]|0)+36>>2]=(c[(c[h>>2]|0)+32>>2]|0)+ -32;c[(c[h>>2]|0)+48>>2]=0;c[(c[h>>2]|0)+88>>2]=c[(c[h>>2]|0)+40>>2];c[(c[(c[h>>2]|0)+88>>2]|0)+8>>2]=c[(c[h>>2]|0)+40>>2];b[(c[h>>2]|0)+84>>1]=0;c[l>>2]=0;c[k>>2]=0;while(1){o=c[h>>2]|0;if((c[k>>2]|0)>=(b[(c[h>>2]|0)+128>>1]|0)){p=19;break}c[o+100>>2]=0;c[(c[h>>2]|0)+96>>2]=0;if((_r(c[h>>2]|0,c[l>>2]&65535,b[(c[(c[h>>2]|0)+140>>2]|0)+(c[k>>2]<<1)>>1]|0,c[j>>2]|0)|0)<<24>>24!=0){p=4;break}c[l>>2]=(b[(c[(c[h>>2]|0)+140>>2]|0)+(c[k>>2]<<1)>>1]|0)+1;if(((((c[(c[h>>2]|0)+72>>2]&(c[(c[h>>2]|0)+4>>2]|0)-1|0)==0?(c[(c[h>>2]|0)+72>>2]|0)>=(c[(c[h>>2]|0)+76>>2]|0):0)?(c[(c[h>>2]|0)+72>>2]|0)<=(c[(c[h>>2]|0)+80>>2]|0):0)?(c[(c[h>>2]|0)+96>>2]|0)!=0:0)?(c[(c[(c[h>>2]|0)+96>>2]|0)+12>>2]&8|0)==(c[(c[(c[h>>2]|0)+88>>2]|0)+12>>2]&8|0):0){e=(c[h>>2]|0)+40|0;c[e>>2]=(c[e>>2]|0)+ -4}c[m>>2]=c[(c[h>>2]|0)+88>>2];e=c[(c[h>>2]|0)+72>>2]|0;d=c[h>>2]|0;if((c[(c[(c[h>>2]|0)+88>>2]|0)+12>>2]&8|0)!=0){a[n]=(e-(c[d+72>>2]&0-(c[(c[h>>2]|0)+4>>2]|0))|0)>=(c[(c[h>>2]|0)+8>>2]|0)}else{a[n]=((e+(c[d+4>>2]|0)-1&0-(c[(c[h>>2]|0)+4>>2]|0))-(c[(c[h>>2]|0)+72>>2]|0)|0)>=(c[(c[h>>2]|0)+8>>2]|0)}if(($r(c[h>>2]|0,a[n]|0)|0)<<24>>24!=0){p=15;break}if((c[(c[h>>2]|0)+96>>2]|0)!=0){c[(c[m>>2]|0)+28>>2]=c[(c[h>>2]|0)+96>>2]}c[k>>2]=(c[k>>2]|0)+1}if((p|0)==4){a[g]=1;q=a[g]|0;i=f;return q|0}else if((p|0)==15){a[g]=1;q=a[g]|0;i=f;return q|0}else if((p|0)==19){if((as(o)|0)<<24>>24!=0){a[g]=1;q=a[g]|0;i=f;return q|0}else{a[g]=(c[(c[h>>2]|0)+40>>2]|0)>>>0<(c[(c[h>>2]|0)+36>>2]|0)>>>0?0:1;q=a[g]|0;i=f;return q|0}}return 0}function Vr(d){d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;e=i;i=i+80|0;f=e+72|0;g=e+44|0;h=e+70|0;j=e+68|0;k=e+66|0;l=e+32|0;m=e+20|0;n=e+24|0;o=e+16|0;p=e+64|0;q=e+62|0;r=e+60|0;s=e+58|0;t=e+56|0;u=e+4|0;v=e;w=e+28|0;x=e+8|0;y=e+12|0;z=e+36|0;A=e+40|0;B=e+48|0;C=e+52|0;c[g>>2]=d;Wr(z);Wr(A);Wr(B);c[l>>2]=c[(c[g>>2]|0)+92>>2];b[q>>1]=c[(c[g>>2]|0)+76>>2]>>c[c[g>>2]>>2];b[p>>1]=c[(c[g>>2]|0)+80>>2]>>c[c[g>>2]>>2];while(1){if((c[l>>2]|0)==0){break}c[m>>2]=c[(c[l>>2]|0)+4>>2];b[s>>1]=c[(c[l>>2]|0)+20>>2];b[r>>1]=(c[(c[l>>2]|0)+20>>2]|0)+(c[(c[l>>2]|0)+16>>2]|0)-1;if((b[p>>1]|0)>(b[s>>1]|0)){b[p>>1]=b[s>>1]|0}if((b[q>>1]|0)<(b[r>>1]|0)){b[q>>1]=b[r>>1]|0}c[c[l>>2]>>2]=0;Xr(z,c[l>>2]|0);c[l>>2]=c[m>>2]}r=c[g>>2]|0;if((c[(c[g>>2]|0)+48>>2]|0)==0){c[r+44>>2]=20;a[f]=1;D=a[f]|0;i=e;return D|0}wd[c[r+164>>2]&31](c[g>>2]|0,p,q);c[l>>2]=c[z>>2];while(1){if((c[l>>2]|0)==0){break}c[(c[l>>2]|0)+24>>2]=(c[(c[l>>2]|0)+20>>2]|0)-(b[p>>1]|0)&65535;c[l>>2]=c[(c[l>>2]|0)+4>>2]}b[h>>1]=b[p>>1]|0;b[k>>1]=0;if((c[(c[g>>2]|0)+48>>2]|0)>0?(c[(c[(c[g>>2]|0)+32>>2]|0)+(0-(c[(c[g>>2]|0)+48>>2]|0)<<2)>>2]|0)==(b[p>>1]|0):0){p=(c[g>>2]|0)+48|0;c[p>>2]=(c[p>>2]|0)+ -1}a:while(1){if((c[(c[g>>2]|0)+48>>2]|0)<=0){break}c[l>>2]=c[z>>2];while(1){if((c[l>>2]|0)==0){break}c[m>>2]=c[(c[l>>2]|0)+4>>2];p=(c[l>>2]|0)+24|0;c[p>>2]=(c[p>>2]|0)-(b[k>>1]|0);do{if((c[(c[l>>2]|0)+24>>2]|0)==0){Yr(z,c[l>>2]|0);p=c[l>>2]|0;if((c[(c[l>>2]|0)+12>>2]&8|0)!=0){Xr(A,p);break}else{Xr(B,p);break}}}while(0);c[l>>2]=c[m>>2]}Zr(A);Zr(B);p=(c[g>>2]|0)+48|0;r=c[p>>2]|0;c[p>>2]=r+ -1;b[j>>1]=c[(c[(c[g>>2]|0)+32>>2]|0)+(0-r<<2)>>2];b[k>>1]=(b[j>>1]|0)-(b[h>>1]|0);while(1){if((b[h>>1]|0)>=(b[j>>1]|0)){break}b[t>>1]=0;c[n>>2]=c[A>>2];c[o>>2]=c[B>>2];while(1){if((c[n>>2]|0)==0){break}c[u>>2]=c[c[n>>2]>>2];c[v>>2]=c[c[o>>2]>>2];if((c[u>>2]|0)>(c[v>>2]|0)){c[w>>2]=c[u>>2];c[u>>2]=c[v>>2];c[v>>2]=c[w>>2]}c[x>>2]=c[u>>2]&0-(c[(c[g>>2]|0)+4>>2]|0);c[y>>2]=(c[v>>2]|0)+(c[(c[g>>2]|0)+4>>2]|0)-1&0-(c[(c[g>>2]|0)+4>>2]|0);do{if((((c[v>>2]|0)-(c[u>>2]|0)|0)<=(c[(c[g>>2]|0)+4>>2]|0)?(c[x>>2]|0)!=(c[u>>2]|0):0)?(c[y>>2]|0)!=(c[v>>2]|0):0){if((c[x>>2]|0)<=(c[y>>2]|0)?(c[y>>2]|0)!=((c[x>>2]|0)+(c[(c[g>>2]|0)+4>>2]|0)|0):0){E=37;break}c[C>>2]=c[(c[n>>2]|0)+12>>2]&7;if((c[C>>2]|0)!=2){c[c[n>>2]>>2]=c[u>>2];c[c[o>>2]>>2]=c[v>>2];c[(c[n>>2]|0)+24>>2]=1;b[t>>1]=(b[t>>1]|0)+1<<16>>16}}else{E=37}}while(0);if((E|0)==37){E=0;zd[c[(c[g>>2]|0)+168>>2]&7](c[g>>2]|0,b[h>>1]|0,c[u>>2]|0,c[v>>2]|0,c[n>>2]|0,c[o>>2]|0)}c[n>>2]=c[(c[n>>2]|0)+4>>2];c[o>>2]=c[(c[o>>2]|0)+4>>2]}b:do{if((b[t>>1]|0)>0){c[n>>2]=c[A>>2];c[o>>2]=c[B>>2];while(1){if((c[n>>2]|0)==0){break b}if((c[(c[n>>2]|0)+24>>2]|0)!=0){c[(c[n>>2]|0)+24>>2]=0;zd[c[(c[g>>2]|0)+172>>2]&7](c[g>>2]|0,b[h>>1]|0,c[c[n>>2]>>2]|0,c[c[o>>2]>>2]|0,c[n>>2]|0,c[o>>2]|0)}c[n>>2]=c[(c[n>>2]|0)+4>>2];c[o>>2]=c[(c[o>>2]|0)+4>>2]}}}while(0);rd[c[(c[g>>2]|0)+176>>2]&127](c[g>>2]|0);b[h>>1]=(b[h>>1]|0)+1<<16>>16;if((b[h>>1]|0)>=(b[j>>1]|0)){continue}Zr(A);Zr(B)}c[l>>2]=c[A>>2];while(1){if((c[l>>2]|0)==0){break}c[m>>2]=c[(c[l>>2]|0)+4>>2];if((c[(c[l>>2]|0)+16>>2]|0)==0){Yr(A,c[l>>2]|0)}c[l>>2]=c[m>>2]}c[l>>2]=c[B>>2];while(1){if((c[l>>2]|0)==0){continue a}c[m>>2]=c[(c[l>>2]|0)+4>>2];if((c[(c[l>>2]|0)+16>>2]|0)==0){Yr(B,c[l>>2]|0)}c[l>>2]=c[m>>2]}}while(1){if((b[h>>1]|0)>(b[q>>1]|0)){break}rd[c[(c[g>>2]|0)+176>>2]&127](c[g>>2]|0);b[h>>1]=(b[h>>1]|0)+1<<16>>16}a[f]=0;D=a[f]|0;i=e;return D|0}function Wr(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;c[c[d>>2]>>2]=0;i=b;return}function Xr(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+32|0;e=d+16|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=c[e>>2];c[h>>2]=c[c[g>>2]>>2];c[j>>2]=c[c[f>>2]>>2];while(1){if((c[h>>2]|0)==0){break}if((c[j>>2]|0)<(c[c[h>>2]>>2]|0)){break}c[g>>2]=(c[h>>2]|0)+4;c[h>>2]=c[c[g>>2]>>2]}c[(c[f>>2]|0)+4>>2]=c[h>>2];c[c[g>>2]>>2]=c[f>>2];i=d;return}function Yr(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+16|0;e=d+12|0;f=d;g=d+4|0;h=d+8|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=c[e>>2];c[h>>2]=c[c[g>>2]>>2];while(1){if((c[h>>2]|0)==0){j=6;break}k=(c[h>>2]|0)+4|0;if((c[h>>2]|0)==(c[f>>2]|0)){break}c[g>>2]=k;c[h>>2]=c[c[g>>2]>>2]}if((j|0)==6){i=d;return}c[c[g>>2]>>2]=c[k>>2];i=d;return}function Zr(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;i=i+16|0;d=b+12|0;e=b;f=b+4|0;g=b+8|0;c[d>>2]=a;c[f>>2]=c[c[d>>2]>>2];while(1){if((c[f>>2]|0)==0){break}c[c[f>>2]>>2]=c[c[(c[f>>2]|0)+8>>2]>>2];a=(c[f>>2]|0)+8|0;c[a>>2]=(c[a>>2]|0)+(((c[(c[f>>2]|0)+12>>2]&8|0)!=0?1:-1)<<2);a=(c[f>>2]|0)+16|0;c[a>>2]=(c[a>>2]|0)+ -1;c[f>>2]=c[(c[f>>2]|0)+4>>2]}c[e>>2]=c[d>>2];c[f>>2]=c[c[e>>2]>>2];if((c[f>>2]|0)==0){i=b;return}c[g>>2]=c[(c[f>>2]|0)+4>>2];while(1){if((c[g>>2]|0)==0){h=11;break}if((c[c[f>>2]>>2]|0)<=(c[c[g>>2]>>2]|0)){c[e>>2]=(c[f>>2]|0)+4;c[f>>2]=c[c[e>>2]>>2];if((c[f>>2]|0)==0){h=11;break}}else{c[c[e>>2]>>2]=c[g>>2];c[(c[f>>2]|0)+4>>2]=c[(c[g>>2]|0)+4>>2];c[(c[g>>2]|0)+4>>2]=c[f>>2];c[e>>2]=c[d>>2];c[f>>2]=c[c[e>>2]>>2]}c[g>>2]=c[(c[f>>2]|0)+4>>2]}if((h|0)==11){i=b;return}}function _r(f,g,h,j){f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;k=i;i=i+144|0;l=k+140|0;m=k+132|0;n=k+136|0;o=k+138|0;p=k+128|0;q=k+120|0;r=k+112|0;s=k+104|0;t=k+100|0;u=k+96|0;v=k+92|0;w=k+88|0;x=k+84|0;y=k+80|0;z=k+76|0;A=k+72|0;B=k+68|0;C=k+32|0;D=k;E=k+8|0;F=k+16|0;G=k+20|0;H=k+24|0;I=k+28|0;J=k+36|0;K=k+40|0;L=k+44|0;M=k+48|0;N=k+52|0;O=k+56|0;P=k+60|0;Q=k+64|0;c[m>>2]=f;b[n>>1]=g;b[o>>1]=h;c[p>>2]=j;c[t>>2]=c[(c[m>>2]|0)+132>>2];c[v>>2]=(c[t>>2]|0)+(e[o>>1]<<3);c[s>>2]=(c[(c[t>>2]|0)+(e[n>>1]<<3)>>2]<<c[(c[m>>2]|0)+24>>2])-(c[(c[m>>2]|0)+8>>2]|0);c[s+4>>2]=(c[(c[t>>2]|0)+(e[n>>1]<<3)+4>>2]<<c[(c[m>>2]|0)+24>>2])-(c[(c[m>>2]|0)+8>>2]|0);c[q>>2]=(c[(c[t>>2]|0)+(e[o>>1]<<3)>>2]<<c[(c[m>>2]|0)+24>>2])-(c[(c[m>>2]|0)+8>>2]|0);c[q+4>>2]=(c[(c[t>>2]|0)+(e[o>>1]<<3)+4>>2]<<c[(c[m>>2]|0)+24>>2])-(c[(c[m>>2]|0)+8>>2]|0);if((c[p>>2]|0)!=0){c[y>>2]=c[s>>2];c[s>>2]=c[s+4>>2];c[s+4>>2]=c[y>>2];c[z>>2]=c[q>>2];c[q>>2]=c[q+4>>2];c[q+4>>2]=c[z>>2]}c[r+0>>2]=c[s+0>>2];c[r+4>>2]=c[s+4>>2];c[u>>2]=(c[t>>2]|0)+(e[n>>1]<<3);c[w>>2]=(c[(c[m>>2]|0)+136>>2]|0)+(e[n>>1]|0);if((a[c[w>>2]|0]&4|0)!=0){a[(c[m>>2]|0)+180|0]=d[c[w>>2]|0]>>5}c[x>>2]=a[c[w>>2]|0]&3;a:do{if((c[x>>2]|0)==2){R=39}else{if((c[x>>2]|0)==0){if((a[(c[(c[m>>2]|0)+136>>2]|0)+(e[o>>1]|0)|0]&3|0)==1){c[s+0>>2]=c[q+0>>2];c[s+4>>2]=c[q+4>>2];c[v>>2]=(c[v>>2]|0)+ -8}else{c[s>>2]=((c[s>>2]|0)+(c[q>>2]|0)|0)/2|0;c[s+4>>2]=((c[s+4>>2]|0)+(c[q+4>>2]|0)|0)/2|0}c[u>>2]=(c[u>>2]|0)+ -8;c[w>>2]=(c[w>>2]|0)+ -1}c[(c[m>>2]|0)+68>>2]=c[s>>2];c[(c[m>>2]|0)+72>>2]=c[s+4>>2];b:while(1){if(!((c[u>>2]|0)>>>0<(c[v>>2]|0)>>>0)){R=37;break}c[u>>2]=(c[u>>2]|0)+8;c[w>>2]=(c[w>>2]|0)+1;c[x>>2]=a[c[w>>2]|0]&3;n=c[x>>2]|0;if((n|0)==0){c[r>>2]=(c[c[u>>2]>>2]<<c[(c[m>>2]|0)+24>>2])-(c[(c[m>>2]|0)+8>>2]|0);c[r+4>>2]=(c[(c[u>>2]|0)+4>>2]<<c[(c[m>>2]|0)+24>>2])-(c[(c[m>>2]|0)+8>>2]|0);if((c[p>>2]|0)!=0){c[D>>2]=c[r>>2];c[r>>2]=c[r+4>>2];c[r+4>>2]=c[D>>2]}while(1){if(!((c[u>>2]|0)>>>0<(c[v>>2]|0)>>>0)){R=27;break b}c[u>>2]=(c[u>>2]|0)+8;c[w>>2]=(c[w>>2]|0)+1;c[x>>2]=a[c[w>>2]|0]&3;c[F>>2]=(c[c[u>>2]>>2]<<c[(c[m>>2]|0)+24>>2])-(c[(c[m>>2]|0)+8>>2]|0);c[G>>2]=(c[(c[u>>2]|0)+4>>2]<<c[(c[m>>2]|0)+24>>2])-(c[(c[m>>2]|0)+8>>2]|0);if((c[p>>2]|0)!=0){c[H>>2]=c[F>>2];c[F>>2]=c[G>>2];c[G>>2]=c[H>>2]}if((c[x>>2]|0)==1){break}if((c[x>>2]|0)!=0){R=39;break a}c[E>>2]=((c[r>>2]|0)+(c[F>>2]|0)|0)/2|0;c[E+4>>2]=((c[r+4>>2]|0)+(c[G>>2]|0)|0)/2|0;if((ds(c[m>>2]|0,c[r>>2]|0,c[r+4>>2]|0,c[E>>2]|0,c[E+4>>2]|0)|0)<<24>>24!=0){break a}c[r>>2]=c[F>>2];c[r+4>>2]=c[G>>2]}if((ds(c[m>>2]|0,c[r>>2]|0,c[r+4>>2]|0,c[F>>2]|0,c[G>>2]|0)|0)<<24>>24!=0){break a}else{continue}}else if((n|0)==1){c[A>>2]=(c[c[u>>2]>>2]<<c[(c[m>>2]|0)+24>>2])-(c[(c[m>>2]|0)+8>>2]|0);c[B>>2]=(c[(c[u>>2]|0)+4>>2]<<c[(c[m>>2]|0)+24>>2])-(c[(c[m>>2]|0)+8>>2]|0);if((c[p>>2]|0)!=0){c[C>>2]=c[A>>2];c[A>>2]=c[B>>2];c[B>>2]=c[C>>2]}if((cs(c[m>>2]|0,c[A>>2]|0,c[B>>2]|0)|0)<<24>>24!=0){break a}else{continue}}else{if(((c[u>>2]|0)+8|0)>>>0>(c[v>>2]|0)>>>0){R=39;break a}if((a[(c[w>>2]|0)+1|0]&3|0)!=2){R=39;break a}c[u>>2]=(c[u>>2]|0)+16;c[w>>2]=(c[w>>2]|0)+2;c[I>>2]=(c[(c[u>>2]|0)+ -16>>2]<<c[(c[m>>2]|0)+24>>2])-(c[(c[m>>2]|0)+8>>2]|0);c[J>>2]=(c[(c[u>>2]|0)+ -16+4>>2]<<c[(c[m>>2]|0)+24>>2])-(c[(c[m>>2]|0)+8>>2]|0);c[K>>2]=(c[(c[u>>2]|0)+ -8>>2]<<c[(c[m>>2]|0)+24>>2])-(c[(c[m>>2]|0)+8>>2]|0);c[L>>2]=(c[(c[u>>2]|0)+ -8+4>>2]<<c[(c[m>>2]|0)+24>>2])-(c[(c[m>>2]|0)+8>>2]|0);if((c[p>>2]|0)!=0){c[O>>2]=c[I>>2];c[I>>2]=c[J>>2];c[J>>2]=c[O>>2];c[P>>2]=c[K>>2];c[K>>2]=c[L>>2];c[L>>2]=c[P>>2]}if(!((c[u>>2]|0)>>>0<=(c[v>>2]|0)>>>0)){R=36;break}c[M>>2]=(c[c[u>>2]>>2]<<c[(c[m>>2]|0)+24>>2])-(c[(c[m>>2]|0)+8>>2]|0);c[N>>2]=(c[(c[u>>2]|0)+4>>2]<<c[(c[m>>2]|0)+24>>2])-(c[(c[m>>2]|0)+8>>2]|0);if((c[p>>2]|0)!=0){c[Q>>2]=c[M>>2];c[M>>2]=c[N>>2];c[N>>2]=c[Q>>2]}if((es(c[m>>2]|0,c[I>>2]|0,c[J>>2]|0,c[K>>2]|0,c[L>>2]|0,c[M>>2]|0,c[N>>2]|0)|0)<<24>>24!=0){break a}else{continue}}}if((R|0)==27){if((ds(c[m>>2]|0,c[r>>2]|0,c[r+4>>2]|0,c[s>>2]|0,c[s+4>>2]|0)|0)<<24>>24!=0){break}}else if((R|0)==36){if((es(c[m>>2]|0,c[I>>2]|0,c[J>>2]|0,c[K>>2]|0,c[L>>2]|0,c[s>>2]|0,c[s+4>>2]|0)|0)<<24>>24!=0){break}}else if((R|0)==37?(cs(c[m>>2]|0,c[s>>2]|0,c[s+4>>2]|0)|0)<<24>>24!=0:0){break}a[l]=0;S=a[l]|0;i=k;return S|0}}while(0);if((R|0)==39){c[(c[m>>2]|0)+44>>2]=20}a[l]=1;S=a[l]|0;i=k;return S|0}function $r(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+16|0;g=f+13|0;h=f;j=f+12|0;k=f+4|0;l=f+8|0;c[h>>2]=d;a[j]=e;c[k>>2]=((c[(c[h>>2]|0)+40>>2]|0)-(c[(c[(c[h>>2]|0)+88>>2]|0)+8>>2]|0)|0)/4|0;if((c[k>>2]|0)<0){c[(c[h>>2]|0)+44>>2]=99;a[g]=1;m=a[g]|0;i=f;return m|0}if((c[k>>2]|0)>0){c[(c[(c[h>>2]|0)+88>>2]|0)+16>>2]=c[k>>2];do{if((a[j]|0)!=0){k=(c[(c[h>>2]|0)+88>>2]|0)+12|0;e=c[k>>2]|0;if((c[(c[(c[h>>2]|0)+88>>2]|0)+12>>2]&8|0)!=0){c[k>>2]=e|16;break}else{c[k>>2]=e|32;break}}}while(0);c[l>>2]=c[(c[h>>2]|0)+88>>2];c[(c[h>>2]|0)+88>>2]=c[(c[h>>2]|0)+40>>2];j=(c[h>>2]|0)+40|0;c[j>>2]=(c[j>>2]|0)+32;c[(c[(c[h>>2]|0)+88>>2]|0)+16>>2]=0;c[(c[(c[h>>2]|0)+88>>2]|0)+8>>2]=c[(c[h>>2]|0)+40>>2];c[(c[l>>2]|0)+28>>2]=c[(c[h>>2]|0)+88>>2];l=(c[h>>2]|0)+84|0;b[l>>1]=(b[l>>1]|0)+1<<16>>16}l=c[h>>2]|0;if((c[(c[h>>2]|0)+40>>2]|0)>>>0>=(c[(c[h>>2]|0)+36>>2]|0)>>>0){c[l+44>>2]=98;a[g]=1;m=a[g]|0;i=f;return m|0}else{a[l+87|0]=0;a[g]=0;m=a[g]|0;i=f;return m|0}return 0}function as(d){d=d|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+32|0;g=f+18|0;h=f;j=f+16|0;k=f+8|0;l=f+4|0;m=f+12|0;c[h>>2]=d;b[j>>1]=b[(c[h>>2]|0)+84>>1]|0;c[k>>2]=c[(c[h>>2]|0)+92>>2];a:do{if((e[j>>1]|0|0)>1?(c[k>>2]|0)!=0:0){while(1){if((e[j>>1]|0|0)<=0){break a}d=c[k>>2]|0;if((e[j>>1]|0|0)>1){c[(c[k>>2]|0)+4>>2]=(c[d+8>>2]|0)+(c[(c[k>>2]|0)+16>>2]<<2)}else{c[d+4>>2]=0}d=c[(c[k>>2]|0)+20>>2]|0;if((c[(c[k>>2]|0)+12>>2]&8|0)!=0){c[l>>2]=d;c[m>>2]=(c[(c[k>>2]|0)+20>>2]|0)+(c[(c[k>>2]|0)+16>>2]|0)-1}else{c[l>>2]=d-(c[(c[k>>2]|0)+16>>2]|0)+1;c[m>>2]=c[(c[k>>2]|0)+20>>2];c[(c[k>>2]|0)+20>>2]=c[l>>2];d=(c[k>>2]|0)+8|0;c[d>>2]=(c[d>>2]|0)+((c[(c[k>>2]|0)+16>>2]|0)-1<<2)}if(((bs(c[h>>2]|0,c[l>>2]|0)|0)<<24>>24|0)!=0){break}if(((bs(c[h>>2]|0,(c[m>>2]|0)+1|0)|0)<<24>>24|0)!=0){break}c[k>>2]=c[(c[k>>2]|0)+4>>2];b[j>>1]=(b[j>>1]|0)+ -1<<16>>16}a[g]=1;n=a[g]|0;i=f;return n|0}else{o=14}}while(0);if((o|0)==14){c[(c[h>>2]|0)+92>>2]=0}a[g]=0;n=a[g]|0;i=f;return n|0}function bs(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+32|0;f=e+20|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;c[g>>2]=b;c[h>>2]=d;c[k>>2]=(c[(c[g>>2]|0)+48>>2]|0)-1;c[j>>2]=(c[(c[g>>2]|0)+32>>2]|0)+(0-(c[(c[g>>2]|0)+48>>2]|0)<<2);while(1){if((c[k>>2]|0)>=0){m=(c[h>>2]|0)<(c[(c[j>>2]|0)+(c[k>>2]<<2)>>2]|0)}else{m=0}n=c[k>>2]|0;if(!m){break}c[k>>2]=n+ -1}a:do{if((n|0)>=0?(c[h>>2]|0)>(c[(c[j>>2]|0)+(c[k>>2]<<2)>>2]|0):0){while(1){if((c[k>>2]|0)<0){break a}c[l>>2]=c[(c[j>>2]|0)+(c[k>>2]<<2)>>2];c[(c[j>>2]|0)+(c[k>>2]<<2)>>2]=c[h>>2];c[h>>2]=c[l>>2];c[k>>2]=(c[k>>2]|0)+ -1}}}while(0);do{if((c[k>>2]|0)<0){l=(c[g>>2]|0)+36|0;c[l>>2]=(c[l>>2]|0)+ -4;l=c[g>>2]|0;if(!((c[(c[g>>2]|0)+36>>2]|0)>>>0<=(c[(c[g>>2]|0)+40>>2]|0)>>>0)){j=l+48|0;c[j>>2]=(c[j>>2]|0)+1;c[(c[(c[g>>2]|0)+32>>2]|0)+(0-(c[(c[g>>2]|0)+48>>2]|0)<<2)>>2]=c[h>>2];break}c[l+44>>2]=98;a[f]=1;o=a[f]|0;i=e;return o|0}}while(0);a[f]=0;o=a[f]|0;i=e;return o|0}function cs(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+16|0;g=f+12|0;h=f;j=f+4|0;k=f+8|0;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;e=c[(c[h>>2]|0)+100>>2]|0;do{if((e|0)==2){if((c[k>>2]|0)>(c[(c[h>>2]|0)+72>>2]|0)){if((($r(c[h>>2]|0,(((c[(c[h>>2]|0)+72>>2]|0)+(c[(c[h>>2]|0)+4>>2]|0)-1&0-(c[(c[h>>2]|0)+4>>2]|0))-(c[(c[h>>2]|0)+72>>2]|0)|0)>=(c[(c[h>>2]|0)+8>>2]|0)&255)|0)<<24>>24|0)==0?((gs(c[h>>2]|0,1,(((c[(c[h>>2]|0)+72>>2]|0)+(c[(c[h>>2]|0)+4>>2]|0)-1&0-(c[(c[h>>2]|0)+4>>2]|0))-(c[(c[h>>2]|0)+72>>2]|0)|0)>=(c[(c[h>>2]|0)+8>>2]|0)&255)|0)<<24>>24|0)==0:0){break}a[g]=1;l=a[g]|0;i=f;return l|0}}else if((e|0)==1){if((c[k>>2]|0)<(c[(c[h>>2]|0)+72>>2]|0)){if((($r(c[h>>2]|0,((c[(c[h>>2]|0)+72>>2]|0)-(c[(c[h>>2]|0)+72>>2]&0-(c[(c[h>>2]|0)+4>>2]|0))|0)>=(c[(c[h>>2]|0)+8>>2]|0)&255)|0)<<24>>24|0)==0?((gs(c[h>>2]|0,2,((c[(c[h>>2]|0)+72>>2]|0)-(c[(c[h>>2]|0)+72>>2]&0-(c[(c[h>>2]|0)+4>>2]|0))|0)>=(c[(c[h>>2]|0)+8>>2]|0)&255)|0)<<24>>24|0)==0:0){break}a[g]=1;l=a[g]|0;i=f;return l|0}}else if((e|0)==0){if((c[k>>2]|0)>(c[(c[h>>2]|0)+72>>2]|0)){if(!((gs(c[h>>2]|0,1,(((c[(c[h>>2]|0)+72>>2]|0)+(c[(c[h>>2]|0)+4>>2]|0)-1&0-(c[(c[h>>2]|0)+4>>2]|0))-(c[(c[h>>2]|0)+72>>2]|0)|0)>=(c[(c[h>>2]|0)+8>>2]|0)&255)|0)<<24>>24!=0)){break}a[g]=1;l=a[g]|0;i=f;return l|0}if((c[k>>2]|0)<(c[(c[h>>2]|0)+72>>2]|0)?(gs(c[h>>2]|0,2,((c[(c[h>>2]|0)+72>>2]|0)-(c[(c[h>>2]|0)+72>>2]&0-(c[(c[h>>2]|0)+4>>2]|0))|0)>=(c[(c[h>>2]|0)+8>>2]|0)&255)|0)<<24>>24!=0:0){a[g]=1;l=a[g]|0;i=f;return l|0}}}while(0);e=c[(c[h>>2]|0)+100>>2]|0;if((e|0)==1){if((ks(c[h>>2]|0,c[(c[h>>2]|0)+68>>2]|0,c[(c[h>>2]|0)+72>>2]|0,c[j>>2]|0,c[k>>2]|0,c[(c[h>>2]|0)+76>>2]|0,c[(c[h>>2]|0)+80>>2]|0)|0)<<24>>24!=0){a[g]=1;l=a[g]|0;i=f;return l|0}}else if((e|0)==2?(ls(c[h>>2]|0,c[(c[h>>2]|0)+68>>2]|0,c[(c[h>>2]|0)+72>>2]|0,c[j>>2]|0,c[k>>2]|0,c[(c[h>>2]|0)+76>>2]|0,c[(c[h>>2]|0)+80>>2]|0)|0)<<24>>24!=0:0){a[g]=1;l=a[g]|0;i=f;return l|0}c[(c[h>>2]|0)+68>>2]=c[j>>2];c[(c[h>>2]|0)+72>>2]=c[k>>2];a[g]=0;l=a[g]|0;i=f;return l|0}function ds(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;h=i;i=i+64|0;j=h+49|0;k=h+40|0;l=h+36|0;m=h+32|0;n=h+28|0;o=h+24|0;p=h+20|0;q=h+44|0;r=h+12|0;s=h+8|0;t=h+4|0;u=h;v=h+16|0;w=h+48|0;c[k>>2]=b;c[l>>2]=d;c[m>>2]=e;c[n>>2]=f;c[o>>2]=g;c[(c[k>>2]|0)+52>>2]=(c[k>>2]|0)+184;c[(c[(c[k>>2]|0)+52>>2]|0)+16>>2]=c[(c[k>>2]|0)+68>>2];c[(c[(c[k>>2]|0)+52>>2]|0)+20>>2]=c[(c[k>>2]|0)+72>>2];c[(c[(c[k>>2]|0)+52>>2]|0)+8>>2]=c[l>>2];c[(c[(c[k>>2]|0)+52>>2]|0)+12>>2]=c[m>>2];c[c[(c[k>>2]|0)+52>>2]>>2]=c[n>>2];c[(c[(c[k>>2]|0)+52>>2]|0)+4>>2]=c[o>>2];a:while(1){c[p>>2]=c[(c[(c[k>>2]|0)+52>>2]|0)+20>>2];c[q>>2]=c[(c[(c[k>>2]|0)+52>>2]|0)+12>>2];c[r>>2]=c[(c[(c[k>>2]|0)+52>>2]|0)+4>>2];c[s>>2]=c[c[(c[k>>2]|0)+52>>2]>>2];if((c[p>>2]|0)<=(c[r>>2]|0)){c[t>>2]=c[p>>2];c[u>>2]=c[r>>2]}else{c[t>>2]=c[r>>2];c[u>>2]=c[p>>2]}do{if((c[q>>2]|0)>=(c[t>>2]|0)?(c[q>>2]|0)<=(c[u>>2]|0):0){if((c[p>>2]|0)==(c[r>>2]|0)){o=(c[k>>2]|0)+52|0;c[o>>2]=(c[o>>2]|0)+ -16;break}c[v>>2]=(c[p>>2]|0)<(c[r>>2]|0)?1:2;if((c[(c[k>>2]|0)+100>>2]|0)!=(c[v>>2]|0)){o=c[p>>2]|0;if((c[v>>2]|0)==1){x=((o+(c[(c[k>>2]|0)+4>>2]|0)-1&0-(c[(c[k>>2]|0)+4>>2]|0))-(c[p>>2]|0)|0)>=(c[(c[k>>2]|0)+8>>2]|0)}else{x=(o-(c[p>>2]&0-(c[(c[k>>2]|0)+4>>2]|0))|0)>=(c[(c[k>>2]|0)+8>>2]|0)}a[w]=(x&1)<<24>>24;if((c[(c[k>>2]|0)+100>>2]|0)!=0?(($r(c[k>>2]|0,a[w]|0)|0)<<24>>24|0)!=0:0){y=22;break a}if((gs(c[k>>2]|0,c[v>>2]|0,a[w]|0)|0)<<24>>24!=0){y=22;break a}}o=c[k>>2]|0;n=c[(c[k>>2]|0)+76>>2]|0;m=c[(c[k>>2]|0)+80>>2]|0;if((c[v>>2]|0)==1){if((hs(o,2,61,n,m)|0)<<24>>24!=0){y=22;break a}else{break}}else{if((is(o,2,61,n,m)|0)<<24>>24!=0){y=22;break a}else{break}}}else{y=7}}while(0);if((y|0)==7){y=0;js(c[(c[k>>2]|0)+52>>2]|0);m=(c[k>>2]|0)+52|0;c[m>>2]=(c[m>>2]|0)+16}if(!((c[(c[k>>2]|0)+52>>2]|0)>>>0>=((c[k>>2]|0)+184|0)>>>0)){y=21;break}}if((y|0)==21){c[(c[k>>2]|0)+68>>2]=c[s>>2];c[(c[k>>2]|0)+72>>2]=c[r>>2];a[j]=0;z=a[j]|0;i=h;return z|0}else if((y|0)==22){a[j]=1;z=a[j]|0;i=h;return z|0}return 0}function es(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;k=i;i=i+80|0;l=k+69|0;m=k+64|0;n=k+60|0;o=k+56|0;p=k+52|0;q=k+48|0;r=k+44|0;s=k+40|0;t=k+36|0;u=k+32|0;v=k+24|0;w=k+20|0;x=k+16|0;y=k+12|0;z=k+8|0;A=k+4|0;B=k;C=k+28|0;D=k+68|0;c[m>>2]=b;c[n>>2]=d;c[o>>2]=e;c[p>>2]=f;c[q>>2]=g;c[r>>2]=h;c[s>>2]=j;c[(c[m>>2]|0)+52>>2]=(c[m>>2]|0)+184;c[(c[(c[m>>2]|0)+52>>2]|0)+24>>2]=c[(c[m>>2]|0)+68>>2];c[(c[(c[m>>2]|0)+52>>2]|0)+28>>2]=c[(c[m>>2]|0)+72>>2];c[(c[(c[m>>2]|0)+52>>2]|0)+16>>2]=c[n>>2];c[(c[(c[m>>2]|0)+52>>2]|0)+20>>2]=c[o>>2];c[(c[(c[m>>2]|0)+52>>2]|0)+8>>2]=c[p>>2];c[(c[(c[m>>2]|0)+52>>2]|0)+12>>2]=c[q>>2];c[c[(c[m>>2]|0)+52>>2]>>2]=c[r>>2];c[(c[(c[m>>2]|0)+52>>2]|0)+4>>2]=c[s>>2];a:while(1){c[t>>2]=c[(c[(c[m>>2]|0)+52>>2]|0)+28>>2];c[u>>2]=c[(c[(c[m>>2]|0)+52>>2]|0)+20>>2];c[v>>2]=c[(c[(c[m>>2]|0)+52>>2]|0)+12>>2];c[w>>2]=c[(c[(c[m>>2]|0)+52>>2]|0)+4>>2];c[x>>2]=c[c[(c[m>>2]|0)+52>>2]>>2];if((c[t>>2]|0)<=(c[w>>2]|0)){c[y>>2]=c[t>>2];c[z>>2]=c[w>>2]}else{c[y>>2]=c[w>>2];c[z>>2]=c[t>>2]}if((c[u>>2]|0)<=(c[v>>2]|0)){c[A>>2]=c[u>>2];c[B>>2]=c[v>>2]}else{c[A>>2]=c[v>>2];c[B>>2]=c[u>>2]}do{if((c[A>>2]|0)>=(c[y>>2]|0)?(c[B>>2]|0)<=(c[z>>2]|0):0){if((c[t>>2]|0)==(c[w>>2]|0)){s=(c[m>>2]|0)+52|0;c[s>>2]=(c[s>>2]|0)+ -24;break}c[C>>2]=(c[t>>2]|0)<=(c[w>>2]|0)?1:2;if((c[(c[m>>2]|0)+100>>2]|0)!=(c[C>>2]|0)){s=c[t>>2]|0;if((c[C>>2]|0)==1){E=((s+(c[(c[m>>2]|0)+4>>2]|0)-1&0-(c[(c[m>>2]|0)+4>>2]|0))-(c[t>>2]|0)|0)>=(c[(c[m>>2]|0)+8>>2]|0)}else{E=(s-(c[t>>2]&0-(c[(c[m>>2]|0)+4>>2]|0))|0)>=(c[(c[m>>2]|0)+8>>2]|0)}a[D]=(E&1)<<24>>24;if((c[(c[m>>2]|0)+100>>2]|0)!=0?(($r(c[m>>2]|0,a[D]|0)|0)<<24>>24|0)!=0:0){F=25;break a}if((gs(c[m>>2]|0,c[C>>2]|0,a[D]|0)|0)<<24>>24!=0){F=25;break a}}s=c[m>>2]|0;r=c[(c[m>>2]|0)+76>>2]|0;q=c[(c[m>>2]|0)+80>>2]|0;if((c[C>>2]|0)==1){if((hs(s,3,62,r,q)|0)<<24>>24!=0){F=25;break a}else{break}}else{if((is(s,3,62,r,q)|0)<<24>>24!=0){F=25;break a}else{break}}}else{F=10}}while(0);if((F|0)==10){F=0;fs(c[(c[m>>2]|0)+52>>2]|0);q=(c[m>>2]|0)+52|0;c[q>>2]=(c[q>>2]|0)+24}if(!((c[(c[m>>2]|0)+52>>2]|0)>>>0>=((c[m>>2]|0)+184|0)>>>0)){F=24;break}}if((F|0)==24){c[(c[m>>2]|0)+68>>2]=c[x>>2];c[(c[m>>2]|0)+72>>2]=c[w>>2];a[l]=0;G=a[l]|0;i=k;return G|0}else if((F|0)==25){a[l]=1;G=a[l]|0;i=k;return G|0}return 0}function fs(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;i=i+32|0;d=b+16|0;e=b;f=b+4|0;g=b+8|0;h=b+12|0;c[d>>2]=a;c[(c[d>>2]|0)+48>>2]=c[(c[d>>2]|0)+24>>2];c[g>>2]=c[(c[d>>2]|0)+8>>2];c[h>>2]=c[(c[d>>2]|0)+16>>2];a=(c[c[d>>2]>>2]|0)+(c[g>>2]|0)+1>>1;c[e>>2]=a;c[(c[d>>2]|0)+8>>2]=a;a=(c[(c[d>>2]|0)+24>>2]|0)+(c[h>>2]|0)+1>>1;c[f>>2]=a;c[(c[d>>2]|0)+40>>2]=a;c[g>>2]=(c[g>>2]|0)+(c[h>>2]|0)+1>>1;a=(c[e>>2]|0)+(c[g>>2]|0)+1>>1;c[e>>2]=a;c[(c[d>>2]|0)+16>>2]=a;a=(c[f>>2]|0)+(c[g>>2]|0)+1>>1;c[f>>2]=a;c[(c[d>>2]|0)+32>>2]=a;c[(c[d>>2]|0)+24>>2]=(c[e>>2]|0)+(c[f>>2]|0)+1>>1;c[(c[d>>2]|0)+52>>2]=c[(c[d>>2]|0)+28>>2];c[g>>2]=c[(c[d>>2]|0)+12>>2];c[h>>2]=c[(c[d>>2]|0)+20>>2];a=(c[(c[d>>2]|0)+4>>2]|0)+(c[g>>2]|0)+1>>1;c[e>>2]=a;c[(c[d>>2]|0)+12>>2]=a;a=(c[(c[d>>2]|0)+28>>2]|0)+(c[h>>2]|0)+1>>1;c[f>>2]=a;c[(c[d>>2]|0)+44>>2]=a;c[g>>2]=(c[g>>2]|0)+(c[h>>2]|0)+1>>1;h=(c[e>>2]|0)+(c[g>>2]|0)+1>>1;c[e>>2]=h;c[(c[d>>2]|0)+20>>2]=h;h=(c[f>>2]|0)+(c[g>>2]|0)+1>>1;c[f>>2]=h;c[(c[d>>2]|0)+36>>2]=h;c[(c[d>>2]|0)+28>>2]=(c[e>>2]|0)+(c[f>>2]|0)+1>>1;i=b;return}function gs(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+16|0;h=g+9|0;j=g;k=g+4|0;l=g+8|0;c[j>>2]=b;c[k>>2]=e;a[l]=f;if((c[(c[j>>2]|0)+92>>2]|0)==0){c[(c[j>>2]|0)+88>>2]=c[(c[j>>2]|0)+40>>2];c[(c[j>>2]|0)+92>>2]=c[(c[j>>2]|0)+88>>2];f=(c[j>>2]|0)+40|0;c[f>>2]=(c[f>>2]|0)+32}f=c[j>>2]|0;if((c[(c[j>>2]|0)+40>>2]|0)>>>0>=(c[(c[j>>2]|0)+36>>2]|0)>>>0){c[f+44>>2]=98;a[h]=1;m=a[h]|0;i=g;return m|0}c[(c[f+88>>2]|0)+12>>2]=0;c[(c[(c[j>>2]|0)+88>>2]|0)+20>>2]=0;c[(c[(c[j>>2]|0)+88>>2]|0)+16>>2]=0;c[(c[(c[j>>2]|0)+88>>2]|0)+8>>2]=c[(c[j>>2]|0)+40>>2];c[(c[(c[j>>2]|0)+88>>2]|0)+4>>2]=0;c[(c[(c[j>>2]|0)+88>>2]|0)+28>>2]=0;c[(c[(c[j>>2]|0)+88>>2]|0)+12>>2]=d[(c[j>>2]|0)+180|0]|0;f=c[k>>2]|0;if((f|0)==1){e=(c[(c[j>>2]|0)+88>>2]|0)+12|0;c[e>>2]=c[e>>2]|8;if((a[l]|0)!=0){e=(c[(c[j>>2]|0)+88>>2]|0)+12|0;c[e>>2]=c[e>>2]|32}}else if((f|0)==2){if((a[l]|0)!=0){l=(c[(c[j>>2]|0)+88>>2]|0)+12|0;c[l>>2]=c[l>>2]|16}}else{c[(c[j>>2]|0)+44>>2]=20;a[h]=1;m=a[h]|0;i=g;return m|0}if((c[(c[j>>2]|0)+96>>2]|0)==0){c[(c[j>>2]|0)+96>>2]=c[(c[j>>2]|0)+88>>2]}c[(c[j>>2]|0)+100>>2]=c[k>>2];a[(c[j>>2]|0)+86|0]=1;a[(c[j>>2]|0)+87|0]=0;a[h]=0;m=a[h]|0;i=g;return m|0}function hs(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;j=i;i=i+64|0;k=j+54|0;l=j+48|0;m=j+44|0;n=j+40|0;o=j+36|0;p=j+32|0;q=j+28|0;r=j+24|0;s=j+16|0;t=j+12|0;u=j+8|0;v=j+52|0;w=j+4|0;x=j;y=j+20|0;c[l>>2]=d;c[m>>2]=e;c[n>>2]=f;c[o>>2]=g;c[p>>2]=h;c[w>>2]=c[(c[l>>2]|0)+52>>2];c[q>>2]=c[(c[w>>2]|0)+(c[m>>2]<<3)+4>>2];c[r>>2]=c[(c[w>>2]|0)+4>>2];c[y>>2]=c[(c[l>>2]|0)+40>>2];a:do{if((c[r>>2]|0)>=(c[o>>2]|0)?(c[q>>2]|0)<=(c[p>>2]|0):0){c[t>>2]=c[r>>2]&0-(c[(c[l>>2]|0)+4>>2]|0);if((c[t>>2]|0)>(c[p>>2]|0)){c[t>>2]=c[p>>2]}c[u>>2]=c[o>>2];if((c[q>>2]|0)>=(c[o>>2]|0)){c[s>>2]=(c[q>>2]|0)+(c[(c[l>>2]|0)+4>>2]|0)-1&0-(c[(c[l>>2]|0)+4>>2]|0);b[v>>1]=c[q>>2]&(c[(c[l>>2]|0)+4>>2]|0)-1;c[u>>2]=c[s>>2];if((b[v>>1]|0)==0){if((a[(c[l>>2]|0)+87|0]|0)!=0){c[y>>2]=(c[y>>2]|0)+ -4;a[(c[l>>2]|0)+87|0]=0}h=c[(c[w>>2]|0)+(c[m>>2]<<3)>>2]|0;g=c[y>>2]|0;c[y>>2]=g+4;c[g>>2]=h;c[s>>2]=(c[s>>2]|0)+(c[(c[l>>2]|0)+4>>2]|0)}}else{c[s>>2]=c[o>>2]}if((a[(c[l>>2]|0)+86|0]|0)!=0){c[(c[(c[l>>2]|0)+88>>2]|0)+20>>2]=c[u>>2]>>c[c[l>>2]>>2];a[(c[l>>2]|0)+86|0]=0}if((c[t>>2]|0)>=(c[s>>2]|0)){if(((c[y>>2]|0)+((c[t>>2]|0)-(c[s>>2]|0)>>c[c[l>>2]>>2]<<2)+4|0)>>>0>=(c[(c[l>>2]|0)+36>>2]|0)>>>0){c[(c[l>>2]|0)+40>>2]=c[y>>2];c[(c[l>>2]|0)+44>>2]=98;a[k]=1;z=a[k]|0;i=j;return z|0}c[x>>2]=c[w>>2];while(1){if(!((c[w>>2]|0)>>>0>=(c[x>>2]|0)>>>0)){break a}if((c[s>>2]|0)>(c[t>>2]|0)){break a}a[(c[l>>2]|0)+87|0]=0;c[r>>2]=c[(c[w>>2]|0)+4>>2];if((c[r>>2]|0)>(c[s>>2]|0)){c[q>>2]=c[(c[w>>2]|0)+(c[m>>2]<<3)+4>>2];if(((c[r>>2]|0)-(c[q>>2]|0)|0)>=(c[(c[l>>2]|0)+16>>2]|0)){rd[c[n>>2]&127](c[w>>2]|0);c[w>>2]=(c[w>>2]|0)+(c[m>>2]<<3);continue}else{h=aa((c[c[w>>2]>>2]|0)-(c[(c[w>>2]|0)+(c[m>>2]<<3)>>2]|0)|0,(c[s>>2]|0)-(c[q>>2]|0)|0)|0;g=(c[(c[w>>2]|0)+(c[m>>2]<<3)>>2]|0)+((h|0)/((c[r>>2]|0)-(c[q>>2]|0)|0)|0)|0;h=c[y>>2]|0;c[y>>2]=h+4;c[h>>2]=g;c[w>>2]=(c[w>>2]|0)+(0-(c[m>>2]|0)<<3);c[s>>2]=(c[s>>2]|0)+(c[(c[l>>2]|0)+4>>2]|0);continue}}else{if((c[r>>2]|0)==(c[s>>2]|0)){a[(c[l>>2]|0)+87|0]=1;g=c[c[w>>2]>>2]|0;h=c[y>>2]|0;c[y>>2]=h+4;c[h>>2]=g;c[s>>2]=(c[s>>2]|0)+(c[(c[l>>2]|0)+4>>2]|0)}c[w>>2]=(c[w>>2]|0)+(0-(c[m>>2]|0)<<3);continue}}}}}while(0);c[(c[l>>2]|0)+40>>2]=c[y>>2];y=(c[l>>2]|0)+52|0;c[y>>2]=(c[y>>2]|0)+(0-(c[m>>2]|0)<<3);a[k]=0;z=a[k]|0;i=j;return z|0}function is(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;h=i;i=i+32|0;j=h+20|0;k=h;l=h+4|0;m=h+8|0;n=h+12|0;o=h+16|0;p=h+25|0;q=h+24|0;c[j>>2]=b;c[k>>2]=d;c[l>>2]=e;c[m>>2]=f;c[n>>2]=g;c[o>>2]=c[(c[j>>2]|0)+52>>2];c[(c[o>>2]|0)+4>>2]=0-(c[(c[o>>2]|0)+4>>2]|0);c[(c[o>>2]|0)+12>>2]=0-(c[(c[o>>2]|0)+12>>2]|0);c[(c[o>>2]|0)+20>>2]=0-(c[(c[o>>2]|0)+20>>2]|0);if((c[k>>2]|0)>2){c[(c[o>>2]|0)+28>>2]=0-(c[(c[o>>2]|0)+28>>2]|0)}a[q]=a[(c[j>>2]|0)+86|0]|0;a[p]=hs(c[j>>2]|0,c[k>>2]|0,c[l>>2]|0,0-(c[n>>2]|0)|0,0-(c[m>>2]|0)|0)|0;if((a[q]|0)!=0?(a[(c[j>>2]|0)+86|0]|0)==0:0){c[(c[(c[j>>2]|0)+88>>2]|0)+20>>2]=0-(c[(c[(c[j>>2]|0)+88>>2]|0)+20>>2]|0)}c[(c[o>>2]|0)+4>>2]=0-(c[(c[o>>2]|0)+4>>2]|0);i=h;return a[p]|0}function js(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;i=i+16|0;d=b+8|0;e=b;f=b+4|0;c[d>>2]=a;c[(c[d>>2]|0)+32>>2]=c[(c[d>>2]|0)+16>>2];c[f>>2]=c[(c[d>>2]|0)+8>>2];a=((c[(c[d>>2]|0)+16>>2]|0)+(c[f>>2]|0)|0)/2|0;c[(c[d>>2]|0)+24>>2]=a;c[e>>2]=a;a=((c[c[d>>2]>>2]|0)+(c[f>>2]|0)|0)/2|0;c[(c[d>>2]|0)+8>>2]=a;c[f>>2]=a;c[(c[d>>2]|0)+16>>2]=((c[e>>2]|0)+(c[f>>2]|0)|0)/2|0;c[(c[d>>2]|0)+36>>2]=c[(c[d>>2]|0)+20>>2];c[f>>2]=c[(c[d>>2]|0)+12>>2];a=((c[(c[d>>2]|0)+20>>2]|0)+(c[f>>2]|0)|0)/2|0;c[(c[d>>2]|0)+28>>2]=a;c[e>>2]=a;a=((c[(c[d>>2]|0)+4>>2]|0)+(c[f>>2]|0)|0)/2|0;c[(c[d>>2]|0)+12>>2]=a;c[f>>2]=a;c[(c[d>>2]|0)+20>>2]=((c[e>>2]|0)+(c[f>>2]|0)|0)/2|0;i=b;return}function ks(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;k=i;i=i+80|0;l=k+72|0;m=k+68|0;n=k+64|0;o=k+60|0;p=k+56|0;q=k+52|0;r=k+48|0;s=k+44|0;t=k+40|0;u=k+36|0;v=k+12|0;w=k;x=k+4|0;y=k+8|0;z=k+16|0;A=k+20|0;B=k+24|0;C=k+28|0;D=k+32|0;c[m>>2]=b;c[n>>2]=d;c[o>>2]=e;c[p>>2]=f;c[q>>2]=g;c[r>>2]=h;c[s>>2]=j;c[t>>2]=(c[p>>2]|0)-(c[n>>2]|0);c[u>>2]=(c[q>>2]|0)-(c[o>>2]|0);if(((c[u>>2]|0)>0?(c[q>>2]|0)>=(c[r>>2]|0):0)?(c[o>>2]|0)<=(c[s>>2]|0):0){if((c[o>>2]|0)<(c[r>>2]|0)){p=In(c[t>>2]|0,(c[r>>2]|0)-(c[o>>2]|0)|0,c[u>>2]|0)|0;c[n>>2]=(c[n>>2]|0)+p;c[v>>2]=c[r>>2]>>c[c[m>>2]>>2];c[x>>2]=0}else{c[v>>2]=c[o>>2]>>c[c[m>>2]>>2];c[x>>2]=c[o>>2]&(c[(c[m>>2]|0)+4>>2]|0)-1}if((c[q>>2]|0)>(c[s>>2]|0)){c[w>>2]=c[s>>2]>>c[c[m>>2]>>2];c[y>>2]=0}else{c[w>>2]=c[q>>2]>>c[c[m>>2]>>2];c[y>>2]=c[q>>2]&(c[(c[m>>2]|0)+4>>2]|0)-1}do{if((c[x>>2]|0)<=0){if((a[(c[m>>2]|0)+87|0]|0)!=0){q=(c[m>>2]|0)+40|0;c[q>>2]=(c[q>>2]|0)+ -4;a[(c[m>>2]|0)+87|0]=0}}else{if((c[v>>2]|0)!=(c[w>>2]|0)){q=In(c[t>>2]|0,(c[(c[m>>2]|0)+4>>2]|0)-(c[x>>2]|0)|0,c[u>>2]|0)|0;c[n>>2]=(c[n>>2]|0)+q;c[v>>2]=(c[v>>2]|0)+1;break}a[l]=0;E=a[l]|0;i=k;return E|0}}while(0);a[(c[m>>2]|0)+87|0]=(c[y>>2]|0)==0;if((a[(c[m>>2]|0)+86|0]|0)!=0){c[(c[(c[m>>2]|0)+88>>2]|0)+20>>2]=c[v>>2];a[(c[m>>2]|0)+86|0]=0}c[z>>2]=(c[w>>2]|0)-(c[v>>2]|0)+1;if(((c[(c[m>>2]|0)+40>>2]|0)+(c[z>>2]<<2)|0)>>>0>=(c[(c[m>>2]|0)+36>>2]|0)>>>0){c[(c[m>>2]|0)+44>>2]=98;a[l]=1;E=a[l]|0;i=k;return E|0}v=c[(c[m>>2]|0)+4>>2]|0;w=c[t>>2]|0;if((c[t>>2]|0)>0){c[A>>2]=Mn(v,w,c[u>>2]|0)|0;y=aa(c[(c[m>>2]|0)+4>>2]|0,c[t>>2]|0)|0;c[B>>2]=(y|0)%(c[u>>2]|0)|0;c[t>>2]=1}else{c[A>>2]=0-(Mn(v,0-w|0,c[u>>2]|0)|0);w=aa(c[(c[m>>2]|0)+4>>2]|0,0-(c[t>>2]|0)|0)|0;c[B>>2]=(w|0)%(c[u>>2]|0)|0;c[t>>2]=-1}c[C>>2]=0-(c[u>>2]|0);c[D>>2]=c[(c[m>>2]|0)+40>>2];while(1){if((c[z>>2]|0)<=0){break}w=c[n>>2]|0;v=c[D>>2]|0;c[D>>2]=v+4;c[v>>2]=w;c[n>>2]=(c[n>>2]|0)+(c[A>>2]|0);c[C>>2]=(c[C>>2]|0)+(c[B>>2]|0);if((c[C>>2]|0)>=0){c[C>>2]=(c[C>>2]|0)-(c[u>>2]|0);c[n>>2]=(c[n>>2]|0)+(c[t>>2]|0)}c[z>>2]=(c[z>>2]|0)+ -1}c[(c[m>>2]|0)+40>>2]=c[D>>2];a[l]=0;E=a[l]|0;i=k;return E|0}a[l]=0;E=a[l]|0;i=k;return E|0}function ls(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;k=i;i=i+32|0;l=k+12|0;m=k+24|0;n=k+20|0;o=k+16|0;p=k+8|0;q=k+4|0;r=k;s=k+29|0;t=k+28|0;c[l>>2]=b;c[m>>2]=d;c[n>>2]=e;c[o>>2]=f;c[p>>2]=g;c[q>>2]=h;c[r>>2]=j;a[t]=a[(c[l>>2]|0)+86|0]|0;a[s]=ks(c[l>>2]|0,c[m>>2]|0,0-(c[n>>2]|0)|0,c[o>>2]|0,0-(c[p>>2]|0)|0,0-(c[r>>2]|0)|0,0-(c[q>>2]|0)|0)|0;if((a[t]|0)==0){u=a[s]|0;i=k;return u|0}if((a[(c[l>>2]|0)+86|0]|0)!=0){u=a[s]|0;i=k;return u|0}c[(c[(c[l>>2]|0)+88>>2]|0)+20>>2]=0-(c[(c[(c[l>>2]|0)+88>>2]|0)+20>>2]|0);u=a[s]|0;i=k;return u|0}function ms(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;c[d>>2]=c[d>>2];i=b;return}function ns(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;c[(c[e>>2]|0)+16>>2]=c[f>>2];i=d;return 0}function os(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=c[(c[f>>2]|0)+16>>2];if(!((c[g>>2]|0)>>>0<256)){j=0;i=e;return j|0}j=d[(c[h>>2]|0)+(6+(c[g>>2]|0))|0]|0;i=e;return j|0}function ps(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;i=i+32|0;f=e+20|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=c[(c[f>>2]|0)+16>>2];c[j>>2]=c[c[g>>2]>>2];c[k>>2]=0;c[l>>2]=0;c[h>>2]=(c[h>>2]|0)+6;do{f=(c[j>>2]|0)+1|0;c[j>>2]=f;if(!(f>>>0<256)){m=5;break}c[l>>2]=d[(c[h>>2]|0)+(c[j>>2]|0)|0]|0}while((c[l>>2]|0)==0);if((m|0)==5){n=c[k>>2]|0;o=c[g>>2]|0;c[o>>2]=n;p=c[l>>2]|0;i=e;return p|0}c[k>>2]=c[j>>2];n=c[k>>2]|0;o=c[g>>2]|0;c[o>>2]=n;p=c[l>>2]|0;i=e;return p|0}function qs(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+32|0;g=f+20|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;m=f+16|0;c[g>>2]=b;c[h>>2]=e;if(((c[g>>2]|0)+4|0)>>>0>(c[(c[h>>2]|0)+4>>2]|0)>>>0){go(c[h>>2]|0,8)}c[j>>2]=(c[g>>2]|0)+2;c[j>>2]=(c[j>>2]|0)+2;c[k>>2]=((a[(c[j>>2]|0)+ -2|0]&255)<<8|(a[(c[j>>2]|0)+ -2+1|0]&255)<<0)&65535;if(((c[g>>2]|0)+(c[k>>2]|0)|0)>>>0>(c[(c[h>>2]|0)+4>>2]|0)>>>0|(c[k>>2]|0)>>>0<262){go(c[h>>2]|0,8)}if(!((c[(c[h>>2]|0)+8>>2]|0)>>>0>=1)){i=f;return 0}c[j>>2]=(c[g>>2]|0)+6;c[l>>2]=0;while(1){if(!((c[l>>2]|0)>>>0<256)){break}g=c[j>>2]|0;c[j>>2]=g+1;c[m>>2]=d[g]|0;if((c[m>>2]|0)>>>0>=(c[(c[h>>2]|0)+172>>2]|0)>>>0){go(c[h>>2]|0,16)}c[l>>2]=(c[l>>2]|0)+1}i=f;return 0}function rs(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=b;c[g>>2]=d;c[h>>2]=(c[(c[f>>2]|0)+16>>2]|0)+4;c[(c[g>>2]|0)+4>>2]=0;c[c[g>>2]>>2]=((a[c[h>>2]|0]&255)<<8|(a[(c[h>>2]|0)+1|0]&255)<<0)&65535;i=e;return 0}function ss(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+48|0;f=e+40|0;g=e+36|0;h=e+32|0;j=e+28|0;k=e+24|0;l=e+20|0;m=e+12|0;n=e+8|0;o=e+4|0;p=e;q=e+16|0;c[f>>2]=b;c[g>>2]=d;c[h>>2]=c[(c[f>>2]|0)+16>>2];c[j>>2]=0;c[k>>2]=Gu(c[h>>2]|0,c[g>>2]|0)|0;if((c[k>>2]|0)==0){r=c[j>>2]|0;i=e;return r|0}c[l>>2]=c[k>>2];c[m>>2]=c[g>>2]&255;c[l>>2]=(c[l>>2]|0)+2;c[n>>2]=((a[(c[l>>2]|0)+ -2|0]&255)<<8|(a[(c[l>>2]|0)+ -2+1|0]&255)<<0)&65535;c[l>>2]=(c[l>>2]|0)+2;c[o>>2]=((a[(c[l>>2]|0)+ -2|0]&255)<<8|(a[(c[l>>2]|0)+ -2+1|0]&255)<<0)&65535;c[l>>2]=(c[l>>2]|0)+2;c[p>>2]=(((a[(c[l>>2]|0)+ -2|0]&255)<<8|(a[(c[l>>2]|0)+ -2+1|0]&255)<<0)&65535)<<16>>16;c[q>>2]=((a[c[l>>2]|0]&255)<<8|(a[(c[l>>2]|0)+1|0]&255)<<0)&65535;c[m>>2]=(c[m>>2]|0)-(c[n>>2]|0);if(!((c[m>>2]|0)>>>0<(c[o>>2]|0)>>>0)){r=c[j>>2]|0;i=e;return r|0}if((c[q>>2]|0)==0){r=c[j>>2]|0;i=e;return r|0}c[l>>2]=(c[l>>2]|0)+((c[q>>2]|0)+(c[m>>2]<<1));c[m>>2]=((a[c[l>>2]|0]&255)<<8|(a[(c[l>>2]|0)+1|0]&255)<<0)&65535;if((c[m>>2]|0)==0){r=c[j>>2]|0;i=e;return r|0}c[j>>2]=(c[m>>2]|0)+(c[p>>2]|0)&65535;r=c[j>>2]|0;i=e;return r|0}function ts(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;e=i;i=i+64|0;f=e+56|0;g=e+52|0;h=e+48|0;j=e+44|0;k=e+40|0;l=e+36|0;m=e+32|0;n=e+28|0;o=e+20|0;p=e+16|0;q=e+12|0;r=e+8|0;s=e+4|0;t=e;u=e+24|0;c[f>>2]=b;c[g>>2]=d;c[h>>2]=c[(c[f>>2]|0)+16>>2];c[j>>2]=0;c[k>>2]=0;c[l>>2]=(c[c[g>>2]>>2]|0)+1;a:while(1){if(!((c[l>>2]|0)>>>0<65536)){v=15;break}c[m>>2]=Gu(c[h>>2]|0,c[l>>2]|0)|0;b:do{if((c[m>>2]|0)!=0?(c[n>>2]=c[m>>2],c[n>>2]=(c[n>>2]|0)+2,c[o>>2]=((a[(c[n>>2]|0)+ -2|0]&255)<<8|(a[(c[n>>2]|0)+ -2+1|0]&255)<<0)&65535,c[n>>2]=(c[n>>2]|0)+2,c[p>>2]=((a[(c[n>>2]|0)+ -2|0]&255)<<8|(a[(c[n>>2]|0)+ -2+1|0]&255)<<0)&65535,c[n>>2]=(c[n>>2]|0)+2,c[q>>2]=(((a[(c[n>>2]|0)+ -2|0]&255)<<8|(a[(c[n>>2]|0)+ -2+1|0]&255)<<0)&65535)<<16>>16,c[r>>2]=((a[c[n>>2]|0]&255)<<8|(a[(c[n>>2]|0)+1|0]&255)<<0)&65535,c[s>>2]=c[l>>2]&255,(c[r>>2]|0)!=0):0){if((c[s>>2]|0)>>>0<(c[o>>2]|0)>>>0){c[s>>2]=c[o>>2];c[t>>2]=0}else{c[t>>2]=(c[s>>2]|0)-(c[o>>2]|0)}c[n>>2]=(c[n>>2]|0)+((c[r>>2]|0)+(c[t>>2]<<1));c[l>>2]=(c[l>>2]&-256)+(c[s>>2]|0);while(1){if(!((c[t>>2]|0)>>>0<(c[p>>2]|0)>>>0)){break b}c[n>>2]=(c[n>>2]|0)+2;c[u>>2]=((a[(c[n>>2]|0)+ -2|0]&255)<<8|(a[(c[n>>2]|0)+ -2+1|0]&255)<<0)&65535;if((c[u>>2]|0)!=0?(c[j>>2]=(c[u>>2]|0)+(c[q>>2]|0)&65535,(c[j>>2]|0)!=0):0){break a}c[t>>2]=(c[t>>2]|0)+1;c[l>>2]=(c[l>>2]|0)+1}}}while(0);c[l>>2]=(c[l>>2]&-256)+256}if((v|0)==15){w=c[k>>2]|0;x=c[g>>2]|0;c[x>>2]=w;y=c[j>>2]|0;i=e;return y|0}c[k>>2]=c[l>>2];w=c[k>>2]|0;x=c[g>>2]|0;c[x>>2]=w;y=c[j>>2]|0;i=e;return y|0}function us(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;e=i;i=i+80|0;f=e+64|0;g=e+60|0;h=e+56|0;j=e+52|0;k=e+48|0;l=e+44|0;m=e+40|0;n=e+36|0;o=e+32|0;p=e+24|0;q=e+20|0;r=e+16|0;s=e+12|0;t=e+8|0;u=e+4|0;v=e;w=e+28|0;c[f>>2]=b;c[g>>2]=d;if(((c[f>>2]|0)+4|0)>>>0>(c[(c[g>>2]|0)+4>>2]|0)>>>0){go(c[g>>2]|0,8)}c[h>>2]=(c[f>>2]|0)+2;c[h>>2]=(c[h>>2]|0)+2;c[j>>2]=((a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0)&65535;if(((c[f>>2]|0)+(c[j>>2]|0)|0)>>>0>(c[(c[g>>2]|0)+4>>2]|0)>>>0|(c[j>>2]|0)>>>0<518){go(c[g>>2]|0,8)}c[m>>2]=(c[f>>2]|0)+6;c[h>>2]=c[m>>2];c[l>>2]=0;c[k>>2]=0;while(1){x=c[h>>2]|0;if(!((c[k>>2]|0)>>>0<256)){break}c[h>>2]=x+2;c[p>>2]=((a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0)&65535;if((c[(c[g>>2]|0)+8>>2]|0)>>>0>=2?(c[p>>2]&7|0)!=0:0){go(c[g>>2]|0,8)}c[p>>2]=(c[p>>2]|0)>>>3;if((c[p>>2]|0)>>>0>(c[l>>2]|0)>>>0){c[l>>2]=c[p>>2]}c[k>>2]=(c[k>>2]|0)+1}c[n>>2]=x;c[o>>2]=(c[n>>2]|0)+((c[l>>2]|0)+1<<3);if((c[o>>2]|0)>>>0>(c[(c[g>>2]|0)+4>>2]|0)>>>0){go(c[g>>2]|0,8)}c[k>>2]=0;while(1){if(!((c[k>>2]|0)>>>0<=(c[l>>2]|0)>>>0)){break}c[h>>2]=(c[h>>2]|0)+2;c[q>>2]=((a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0)&65535;c[h>>2]=(c[h>>2]|0)+2;c[r>>2]=((a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0)&65535;c[h>>2]=(c[h>>2]|0)+2;c[t>>2]=(((a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0)&65535)<<16>>16;c[h>>2]=(c[h>>2]|0)+2;c[s>>2]=((a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0)&65535;a:do{if((c[r>>2]|0)!=0){do{if((c[(c[g>>2]|0)+8>>2]|0)>>>0>=2){if(!((c[q>>2]|0)>>>0>=256)?!(((c[q>>2]|0)+(c[r>>2]|0)|0)>>>0>256):0){break}go(c[g>>2]|0,8)}}while(0);if((c[s>>2]|0)!=0){c[u>>2]=(c[h>>2]|0)+ -2+(c[s>>2]|0);if(!(!((c[u>>2]|0)>>>0<(c[o>>2]|0)>>>0)?!(((c[u>>2]|0)+(c[r>>2]<<1)|0)>>>0>((c[f>>2]|0)+(c[j>>2]|0)|0)>>>0):0)){go(c[g>>2]|0,9)}if((c[(c[g>>2]|0)+8>>2]|0)>>>0>=1){c[v>>2]=(c[h>>2]|0)+(c[r>>2]<<1);while(1){if(!((c[h>>2]|0)>>>0<(c[v>>2]|0)>>>0)){break a}c[h>>2]=(c[h>>2]|0)+2;c[w>>2]=((a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0)&65535;if((c[w>>2]|0)==0){continue}c[w>>2]=(c[w>>2]|0)+(c[t>>2]|0)&65535;if(!((c[w>>2]|0)>>>0>=(c[(c[g>>2]|0)+172>>2]|0)>>>0)){continue}go(c[g>>2]|0,16)}}}}}while(0);c[k>>2]=(c[k>>2]|0)+1}i=e;return 0}function vs(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=b;c[g>>2]=d;c[h>>2]=(c[(c[f>>2]|0)+16>>2]|0)+4;c[(c[g>>2]|0)+4>>2]=2;c[c[g>>2]>>2]=((a[c[h>>2]|0]&255)<<8|(a[(c[h>>2]|0)+1|0]&255)<<0)&65535;i=e;return 0}function ws(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=b;c[g>>2]=d;c[(c[f>>2]|0)+16>>2]=c[g>>2];c[h>>2]=(c[g>>2]|0)+6;c[(c[f>>2]|0)+32>>2]=(((a[c[h>>2]|0]&255)<<8|(a[(c[h>>2]|0)+1|0]&255)<<0)&65535)>>1;c[(c[f>>2]|0)+24>>2]=-1;c[(c[f>>2]|0)+28>>2]=0;i=e;return 0}function xs(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d+8|0;f=d;g=d+4|0;c[f>>2]=a;c[g>>2]=b;do{if(!((c[g>>2]|0)>>>0>=65536)){b=c[f>>2]|0;if((c[(c[f>>2]|0)+20>>2]&1|0)!=0){c[e>>2]=Cu(b,g,0)|0;break}else{c[e>>2]=Eu(b,g,0)|0;break}}else{c[e>>2]=0}}while(0);i=d;return c[e>>2]|0}function ys(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+32|0;e=d+16|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;c[f>>2]=a;c[g>>2]=b;if((c[c[g>>2]>>2]|0)>>>0>=65535){c[e>>2]=0;k=c[e>>2]|0;i=d;return k|0}b=c[f>>2]|0;do{if((c[(c[f>>2]|0)+20>>2]&1|0)==0){c[j>>2]=b;if((c[c[g>>2]>>2]|0)!=(c[(c[j>>2]|0)+24>>2]|0)){c[h>>2]=Eu(c[f>>2]|0,c[g>>2]|0,1)|0;break}Du(c[j>>2]|0);c[h>>2]=c[(c[j>>2]|0)+28>>2];if((c[h>>2]|0)!=0){c[c[g>>2]>>2]=c[(c[j>>2]|0)+24>>2]}}else{c[h>>2]=Cu(b,c[g>>2]|0,1)|0}}while(0);c[e>>2]=c[h>>2];k=c[e>>2]|0;i=d;return k|0}function zs(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;e=i;i=i+112|0;f=e+104|0;g=e+100|0;h=e+96|0;j=e+92|0;k=e+88|0;l=e+84|0;m=e+80|0;n=e+76|0;o=e+72|0;p=e+68|0;q=e+64|0;r=e+60|0;s=e+56|0;t=e+52|0;u=e+20|0;v=e;w=e+4|0;x=e+8|0;y=e+12|0;z=e+16|0;A=e+24|0;B=e+28|0;C=e+32|0;D=e+36|0;E=e+40|0;F=e+44|0;G=e+48|0;c[f>>2]=b;c[g>>2]=d;c[q>>2]=0;if(((c[f>>2]|0)+4|0)>>>0>(c[(c[g>>2]|0)+4>>2]|0)>>>0){go(c[g>>2]|0,8)}c[h>>2]=(c[f>>2]|0)+2;c[h>>2]=(c[h>>2]|0)+2;c[j>>2]=((a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0)&65535;if((c[j>>2]|0)>>>0<16){go(c[g>>2]|0,8)}if(((c[f>>2]|0)+(c[j>>2]|0)|0)>>>0>(c[(c[g>>2]|0)+4>>2]|0)>>>0){if((c[(c[g>>2]|0)+8>>2]|0)>>>0>=1){go(c[g>>2]|0,8)}c[j>>2]=(c[(c[g>>2]|0)+4>>2]|0)-(c[f>>2]|0)}c[h>>2]=(c[f>>2]|0)+6;c[h>>2]=(c[h>>2]|0)+2;c[p>>2]=((a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0)&65535;if((c[(c[g>>2]|0)+8>>2]|0)>>>0>=2?(c[p>>2]&1|0)!=0:0){go(c[g>>2]|0,8)}c[p>>2]=((c[p>>2]|0)>>>0)/2|0;if((c[j>>2]|0)>>>0<(16+(c[p>>2]<<1<<2)|0)>>>0){go(c[g>>2]|0,8)}do{if((c[(c[g>>2]|0)+8>>2]|0)>>>0>=2){c[h>>2]=(c[h>>2]|0)+2;c[r>>2]=((a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0)&65535;c[h>>2]=(c[h>>2]|0)+2;c[s>>2]=((a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0)&65535;c[h>>2]=(c[h>>2]|0)+2;c[t>>2]=((a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0)&65535;if(((c[r>>2]|c[t>>2])&1|0)!=0){go(c[g>>2]|0,8)}c[r>>2]=((c[r>>2]|0)>>>0)/2|0;c[t>>2]=((c[t>>2]|0)>>>0)/2|0;if(((!((c[r>>2]|0)>>>0>(c[p>>2]|0)>>>0)?!(c[r>>2]<<1>>>0<(c[p>>2]|0)>>>0):0)?((c[r>>2]|0)+(c[t>>2]|0)|0)==(c[p>>2]|0):0)?(c[r>>2]|0)==(1<<c[s>>2]|0):0){break}go(c[g>>2]|0,8)}}while(0);c[k>>2]=(c[f>>2]|0)+14;c[l>>2]=(c[f>>2]|0)+16+(c[p>>2]<<1);c[n>>2]=(c[l>>2]|0)+(c[p>>2]<<1);c[m>>2]=(c[n>>2]|0)+(c[p>>2]<<1);c[o>>2]=(c[m>>2]|0)+(c[p>>2]<<1);if((c[(c[g>>2]|0)+8>>2]|0)>>>0>=2?(c[h>>2]=(c[k>>2]|0)+((c[p>>2]|0)-1<<1),(((a[c[h>>2]|0]&255)<<8|(a[(c[h>>2]|0)+1|0]&255)<<0)&65535|0)!=65535):0){go(c[g>>2]|0,8)}c[y>>2]=0;c[z>>2]=0;c[B>>2]=c[l>>2];c[C>>2]=c[k>>2];c[D>>2]=c[n>>2];c[E>>2]=c[m>>2];c[x>>2]=0;while(1){if(!((c[x>>2]|0)>>>0<(c[p>>2]|0)>>>0)){break}c[h>>2]=c[E>>2];c[B>>2]=(c[B>>2]|0)+2;c[u>>2]=((a[(c[B>>2]|0)+ -2|0]&255)<<8|(a[(c[B>>2]|0)+ -2+1|0]&255)<<0)&65535;c[C>>2]=(c[C>>2]|0)+2;c[v>>2]=((a[(c[C>>2]|0)+ -2|0]&255)<<8|(a[(c[C>>2]|0)+ -2+1|0]&255)<<0)&65535;c[D>>2]=(c[D>>2]|0)+2;c[A>>2]=(((a[(c[D>>2]|0)+ -2|0]&255)<<8|(a[(c[D>>2]|0)+ -2+1|0]&255)<<0)&65535)<<16>>16;c[E>>2]=(c[E>>2]|0)+2;c[w>>2]=((a[(c[E>>2]|0)+ -2|0]&255)<<8|(a[(c[E>>2]|0)+ -2+1|0]&255)<<0)&65535;if((c[u>>2]|0)>>>0>(c[v>>2]|0)>>>0){go(c[g>>2]|0,8)}do{if((c[u>>2]|0)>>>0<=(c[z>>2]|0)>>>0?(c[x>>2]|0)>>>0>0:0){if((c[(c[g>>2]|0)+8>>2]|0)>>>0>=1){go(c[g>>2]|0,8);break}if(!((c[y>>2]|0)>>>0>(c[u>>2]|0)>>>0)?!((c[z>>2]|0)>>>0>(c[v>>2]|0)>>>0):0){c[q>>2]=c[q>>2]|2;break}c[q>>2]=c[q>>2]|1}}while(0);m=c[w>>2]|0;a:do{if((c[w>>2]|0)!=0&(c[w>>2]|0)!=65535){c[h>>2]=(c[h>>2]|0)+m;do{if((c[(c[g>>2]|0)+8>>2]|0)>>>0>=1){if(!((c[h>>2]|0)>>>0<(c[o>>2]|0)>>>0)?!(((c[h>>2]|0)+((c[v>>2]|0)-(c[u>>2]|0)+1<<1)|0)>>>0>((c[f>>2]|0)+(c[j>>2]|0)|0)>>>0):0){break}go(c[g>>2]|0,8)}else{if(((c[x>>2]|0)==((c[p>>2]|0)-1|0)?(c[u>>2]|0)==65535:0)?(c[v>>2]|0)==65535:0){break}if(!((c[h>>2]|0)>>>0<(c[o>>2]|0)>>>0)?!(((c[h>>2]|0)+((c[v>>2]|0)-(c[u>>2]|0)+1<<1)|0)>>>0>(c[(c[g>>2]|0)+4>>2]|0)>>>0):0){break}go(c[g>>2]|0,8)}}while(0);if((c[(c[g>>2]|0)+8>>2]|0)>>>0>=1){c[F>>2]=c[u>>2];while(1){if(!((c[F>>2]|0)>>>0<(c[v>>2]|0)>>>0)){break a}c[h>>2]=(c[h>>2]|0)+2;c[G>>2]=((a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0)&65535;if((c[G>>2]|0)!=0?(c[G>>2]=(c[G>>2]|0)+(c[A>>2]|0)&65535,(c[G>>2]|0)>>>0>=(c[(c[g>>2]|0)+172>>2]|0)>>>0):0){go(c[g>>2]|0,16)}c[F>>2]=(c[F>>2]|0)+1}}}else{if((m|0)==65535){if(((!((c[(c[g>>2]|0)+8>>2]|0)>>>0>=2)?(c[x>>2]|0)==((c[p>>2]|0)-1|0):0)?(c[u>>2]|0)==65535:0)?(c[v>>2]|0)==65535:0){break}go(c[g>>2]|0,8)}}}while(0);c[y>>2]=c[u>>2];c[z>>2]=c[v>>2];c[x>>2]=(c[x>>2]|0)+1}i=e;return c[q>>2]|0}function As(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=b;c[g>>2]=d;c[h>>2]=(c[(c[f>>2]|0)+16>>2]|0)+4;c[(c[g>>2]|0)+4>>2]=4;c[c[g>>2]>>2]=((a[c[h>>2]|0]&255)<<8|(a[(c[h>>2]|0)+1|0]&255)<<0)&65535;i=e;return 0}function Bs(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+32|0;f=e+28|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;m=e+20|0;n=e+24|0;c[f>>2]=b;c[g>>2]=d;c[h>>2]=c[(c[f>>2]|0)+16>>2];c[j>>2]=0;c[k>>2]=(c[h>>2]|0)+6;c[k>>2]=(c[k>>2]|0)+2;c[l>>2]=((a[(c[k>>2]|0)+ -2|0]&255)<<8|(a[(c[k>>2]|0)+ -2+1|0]&255)<<0)&65535;c[k>>2]=(c[k>>2]|0)+2;c[m>>2]=((a[(c[k>>2]|0)+ -2|0]&255)<<8|(a[(c[k>>2]|0)+ -2+1|0]&255)<<0)&65535;c[n>>2]=(c[g>>2]|0)-(c[l>>2]|0);if(!((c[n>>2]|0)>>>0<(c[m>>2]|0)>>>0)){o=c[j>>2]|0;i=e;return o|0}c[k>>2]=(c[k>>2]|0)+(c[n>>2]<<1);c[j>>2]=((a[c[k>>2]|0]&255)<<8|(a[(c[k>>2]|0)+1|0]&255)<<0)&65535;o=c[j>>2]|0;i=e;return o|0}function Cs(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;e=i;i=i+48|0;f=e+36|0;g=e+32|0;h=e+28|0;j=e+24|0;k=e+20|0;l=e+16|0;m=e+8|0;n=e+4|0;o=e;p=e+12|0;c[f>>2]=b;c[g>>2]=d;c[h>>2]=c[(c[f>>2]|0)+16>>2];c[j>>2]=0;c[k>>2]=(c[c[g>>2]>>2]|0)+1;c[l>>2]=0;c[m>>2]=(c[h>>2]|0)+6;c[m>>2]=(c[m>>2]|0)+2;c[n>>2]=((a[(c[m>>2]|0)+ -2|0]&255)<<8|(a[(c[m>>2]|0)+ -2+1|0]&255)<<0)&65535;c[m>>2]=(c[m>>2]|0)+2;c[o>>2]=((a[(c[m>>2]|0)+ -2|0]&255)<<8|(a[(c[m>>2]|0)+ -2+1|0]&255)<<0)&65535;if((c[k>>2]|0)>>>0>=65536){q=c[j>>2]|0;r=c[g>>2]|0;c[r>>2]=q;s=c[l>>2]|0;i=e;return s|0}if((c[k>>2]|0)>>>0<(c[n>>2]|0)>>>0){c[k>>2]=c[n>>2]}c[p>>2]=(c[k>>2]|0)-(c[n>>2]|0);c[m>>2]=(c[m>>2]|0)+(c[p>>2]<<1);while(1){if(!((c[p>>2]|0)>>>0<(c[o>>2]|0)>>>0)){t=9;break}c[m>>2]=(c[m>>2]|0)+2;c[l>>2]=((a[(c[m>>2]|0)+ -2|0]&255)<<8|(a[(c[m>>2]|0)+ -2+1|0]&255)<<0)&65535;u=c[k>>2]|0;if((c[l>>2]|0)!=0){break}c[k>>2]=u+1;c[p>>2]=(c[p>>2]|0)+1}if((t|0)==9){q=c[j>>2]|0;r=c[g>>2]|0;c[r>>2]=q;s=c[l>>2]|0;i=e;return s|0}c[j>>2]=u;q=c[j>>2]|0;r=c[g>>2]|0;c[r>>2]=q;s=c[l>>2]|0;i=e;return s|0}function Ds(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+32|0;f=e+20|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;c[f>>2]=b;c[g>>2]=d;if(((c[f>>2]|0)+10|0)>>>0>(c[(c[g>>2]|0)+4>>2]|0)>>>0){go(c[g>>2]|0,8)}c[h>>2]=(c[f>>2]|0)+2;c[h>>2]=(c[h>>2]|0)+2;c[j>>2]=((a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0)&65535;c[h>>2]=(c[f>>2]|0)+8;c[h>>2]=(c[h>>2]|0)+2;c[k>>2]=((a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0)&65535;if(!(!(((c[f>>2]|0)+(c[j>>2]|0)|0)>>>0>(c[(c[g>>2]|0)+4>>2]|0)>>>0)?!((c[j>>2]|0)>>>0<(10+(c[k>>2]<<1)|0)>>>0):0)){go(c[g>>2]|0,8)}if(!((c[(c[g>>2]|0)+8>>2]|0)>>>0>=1)){i=e;return 0}while(1){if(!((c[k>>2]|0)>>>0>0)){break}c[h>>2]=(c[h>>2]|0)+2;c[l>>2]=((a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0)&65535;if((c[l>>2]|0)>>>0>=(c[(c[g>>2]|0)+172>>2]|0)>>>0){go(c[g>>2]|0,16)}c[k>>2]=(c[k>>2]|0)+ -1}i=e;return 0}function Es(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=b;c[g>>2]=d;c[h>>2]=(c[(c[f>>2]|0)+16>>2]|0)+4;c[(c[g>>2]|0)+4>>2]=6;c[c[g>>2]>>2]=((a[c[h>>2]|0]&255)<<8|(a[(c[h>>2]|0)+1|0]&255)<<0)&65535;i=e;return 0}function Fs(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+48|0;f=e+32|0;g=e+28|0;h=e+24|0;j=e+20|0;k=e+16|0;l=e+8|0;m=e+4|0;n=e;o=e+12|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=c[(c[f>>2]|0)+16>>2];c[j>>2]=0;c[k>>2]=(c[h>>2]|0)+8204;c[k>>2]=(c[k>>2]|0)+4;c[l>>2]=(d[(c[k>>2]|0)+ -4|0]|0)<<24|(d[(c[k>>2]|0)+ -4+1|0]|0)<<16|(d[(c[k>>2]|0)+ -4+2|0]|0)<<8|(d[(c[k>>2]|0)+ -4+3|0]|0)<<0;while(1){if(!((c[l>>2]|0)>>>0>0)){p=7;break}c[k>>2]=(c[k>>2]|0)+4;c[m>>2]=(d[(c[k>>2]|0)+ -4|0]|0)<<24|(d[(c[k>>2]|0)+ -4+1|0]|0)<<16|(d[(c[k>>2]|0)+ -4+2|0]|0)<<8|(d[(c[k>>2]|0)+ -4+3|0]|0)<<0;c[k>>2]=(c[k>>2]|0)+4;c[n>>2]=(d[(c[k>>2]|0)+ -4|0]|0)<<24|(d[(c[k>>2]|0)+ -4+1|0]|0)<<16|(d[(c[k>>2]|0)+ -4+2|0]|0)<<8|(d[(c[k>>2]|0)+ -4+3|0]|0)<<0;c[k>>2]=(c[k>>2]|0)+4;c[o>>2]=(d[(c[k>>2]|0)+ -4|0]|0)<<24|(d[(c[k>>2]|0)+ -4+1|0]|0)<<16|(d[(c[k>>2]|0)+ -4+2|0]|0)<<8|(d[(c[k>>2]|0)+ -4+3|0]|0)<<0;if((c[g>>2]|0)>>>0<(c[m>>2]|0)>>>0){p=7;break}if((c[g>>2]|0)>>>0<=(c[n>>2]|0)>>>0){p=5;break}c[l>>2]=(c[l>>2]|0)+ -1}if((p|0)==5){c[j>>2]=(c[o>>2]|0)+(c[g>>2]|0)-(c[m>>2]|0);q=c[j>>2]|0;i=e;return q|0}else if((p|0)==7){q=c[j>>2]|0;i=e;return q|0}return 0}function Gs(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;e=i;i=i+48|0;f=e+40|0;g=e+36|0;h=e+32|0;j=e+28|0;k=e+24|0;l=e+20|0;m=e+12|0;n=e+8|0;o=e+4|0;p=e;q=e+16|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=0;c[j>>2]=(c[c[g>>2]>>2]|0)+1;c[k>>2]=0;c[l>>2]=c[(c[f>>2]|0)+16>>2];c[m>>2]=(c[l>>2]|0)+8204;c[m>>2]=(c[m>>2]|0)+4;c[n>>2]=(d[(c[m>>2]|0)+ -4|0]|0)<<24|(d[(c[m>>2]|0)+ -4+1|0]|0)<<16|(d[(c[m>>2]|0)+ -4+2|0]|0)<<8|(d[(c[m>>2]|0)+ -4+3|0]|0)<<0;c[m>>2]=(c[l>>2]|0)+8208;while(1){if(!((c[n>>2]|0)>>>0>0)){r=9;break}c[m>>2]=(c[m>>2]|0)+4;c[o>>2]=(d[(c[m>>2]|0)+ -4|0]|0)<<24|(d[(c[m>>2]|0)+ -4+1|0]|0)<<16|(d[(c[m>>2]|0)+ -4+2|0]|0)<<8|(d[(c[m>>2]|0)+ -4+3|0]|0)<<0;c[m>>2]=(c[m>>2]|0)+4;c[p>>2]=(d[(c[m>>2]|0)+ -4|0]|0)<<24|(d[(c[m>>2]|0)+ -4+1|0]|0)<<16|(d[(c[m>>2]|0)+ -4+2|0]|0)<<8|(d[(c[m>>2]|0)+ -4+3|0]|0)<<0;c[m>>2]=(c[m>>2]|0)+4;c[q>>2]=(d[(c[m>>2]|0)+ -4|0]|0)<<24|(d[(c[m>>2]|0)+ -4+1|0]|0)<<16|(d[(c[m>>2]|0)+ -4+2|0]|0)<<8|(d[(c[m>>2]|0)+ -4+3|0]|0)<<0;if((c[j>>2]|0)>>>0<(c[o>>2]|0)>>>0){c[j>>2]=c[o>>2]}if((c[j>>2]|0)>>>0<=(c[p>>2]|0)>>>0?(c[k>>2]=(c[j>>2]|0)-(c[o>>2]|0)+(c[q>>2]|0),(c[k>>2]|0)!=0):0){break}c[n>>2]=(c[n>>2]|0)+ -1}if((r|0)==9){s=c[h>>2]|0;t=c[g>>2]|0;c[t>>2]=s;u=c[k>>2]|0;i=e;return u|0}c[h>>2]=c[j>>2];s=c[h>>2]|0;t=c[g>>2]|0;c[t>>2]=s;u=c[k>>2]|0;i=e;return u|0}function Hs(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;e=i;i=i+64|0;f=e+52|0;g=e+48|0;h=e+44|0;j=e+40|0;k=e+36|0;l=e+32|0;m=e+28|0;n=e+24|0;o=e+16|0;p=e+12|0;q=e+8|0;r=e+4|0;s=e;t=e+20|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=(c[f>>2]|0)+4;if(((c[f>>2]|0)+8208|0)>>>0>(c[(c[g>>2]|0)+4>>2]|0)>>>0){go(c[g>>2]|0,8)}c[h>>2]=(c[h>>2]|0)+4;c[k>>2]=(d[(c[h>>2]|0)+ -4|0]|0)<<24|(d[(c[h>>2]|0)+ -4+1|0]|0)<<16|(d[(c[h>>2]|0)+ -4+2|0]|0)<<8|(d[(c[h>>2]|0)+ -4+3|0]|0)<<0;if((c[k>>2]|0)>>>0>((c[(c[g>>2]|0)+4>>2]|0)-(c[f>>2]|0)|0)>>>0|(c[k>>2]|0)>>>0<8208){go(c[g>>2]|0,8)}c[j>>2]=(c[f>>2]|0)+12;c[h>>2]=(c[j>>2]|0)+8192;c[h>>2]=(c[h>>2]|0)+4;c[l>>2]=(d[(c[h>>2]|0)+ -4|0]|0)<<24|(d[(c[h>>2]|0)+ -4+1|0]|0)<<16|(d[(c[h>>2]|0)+ -4+2|0]|0)<<8|(d[(c[h>>2]|0)+ -4+3|0]|0)<<0;if(((c[h>>2]|0)+((c[l>>2]|0)*12|0)|0)>>>0>(c[(c[g>>2]|0)+4>>2]|0)>>>0){go(c[g>>2]|0,8)}c[r>>2]=0;c[m>>2]=0;while(1){if(!((c[m>>2]|0)>>>0<(c[l>>2]|0)>>>0)){break}c[h>>2]=(c[h>>2]|0)+4;c[n>>2]=(d[(c[h>>2]|0)+ -4|0]|0)<<24|(d[(c[h>>2]|0)+ -4+1|0]|0)<<16|(d[(c[h>>2]|0)+ -4+2|0]|0)<<8|(d[(c[h>>2]|0)+ -4+3|0]|0)<<0;c[h>>2]=(c[h>>2]|0)+4;c[o>>2]=(d[(c[h>>2]|0)+ -4|0]|0)<<24|(d[(c[h>>2]|0)+ -4+1|0]|0)<<16|(d[(c[h>>2]|0)+ -4+2|0]|0)<<8|(d[(c[h>>2]|0)+ -4+3|0]|0)<<0;c[h>>2]=(c[h>>2]|0)+4;c[p>>2]=(d[(c[h>>2]|0)+ -4|0]|0)<<24|(d[(c[h>>2]|0)+ -4+1|0]|0)<<16|(d[(c[h>>2]|0)+ -4+2|0]|0)<<8|(d[(c[h>>2]|0)+ -4+3|0]|0)<<0;if((c[n>>2]|0)>>>0>(c[o>>2]|0)>>>0){go(c[g>>2]|0,8)}if((c[m>>2]|0)>>>0>0?(c[n>>2]|0)>>>0<=(c[r>>2]|0)>>>0:0){go(c[g>>2]|0,8)}a:do{if((c[(c[g>>2]|0)+8>>2]|0)>>>0>=1){if(((c[p>>2]|0)+(c[o>>2]|0)-(c[n>>2]|0)|0)>>>0>=(c[(c[g>>2]|0)+172>>2]|0)>>>0){go(c[g>>2]|0,16)}c[q>>2]=(c[o>>2]|0)-(c[n>>2]|0)+1;if((c[n>>2]&-65536|0)!=0){while(1){if(!((c[q>>2]|0)>>>0>0)){break a}c[s>>2]=(c[n>>2]|0)>>>16;c[t>>2]=c[n>>2]&65535;if(((d[(c[j>>2]|0)+((c[s>>2]|0)>>>3)|0]|0)&128>>(c[s>>2]&7)|0)==0){go(c[g>>2]|0,8)}if(((d[(c[j>>2]|0)+((c[t>>2]|0)>>>3)|0]|0)&128>>(c[t>>2]&7)|0)==0){go(c[g>>2]|0,8)}c[q>>2]=(c[q>>2]|0)+ -1;c[n>>2]=(c[n>>2]|0)+1}}else{if((c[o>>2]&-65536|0)!=0){go(c[g>>2]|0,8)}while(1){if(!((c[q>>2]|0)>>>0>0)){break a}c[t>>2]=c[n>>2]&65535;if(((d[(c[j>>2]|0)+((c[t>>2]|0)>>>3)|0]|0)&128>>(c[t>>2]&7)|0)!=0){go(c[g>>2]|0,8)}c[q>>2]=(c[q>>2]|0)+ -1;c[n>>2]=(c[n>>2]|0)+1}}}}while(0);c[r>>2]=c[o>>2];c[m>>2]=(c[m>>2]|0)+1}i=e;return 0}function Is(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=(c[(c[f>>2]|0)+16>>2]|0)+8;c[(c[g>>2]|0)+4>>2]=8;c[c[g>>2]>>2]=(d[c[h>>2]|0]|0)<<24|(d[(c[h>>2]|0)+1|0]|0)<<16|(d[(c[h>>2]|0)+2|0]|0)<<8|(d[(c[h>>2]|0)+3|0]|0)<<0;i=e;return 0}function Js(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+32|0;g=f+28|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;m=f+16|0;n=f+20|0;o=f+24|0;c[g>>2]=b;c[h>>2]=e;c[j>>2]=c[(c[g>>2]|0)+16>>2];c[k>>2]=0;c[l>>2]=(c[j>>2]|0)+12;c[l>>2]=(c[l>>2]|0)+4;c[m>>2]=(d[(c[l>>2]|0)+ -4|0]|0)<<24|(d[(c[l>>2]|0)+ -4+1|0]|0)<<16|(d[(c[l>>2]|0)+ -4+2|0]|0)<<8|(d[(c[l>>2]|0)+ -4+3|0]|0)<<0;c[l>>2]=(c[l>>2]|0)+4;c[n>>2]=(d[(c[l>>2]|0)+ -4|0]|0)<<24|(d[(c[l>>2]|0)+ -4+1|0]|0)<<16|(d[(c[l>>2]|0)+ -4+2|0]|0)<<8|(d[(c[l>>2]|0)+ -4+3|0]|0)<<0;c[o>>2]=(c[h>>2]|0)-(c[m>>2]|0);if(!((c[o>>2]|0)>>>0<(c[n>>2]|0)>>>0)){p=c[k>>2]|0;i=f;return p|0}c[l>>2]=(c[l>>2]|0)+(c[o>>2]<<1);c[k>>2]=((a[c[l>>2]|0]&255)<<8|(a[(c[l>>2]|0)+1|0]&255)<<0)&65535;p=c[k>>2]|0;i=f;return p|0}function Ks(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=i;i=i+48|0;g=f+32|0;h=f+28|0;j=f+24|0;k=f+20|0;l=f+16|0;m=f+8|0;n=f+4|0;o=f;p=f+12|0;c[g>>2]=b;c[h>>2]=e;c[j>>2]=c[(c[g>>2]|0)+16>>2];c[k>>2]=(c[c[h>>2]>>2]|0)+1;c[l>>2]=0;c[m>>2]=(c[j>>2]|0)+12;c[m>>2]=(c[m>>2]|0)+4;c[n>>2]=(d[(c[m>>2]|0)+ -4|0]|0)<<24|(d[(c[m>>2]|0)+ -4+1|0]|0)<<16|(d[(c[m>>2]|0)+ -4+2|0]|0)<<8|(d[(c[m>>2]|0)+ -4+3|0]|0)<<0;c[m>>2]=(c[m>>2]|0)+4;c[o>>2]=(d[(c[m>>2]|0)+ -4|0]|0)<<24|(d[(c[m>>2]|0)+ -4+1|0]|0)<<16|(d[(c[m>>2]|0)+ -4+2|0]|0)<<8|(d[(c[m>>2]|0)+ -4+3|0]|0)<<0;if((c[k>>2]|0)>>>0<(c[n>>2]|0)>>>0){c[k>>2]=c[n>>2]}c[p>>2]=(c[k>>2]|0)-(c[n>>2]|0);c[m>>2]=(c[m>>2]|0)+(c[p>>2]<<1);while(1){if(!((c[p>>2]|0)>>>0<(c[o>>2]|0)>>>0)){q=7;break}c[m>>2]=(c[m>>2]|0)+2;c[l>>2]=((a[(c[m>>2]|0)+ -2|0]&255)<<8|(a[(c[m>>2]|0)+ -2+1|0]&255)<<0)&65535;if((c[l>>2]|0)!=0){q=7;break}c[k>>2]=(c[k>>2]|0)+1;c[p>>2]=(c[p>>2]|0)+1}if((q|0)==7){c[c[h>>2]>>2]=c[k>>2];i=f;return c[l>>2]|0}return 0}function Ls(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+32|0;g=f+20|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;m=f+16|0;c[g>>2]=b;c[h>>2]=e;c[j>>2]=(c[g>>2]|0)+4;if(((c[g>>2]|0)+20|0)>>>0>(c[(c[h>>2]|0)+4>>2]|0)>>>0){go(c[h>>2]|0,8)}c[j>>2]=(c[j>>2]|0)+4;c[k>>2]=(d[(c[j>>2]|0)+ -4|0]|0)<<24|(d[(c[j>>2]|0)+ -4+1|0]|0)<<16|(d[(c[j>>2]|0)+ -4+2|0]|0)<<8|(d[(c[j>>2]|0)+ -4+3|0]|0)<<0;c[j>>2]=(c[g>>2]|0)+16;c[j>>2]=(c[j>>2]|0)+4;c[l>>2]=(d[(c[j>>2]|0)+ -4|0]|0)<<24|(d[(c[j>>2]|0)+ -4+1|0]|0)<<16|(d[(c[j>>2]|0)+ -4+2|0]|0)<<8|(d[(c[j>>2]|0)+ -4+3|0]|0)<<0;if(!(!((c[k>>2]|0)>>>0>((c[(c[h>>2]|0)+4>>2]|0)-(c[g>>2]|0)|0)>>>0)?!((c[k>>2]|0)>>>0<(20+(c[l>>2]<<1)|0)>>>0):0)){go(c[h>>2]|0,8)}if(!((c[(c[h>>2]|0)+8>>2]|0)>>>0>=1)){i=f;return 0}while(1){if(!((c[l>>2]|0)>>>0>0)){break}c[j>>2]=(c[j>>2]|0)+2;c[m>>2]=((a[(c[j>>2]|0)+ -2|0]&255)<<8|(a[(c[j>>2]|0)+ -2+1|0]&255)<<0)&65535;if((c[m>>2]|0)>>>0>=(c[(c[h>>2]|0)+172>>2]|0)>>>0){go(c[h>>2]|0,16)}c[l>>2]=(c[l>>2]|0)+ -1}i=f;return 0}function Ms(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=(c[(c[f>>2]|0)+16>>2]|0)+8;c[(c[g>>2]|0)+4>>2]=10;c[c[g>>2]>>2]=(d[c[h>>2]|0]|0)<<24|(d[(c[h>>2]|0)+1|0]|0)<<16|(d[(c[h>>2]|0)+2|0]|0)<<8|(d[(c[h>>2]|0)+3|0]|0)<<0;i=e;return 0}function Ns(b,e){b=b|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f+4|0;h=f;c[g>>2]=b;c[h>>2]=e;c[(c[g>>2]|0)+16>>2]=c[h>>2];c[h>>2]=(c[h>>2]|0)+12;c[(c[g>>2]|0)+40>>2]=(d[c[h>>2]|0]|0)<<24|(d[(c[h>>2]|0)+1|0]|0)<<16|(d[(c[h>>2]|0)+2|0]|0)<<8|(d[(c[h>>2]|0)+3|0]|0)<<0;a[(c[g>>2]|0)+24|0]=0;i=f;return 0}function Os(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;b=Bu(c[e>>2]|0,f,0)|0;i=d;return b|0}function Ps(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+32|0;g=f+16|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;c[h>>2]=b;c[j>>2]=e;c[k>>2]=c[h>>2];if((c[(c[k>>2]|0)+28>>2]|0)>>>0>=4294967295){c[g>>2]=0;m=c[g>>2]|0;i=f;return m|0}do{if((d[(c[k>>2]|0)+24|0]|0)!=0?(c[(c[k>>2]|0)+28>>2]|0)==(c[c[j>>2]>>2]|0):0){Au(c[k>>2]|0);if((a[(c[k>>2]|0)+24|0]|0)==0){c[l>>2]=0;break}c[l>>2]=c[(c[k>>2]|0)+32>>2];if((c[l>>2]|0)!=0){c[c[j>>2]>>2]=c[(c[k>>2]|0)+28>>2]}}else{n=9}}while(0);if((n|0)==9){c[l>>2]=Bu(c[h>>2]|0,c[j>>2]|0,1)|0}c[g>>2]=c[l>>2];m=c[g>>2]|0;i=f;return m|0}function Qs(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;i=i+48|0;f=e+36|0;g=e+32|0;h=e+28|0;j=e+24|0;k=e+20|0;l=e+16|0;m=e+8|0;n=e+4|0;o=e;p=e+12|0;c[f>>2]=a;c[g>>2]=b;if(((c[f>>2]|0)+16|0)>>>0>(c[(c[g>>2]|0)+4>>2]|0)>>>0){go(c[g>>2]|0,8)}c[h>>2]=(c[f>>2]|0)+4;c[h>>2]=(c[h>>2]|0)+4;c[j>>2]=(d[(c[h>>2]|0)+ -4|0]|0)<<24|(d[(c[h>>2]|0)+ -4+1|0]|0)<<16|(d[(c[h>>2]|0)+ -4+2|0]|0)<<8|(d[(c[h>>2]|0)+ -4+3|0]|0)<<0;c[h>>2]=(c[f>>2]|0)+12;c[h>>2]=(c[h>>2]|0)+4;c[k>>2]=(d[(c[h>>2]|0)+ -4|0]|0)<<24|(d[(c[h>>2]|0)+ -4+1|0]|0)<<16|(d[(c[h>>2]|0)+ -4+2|0]|0)<<8|(d[(c[h>>2]|0)+ -4+3|0]|0)<<0;if(!(!((c[j>>2]|0)>>>0>((c[(c[g>>2]|0)+4>>2]|0)-(c[f>>2]|0)|0)>>>0)?!((c[j>>2]|0)>>>0<(16+((c[k>>2]|0)*12|0)|0)>>>0):0)){go(c[g>>2]|0,8)}c[p>>2]=0;c[l>>2]=0;while(1){if(!((c[l>>2]|0)>>>0<(c[k>>2]|0)>>>0)){break}c[h>>2]=(c[h>>2]|0)+4;c[m>>2]=(d[(c[h>>2]|0)+ -4|0]|0)<<24|(d[(c[h>>2]|0)+ -4+1|0]|0)<<16|(d[(c[h>>2]|0)+ -4+2|0]|0)<<8|(d[(c[h>>2]|0)+ -4+3|0]|0)<<0;c[h>>2]=(c[h>>2]|0)+4;c[n>>2]=(d[(c[h>>2]|0)+ -4|0]|0)<<24|(d[(c[h>>2]|0)+ -4+1|0]|0)<<16|(d[(c[h>>2]|0)+ -4+2|0]|0)<<8|(d[(c[h>>2]|0)+ -4+3|0]|0)<<0;c[h>>2]=(c[h>>2]|0)+4;c[o>>2]=(d[(c[h>>2]|0)+ -4|0]|0)<<24|(d[(c[h>>2]|0)+ -4+1|0]|0)<<16|(d[(c[h>>2]|0)+ -4+2|0]|0)<<8|(d[(c[h>>2]|0)+ -4+3|0]|0)<<0;if((c[m>>2]|0)>>>0>(c[n>>2]|0)>>>0){go(c[g>>2]|0,8)}if((c[l>>2]|0)>>>0>0?(c[m>>2]|0)>>>0<=(c[p>>2]|0)>>>0:0){go(c[g>>2]|0,8)}if((c[(c[g>>2]|0)+8>>2]|0)>>>0>=1?((c[o>>2]|0)+(c[n>>2]|0)-(c[m>>2]|0)|0)>>>0>=(c[(c[g>>2]|0)+172>>2]|0)>>>0:0){go(c[g>>2]|0,16)}c[p>>2]=c[n>>2];c[l>>2]=(c[l>>2]|0)+1}i=e;return 0}function Rs(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=(c[(c[f>>2]|0)+16>>2]|0)+8;c[(c[g>>2]|0)+4>>2]=12;c[c[g>>2]>>2]=(d[c[h>>2]|0]|0)<<24|(d[(c[h>>2]|0)+1|0]|0)<<16|(d[(c[h>>2]|0)+2|0]|0)<<8|(d[(c[h>>2]|0)+3|0]|0)<<0;i=e;return 0}function Ss(b,e){b=b|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f+4|0;h=f;c[g>>2]=b;c[h>>2]=e;c[(c[g>>2]|0)+16>>2]=c[h>>2];c[h>>2]=(c[h>>2]|0)+12;c[(c[g>>2]|0)+40>>2]=(d[c[h>>2]|0]|0)<<24|(d[(c[h>>2]|0)+1|0]|0)<<16|(d[(c[h>>2]|0)+2|0]|0)<<8|(d[(c[h>>2]|0)+3|0]|0)<<0;a[(c[g>>2]|0)+24|0]=0;i=f;return 0}function Ts(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;b=zu(c[e>>2]|0,f,0)|0;i=d;return b|0}function Us(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+32|0;g=f+16|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;c[h>>2]=b;c[j>>2]=e;c[k>>2]=c[h>>2];if((c[(c[k>>2]|0)+28>>2]|0)>>>0>=4294967295){c[g>>2]=0;m=c[g>>2]|0;i=f;return m|0}do{if((d[(c[k>>2]|0)+24|0]|0)!=0?(c[(c[k>>2]|0)+28>>2]|0)==(c[c[j>>2]>>2]|0):0){yu(c[k>>2]|0);if((a[(c[k>>2]|0)+24|0]|0)==0){c[l>>2]=0;break}c[l>>2]=c[(c[k>>2]|0)+32>>2];if((c[l>>2]|0)!=0){c[c[j>>2]>>2]=c[(c[k>>2]|0)+28>>2]}}else{n=9}}while(0);if((n|0)==9){c[l>>2]=zu(c[h>>2]|0,c[j>>2]|0,1)|0}c[g>>2]=c[l>>2];m=c[g>>2]|0;i=f;return m|0}



function Eu(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;f=i;i=i+96|0;g=f+88|0;h=f+84|0;j=f+80|0;k=f+92|0;l=f+76|0;m=f+72|0;n=f+68|0;o=f+64|0;p=f+60|0;q=f+56|0;r=f+52|0;s=f+48|0;t=f+44|0;u=f+16|0;v=f;w=f+4|0;x=f+8|0;y=f+12|0;z=f+20|0;A=f+24|0;B=f+28|0;C=f+32|0;D=f+36|0;E=f+40|0;c[h>>2]=b;c[j>>2]=d;a[k]=e;c[u>>2]=c[c[j>>2]>>2];c[v>>2]=0;c[w>>2]=(c[(c[h>>2]|0)+16>>2]|0)+6;c[l>>2]=((a[c[w>>2]|0]&255)<<8|(a[(c[w>>2]|0)+1|0]&255)<<0)&65535&-2;if((c[l>>2]|0)==0){c[g>>2]=0;F=c[g>>2]|0;i=f;return F|0}c[t>>2]=(c[l>>2]|0)>>>1;c[s>>2]=c[t>>2];c[n>>2]=65535;if((a[k]|0)!=0){c[u>>2]=(c[u>>2]|0)+1}c[r>>2]=0;c[q>>2]=c[t>>2];while(1){if(!((c[r>>2]|0)>>>0<(c[q>>2]|0)>>>0)){break}c[s>>2]=((c[r>>2]|0)+(c[q>>2]|0)|0)>>>1;c[w>>2]=(c[(c[h>>2]|0)+16>>2]|0)+14+(c[s>>2]<<1);c[n>>2]=((a[c[w>>2]|0]&255)<<8|(a[(c[w>>2]|0)+1|0]&255)<<0)&65535;c[w>>2]=(c[w>>2]|0)+(2+(c[l>>2]|0));c[m>>2]=((a[c[w>>2]|0]&255)<<8|(a[(c[w>>2]|0)+1|0]&255)<<0)&65535;if((c[u>>2]|0)>>>0<(c[m>>2]|0)>>>0){c[q>>2]=c[s>>2];continue}if(!((c[u>>2]|0)>>>0>(c[n>>2]|0)>>>0)){G=11;break}c[r>>2]=(c[s>>2]|0)+1}do{if((G|0)==11){c[w>>2]=(c[w>>2]|0)+(c[l>>2]|0);c[p>>2]=(((a[c[w>>2]|0]&255)<<8|(a[(c[w>>2]|0)+1|0]&255)<<0)&65535)<<16>>16;c[w>>2]=(c[w>>2]|0)+(c[l>>2]|0);c[o>>2]=((a[c[w>>2]|0]&255)<<8|(a[(c[w>>2]|0)+1|0]&255)<<0)&65535;if(((((c[s>>2]|0)>>>0>=((c[t>>2]|0)-1|0)>>>0?(c[m>>2]|0)==65535:0)?(c[n>>2]|0)==65535:0)?(c[x>>2]=c[c[h>>2]>>2],c[y>>2]=(c[(c[x>>2]|0)+500>>2]|0)+(c[(c[x>>2]|0)+504>>2]|0),(c[o>>2]|0)!=0):0)?((c[w>>2]|0)+(c[o>>2]|0)+2|0)>>>0>(c[y>>2]|0)>>>0:0){c[p>>2]=1;c[o>>2]=0}if((c[(c[h>>2]|0)+20>>2]&2|0)!=0){c[q>>2]=c[s>>2];if((c[o>>2]|0)==65535){c[s>>2]=(c[q>>2]|0)+1}c[z>>2]=c[q>>2];while(1){if(!((c[z>>2]|0)>>>0>0)){break}c[B>>2]=c[w>>2];c[w>>2]=(c[(c[h>>2]|0)+16>>2]|0)+14+((c[z>>2]|0)-1<<1);c[A>>2]=((a[c[w>>2]|0]&255)<<8|(a[(c[w>>2]|0)+1|0]&255)<<0)&65535;if((c[u>>2]|0)>>>0>(c[A>>2]|0)>>>0){G=23;break}c[n>>2]=c[A>>2];c[w>>2]=(c[w>>2]|0)+(2+(c[l>>2]|0));c[m>>2]=((a[c[w>>2]|0]&255)<<8|(a[(c[w>>2]|0)+1|0]&255)<<0)&65535;c[w>>2]=(c[w>>2]|0)+(c[l>>2]|0);c[p>>2]=(((a[c[w>>2]|0]&255)<<8|(a[(c[w>>2]|0)+1|0]&255)<<0)&65535)<<16>>16;c[w>>2]=(c[w>>2]|0)+(c[l>>2]|0);c[o>>2]=((a[c[w>>2]|0]&255)<<8|(a[(c[w>>2]|0)+1|0]&255)<<0)&65535;if((c[o>>2]|0)!=65535){c[s>>2]=(c[z>>2]|0)-1}c[z>>2]=(c[z>>2]|0)+ -1}if((G|0)==23){c[w>>2]=c[B>>2]}if((c[s>>2]|0)==((c[q>>2]|0)+1|0)){if((c[z>>2]|0)!=(c[q>>2]|0)){c[w>>2]=(c[(c[h>>2]|0)+16>>2]|0)+14+(c[q>>2]<<1);c[n>>2]=((a[c[w>>2]|0]&255)<<8|(a[(c[w>>2]|0)+1|0]&255)<<0)&65535;c[w>>2]=(c[w>>2]|0)+(2+(c[l>>2]|0));c[m>>2]=((a[c[w>>2]|0]&255)<<8|(a[(c[w>>2]|0)+1|0]&255)<<0)&65535;c[w>>2]=(c[w>>2]|0)+(c[l>>2]|0);c[p>>2]=(((a[c[w>>2]|0]&255)<<8|(a[(c[w>>2]|0)+1|0]&255)<<0)&65535)<<16>>16;c[w>>2]=(c[w>>2]|0)+(c[l>>2]|0);c[o>>2]=((a[c[w>>2]|0]&255)<<8|(a[(c[w>>2]|0)+1|0]&255)<<0)&65535}c[s>>2]=c[q>>2];c[z>>2]=(c[q>>2]|0)+1;while(1){if(!((c[z>>2]|0)>>>0<(c[t>>2]|0)>>>0)){break}c[w>>2]=(c[(c[h>>2]|0)+16>>2]|0)+14+(c[z>>2]<<1);c[C>>2]=((a[c[w>>2]|0]&255)<<8|(a[(c[w>>2]|0)+1|0]&255)<<0)&65535;c[w>>2]=(c[w>>2]|0)+(2+(c[l>>2]|0));c[D>>2]=((a[c[w>>2]|0]&255)<<8|(a[(c[w>>2]|0)+1|0]&255)<<0)&65535;if((c[u>>2]|0)>>>0<(c[D>>2]|0)>>>0){break}c[n>>2]=c[C>>2];c[m>>2]=c[D>>2];c[w>>2]=(c[w>>2]|0)+(c[l>>2]|0);c[p>>2]=(((a[c[w>>2]|0]&255)<<8|(a[(c[w>>2]|0)+1|0]&255)<<0)&65535)<<16>>16;c[w>>2]=(c[w>>2]|0)+(c[l>>2]|0);c[o>>2]=((a[c[w>>2]|0]&255)<<8|(a[(c[w>>2]|0)+1|0]&255)<<0)&65535;if((c[o>>2]|0)!=65535){c[s>>2]=c[z>>2]}c[z>>2]=(c[z>>2]|0)+1}c[z>>2]=(c[z>>2]|0)+ -1;if((c[s>>2]|0)==(c[q>>2]|0)){c[s>>2]=c[z>>2];break}}if((c[s>>2]|0)!=(c[z>>2]|0)){c[w>>2]=(c[(c[h>>2]|0)+16>>2]|0)+14+(c[s>>2]<<1);c[n>>2]=((a[c[w>>2]|0]&255)<<8|(a[(c[w>>2]|0)+1|0]&255)<<0)&65535;c[w>>2]=(c[w>>2]|0)+(2+(c[l>>2]|0));c[m>>2]=((a[c[w>>2]|0]&255)<<8|(a[(c[w>>2]|0)+1|0]&255)<<0)&65535;c[w>>2]=(c[w>>2]|0)+(c[l>>2]|0);c[p>>2]=(((a[c[w>>2]|0]&255)<<8|(a[(c[w>>2]|0)+1|0]&255)<<0)&65535)<<16>>16;c[w>>2]=(c[w>>2]|0)+(c[l>>2]|0);c[o>>2]=((a[c[w>>2]|0]&255)<<8|(a[(c[w>>2]|0)+1|0]&255)<<0)&65535}}else{if((c[o>>2]|0)==65535){break}}if((c[o>>2]|0)==0){c[v>>2]=(c[u>>2]|0)+(c[p>>2]|0)&65535;break}c[w>>2]=(c[w>>2]|0)+((c[o>>2]|0)+((c[u>>2]|0)-(c[m>>2]|0)<<1));c[v>>2]=((a[c[w>>2]|0]&255)<<8|(a[(c[w>>2]|0)+1|0]&255)<<0)&65535;if((c[v>>2]|0)!=0){c[v>>2]=(c[v>>2]|0)+(c[p>>2]|0)&65535}}}while(0);do{if((a[k]|0)!=0){c[E>>2]=c[h>>2];if((c[u>>2]|0)>>>0>(c[n>>2]|0)>>>0?(c[s>>2]=(c[s>>2]|0)+1,(c[s>>2]|0)==(c[t>>2]|0)):0){c[g>>2]=0;F=c[g>>2]|0;i=f;return F|0}if((Fu(c[E>>2]|0,c[s>>2]|0)|0)!=0){if((c[v>>2]|0)==0){break}c[c[j>>2]>>2]=c[u>>2];break}c[(c[E>>2]|0)+24>>2]=c[u>>2];if((c[v>>2]|0)!=0){c[(c[E>>2]|0)+28>>2]=c[v>>2]}else{c[(c[E>>2]|0)+24>>2]=c[u>>2];Du(c[E>>2]|0);c[v>>2]=c[(c[E>>2]|0)+28>>2]}if((c[v>>2]|0)!=0){c[c[j>>2]>>2]=c[(c[E>>2]|0)+24>>2]}}}while(0);c[g>>2]=c[v>>2];F=c[g>>2]|0;i=f;return F|0}function Fu(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+48|0;f=e+32|0;g=e+28|0;h=e+24|0;j=e+20|0;k=e+16|0;l=e+8|0;m=e+4|0;n=e;o=e+12|0;c[g>>2]=b;c[h>>2]=d;c[j>>2]=c[(c[g>>2]|0)+16>>2];c[l>>2]=c[(c[g>>2]|0)+32>>2];while(1){if(!((c[h>>2]|0)>>>0<(c[l>>2]|0)>>>0)){p=14;break}c[k>>2]=(c[j>>2]|0)+14+(c[h>>2]<<1);c[(c[g>>2]|0)+44>>2]=((a[c[k>>2]|0]&255)<<8|(a[(c[k>>2]|0)+1|0]&255)<<0)&65535;c[k>>2]=(c[k>>2]|0)+(2+(c[l>>2]<<1));c[(c[g>>2]|0)+40>>2]=((a[c[k>>2]|0]&255)<<8|(a[(c[k>>2]|0)+1|0]&255)<<0)&65535;c[k>>2]=(c[k>>2]|0)+(c[l>>2]<<1);c[(c[g>>2]|0)+48>>2]=(((a[c[k>>2]|0]&255)<<8|(a[(c[k>>2]|0)+1|0]&255)<<0)&65535)<<16>>16;c[k>>2]=(c[k>>2]|0)+(c[l>>2]<<1);c[m>>2]=((a[c[k>>2]|0]&255)<<8|(a[(c[k>>2]|0)+1|0]&255)<<0)&65535;if(((((c[h>>2]|0)>>>0>=((c[l>>2]|0)-1|0)>>>0?(c[(c[g>>2]|0)+40>>2]|0)==65535:0)?(c[(c[g>>2]|0)+44>>2]|0)==65535:0)?(c[n>>2]=c[c[g>>2]>>2],c[o>>2]=(c[(c[n>>2]|0)+500>>2]|0)+(c[(c[n>>2]|0)+504>>2]|0),(c[m>>2]|0)!=0):0)?((c[k>>2]|0)+(c[m>>2]|0)+2|0)>>>0>(c[o>>2]|0)>>>0:0){c[(c[g>>2]|0)+48>>2]=1;c[m>>2]=0}if((c[m>>2]|0)!=65535){break}c[h>>2]=(c[h>>2]|0)+1}if((p|0)==14){c[f>>2]=-1;q=c[f>>2]|0;i=e;return q|0}if((c[m>>2]|0)!=0){r=(c[k>>2]|0)+(c[m>>2]|0)|0}else{r=0}c[(c[g>>2]|0)+52>>2]=r;c[(c[g>>2]|0)+36>>2]=c[h>>2];c[f>>2]=0;q=c[f>>2]|0;i=e;return q|0}function Gu(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+32|0;f=e+28|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;m=e+20|0;n=e+24|0;c[f>>2]=b;c[g>>2]=d;c[h>>2]=0;if(!((c[g>>2]|0)>>>0<65536)){o=c[h>>2]|0;i=e;return o|0}c[j>>2]=c[g>>2]&255;c[k>>2]=(c[g>>2]|0)>>>8;c[l>>2]=(c[f>>2]|0)+6;c[m>>2]=(c[f>>2]|0)+518;if((c[k>>2]|0)==0){c[n>>2]=c[m>>2];c[l>>2]=(c[l>>2]|0)+(c[j>>2]<<1);if((((a[c[l>>2]|0]&255)<<8|(a[(c[l>>2]|0)+1|0]&255)<<0)&65535|0)!=0){o=c[h>>2]|0;i=e;return o|0}}else{c[l>>2]=(c[l>>2]|0)+(c[k>>2]<<1);c[n>>2]=(c[m>>2]|0)+(((a[c[l>>2]|0]&255)<<8|(a[(c[l>>2]|0)+1|0]&255)<<0)&65535&-8);if((c[n>>2]|0)==(c[m>>2]|0)){o=c[h>>2]|0;i=e;return o|0}}c[h>>2]=c[n>>2];o=c[h>>2]|0;i=e;return o|0}function Hu(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;e=d+12|0;f=d;g=d+4|0;h=d+8|0;c[e>>2]=a;c[f>>2]=b;c[h>>2]=0;c[c[f>>2]>>2]=0;c[h>>2]=Sn(c[e>>2]|0,20,g)|0;if((c[g>>2]|0)!=0){j=c[g>>2]|0;i=d;return j|0}c[(c[h>>2]|0)+12>>2]=c[e>>2];c[c[f>>2]>>2]=c[h>>2];j=c[g>>2]|0;i=d;return j|0}function Iu(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+32|0;f=e+16|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[j>>2]=c[f>>2];if((c[f>>2]|0)==0){i=e;return}if((c[g>>2]|0)!=0?(c[h>>2]|0)>=3476:0){c[k>>2]=c[g>>2];c[(c[j>>2]|0)+16>>2]=c[k>>2];c[c[j>>2]>>2]=(c[g>>2]|0)+1440;c[(c[j>>2]|0)+4>>2]=(c[g>>2]|0)+(c[h>>2]|0)-(c[c[j>>2]>>2]|0)&-16;c[(c[j>>2]|0)+8>>2]=((c[(c[j>>2]|0)+4>>2]|0)>>>0)/128|0;i=e;return}c[c[j>>2]>>2]=0;c[(c[j>>2]|0)+4>>2]=0;c[(c[j>>2]|0)+16>>2]=0;i=e;return}function Ju(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+32|0;f=e+20|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;c[g>>2]=a;c[h>>2]=d;c[j>>2]=c[(c[h>>2]|0)+4>>2];c[k>>2]=c[c[h>>2]>>2];if(((c[g>>2]|0)!=0?(c[c[g>>2]>>2]|0)!=0:0)?(c[(c[g>>2]|0)+4>>2]|0)!=0:0){if((c[j>>2]|0)==0){c[f>>2]=20;m=c[f>>2]|0;i=e;return m|0}if((b[(c[j>>2]|0)+2>>1]|0)!=0?(b[c[j>>2]>>1]|0)>0:0){if((c[(c[j>>2]|0)+12>>2]|0)!=0?(c[(c[j>>2]|0)+4>>2]|0)!=0:0){if((b[(c[j>>2]|0)+2>>1]|0)!=((b[(c[(c[j>>2]|0)+12>>2]|0)+((b[c[j>>2]>>1]|0)-1<<1)>>1]|0)+1|0)){c[f>>2]=20;m=c[f>>2]|0;i=e;return m|0}c[l>>2]=c[(c[g>>2]|0)+16>>2];do{if((c[(c[h>>2]|0)+8>>2]&2|0)==0){if((c[k>>2]|0)==0){c[f>>2]=6;m=c[f>>2]|0;i=e;return m|0}if((c[(c[k>>2]|0)+4>>2]|0)!=0?(c[c[k>>2]>>2]|0)!=0:0){if((c[(c[k>>2]|0)+12>>2]|0)!=0){break}c[f>>2]=6;m=c[f>>2]|0;i=e;return m|0}c[f>>2]=0;m=c[f>>2]|0;i=e;return m|0}}while(0);if((c[(c[h>>2]|0)+8>>2]&1|0)==0){c[f>>2]=19;m=c[f>>2]|0;i=e;return m|0}do{if((c[(c[h>>2]|0)+8>>2]&2|0)!=0){d=(c[l>>2]|0)+1024|0;if((c[(c[h>>2]|0)+8>>2]&4|0)!=0){a=(c[h>>2]|0)+32|0;c[d+0>>2]=c[a+0>>2];c[d+4>>2]=c[a+4>>2];c[d+8>>2]=c[a+8>>2];c[d+12>>2]=c[a+12>>2];break}else{c[d>>2]=-32768;c[(c[l>>2]|0)+1028>>2]=-32768;c[(c[l>>2]|0)+1032>>2]=32767;c[(c[l>>2]|0)+1036>>2]=32767;break}}else{c[(c[l>>2]|0)+1024>>2]=0;c[(c[l>>2]|0)+1028>>2]=0;c[(c[l>>2]|0)+1032>>2]=c[(c[k>>2]|0)+4>>2];c[(c[l>>2]|0)+1036>>2]=c[c[k>>2]>>2]}}while(0);Tu(c[l>>2]|0,c[c[g>>2]>>2]|0,c[(c[g>>2]|0)+4>>2]|0);d=(c[l>>2]|0)+980|0;a=c[j>>2]|0;c[d+0>>2]=c[a+0>>2];c[d+4>>2]=c[a+4>>2];c[d+8>>2]=c[a+8>>2];c[d+12>>2]=c[a+12>>2];c[d+16>>2]=c[a+16>>2];c[(c[l>>2]|0)+52>>2]=0;c[(c[l>>2]|0)+40>>2]=1;c[(c[l>>2]|0)+1248>>2]=c[(c[g>>2]|0)+8>>2];c[(c[l>>2]|0)+1232>>2]=0;if((c[(c[h>>2]|0)+8>>2]&2|0)!=0){c[(c[l>>2]|0)+1236>>2]=c[(c[h>>2]|0)+12>>2];c[(c[l>>2]|0)+1240>>2]=c[(c[h>>2]|0)+28>>2]}else{h=(c[l>>2]|0)+1e3|0;g=c[k>>2]|0;c[h+0>>2]=c[g+0>>2];c[h+4>>2]=c[g+4>>2];c[h+8>>2]=c[g+8>>2];c[h+12>>2]=c[g+12>>2];c[h+16>>2]=c[g+16>>2];c[h+20>>2]=c[g+20>>2];c[(c[l>>2]|0)+1236>>2]=22;c[(c[l>>2]|0)+1240>>2]=c[l>>2]}c[f>>2]=Vu(c[l>>2]|0)|0;m=c[f>>2]|0;i=e;return m|0}c[f>>2]=20;m=c[f>>2]|0;i=e;return m|0}c[f>>2]=0;m=c[f>>2]|0;i=e;return m|0}c[f>>2]=6;m=c[f>>2]|0;i=e;return m|0}function Ku(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b+4|0;e=b;c[d>>2]=a;c[e>>2]=c[(c[d>>2]|0)+12>>2];Vn(c[e>>2]|0,c[d>>2]|0);c[d>>2]=0;i=b;return}function Lu(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b+4|0;e=b;c[d>>2]=a;c[e>>2]=c[(c[d>>2]|0)+4>>2];wd[c[(c[(c[(c[d>>2]|0)+12>>2]|0)+56>>2]|0)+8>>2]&31](c[(c[d>>2]|0)+52>>2]|0,c[(c[e>>2]|0)+164>>2]|0,c[(c[e>>2]|0)+168>>2]|0);i=b;return 0}function Mu(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;g=f+12|0;h=f;j=f+4|0;k=f+8|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;if((c[j>>2]|0)==1){c[j>>2]=0}e=Su(c[g>>2]|0,c[h>>2]|0,c[j>>2]|0,c[k>>2]|0,0)|0;i=f;return e|0}function Nu(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+32|0;g=f+16|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;c[l>>2]=0;if((c[(c[h>>2]|0)+72>>2]|0)!=(c[(c[g>>2]|0)+16>>2]|0)){c[l>>2]=6;m=c[l>>2]|0;i=f;return m|0}if((c[j>>2]|0)!=0){wo((c[h>>2]|0)+108|0,c[j>>2]|0)}if((c[k>>2]|0)==0){m=c[l>>2]|0;i=f;return m|0}xo((c[h>>2]|0)+108|0,c[c[k>>2]>>2]|0,c[(c[k>>2]|0)+4>>2]|0);m=c[l>>2]|0;i=f;return m|0}function Ou(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;d=c[h>>2]|0;c[d+0>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;if((c[(c[g>>2]|0)+72>>2]|0)!=(c[(c[f>>2]|0)+16>>2]|0)){i=e;return}pp((c[g>>2]|0)+108|0,c[h>>2]|0);i=e;return}function Pu(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;d=md[c[(c[(c[(c[f>>2]|0)+12>>2]|0)+56>>2]|0)+12>>2]&63](c[(c[f>>2]|0)+52>>2]|0,c[g>>2]|0,c[h>>2]|0)|0;i=e;return d|0}function Qu(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+32|0;h=g+16|0;j=g;k=g+4|0;l=g+8|0;m=g+12|0;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;c[l>>2]=f;c[m>>2]=Su(c[h>>2]|0,c[j>>2]|0,c[k>>2]|0,c[l>>2]|0,3)|0;if((c[m>>2]|0)!=0){n=c[m>>2]|0;i=g;return n|0}a[(c[j>>2]|0)+94|0]=5;n=c[m>>2]|0;i=g;return n|0}function Ru(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+32|0;h=g+16|0;j=g;k=g+4|0;l=g+8|0;m=g+12|0;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;c[l>>2]=f;c[m>>2]=Su(c[h>>2]|0,c[j>>2]|0,c[k>>2]|0,c[l>>2]|0,4)|0;if((c[m>>2]|0)!=0){n=c[m>>2]|0;i=g;return n|0}a[(c[j>>2]|0)+94|0]=6;n=c[m>>2]|0;i=g;return n|0}function Su(e,f,g,h,j){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;k=i;i=i+192|0;l=k+152|0;m=k+136|0;n=k+140|0;o=k+144|0;p=k+148|0;q=k+156|0;r=k+160|0;s=k+168|0;t=k+132|0;u=k+128|0;v=k+124|0;w=k+120|0;x=k+116|0;y=k+112|0;z=k;A=k+24|0;B=k+4|0;C=k+8|0;D=k+12|0;E=k+16|0;F=k+20|0;G=k+32|0;H=k+185|0;I=k+184|0;J=k+186|0;K=k+80|0;L=k+84|0;M=k+88|0;N=k+92|0;O=k+96|0;P=k+100|0;Q=k+104|0;R=k+108|0;c[l>>2]=e;c[m>>2]=f;c[n>>2]=g;c[o>>2]=h;c[p>>2]=j;c[r>>2]=0;c[y>>2]=(c[m>>2]|0)+76;c[z>>2]=c[(c[l>>2]|0)+8>>2];c[A>>2]=(c[n>>2]|0)==3;c[B>>2]=(c[n>>2]|0)==4;c[C>>2]=0;c[D>>2]=0;a[H]=0;a[I]=0;a[J]=0;do{if((c[(c[m>>2]|0)+72>>2]|0)!=(c[(c[l>>2]|0)+16>>2]|0)){c[q>>2]=6}else{if((c[n>>2]|0)!=(c[p>>2]|0)){c[q>>2]=19;break}c[r>>2]=(c[m>>2]|0)+108;if((c[o>>2]|0)!=0){xo(c[r>>2]|0,c[c[o>>2]>>2]|0,c[(c[o>>2]|0)+4>>2]|0);a[H]=1}pp(c[r>>2]|0,s);c[s>>2]=c[s>>2]&-64;c[s+4>>2]=c[s+4>>2]&-64;c[s+8>>2]=(c[s+8>>2]|0)+63&-64;c[s+12>>2]=(c[s+12>>2]|0)+63&-64;if((c[s>>2]|0)<0?(c[s+8>>2]|0)>(2147483647+(c[s>>2]|0)|0):0){c[q>>2]=98;break}c[t>>2]=(c[s+8>>2]|0)-(c[s>>2]|0)>>6;if((c[s+4>>2]|0)<0?(c[s+12>>2]|0)>(2147483647+(c[s+4>>2]|0)|0):0){c[q>>2]=98;break}c[u>>2]=(c[s+12>>2]|0)-(c[s+4>>2]|0)>>6;c[x>>2]=c[t>>2];c[w>>2]=c[u>>2];if((c[(c[(c[m>>2]|0)+156>>2]|0)+4>>2]&1|0)!=0){Vn(c[z>>2]|0,c[(c[y>>2]|0)+12>>2]|0);c[(c[y>>2]|0)+12>>2]=0;j=(c[(c[m>>2]|0)+156>>2]|0)+4|0;c[j>>2]=c[j>>2]&-2}c[v>>2]=c[t>>2];if((c[A>>2]|0)!=0){c[t>>2]=(c[t>>2]|0)*3;c[v>>2]=(c[t>>2]|0)+3&-4}if((c[B>>2]|0)!=0){c[u>>2]=(c[u>>2]|0)*3}c[C>>2]=c[s>>2];c[D>>2]=c[s+4>>2];c[E>>2]=c[s>>2]>>6;c[F>>2]=c[s+12>>2]>>6;if((c[t>>2]|0)<=32767?(c[u>>2]|0)<=32767:0){a[(c[y>>2]|0)+18|0]=2;b[(c[y>>2]|0)+16>>1]=256;c[(c[y>>2]|0)+4>>2]=c[t>>2];c[c[y>>2]>>2]=c[u>>2];c[(c[y>>2]|0)+8>>2]=c[v>>2];xo(c[r>>2]|0,0-(c[C>>2]|0)|0,0-(c[D>>2]|0)|0);a[I]=1;j=Sn(c[z>>2]|0,aa(c[v>>2]|0,c[u>>2]|0)|0,q)|0;c[(c[y>>2]|0)+12>>2]=j;if((c[q>>2]|0)!=0){break}a[J]=1;j=(c[(c[m>>2]|0)+156>>2]|0)+4|0;c[j>>2]=c[j>>2]|1;c[G>>2]=c[y>>2];c[G+4>>2]=c[r>>2];c[G+8>>2]=1;c[q>>2]=Ad[c[(c[l>>2]|0)+56>>2]&127](c[(c[l>>2]|0)+52>>2]|0,G)|0;if((c[q>>2]|0)!=0){break}a:do{if((c[A>>2]|0)!=0){c[K>>2]=c[(c[y>>2]|0)+12>>2];c[L>>2]=c[w>>2];while(1){if(!((c[L>>2]|0)>>>0>0)){break a}c[N>>2]=(c[K>>2]|0)+(c[t>>2]|0);c[M>>2]=c[x>>2];while(1){if(!((c[M>>2]|0)>>>0>0)){break}c[O>>2]=d[(c[K>>2]|0)+((c[M>>2]|0)-1)|0]|0;a[(c[N>>2]|0)+ -3|0]=c[O>>2];a[(c[N>>2]|0)+ -2|0]=c[O>>2];a[(c[N>>2]|0)+ -1|0]=c[O>>2];c[N>>2]=(c[N>>2]|0)+ -3;c[M>>2]=(c[M>>2]|0)+ -1}c[L>>2]=(c[L>>2]|0)+ -1;c[K>>2]=(c[K>>2]|0)+(c[v>>2]|0)}}}while(0);b:do{if((c[B>>2]|0)!=0){c[P>>2]=(c[(c[y>>2]|0)+12>>2]|0)+(aa((c[u>>2]|0)-(c[w>>2]|0)|0,c[v>>2]|0)|0);c[Q>>2]=c[(c[y>>2]|0)+12>>2];c[R>>2]=c[w>>2];while(1){if(!((c[R>>2]|0)>>>0>0)){break b}lA(c[Q>>2]|0,c[P>>2]|0,c[v>>2]|0)|0;c[Q>>2]=(c[Q>>2]|0)+(c[v>>2]|0);lA(c[Q>>2]|0,c[P>>2]|0,c[v>>2]|0)|0;c[Q>>2]=(c[Q>>2]|0)+(c[v>>2]|0);lA(c[Q>>2]|0,c[P>>2]|0,c[v>>2]|0)|0;c[Q>>2]=(c[Q>>2]|0)+(c[v>>2]|0);c[P>>2]=(c[P>>2]|0)+(c[v>>2]|0);c[R>>2]=(c[R>>2]|0)+ -1}}}while(0);if((c[E>>2]|0)<=2147483647?(c[F>>2]|0)<=2147483647:0){c[(c[m>>2]|0)+72>>2]=1651078259;c[(c[m>>2]|0)+100>>2]=c[E>>2];c[(c[m>>2]|0)+104>>2]=c[F>>2];a[J]=0;c[q>>2]=0;break}c[q>>2]=23;break}c[q>>2]=98}}while(0);if((a[I]|0)!=0){xo(c[r>>2]|0,c[C>>2]|0,c[D>>2]|0)}if((a[H]|0)!=0){xo(c[r>>2]|0,0-(c[c[o>>2]>>2]|0)|0,0-(c[(c[o>>2]|0)+4>>2]|0)|0)}if((a[J]|0)==0){S=c[q>>2]|0;i=k;return S|0}Vn(c[z>>2]|0,c[(c[y>>2]|0)+12>>2]|0);c[(c[y>>2]|0)+12>>2]=0;y=(c[(c[m>>2]|0)+156>>2]|0)+4|0;c[y>>2]=c[y>>2]&-2;S=c[q>>2]|0;i=k;return S|0}function Tu(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[(c[f>>2]|0)+1412>>2]=c[g>>2];c[(c[f>>2]|0)+1416>>2]=c[h>>2];c[(c[f>>2]|0)+1420>>2]=c[g>>2];c[(c[f>>2]|0)+44>>2]=0;c[(c[f>>2]|0)+48>>2]=0;c[(c[f>>2]|0)+52>>2]=0;c[(c[f>>2]|0)+32>>2]=0;c[(c[f>>2]|0)+36>>2]=0;c[(c[f>>2]|0)+40>>2]=1;i=e;return}function Uu(d,f,g,h){d=d|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;j=i;i=i+32|0;k=j+24|0;l=j;m=j+4|0;n=j+8|0;o=j+12|0;p=j+16|0;q=j+28|0;r=j+20|0;c[k>>2]=d;c[l>>2]=f;c[m>>2]=g;c[n>>2]=h;c[p>>2]=(c[n>>2]|0)+1e3;c[o>>2]=(c[(c[p>>2]|0)+12>>2]|0)+(0-(aa(c[k>>2]|0,c[(c[p>>2]|0)+8>>2]|0)|0));if((c[(c[p>>2]|0)+8>>2]|0)>=0){k=aa((c[c[p>>2]>>2]|0)-1|0,c[(c[p>>2]|0)+8>>2]|0)|0;c[o>>2]=(c[o>>2]|0)+k}while(1){if((c[l>>2]|0)<=0){break}a[q]=a[(c[m>>2]|0)+4|0]|0;a:do{if((a[q]|0)!=0){k=(c[o>>2]|0)+(b[c[m>>2]>>1]|0)|0;if((e[(c[m>>2]|0)+2>>1]|0)>=8){nA(k|0,a[q]&255|0,e[(c[m>>2]|0)+2>>1]|0)|0;break}c[r>>2]=k;switch(e[(c[m>>2]|0)+2>>1]|0){case 1:{break};case 3:{s=12;break};case 7:{k=a[q]|0;p=c[r>>2]|0;c[r>>2]=p+1;a[p]=k;s=9;break};case 4:{s=11;break};case 5:{s=10;break};case 2:{s=13;break};case 6:{s=9;break};default:{break a}}if((s|0)==9){s=0;k=a[q]|0;p=c[r>>2]|0;c[r>>2]=p+1;a[p]=k;s=10}if((s|0)==10){s=0;k=a[q]|0;p=c[r>>2]|0;c[r>>2]=p+1;a[p]=k;s=11}if((s|0)==11){s=0;k=a[q]|0;p=c[r>>2]|0;c[r>>2]=p+1;a[p]=k;s=12}if((s|0)==12){s=0;k=a[q]|0;p=c[r>>2]|0;c[r>>2]=p+1;a[p]=k;s=13}if((s|0)==13){s=0;k=a[q]|0;p=c[r>>2]|0;c[r>>2]=p+1;a[p]=k}a[c[r>>2]|0]=a[q]|0}}while(0);c[l>>2]=(c[l>>2]|0)+ -1;c[m>>2]=(c[m>>2]|0)+6}i=j;return}function Vu(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;b=i;i=i+400|0;d=b+388|0;e=b+384|0;f=b+64|0;g=b+60|0;h=b+56|0;j=b+52|0;k=b+48|0;l=b+44|0;m=b+40|0;n=b+36|0;o=b+12|0;p=b;q=b+4|0;r=b+8|0;s=b+16|0;t=b+20|0;u=b+24|0;v=b+28|0;w=b+32|0;c[e>>2]=a;Wu(c[e>>2]|0);c[n>>2]=(c[e>>2]|0)+1024;if((((c[(c[e>>2]|0)+12>>2]|0)>(c[c[n>>2]>>2]|0)?(c[(c[e>>2]|0)+8>>2]|0)<(c[(c[n>>2]|0)+8>>2]|0):0)?(c[(c[e>>2]|0)+20>>2]|0)>(c[(c[n>>2]|0)+4>>2]|0):0)?(c[(c[e>>2]|0)+16>>2]|0)<(c[(c[n>>2]|0)+12>>2]|0):0){if((c[(c[e>>2]|0)+8>>2]|0)<(c[c[n>>2]>>2]|0)){c[(c[e>>2]|0)+8>>2]=c[c[n>>2]>>2]}if((c[(c[e>>2]|0)+16>>2]|0)<(c[(c[n>>2]|0)+4>>2]|0)){c[(c[e>>2]|0)+16>>2]=c[(c[n>>2]|0)+4>>2]}if((c[(c[e>>2]|0)+12>>2]|0)>(c[(c[n>>2]|0)+8>>2]|0)){c[(c[e>>2]|0)+12>>2]=c[(c[n>>2]|0)+8>>2]}if((c[(c[e>>2]|0)+20>>2]|0)>(c[(c[n>>2]|0)+12>>2]|0)){c[(c[e>>2]|0)+20>>2]=c[(c[n>>2]|0)+12>>2]}c[(c[e>>2]|0)+24>>2]=(c[(c[e>>2]|0)+12>>2]|0)-(c[(c[e>>2]|0)+8>>2]|0);c[(c[e>>2]|0)+28>>2]=(c[(c[e>>2]|0)+20>>2]|0)-(c[(c[e>>2]|0)+16>>2]|0);c[j>>2]=((c[(c[e>>2]|0)+20>>2]|0)-(c[(c[e>>2]|0)+16>>2]|0)|0)/(c[(c[e>>2]|0)+1248>>2]|0)|0;if((c[j>>2]|0)==0){c[j>>2]=1}if((c[j>>2]|0)>=39){c[j>>2]=39}c[(c[e>>2]|0)+1252>>2]=0;c[k>>2]=c[(c[e>>2]|0)+16>>2];c[m>>2]=c[(c[e>>2]|0)+20>>2];c[h>>2]=0;a:while(1){if((c[h>>2]|0)>=(c[j>>2]|0)){x=42;break}c[l>>2]=(c[k>>2]|0)+(c[(c[e>>2]|0)+1248>>2]|0);if(!((c[h>>2]|0)!=((c[j>>2]|0)-1|0)?(c[l>>2]|0)<=(c[m>>2]|0):0)){c[l>>2]=c[m>>2]}c[f>>2]=c[k>>2];c[f+4>>2]=c[l>>2];c[g>>2]=f;b:while(1){if(!((c[g>>2]|0)>>>0>=f>>>0)){break}c[(c[e>>2]|0)+1420>>2]=c[(c[e>>2]|0)+1412>>2];c[(c[e>>2]|0)+1424>>2]=(c[(c[g>>2]|0)+4>>2]|0)-(c[c[g>>2]>>2]|0);c[u>>2]=c[(c[e>>2]|0)+1424>>2]<<2;c[w>>2]=((c[u>>2]|0)>>>0)%16|0;if((c[w>>2]|0)>0){c[u>>2]=(c[u>>2]|0)+(16-(c[w>>2]|0))}c[v>>2]=c[(c[e>>2]|0)+1416>>2];c[v>>2]=(c[v>>2]|0)-(((c[v>>2]|0)>>>0)%16|0);c[s>>2]=(c[(c[e>>2]|0)+1412>>2]|0)+(c[v>>2]|0);c[(c[e>>2]|0)+44>>2]=(c[(c[e>>2]|0)+1412>>2]|0)+(c[u>>2]|0);do{if(!((c[(c[e>>2]|0)+44>>2]|0)>>>0>=(c[s>>2]|0)>>>0)?(c[(c[e>>2]|0)+48>>2]=((c[s>>2]|0)-(c[(c[e>>2]|0)+44>>2]|0)|0)/16|0,(c[(c[e>>2]|0)+48>>2]|0)>=2):0){c[t>>2]=0;while(1){if((c[t>>2]|0)>=(c[(c[e>>2]|0)+1424>>2]|0)){break}c[(c[(c[e>>2]|0)+1420>>2]|0)+(c[t>>2]<<2)>>2]=0;c[t>>2]=(c[t>>2]|0)+1}c[(c[e>>2]|0)+52>>2]=0;c[(c[e>>2]|0)+40>>2]=1;c[(c[e>>2]|0)+16>>2]=c[c[g>>2]>>2];c[(c[e>>2]|0)+20>>2]=c[(c[g>>2]|0)+4>>2];c[(c[e>>2]|0)+28>>2]=(c[(c[g>>2]|0)+4>>2]|0)-(c[c[g>>2]>>2]|0);c[r>>2]=Xu(c[e>>2]|0)|0;if((c[r>>2]|0)!=0){if((c[r>>2]|0)!=64){x=35;break a}else{break}}else{Yu(c[e>>2]|0,(c[e>>2]|0)+1e3|0);c[g>>2]=(c[g>>2]|0)+ -8;continue b}}}while(0);c[o>>2]=c[c[g>>2]>>2];c[p>>2]=c[(c[g>>2]|0)+4>>2];c[q>>2]=(c[o>>2]|0)+((c[p>>2]|0)-(c[o>>2]|0)>>1);if((c[q>>2]|0)==(c[o>>2]|0)){x=37;break a}if(((c[o>>2]|0)-(c[p>>2]|0)|0)>=(c[(c[e>>2]|0)+1248>>2]|0)){n=(c[e>>2]|0)+1252|0;c[n>>2]=(c[n>>2]|0)+1}c[(c[g>>2]|0)+8>>2]=c[o>>2];c[(c[g>>2]|0)+12>>2]=c[q>>2];c[c[g>>2]>>2]=c[q>>2];c[(c[g>>2]|0)+4>>2]=c[p>>2];c[g>>2]=(c[g>>2]|0)+8}c[h>>2]=(c[h>>2]|0)+1;c[k>>2]=c[l>>2]}if((x|0)==35){c[d>>2]=1;y=c[d>>2]|0;i=b;return y|0}else if((x|0)==37){c[d>>2]=1;y=c[d>>2]|0;i=b;return y|0}else if((x|0)==42){if((c[(c[e>>2]|0)+1252>>2]|0)>8?(c[(c[e>>2]|0)+1248>>2]|0)>16:0){c[(c[e>>2]|0)+1248>>2]=(c[(c[e>>2]|0)+1248>>2]|0)/2|0}c[d>>2]=0;y=c[d>>2]|0;i=b;return y|0}}c[d>>2]=0;y=c[d>>2]|0;i=b;return y|0}function Wu(a){a=a|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+32|0;e=d+20|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;k=d+16|0;c[e>>2]=a;c[f>>2]=(c[e>>2]|0)+980;c[g>>2]=c[(c[f>>2]|0)+4>>2];c[h>>2]=(c[g>>2]|0)+(b[(c[f>>2]|0)+2>>1]<<3);if((b[(c[f>>2]|0)+2>>1]|0)<=0){c[(c[e>>2]|0)+12>>2]=0;c[(c[e>>2]|0)+8>>2]=0;c[(c[e>>2]|0)+20>>2]=0;c[(c[e>>2]|0)+16>>2]=0;i=d;return}f=c[c[g>>2]>>2]|0;c[(c[e>>2]|0)+12>>2]=f;c[(c[e>>2]|0)+8>>2]=f;f=c[(c[g>>2]|0)+4>>2]|0;c[(c[e>>2]|0)+20>>2]=f;c[(c[e>>2]|0)+16>>2]=f;c[g>>2]=(c[g>>2]|0)+8;while(1){if(!((c[g>>2]|0)>>>0<(c[h>>2]|0)>>>0)){break}c[j>>2]=c[c[g>>2]>>2];c[k>>2]=c[(c[g>>2]|0)+4>>2];if((c[j>>2]|0)<(c[(c[e>>2]|0)+8>>2]|0)){c[(c[e>>2]|0)+8>>2]=c[j>>2]}if((c[j>>2]|0)>(c[(c[e>>2]|0)+12>>2]|0)){c[(c[e>>2]|0)+12>>2]=c[j>>2]}if((c[k>>2]|0)<(c[(c[e>>2]|0)+16>>2]|0)){c[(c[e>>2]|0)+16>>2]=c[k>>2]}if((c[k>>2]|0)>(c[(c[e>>2]|0)+20>>2]|0)){c[(c[e>>2]|0)+20>>2]=c[k>>2]}c[g>>2]=(c[g>>2]|0)+8}c[(c[e>>2]|0)+8>>2]=c[(c[e>>2]|0)+8>>2]>>6;c[(c[e>>2]|0)+16>>2]=c[(c[e>>2]|0)+16>>2]>>6;c[(c[e>>2]|0)+12>>2]=(c[(c[e>>2]|0)+12>>2]|0)+63>>6;c[(c[e>>2]|0)+20>>2]=(c[(c[e>>2]|0)+20>>2]|0)+63>>6;i=d;return}function Xu(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;b=i;i=i+16|0;d=i;i=i+168|0;c[d>>2]=0;e=b;c[e>>2]=0;jA(a+1256|0,1,d|0)|0;p=0;f=p;p=0;if((f|0)!=0&(q|0)!=0){g=kA(c[f>>2]|0,d)|0;if((g|0)==0){Ea(f|0,q|0)}E=q}else{g=-1}if((g|0)==1){h=E}else{h=0}while(1){if((h|0)!=0){j=8;break}p=0;g=ha(36,a+980|0,95032,a|0)|0;f=p;p=0;if((f|0)!=0&(q|0)!=0){k=kA(c[f>>2]|0,d)|0;if((k|0)==0){Ea(f|0,q|0)}E=q}else{k=-1}if((k|0)==1){h=E;continue}c[e>>2]=g;if((c[a+40>>2]|0)!=0){j=9;break}p=0;ma(64,a|0);g=p;p=0;if((g|0)!=0&(q|0)!=0){l=kA(c[g>>2]|0,d)|0;if((l|0)==0){Ea(g|0,q|0)}E=q}else{l=-1}if((l|0)==1){h=E}else{j=7;break}}if((j|0)==7){m=c[e>>2]|0;i=b;return m|0}else if((j|0)==8){c[e>>2]=64;m=c[e>>2]|0;i=b;return m|0}else if((j|0)==9){m=c[e>>2]|0;i=b;return m|0}return 0}function Yu(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+32|0;e=d+24|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;k=d+16|0;l=d+20|0;c[e>>2]=a;c[f>>2]=b;c[f>>2]=c[f>>2];if((c[(c[e>>2]|0)+52>>2]|0)==0){i=d;return}c[(c[e>>2]|0)+1232>>2]=0;c[g>>2]=0;while(1){if((c[g>>2]|0)>=(c[(c[e>>2]|0)+1424>>2]|0)){break}c[h>>2]=c[(c[(c[e>>2]|0)+1420>>2]|0)+(c[g>>2]<<2)>>2];c[j>>2]=0;c[k>>2]=0;while(1){if((c[h>>2]|0)==0){break}if((c[c[h>>2]>>2]|0)>(c[k>>2]|0)?(c[j>>2]|0)!=0:0){Zu(c[e>>2]|0,c[k>>2]|0,c[g>>2]|0,c[j>>2]<<9,(c[c[h>>2]>>2]|0)-(c[k>>2]|0)|0)}c[j>>2]=(c[j>>2]|0)+(c[(c[h>>2]|0)+4>>2]|0);c[l>>2]=(c[j>>2]<<9)-(c[(c[h>>2]|0)+8>>2]|0);if((c[l>>2]|0)!=0?(c[c[h>>2]>>2]|0)>=0:0){Zu(c[e>>2]|0,c[c[h>>2]>>2]|0,c[g>>2]|0,c[l>>2]|0,1)}c[k>>2]=(c[c[h>>2]>>2]|0)+1;c[h>>2]=c[(c[h>>2]|0)+12>>2]}if((c[j>>2]|0)!=0){Zu(c[e>>2]|0,c[k>>2]|0,c[g>>2]|0,c[j>>2]<<9,(c[(c[e>>2]|0)+24>>2]|0)-(c[k>>2]|0)|0)}c[g>>2]=(c[g>>2]|0)+1}if((c[(c[e>>2]|0)+1236>>2]|0)==0){i=d;return}if((c[(c[e>>2]|0)+1232>>2]|0)<=0){i=d;return}Cd[c[(c[e>>2]|0)+1236>>2]&31](c[(c[e>>2]|0)+1244>>2]|0,c[(c[e>>2]|0)+1232>>2]|0,(c[e>>2]|0)+1040|0,c[(c[e>>2]|0)+1240>>2]|0);i=d;return}function Zu(f,g,h,j,k){f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;l=i;i=i+32|0;m=l+28|0;n=l;o=l+4|0;p=l+8|0;q=l+12|0;r=l+16|0;s=l+20|0;t=l+24|0;c[m>>2]=f;c[n>>2]=g;c[o>>2]=h;c[p>>2]=j;c[q>>2]=k;c[r>>2]=c[p>>2]>>9;if((c[r>>2]|0)<0){c[r>>2]=0-(c[r>>2]|0)}p=c[r>>2]|0;do{if((c[(c[m>>2]|0)+996>>2]&2|0)!=0){c[r>>2]=p&511;k=c[r>>2]|0;if((c[r>>2]|0)>256){c[r>>2]=512-k;break}if((k|0)==256){c[r>>2]=255}}else{if((p|0)>=256){c[r>>2]=255}}}while(0);c[o>>2]=(c[o>>2]|0)+(c[(c[m>>2]|0)+16>>2]|0);p=(c[n>>2]|0)+(c[(c[m>>2]|0)+8>>2]|0)|0;c[n>>2]=p;c[n>>2]=(c[n>>2]|0)>=32767?32767:p;if((c[o>>2]|0)>=2147483647){c[o>>2]=2147483647}if((c[r>>2]|0)==0){i=l;return}c[t>>2]=c[(c[m>>2]|0)+1232>>2];c[s>>2]=(c[m>>2]|0)+1040+((c[t>>2]|0)*6|0)+ -6;if((((c[t>>2]|0)>0?(c[(c[m>>2]|0)+1244>>2]|0)==(c[o>>2]|0):0)?((b[c[s>>2]>>1]|0)+(e[(c[s>>2]|0)+2>>1]|0)|0)==(c[n>>2]|0):0)?(d[(c[s>>2]|0)+4|0]|0)==(c[r>>2]|0):0){b[(c[s>>2]|0)+2>>1]=(e[(c[s>>2]|0)+2>>1]|0)+(c[q>>2]|0);i=l;return}if((c[(c[m>>2]|0)+1244>>2]|0)==(c[o>>2]|0)?(c[t>>2]|0)<32:0){c[s>>2]=(c[s>>2]|0)+6}else{if((c[(c[m>>2]|0)+1236>>2]|0)!=0?(c[t>>2]|0)>0:0){Cd[c[(c[m>>2]|0)+1236>>2]&31](c[(c[m>>2]|0)+1244>>2]|0,c[t>>2]|0,(c[m>>2]|0)+1040|0,c[(c[m>>2]|0)+1240>>2]|0)}c[(c[m>>2]|0)+1232>>2]=0;c[(c[m>>2]|0)+1244>>2]=c[o>>2];c[s>>2]=(c[m>>2]|0)+1040}b[c[s>>2]>>1]=c[n>>2];b[(c[s>>2]|0)+2>>1]=c[q>>2];a[(c[s>>2]|0)+4|0]=c[r>>2];r=(c[m>>2]|0)+1232|0;c[r>>2]=(c[r>>2]|0)+1;i=l;return}function _u(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b+4|0;e=b;c[d>>2]=a;if((c[(c[d>>2]|0)+32>>2]|c[(c[d>>2]|0)+36>>2]|0)==0){i=b;return}c[e>>2]=$u(c[d>>2]|0)|0;a=(c[e>>2]|0)+8|0;c[a>>2]=(c[a>>2]|0)+(c[(c[d>>2]|0)+32>>2]|0);a=(c[e>>2]|0)+4|0;c[a>>2]=(c[a>>2]|0)+(c[(c[d>>2]|0)+36>>2]|0);i=b;return}function $u(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;i=i+16|0;d=b+12|0;e=b;f=b+4|0;g=b+8|0;c[d>>2]=a;c[g>>2]=c[c[d>>2]>>2];if((c[g>>2]|0)>(c[(c[d>>2]|0)+24>>2]|0)){c[g>>2]=c[(c[d>>2]|0)+24>>2]}c[e>>2]=(c[(c[d>>2]|0)+1420>>2]|0)+(c[(c[d>>2]|0)+4>>2]<<2);while(1){c[f>>2]=c[c[e>>2]>>2];if((c[f>>2]|0)==0){break}if((c[c[f>>2]>>2]|0)>(c[g>>2]|0)){break}if((c[c[f>>2]>>2]|0)==(c[g>>2]|0)){h=11;break}c[e>>2]=(c[f>>2]|0)+12}if((h|0)==11){j=c[f>>2]|0;i=b;return j|0}h=c[d>>2]|0;if((c[(c[d>>2]|0)+52>>2]|0)>=(c[(c[d>>2]|0)+48>>2]|0)){Ea(h+1256|0,1)}a=c[h+44>>2]|0;h=(c[d>>2]|0)+52|0;d=c[h>>2]|0;c[h>>2]=d+1;c[f>>2]=a+(d<<4);c[c[f>>2]>>2]=c[g>>2];c[(c[f>>2]|0)+8>>2]=0;c[(c[f>>2]|0)+4>>2]=0;c[(c[f>>2]|0)+12>>2]=c[c[e>>2]>>2];c[c[e>>2]>>2]=c[f>>2];j=c[f>>2]|0;i=b;return j|0}function av(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d+12|0;f=d;g=d+4|0;h=d+8|0;c[e>>2]=a;c[f>>2]=b;if((c[(c[f>>2]|0)+40>>2]|0)==0){_u(c[f>>2]|0)}c[g>>2]=c[c[e>>2]>>2]<<2;c[h>>2]=c[(c[e>>2]|0)+4>>2]<<2;lv(c[f>>2]|0,c[g>>2]>>8,c[h>>2]>>8);c[(c[f>>2]|0)+64>>2]=c[g>>2];c[(c[f>>2]|0)+68>>2]=c[h>>2];i=d;return 0}function bv(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;gv(c[f>>2]|0,c[c[e>>2]>>2]<<2,c[(c[e>>2]|0)+4>>2]<<2);i=d;return 0}function cv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;jv(c[h>>2]|0,c[f>>2]|0,c[g>>2]|0);i=e;return 0}function dv(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;g=f+12|0;h=f;j=f+4|0;k=f+8|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;ev(c[k>>2]|0,c[g>>2]|0,c[h>>2]|0,c[j>>2]|0);i=f;return 0}function ev(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;f=i;i=i+80|0;g=f+72|0;h=f+68|0;j=f+64|0;k=f+60|0;l=f+56|0;m=f+52|0;n=f+48|0;o=f+44|0;p=f+40|0;q=f+36|0;r=f+12|0;s=f;t=f+4|0;u=f+8|0;v=f+16|0;w=f+20|0;x=f+24|0;y=f+28|0;z=f+32|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;c[l>>2]=(c[g>>2]|0)+76;c[c[l>>2]>>2]=c[c[k>>2]>>2]<<2;c[(c[l>>2]|0)+4>>2]=c[(c[k>>2]|0)+4>>2]<<2;c[(c[l>>2]|0)+8>>2]=c[c[j>>2]>>2]<<2;c[(c[l>>2]|0)+12>>2]=c[(c[j>>2]|0)+4>>2]<<2;c[(c[l>>2]|0)+16>>2]=c[c[h>>2]>>2]<<2;c[(c[l>>2]|0)+20>>2]=c[(c[h>>2]|0)+4>>2]<<2;c[(c[l>>2]|0)+24>>2]=c[(c[g>>2]|0)+64>>2];c[(c[l>>2]|0)+28>>2]=c[(c[g>>2]|0)+68>>2];h=c[(c[l>>2]|0)+4>>2]|0;c[n>>2]=h;c[m>>2]=h;c[o>>2]=c[(c[l>>2]|0)+12>>2];if((c[o>>2]|0)<(c[m>>2]|0)){c[m>>2]=c[o>>2]}if((c[o>>2]|0)>(c[n>>2]|0)){c[n>>2]=c[o>>2]}c[o>>2]=c[(c[l>>2]|0)+20>>2];if((c[o>>2]|0)<(c[m>>2]|0)){c[m>>2]=c[o>>2]}if((c[o>>2]|0)>(c[n>>2]|0)){c[n>>2]=c[o>>2]}c[o>>2]=c[(c[l>>2]|0)+28>>2];if((c[o>>2]|0)<(c[m>>2]|0)){c[m>>2]=c[o>>2]}if((c[o>>2]|0)>(c[n>>2]|0)){c[n>>2]=c[o>>2]}if(!((c[m>>2]>>8|0)<(c[(c[g>>2]|0)+20>>2]|0)?(c[n>>2]>>8|0)>=(c[(c[g>>2]|0)+16>>2]|0):0)){A=24}while(1){if((A|0)==24){A=0;gv(c[g>>2]|0,c[c[l>>2]>>2]|0,c[(c[l>>2]|0)+4>>2]|0);if((c[l>>2]|0)==((c[g>>2]|0)+76|0)){break}c[l>>2]=(c[l>>2]|0)+ -24}c[p>>2]=(c[(c[l>>2]|0)+24>>2]|0)-(c[c[l>>2]>>2]|0);c[q>>2]=(c[(c[l>>2]|0)+28>>2]|0)-(c[(c[l>>2]|0)+4>>2]|0);n=c[p>>2]|0;c[r>>2]=(c[p>>2]|0)<0?0-n|0:n;n=c[q>>2]|0;c[s>>2]=(c[q>>2]|0)<0?0-n|0:n;n=c[r>>2]|0;if((c[r>>2]|0)>(c[s>>2]|0)){B=(n*236|0)+((c[s>>2]|0)*97|0)|0}else{B=(n*97|0)+((c[s>>2]|0)*236|0)|0}c[x>>2]=B>>8;if(((((c[x>>2]|0)<=32767?(c[z>>2]=(c[x>>2]|0)*42,c[t>>2]=(c[(c[l>>2]|0)+8>>2]|0)-(c[c[l>>2]>>2]|0),c[u>>2]=(c[(c[l>>2]|0)+12>>2]|0)-(c[(c[l>>2]|0)+4>>2]|0),n=aa(c[q>>2]|0,c[t>>2]|0)|0,m=(n-(aa(c[p>>2]|0,c[u>>2]|0)|0)|0)<0,n=aa(c[q>>2]|0,c[t>>2]|0)|0,o=n-(aa(c[p>>2]|0,c[u>>2]|0)|0)|0,c[y>>2]=m?0-o|0:o,(c[y>>2]|0)<=(c[z>>2]|0)):0)?(c[v>>2]=(c[(c[l>>2]|0)+16>>2]|0)-(c[c[l>>2]>>2]|0),c[w>>2]=(c[(c[l>>2]|0)+20>>2]|0)-(c[(c[l>>2]|0)+4>>2]|0),o=aa(c[q>>2]|0,c[v>>2]|0)|0,m=(o-(aa(c[p>>2]|0,c[w>>2]|0)|0)|0)<0,o=aa(c[q>>2]|0,c[v>>2]|0)|0,n=o-(aa(c[p>>2]|0,c[w>>2]|0)|0)|0,c[y>>2]=m?0-n|0:n,(c[y>>2]|0)<=(c[z>>2]|0)):0)?(n=aa(c[t>>2]|0,(c[t>>2]|0)-(c[p>>2]|0)|0)|0,(n+(aa(c[u>>2]|0,(c[u>>2]|0)-(c[q>>2]|0)|0)|0)|0)<=0):0)?(n=aa(c[v>>2]|0,(c[v>>2]|0)-(c[p>>2]|0)|0)|0,(n+(aa(c[w>>2]|0,(c[w>>2]|0)-(c[q>>2]|0)|0)|0)|0)<=0):0){A=24;continue}fv(c[l>>2]|0);c[l>>2]=(c[l>>2]|0)+24}i=f;return}function fv(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;i=i+32|0;d=b+16|0;e=b;f=b+4|0;g=b+8|0;h=b+12|0;c[d>>2]=a;c[(c[d>>2]|0)+48>>2]=c[(c[d>>2]|0)+24>>2];c[g>>2]=c[(c[d>>2]|0)+8>>2];c[h>>2]=c[(c[d>>2]|0)+16>>2];a=((c[c[d>>2]>>2]|0)+(c[g>>2]|0)|0)/2|0;c[e>>2]=a;c[(c[d>>2]|0)+8>>2]=a;a=((c[(c[d>>2]|0)+24>>2]|0)+(c[h>>2]|0)|0)/2|0;c[f>>2]=a;c[(c[d>>2]|0)+40>>2]=a;c[g>>2]=((c[g>>2]|0)+(c[h>>2]|0)|0)/2|0;a=((c[e>>2]|0)+(c[g>>2]|0)|0)/2|0;c[e>>2]=a;c[(c[d>>2]|0)+16>>2]=a;a=((c[f>>2]|0)+(c[g>>2]|0)|0)/2|0;c[f>>2]=a;c[(c[d>>2]|0)+32>>2]=a;c[(c[d>>2]|0)+24>>2]=((c[e>>2]|0)+(c[f>>2]|0)|0)/2|0;c[(c[d>>2]|0)+52>>2]=c[(c[d>>2]|0)+28>>2];c[g>>2]=c[(c[d>>2]|0)+12>>2];c[h>>2]=c[(c[d>>2]|0)+20>>2];a=((c[(c[d>>2]|0)+4>>2]|0)+(c[g>>2]|0)|0)/2|0;c[e>>2]=a;c[(c[d>>2]|0)+12>>2]=a;a=((c[(c[d>>2]|0)+28>>2]|0)+(c[h>>2]|0)|0)/2|0;c[f>>2]=a;c[(c[d>>2]|0)+44>>2]=a;c[g>>2]=((c[g>>2]|0)+(c[h>>2]|0)|0)/2|0;h=((c[e>>2]|0)+(c[g>>2]|0)|0)/2|0;c[e>>2]=h;c[(c[d>>2]|0)+20>>2]=h;h=((c[f>>2]|0)+(c[g>>2]|0)|0)/2|0;c[f>>2]=h;c[(c[d>>2]|0)+36>>2]=h;c[(c[d>>2]|0)+28>>2]=((c[e>>2]|0)+(c[f>>2]|0)|0)/2|0;i=b;return}function gv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;e=i;i=i+96|0;f=e+88|0;g=e+84|0;h=e+80|0;j=e+76|0;k=e+72|0;l=e+68|0;m=e+64|0;n=e+60|0;o=e+56|0;p=e+52|0;q=e+48|0;r=e+44|0;s=e+16|0;t=e;u=e+4|0;v=e+8|0;w=e+12|0;x=e+20|0;y=e+24|0;z=e+28|0;A=e+32|0;B=e+36|0;C=e+40|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[j>>2]=c[(c[f>>2]|0)+72>>2]>>8;c[k>>2]=c[h>>2]>>8;c[l>>2]=(c[(c[f>>2]|0)+68>>2]|0)-(c[(c[f>>2]|0)+72>>2]|0);c[m>>2]=(c[h>>2]|0)-(c[k>>2]<<8);c[o>>2]=(c[g>>2]|0)-(c[(c[f>>2]|0)+64>>2]|0);c[p>>2]=(c[h>>2]|0)-(c[(c[f>>2]|0)+68>>2]|0);c[y>>2]=c[j>>2];c[z>>2]=c[k>>2];if((c[j>>2]|0)>(c[k>>2]|0)){c[y>>2]=c[k>>2];c[z>>2]=c[j>>2]}if((c[y>>2]|0)>=(c[(c[f>>2]|0)+20>>2]|0)){D=c[g>>2]|0;E=c[f>>2]|0;F=E+64|0;c[F>>2]=D;G=c[h>>2]|0;H=c[f>>2]|0;I=H+68|0;c[I>>2]=G;J=c[k>>2]|0;K=J<<8;L=c[f>>2]|0;M=L+72|0;c[M>>2]=K;i=e;return}if((c[z>>2]|0)<(c[(c[f>>2]|0)+16>>2]|0)){D=c[g>>2]|0;E=c[f>>2]|0;F=E+64|0;c[F>>2]=D;G=c[h>>2]|0;H=c[f>>2]|0;I=H+68|0;c[I>>2]=G;J=c[k>>2]|0;K=J<<8;L=c[f>>2]|0;M=L+72|0;c[M>>2]=K;i=e;return}if((c[j>>2]|0)==(c[k>>2]|0)){hv(c[f>>2]|0,c[j>>2]|0,c[(c[f>>2]|0)+64>>2]|0,c[l>>2]|0,c[g>>2]|0,c[m>>2]|0);D=c[g>>2]|0;E=c[f>>2]|0;F=E+64|0;c[F>>2]=D;G=c[h>>2]|0;H=c[f>>2]|0;I=H+68|0;c[I>>2]=G;J=c[k>>2]|0;K=J<<8;L=c[f>>2]|0;M=L+72|0;c[M>>2]=K;i=e;return}c[x>>2]=1;if((c[o>>2]|0)==0){c[A>>2]=c[(c[f>>2]|0)+64>>2]>>8;c[B>>2]=(c[(c[f>>2]|0)+64>>2]|0)-(c[A>>2]<<8)<<1;c[t>>2]=256;if((c[p>>2]|0)<0){c[t>>2]=0;c[x>>2]=-1}c[u>>2]=(c[t>>2]|0)-(c[l>>2]|0);z=aa(c[B>>2]|0,c[u>>2]|0)|0;y=(c[f>>2]|0)+32|0;c[y>>2]=(c[y>>2]|0)+z;z=(c[f>>2]|0)+36|0;c[z>>2]=(c[z>>2]|0)+(c[u>>2]|0);c[j>>2]=(c[j>>2]|0)+(c[x>>2]|0);iv(c[f>>2]|0,c[A>>2]|0,c[j>>2]|0);c[u>>2]=(c[t>>2]|0)+(c[t>>2]|0)-256;c[C>>2]=aa(c[B>>2]|0,c[u>>2]|0)|0;while(1){if((c[j>>2]|0)==(c[k>>2]|0)){break}z=(c[f>>2]|0)+32|0;c[z>>2]=(c[z>>2]|0)+(c[C>>2]|0);z=(c[f>>2]|0)+36|0;c[z>>2]=(c[z>>2]|0)+(c[u>>2]|0);c[j>>2]=(c[j>>2]|0)+(c[x>>2]|0);iv(c[f>>2]|0,c[A>>2]|0,c[j>>2]|0)}c[u>>2]=(c[m>>2]|0)-256+(c[t>>2]|0);A=aa(c[B>>2]|0,c[u>>2]|0)|0;B=(c[f>>2]|0)+32|0;c[B>>2]=(c[B>>2]|0)+A;A=(c[f>>2]|0)+36|0;c[A>>2]=(c[A>>2]|0)+(c[u>>2]|0);D=c[g>>2]|0;E=c[f>>2]|0;F=E+64|0;c[F>>2]=D;G=c[h>>2]|0;H=c[f>>2]|0;I=H+68|0;c[I>>2]=G;J=c[k>>2]|0;K=J<<8;L=c[f>>2]|0;M=L+72|0;c[M>>2]=K;i=e;return}c[s>>2]=aa(256-(c[l>>2]|0)|0,c[o>>2]|0)|0;c[t>>2]=256;c[x>>2]=1;if((c[p>>2]|0)<0){c[s>>2]=aa(c[l>>2]|0,c[o>>2]|0)|0;c[t>>2]=0;c[x>>2]=-1;c[p>>2]=0-(c[p>>2]|0)}c[u>>2]=(c[s>>2]|0)/(c[p>>2]|0)|0;c[n>>2]=(c[s>>2]|0)%(c[p>>2]|0)|0;if((c[n>>2]|0)<0){c[u>>2]=(c[u>>2]|0)+ -1;c[n>>2]=(c[n>>2]|0)+(c[p>>2]|0)}c[q>>2]=(c[(c[f>>2]|0)+64>>2]|0)+(c[u>>2]|0);hv(c[f>>2]|0,c[j>>2]|0,c[(c[f>>2]|0)+64>>2]|0,c[l>>2]|0,c[q>>2]|0,c[t>>2]|0);c[j>>2]=(c[j>>2]|0)+(c[x>>2]|0);iv(c[f>>2]|0,c[q>>2]>>8,c[j>>2]|0);a:do{if((c[j>>2]|0)!=(c[k>>2]|0)){c[s>>2]=c[o>>2]<<8;c[w>>2]=(c[s>>2]|0)/(c[p>>2]|0)|0;c[v>>2]=(c[s>>2]|0)%(c[p>>2]|0)|0;if((c[v>>2]|0)<0){c[w>>2]=(c[w>>2]|0)+ -1;c[v>>2]=(c[v>>2]|0)+(c[p>>2]|0)}c[n>>2]=(c[n>>2]|0)-(c[p>>2]|0);while(1){if((c[j>>2]|0)==(c[k>>2]|0)){break a}c[u>>2]=c[w>>2];c[n>>2]=(c[n>>2]|0)+(c[v>>2]|0);if((c[n>>2]|0)>=0){c[n>>2]=(c[n>>2]|0)-(c[p>>2]|0);c[u>>2]=(c[u>>2]|0)+1}c[r>>2]=(c[q>>2]|0)+(c[u>>2]|0);hv(c[f>>2]|0,c[j>>2]|0,c[q>>2]|0,256-(c[t>>2]|0)|0,c[r>>2]|0,c[t>>2]|0);c[q>>2]=c[r>>2];c[j>>2]=(c[j>>2]|0)+(c[x>>2]|0);iv(c[f>>2]|0,c[q>>2]>>8,c[j>>2]|0)}}}while(0);hv(c[f>>2]|0,c[j>>2]|0,c[q>>2]|0,256-(c[t>>2]|0)|0,c[g>>2]|0,c[m>>2]|0);D=c[g>>2]|0;E=c[f>>2]|0;F=E+64|0;c[F>>2]=D;G=c[h>>2]|0;H=c[f>>2]|0;I=H+68|0;c[I>>2]=G;J=c[k>>2]|0;K=J<<8;L=c[f>>2]|0;M=L+72|0;c[M>>2]=K;i=e;return}function hv(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;h=i;i=i+80|0;j=h+68|0;k=h+64|0;l=h+60|0;m=h+56|0;n=h+52|0;o=h+48|0;p=h+44|0;q=h+40|0;r=h+36|0;s=h+32|0;t=h+24|0;u=h+20|0;v=h+16|0;w=h+12|0;x=h+8|0;y=h+4|0;z=h;A=h+28|0;c[j>>2]=a;c[k>>2]=b;c[l>>2]=d;c[m>>2]=e;c[n>>2]=f;c[o>>2]=g;c[x>>2]=(c[n>>2]|0)-(c[l>>2]|0);c[p>>2]=c[l>>2]>>8;c[q>>2]=c[n>>2]>>8;c[r>>2]=(c[l>>2]|0)-(c[p>>2]<<8);c[s>>2]=(c[n>>2]|0)-(c[q>>2]<<8);if((c[m>>2]|0)==(c[o>>2]|0)){iv(c[j>>2]|0,c[q>>2]|0,c[k>>2]|0);i=h;return}if((c[p>>2]|0)==(c[q>>2]|0)){c[t>>2]=(c[o>>2]|0)-(c[m>>2]|0);n=aa((c[r>>2]|0)+(c[s>>2]|0)|0,c[t>>2]|0)|0;l=(c[j>>2]|0)+32|0;c[l>>2]=(c[l>>2]|0)+n;n=(c[j>>2]|0)+36|0;c[n>>2]=(c[n>>2]|0)+(c[t>>2]|0);i=h;return}c[v>>2]=aa(256-(c[r>>2]|0)|0,(c[o>>2]|0)-(c[m>>2]|0)|0)|0;c[w>>2]=256;c[y>>2]=1;if((c[x>>2]|0)<0){c[v>>2]=aa(c[r>>2]|0,(c[o>>2]|0)-(c[m>>2]|0)|0)|0;c[w>>2]=0;c[y>>2]=-1;c[x>>2]=0-(c[x>>2]|0)}c[t>>2]=(c[v>>2]|0)/(c[x>>2]|0)|0;c[u>>2]=(c[v>>2]|0)%(c[x>>2]|0)|0;if((c[u>>2]|0)<0){c[t>>2]=(c[t>>2]|0)+ -1;c[u>>2]=(c[u>>2]|0)+(c[x>>2]|0)}n=aa((c[r>>2]|0)+(c[w>>2]|0)|0,c[t>>2]|0)|0;r=(c[j>>2]|0)+32|0;c[r>>2]=(c[r>>2]|0)+n;n=(c[j>>2]|0)+36|0;c[n>>2]=(c[n>>2]|0)+(c[t>>2]|0);c[p>>2]=(c[p>>2]|0)+(c[y>>2]|0);iv(c[j>>2]|0,c[p>>2]|0,c[k>>2]|0);c[m>>2]=(c[m>>2]|0)+(c[t>>2]|0);a:do{if((c[p>>2]|0)!=(c[q>>2]|0)){c[v>>2]=(c[o>>2]|0)-(c[m>>2]|0)+(c[t>>2]|0)<<8;c[z>>2]=(c[v>>2]|0)/(c[x>>2]|0)|0;c[A>>2]=(c[v>>2]|0)%(c[x>>2]|0)|0;if((c[A>>2]|0)<0){c[z>>2]=(c[z>>2]|0)+ -1;c[A>>2]=(c[A>>2]|0)+(c[x>>2]|0)}c[u>>2]=(c[u>>2]|0)-(c[x>>2]|0);while(1){if((c[p>>2]|0)==(c[q>>2]|0)){break a}c[t>>2]=c[z>>2];c[u>>2]=(c[u>>2]|0)+(c[A>>2]|0);if((c[u>>2]|0)>=0){c[u>>2]=(c[u>>2]|0)-(c[x>>2]|0);c[t>>2]=(c[t>>2]|0)+1}n=(c[j>>2]|0)+32|0;c[n>>2]=(c[n>>2]|0)+(c[t>>2]<<8);n=(c[j>>2]|0)+36|0;c[n>>2]=(c[n>>2]|0)+(c[t>>2]|0);c[m>>2]=(c[m>>2]|0)+(c[t>>2]|0);c[p>>2]=(c[p>>2]|0)+(c[y>>2]|0);iv(c[j>>2]|0,c[p>>2]|0,c[k>>2]|0)}}}while(0);c[t>>2]=(c[o>>2]|0)-(c[m>>2]|0);m=aa((c[s>>2]|0)+256-(c[w>>2]|0)|0,c[t>>2]|0)|0;w=(c[j>>2]|0)+32|0;c[w>>2]=(c[w>>2]|0)+m;m=(c[j>>2]|0)+36|0;c[m>>2]=(c[m>>2]|0)+(c[t>>2]|0);i=h;return}function iv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[h>>2]=(c[h>>2]|0)-(c[(c[f>>2]|0)+16>>2]|0);if((c[g>>2]|0)>(c[(c[f>>2]|0)+12>>2]|0)){c[g>>2]=c[(c[f>>2]|0)+12>>2]}d=(c[g>>2]|0)-(c[(c[f>>2]|0)+8>>2]|0)|0;c[g>>2]=d;c[g>>2]=(c[g>>2]|0)<0?-1:d;if(!((c[g>>2]|0)==(c[c[f>>2]>>2]|0)?(c[h>>2]|0)==(c[(c[f>>2]|0)+4>>2]|0):0)){if((c[(c[f>>2]|0)+40>>2]|0)==0){_u(c[f>>2]|0)}c[(c[f>>2]|0)+32>>2]=0;c[(c[f>>2]|0)+36>>2]=0;c[c[f>>2]>>2]=c[g>>2];c[(c[f>>2]|0)+4>>2]=c[h>>2]}if((c[h>>2]|0)>>>0>=(c[(c[f>>2]|0)+28>>2]|0)>>>0){j=1;k=j&1;l=c[f>>2]|0;m=l+40|0;c[m>>2]=k;i=e;return}j=(c[g>>2]|0)>=(c[(c[f>>2]|0)+24>>2]|0);k=j&1;l=c[f>>2]|0;m=l+40|0;c[m>>2]=k;i=e;return}function jv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=i;i=i+48|0;f=e+44|0;g=e+40|0;h=e+36|0;j=e+32|0;k=e+28|0;l=e+24|0;m=e+20|0;n=e+12|0;o=e+8|0;p=e+4|0;q=e;r=e+16|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[q>>2]=(c[f>>2]|0)+852;c[r>>2]=(c[f>>2]|0)+76;c[c[r>>2]>>2]=c[c[h>>2]>>2]<<2;c[(c[r>>2]|0)+4>>2]=c[(c[h>>2]|0)+4>>2]<<2;c[(c[r>>2]|0)+8>>2]=c[c[g>>2]>>2]<<2;c[(c[r>>2]|0)+12>>2]=c[(c[g>>2]|0)+4>>2]<<2;c[(c[r>>2]|0)+16>>2]=c[(c[f>>2]|0)+64>>2];c[(c[r>>2]|0)+20>>2]=c[(c[f>>2]|0)+68>>2];c[o>>2]=0;g=(c[(c[r>>2]|0)+16>>2]|0)+(c[c[r>>2]>>2]|0)-(c[(c[r>>2]|0)+8>>2]<<1)|0;c[j>>2]=((c[(c[r>>2]|0)+16>>2]|0)+(c[c[r>>2]>>2]|0)-(c[(c[r>>2]|0)+8>>2]<<1)|0)<0?0-g|0:g;g=(c[(c[r>>2]|0)+20>>2]|0)+(c[(c[r>>2]|0)+4>>2]|0)-(c[(c[r>>2]|0)+12>>2]<<1)|0;c[k>>2]=((c[(c[r>>2]|0)+20>>2]|0)+(c[(c[r>>2]|0)+4>>2]|0)-(c[(c[r>>2]|0)+12>>2]<<1)|0)<0?0-g|0:g;if((c[j>>2]|0)<(c[k>>2]|0)){c[j>>2]=c[k>>2]}if((c[j>>2]|0)>=64){k=c[(c[r>>2]|0)+4>>2]|0;c[m>>2]=k;c[l>>2]=k;c[n>>2]=c[(c[r>>2]|0)+12>>2];if((c[n>>2]|0)<(c[l>>2]|0)){c[l>>2]=c[n>>2]}if((c[n>>2]|0)>(c[m>>2]|0)){c[m>>2]=c[n>>2]}c[n>>2]=c[(c[r>>2]|0)+20>>2];if((c[n>>2]|0)<(c[l>>2]|0)){c[l>>2]=c[n>>2]}if((c[n>>2]|0)>(c[m>>2]|0)){c[m>>2]=c[n>>2]}if((c[l>>2]>>8|0)<(c[(c[f>>2]|0)+20>>2]|0)?(c[m>>2]>>8|0)>=(c[(c[f>>2]|0)+16>>2]|0):0){c[p>>2]=0;do{c[j>>2]=c[j>>2]>>2;c[p>>2]=(c[p>>2]|0)+1}while((c[j>>2]|0)>64);c[c[q>>2]>>2]=c[p>>2];s=17}else{s=19}}else{s=19}while(1){if((s|0)==17){s=0;c[p>>2]=c[(c[q>>2]|0)+(c[o>>2]<<2)>>2];if((c[p>>2]|0)<=0){s=19;continue}kv(c[r>>2]|0);c[r>>2]=(c[r>>2]|0)+16;c[o>>2]=(c[o>>2]|0)+1;j=(c[p>>2]|0)-1|0;c[(c[q>>2]|0)+((c[o>>2]|0)-1<<2)>>2]=j;c[(c[q>>2]|0)+(c[o>>2]<<2)>>2]=j}else if((s|0)==19){s=0;gv(c[f>>2]|0,c[c[r>>2]>>2]|0,c[(c[r>>2]|0)+4>>2]|0);c[o>>2]=(c[o>>2]|0)+ -1;c[r>>2]=(c[r>>2]|0)+ -16}if((c[o>>2]|0)>=0){s=17}else{break}}i=e;return}function kv(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;i=i+16|0;d=b+8|0;e=b;f=b+4|0;c[d>>2]=a;c[(c[d>>2]|0)+32>>2]=c[(c[d>>2]|0)+16>>2];c[f>>2]=c[(c[d>>2]|0)+8>>2];a=((c[(c[d>>2]|0)+16>>2]|0)+(c[f>>2]|0)|0)/2|0;c[(c[d>>2]|0)+24>>2]=a;c[e>>2]=a;a=((c[c[d>>2]>>2]|0)+(c[f>>2]|0)|0)/2|0;c[(c[d>>2]|0)+8>>2]=a;c[f>>2]=a;c[(c[d>>2]|0)+16>>2]=((c[e>>2]|0)+(c[f>>2]|0)|0)/2|0;c[(c[d>>2]|0)+36>>2]=c[(c[d>>2]|0)+20>>2];c[f>>2]=c[(c[d>>2]|0)+12>>2];a=((c[(c[d>>2]|0)+20>>2]|0)+(c[f>>2]|0)|0)/2|0;c[(c[d>>2]|0)+28>>2]=a;c[e>>2]=a;a=((c[(c[d>>2]|0)+4>>2]|0)+(c[f>>2]|0)|0)/2|0;c[(c[d>>2]|0)+12>>2]=a;c[f>>2]=a;c[(c[d>>2]|0)+20>>2]=((c[e>>2]|0)+(c[f>>2]|0)|0)/2|0;i=b;return}function lv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;if((c[g>>2]|0)>(c[(c[f>>2]|0)+12>>2]|0)){c[g>>2]=c[(c[f>>2]|0)+12>>2]}if((c[g>>2]|0)<(c[(c[f>>2]|0)+8>>2]|0)){c[g>>2]=(c[(c[f>>2]|0)+8>>2]|0)-1}c[(c[f>>2]|0)+32>>2]=0;c[(c[f>>2]|0)+36>>2]=0;c[c[f>>2]>>2]=(c[g>>2]|0)-(c[(c[f>>2]|0)+8>>2]|0);c[(c[f>>2]|0)+4>>2]=(c[h>>2]|0)-(c[(c[f>>2]|0)+16>>2]|0);c[(c[f>>2]|0)+72>>2]=c[h>>2]<<8;c[(c[f>>2]|0)+40>>2]=0;iv(c[f>>2]|0,c[g>>2]|0,c[h>>2]|0);i=e;return}function mv(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;i=i+16|0;d=b+8|0;e=b;f=b+4|0;c[e>>2]=a;c[f>>2]=c[e>>2];if((zv(c[f>>2]|0)|0)!=0){c[(c[f>>2]|0)+68>>2]=35;c[d>>2]=0;g=c[d>>2]|0;i=b;return g|0}else{c[d>>2]=153;g=c[d>>2]|0;i=b;return g|0}return 0}function nv(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b+4|0;e=b;c[d>>2]=a;c[e>>2]=c[d>>2];if((c[(c[e>>2]|0)+28>>2]|0)==0){i=b;return}gx(c[(c[e>>2]|0)+28>>2]|0)|0;c[(c[e>>2]|0)+28>>2]=0;i=b;return}function ov(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;i=i+32|0;e=d+24|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;k=d+16|0;l=d+20|0;c[f>>2]=a;c[g>>2]=b;c[j>>2]=eo(96360,c[g>>2]|0)|0;if((c[j>>2]|0)!=0){c[e>>2]=c[j>>2];m=c[e>>2]|0;i=d;return m|0}if((c[f>>2]|0)==0){c[e>>2]=0;m=c[e>>2]|0;i=d;return m|0}c[h>>2]=c[(c[f>>2]|0)+4>>2];if((c[h>>2]|0)==0){c[e>>2]=0;m=c[e>>2]|0;i=d;return m|0}c[k>>2]=dp(c[h>>2]|0,95752)|0;if((c[k>>2]|0)!=0?(c[l>>2]=c[(c[c[k>>2]>>2]|0)+20>>2],(c[l>>2]|0)!=0):0){c[e>>2]=Ad[c[(c[l>>2]|0)+16>>2]&127](c[f>>2]|0,c[g>>2]|0)|0;m=c[e>>2]|0;i=d;return m|0}c[e>>2]=0;m=c[e>>2]|0;i=d;return m|0}function pv(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;g=i;i=i+48|0;h=g+36|0;j=g+32|0;k=g+28|0;l=g+24|0;m=g+20|0;n=g+16|0;o=g+8|0;p=g+4|0;q=g;r=g+12|0;c[j>>2]=a;c[k>>2]=b;c[l>>2]=d;c[m>>2]=e;c[n>>2]=f;c[r>>2]=c[k>>2];c[p>>2]=c[(c[(c[k>>2]|0)+96>>2]|0)+4>>2];c[q>>2]=ep(c[p>>2]|0,95752)|0;do{if((c[q>>2]|0)!=0){p=qp(c[j>>2]|0,0)|0;c[o>>2]=p;if((p|0)==0?(c[o>>2]=Bd[c[(c[q>>2]|0)+4>>2]&15](c[j>>2]|0,c[r>>2]|0,c[l>>2]|0,c[m>>2]|0,c[n>>2]|0)|0,c[j>>2]=c[(c[r>>2]|0)+104>>2],(c[o>>2]|0)==0):0){if(((c[(c[r>>2]|0)+148>>2]|0)!=65536?(c[(c[r>>2]|0)+148>>2]|0)!=131072:0)?(c[(c[r>>2]|0)+148>>2]|0)!=1953658213:0){c[o>>2]=2;break}p=(c[k>>2]|0)+8|0;c[p>>2]=c[p>>2]|2048;if((c[l>>2]|0)<0){c[h>>2]=0;s=c[h>>2]|0;i=g;return s|0}c[o>>2]=Bd[c[(c[q>>2]|0)+8>>2]&15](c[j>>2]|0,c[r>>2]|0,c[l>>2]|0,c[m>>2]|0,c[n>>2]|0)|0;if((c[o>>2]|0)==0){if((mx(c[k>>2]|0)|0)<<24>>24!=0){p=(c[k>>2]|0)+8|0;c[p>>2]=c[p>>2]|8192}c[o>>2]=nx(c[r>>2]|0,c[j>>2]|0)|0;if((c[o>>2]|0)==0){if((c[(c[k>>2]|0)+8>>2]&1|0)!=0){if((c[(c[(c[k>>2]|0)+128>>2]|0)+48>>2]|0)==0){c[o>>2]=ox(c[r>>2]|0,c[j>>2]|0)|0}if((c[o>>2]|0)==0){c[o>>2]=px(c[r>>2]|0,c[j>>2]|0)|0}if((c[o>>2]|0)==0){c[o>>2]=qx(c[r>>2]|0,c[j>>2]|0)|0}if((c[o>>2]|0)==0){c[o>>2]=rx(c[r>>2]|0,c[j>>2]|0)|0}if((((c[(c[(c[k>>2]|0)+128>>2]|0)+48>>2]|0)==0?(c[(c[k>>2]|0)+28>>2]|0)!=0:0)?(c[(c[r>>2]|0)+700>>2]|0)!=0:0)?((sx(c[k>>2]|0)|0)&255|0)!=0:0){p=(c[k>>2]|0)+8|0;c[p>>2]=c[p>>2]&-2}}tx(c[r>>2]|0)}}}}else{c[o>>2]=11}}while(0);c[h>>2]=c[o>>2];s=c[h>>2]|0;i=g;return s|0}function qv(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=i;i=i+32|0;d=b+16|0;e=b;f=b+4|0;g=b+8|0;h=b+12|0;c[d>>2]=a;c[e>>2]=c[d>>2];if((c[e>>2]|0)==0){i=b;return}c[f>>2]=c[(c[d>>2]|0)+100>>2];c[g>>2]=c[(c[d>>2]|0)+104>>2];c[h>>2]=c[(c[e>>2]|0)+532>>2];if((c[(c[e>>2]|0)+660>>2]|0)!=0){rd[c[(c[e>>2]|0)+660>>2]&127](c[(c[e>>2]|0)+656>>2]|0)}if((c[h>>2]|0)!=0){rd[c[(c[h>>2]|0)+12>>2]&127](c[e>>2]|0)}jx(c[e>>2]|0);kx(c[e>>2]|0);Vn(c[f>>2]|0,c[(c[e>>2]|0)+648>>2]|0);c[(c[e>>2]|0)+648>>2]=0;c[(c[e>>2]|0)+644>>2]=0;zp(c[g>>2]|0,(c[e>>2]|0)+632|0);zp(c[g>>2]|0,(c[e>>2]|0)+640|0);c[(c[e>>2]|0)+628>>2]=0;c[(c[e>>2]|0)+636>>2]=0;lx(c[f>>2]|0,c[(c[e>>2]|0)+676>>2]|0);c[(c[e>>2]|0)+676>>2]=0;i=b;return}function rv(b){b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d+8|0;f=d;g=d+4|0;c[e>>2]=b;c[f>>2]=c[e>>2];c[g>>2]=0;a[(c[f>>2]|0)+300|0]=0;a[(c[f>>2]|0)+301|0]=0;a[(c[f>>2]|0)+108|0]=0;c[(c[f>>2]|0)+112>>2]=-1;i=d;return c[g>>2]|0}function sv(b){b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=b;c[f>>2]=c[e>>2];if((a[(c[f>>2]|0)+300|0]|0)!=0){hx(c[e>>2]|0)}a[(c[f>>2]|0)+108|0]=0;i=d;return}function tv(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=Xn(c[c[(c[d>>2]|0)+156>>2]>>2]|0)|0;i=b;return a|0}function uv(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=i;i=i+48|0;g=f+32|0;h=f+28|0;j=f+24|0;k=f+20|0;l=f+16|0;m=f+8|0;n=f+4|0;o=f;p=f+12|0;c[h>>2]=a;c[j>>2]=b;c[k>>2]=d;c[l>>2]=e;c[m>>2]=c[h>>2];c[n>>2]=c[j>>2];c[o>>2]=c[(c[h>>2]|0)+4>>2];if((c[m>>2]|0)==0){c[g>>2]=37;q=c[g>>2]|0;i=f;return q|0}if((c[n>>2]|0)==0){c[g>>2]=36;q=c[g>>2]|0;i=f;return q|0}if((c[o>>2]|0)==0){c[g>>2]=6;q=c[g>>2]|0;i=f;return q|0}if((c[k>>2]|0)>>>0>=(c[(c[o>>2]|0)+16>>2]|0)>>>0?(c[(c[(c[o>>2]|0)+128>>2]|0)+48>>2]|0)==0:0){c[g>>2]=6;q=c[g>>2]|0;i=f;return q|0}if((c[l>>2]&2|0)!=0){if((c[(c[o>>2]|0)+8>>2]&8192|0)!=0){c[l>>2]=c[l>>2]&-3}if((c[l>>2]&32768|0)!=0){c[l>>2]=c[l>>2]|2}}if((c[l>>2]&1025|0)!=0?(c[l>>2]=c[l>>2]|9,(c[(c[o>>2]|0)+8>>2]&8192|0)==0):0){c[l>>2]=c[l>>2]|2}c[p>>2]=Mx(c[n>>2]|0,c[m>>2]|0,c[k>>2]|0,c[l>>2]|0)|0;c[g>>2]=c[p>>2];q=c[g>>2]|0;i=f;return q|0}function vv(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+32|0;g=f+20|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;m=f+16|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;c[l>>2]=c[g>>2];c[m>>2]=c[(c[l>>2]|0)+532>>2];c[c[k>>2]>>2]=0;c[(c[k>>2]|0)+4>>2]=0;if((c[m>>2]|0)==0){i=f;return 0}g=md[c[(c[m>>2]|0)+84>>2]&63](c[l>>2]|0,c[h>>2]|0,c[j>>2]|0)|0;c[c[k>>2]>>2]=g;i=f;return 0}function wv(a,b,d,f,g){a=a|0;b=b|0;d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;h=i;i=i+48|0;j=h+4|0;k=h+24|0;l=h+20|0;m=h+8|0;n=h+12|0;o=h+16|0;p=h;q=h+34|0;r=h+28|0;s=h+30|0;t=h+32|0;c[j>>2]=a;c[k>>2]=b;c[l>>2]=d;c[m>>2]=f;c[n>>2]=g;c[p>>2]=c[j>>2];j=(c[m>>2]&16|0)!=0;c[o>>2]=0;if(j){while(1){if(!((c[o>>2]|0)>>>0<(c[l>>2]|0)>>>0)){break}Kx(c[p>>2]|0,(c[k>>2]|0)+(c[o>>2]|0)|0,0,q,r);c[(c[n>>2]|0)+(c[o>>2]<<2)>>2]=e[r>>1]|0;c[o>>2]=(c[o>>2]|0)+1}i=h;return 0}else{while(1){if(!((c[o>>2]|0)>>>0<(c[l>>2]|0)>>>0)){break}Lx(c[p>>2]|0,(c[k>>2]|0)+(c[o>>2]|0)|0,s,t);c[(c[n>>2]|0)+(c[o>>2]<<2)>>2]=e[t>>1]|0;c[o>>2]=(c[o>>2]|0)+1}i=h;return 0}return 0}function xv(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+32|0;e=d+28|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;k=d+16|0;l=d+20|0;m=d+24|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=c[f>>2];c[j>>2]=0;do{if((c[(c[c[f>>2]>>2]|0)+8>>2]&2|0)!=0){c[k>>2]=c[c[f>>2]>>2];c[l>>2]=c[(c[k>>2]|0)+532>>2];c[j>>2]=md[c[(c[l>>2]|0)+104>>2]&63](c[k>>2]|0,c[g>>2]|0,m)|0;if((c[j>>2]|0)!=0){c[(c[h>>2]|0)+112>>2]=-1;break}c[e>>2]=yv(c[f>>2]|0,c[m>>2]|0)|0;n=c[e>>2]|0;i=d;return n|0}}while(0);Po(c[c[f>>2]>>2]|0,c[g>>2]|0);if((c[(c[c[f>>2]>>2]|0)+8>>2]&1|0)!=0){c[j>>2]=Jx(c[h>>2]|0)|0;f=(c[h>>2]|0)+12|0;g=(c[h>>2]|0)+44|0;c[f+0>>2]=c[g+0>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];c[f+12>>2]=c[g+12>>2];c[f+16>>2]=c[g+16>>2];c[f+20>>2]=c[g+20>>2];c[f+24>>2]=c[g+24>>2]}c[e>>2]=c[j>>2];n=c[e>>2]|0;i=d;return n|0}function yv(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;i=i+32|0;e=d+24|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;k=d+16|0;l=d+20|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=c[c[e>>2]>>2];c[h>>2]=c[e>>2];c[j>>2]=0;c[(c[h>>2]|0)+112>>2]=c[f>>2];if((c[(c[c[e>>2]>>2]|0)+8>>2]&1|0)!=0){No(c[c[e>>2]>>2]|0,c[f>>2]|0);Jx(c[h>>2]|0)|0;m=c[j>>2]|0;i=d;return m|0}c[k>>2]=c[(c[g>>2]|0)+532>>2];c[l>>2]=(c[e>>2]|0)+12;c[j>>2]=md[c[(c[k>>2]|0)+108>>2]&63](c[g>>2]|0,c[f>>2]|0,c[l>>2]|0)|0;if((c[j>>2]|0)==0){m=c[j>>2]|0;i=d;return m|0}c[(c[h>>2]|0)+112>>2]=-1;m=c[j>>2]|0;i=d;return m|0}function zv(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;i=i+32|0;d=b+16|0;e=b;f=b+4|0;g=b+8|0;h=b+12|0;c[e>>2]=a;c[f>>2]=c[(c[e>>2]|0)+8>>2];do{if((c[(c[e>>2]|0)+28>>2]|0)==0){c[h>>2]=Sn(c[f>>2]|0,608,g)|0;if((c[g>>2]|0)==0?(c[g>>2]=Av(c[h>>2]|0,c[f>>2]|0)|0,(c[g>>2]|0)==0):0){c[(c[e>>2]|0)+28>>2]=c[h>>2];break}c[d>>2]=0;j=c[d>>2]|0;i=b;return j|0}}while(0);c[d>>2]=c[(c[e>>2]|0)+28>>2];j=c[d>>2]|0;i=b;return j|0}function Av(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+16|0;f=e+12|0;g=e;h=e+4|0;j=e+8|0;c[g>>2]=a;c[h>>2]=d;c[(c[g>>2]|0)+8>>2]=c[h>>2];c[(c[g>>2]|0)+432>>2]=32;d=Yn(c[h>>2]|0,16,0,c[(c[g>>2]|0)+432>>2]|0,0,j)|0;c[(c[g>>2]|0)+436>>2]=d;d=c[g>>2]|0;if((c[j>>2]|0)!=0){gx(d)|0;c[f>>2]=c[j>>2];k=c[f>>2]|0;i=e;return k|0}else{b[d+440>>1]=0;b[(c[g>>2]|0)+442>>1]=0;c[(c[g>>2]|0)+20>>2]=0;c[(c[g>>2]|0)+388>>2]=0;c[(c[g>>2]|0)+24>>2]=0;c[(c[g>>2]|0)+392>>2]=0;c[c[g>>2]>>2]=0;c[(c[g>>2]|0)+4>>2]=0;c[f>>2]=0;k=c[f>>2]|0;i=e;return k|0}return 0}function Bv(f){f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;g=i;i=i+96|0;h=g+68|0;j=g+56|0;k=g+60|0;l=g+74|0;m=g+64|0;n=g+82|0;o=g+76|0;p=g+78|0;q=g+80|0;r=g+52|0;s=g+48|0;t=g+72|0;u=g+44|0;v=g+16|0;w=g;x=g+4|0;y=g+8|0;z=g+12|0;A=g+20|0;B=g+24|0;C=g+28|0;D=g+32|0;E=g+36|0;F=g+40|0;c[j>>2]=f;c[k>>2]=0;c[(c[j>>2]|0)+256>>2]=0;f=(c[j>>2]|0)+592|0;if((e[(c[j>>2]|0)+216>>1]|0)!=(e[(c[j>>2]|0)+218>>1]|0)){c[f>>2]=107;c[(c[j>>2]|0)+596>>2]=22;c[(c[j>>2]|0)+600>>2]=23}else{c[f>>2]=108;c[(c[j>>2]|0)+596>>2]=24;c[(c[j>>2]|0)+600>>2]=25}Iv(c[j>>2]|0);Jv(c[j>>2]|0,c[(c[j>>2]|0)+312>>2]&255);a:while(1){a[(c[j>>2]|0)+368|0]=a[(c[(c[j>>2]|0)+356>>2]|0)+(c[(c[j>>2]|0)+360>>2]|0)|0]|0;f=a[95240+(d[(c[j>>2]|0)+368|0]|0)|0]|0;c[(c[j>>2]|0)+372>>2]=f;if((f|0)<0){if(((c[(c[j>>2]|0)+360>>2]|0)+1|0)>=(c[(c[j>>2]|0)+364>>2]|0)){G=218;break}f=2-(aa(c[(c[j>>2]|0)+372>>2]|0,d[(c[(c[j>>2]|0)+356>>2]|0)+((c[(c[j>>2]|0)+360>>2]|0)+1)|0]|0)|0)|0;c[(c[j>>2]|0)+372>>2]=f}if(((c[(c[j>>2]|0)+360>>2]|0)+(c[(c[j>>2]|0)+372>>2]|0)|0)>(c[(c[j>>2]|0)+364>>2]|0)){G=218;break}c[(c[j>>2]|0)+28>>2]=(c[(c[j>>2]|0)+16>>2]|0)-(d[95496+(d[(c[j>>2]|0)+368|0]|0)|0]>>4);if((c[(c[j>>2]|0)+28>>2]|0)<0){if((a[(c[j>>2]|0)+561|0]|0)!=0){G=11;break}b[l>>1]=0;while(1){if((e[l>>1]|0)>=(d[95496+(d[(c[j>>2]|0)+368|0]|0)|0]>>4|0)){break}c[(c[(c[j>>2]|0)+24>>2]|0)+(e[l>>1]<<2)>>2]=0;b[l>>1]=(b[l>>1]|0)+1<<16>>16}c[(c[j>>2]|0)+28>>2]=0}c[(c[j>>2]|0)+32>>2]=(c[(c[j>>2]|0)+28>>2]|0)+(a[95496+(d[(c[j>>2]|0)+368|0]|0)|0]&15);H=c[j>>2]|0;if((c[(c[j>>2]|0)+32>>2]|0)>>>0>(c[(c[j>>2]|0)+20>>2]|0)>>>0){G=17;break}a[H+376|0]=1;c[(c[j>>2]|0)+12>>2]=0;c[m>>2]=(c[(c[j>>2]|0)+24>>2]|0)+(c[(c[j>>2]|0)+28>>2]<<2);a[n]=a[(c[j>>2]|0)+368|0]|0;b:do{switch(d[n]|0){case 122:{c[(c[j>>2]|0)+312>>2]=5;c[(c[j>>2]|0)+568>>2]=42;break};case 14:{f=(c[j>>2]|0)+298|0;I=(c[j>>2]|0)+294|0;b[f+0>>1]=b[I+0>>1]|0;b[f+2>>1]=b[I+2>>1]|0;Iv(c[j>>2]|0);break};case 120:{if((c[(c[m>>2]|0)+4>>2]|0)!=0){if((c[c[m>>2]>>2]|0)==0?(c[(c[j>>2]|0)+28>>2]|0)==0:0){c[(c[j>>2]|0)+12>>2]=132}I=(c[j>>2]|0)+360|0;c[I>>2]=(c[I>>2]|0)+(c[c[m>>2]>>2]|0);if((c[(c[j>>2]|0)+360>>2]|0)>=0){if((c[(c[j>>2]|0)+428>>2]|0)>0?(c[(c[j>>2]|0)+360>>2]|0)>(c[(c[(c[(c[j>>2]|0)+436>>2]|0)+((c[(c[j>>2]|0)+428>>2]|0)-1<<4)+12>>2]|0)+8>>2]|0):0){G=158}}else{G=158}if((G|0)==158){G=0;c[(c[j>>2]|0)+12>>2]=132}a[(c[j>>2]|0)+376|0]=0}break};case 127:case 126:case 89:case 33:{break};case 10:{b[q>>1]=c[(c[m>>2]|0)+4>>2];c[s>>2]=b[q>>1]|0;b[q>>1]=c[c[m>>2]>>2];c[r>>2]=b[q>>1]|0;Lv(c[j>>2]|0,c[r>>2]|0,c[s>>2]|0,(c[j>>2]|0)+294|0)|0;I=(c[j>>2]|0)+290|0;f=(c[j>>2]|0)+294|0;b[I+0>>1]=b[f+0>>1]|0;b[I+2>>1]=b[f+2>>1]|0;Iv(c[j>>2]|0);break};case 139:{if((c[(c[m>>2]|0)+4>>2]|0)>(c[c[m>>2]>>2]|0)){c[c[m>>2]>>2]=c[(c[m>>2]|0)+4>>2]}break};case 128:{Aw(c[j>>2]|0,c[m>>2]|0);break};case 135:case 134:{Ew(c[j>>2]|0,c[m>>2]|0);break};case 138:{Hw(c[j>>2]|0,c[m>>2]|0);break};case 16:{b[(c[j>>2]|0)+284>>1]=c[c[m>>2]>>2];break};case 129:{Bw(c[j>>2]|0,c[m>>2]|0);break};case 123:{Wv(c[j>>2]|0,c[m>>2]|0);break};case 12:{c[c[m>>2]>>2]=b[(c[j>>2]|0)+294>>1]|0;c[(c[m>>2]|0)+4>>2]=b[(c[j>>2]|0)+296>>1]|0;break};case 142:{Jw(c[j>>2]|0,c[m>>2]|0);break};case 130:{Cw(c[j>>2]|0,c[m>>2]|0);break};case 25:{c[(c[j>>2]|0)+312>>2]=0;c[(c[j>>2]|0)+568>>2]=38;break};case 24:{c[(c[j>>2]|0)+312>>2]=1;c[(c[j>>2]|0)+568>>2]=37;break};case 20:{Ov(c[j>>2]|0,c[m>>2]|0);break};case 15:{Mv(c[j>>2]|0,c[m>>2]|0);break};case 143:{Wv(c[j>>2]|0,c[m>>2]|0);break};case 132:case 131:{Wv(c[j>>2]|0,c[m>>2]|0);break};case 119:{vw(c[j>>2]|0,11585,c[c[m>>2]>>2]|0);c[(c[j>>2]|0)+312>>2]=7;c[(c[j>>2]|0)+568>>2]=41;break};case 11:{b[t>>1]=c[(c[m>>2]|0)+4>>2];c[v>>2]=b[t>>1]|0;b[t>>1]=c[c[m>>2]>>2];c[u>>2]=b[t>>1]|0;Lv(c[j>>2]|0,c[u>>2]|0,c[v>>2]|0,(c[j>>2]|0)+298|0)|0;Iv(c[j>>2]|0);break};case 13:{c[c[m>>2]>>2]=b[(c[j>>2]|0)+298>>1]|0;c[(c[m>>2]|0)+4>>2]=b[(c[j>>2]|0)+300>>1]|0;break};case 18:{b[(c[j>>2]|0)+288>>1]=c[c[m>>2]>>2];break};case 133:{Dw(c[j>>2]|0,c[m>>2]|0);break};case 26:{c[(c[j>>2]|0)+308>>2]=c[c[m>>2]>>2];break};case 121:{if((c[(c[m>>2]|0)+4>>2]|0)==0){if((c[c[m>>2]>>2]|0)==0?(c[(c[j>>2]|0)+28>>2]|0)==0:0){c[(c[j>>2]|0)+12>>2]=132}f=(c[j>>2]|0)+360|0;c[f>>2]=(c[f>>2]|0)+(c[c[m>>2]>>2]|0);if((c[(c[j>>2]|0)+360>>2]|0)>=0){if((c[(c[j>>2]|0)+428>>2]|0)>0?(c[(c[j>>2]|0)+360>>2]|0)>(c[(c[(c[(c[j>>2]|0)+436>>2]|0)+((c[(c[j>>2]|0)+428>>2]|0)-1<<4)+12>>2]|0)+8>>2]|0):0){G=167}}else{G=167}if((G|0)==167){G=0;c[(c[j>>2]|0)+12>>2]=132}a[(c[j>>2]|0)+376|0]=0}break};case 137:{Gw(c[j>>2]|0,c[m>>2]|0);break};case 136:{Fw(c[j>>2]|0,c[m>>2]|0);break};case 140:{if((c[(c[m>>2]|0)+4>>2]|0)<(c[c[m>>2]>>2]|0)){c[c[m>>2]>>2]=c[(c[m>>2]|0)+4>>2]}break};case 141:{Iw(c[j>>2]|0,c[m>>2]|0);break};case 28:{if((c[c[m>>2]>>2]|0)==0?(c[(c[j>>2]|0)+28>>2]|0)==0:0){c[(c[j>>2]|0)+12>>2]=132}f=(c[j>>2]|0)+360|0;c[f>>2]=(c[f>>2]|0)+(c[c[m>>2]>>2]|0);if((c[(c[j>>2]|0)+360>>2]|0)>=0){if((c[(c[j>>2]|0)+428>>2]|0)>0?(c[(c[j>>2]|0)+360>>2]|0)>(c[(c[(c[(c[j>>2]|0)+436>>2]|0)+((c[(c[j>>2]|0)+428>>2]|0)-1<<4)+12>>2]|0)+8>>2]|0):0){G=54}}else{G=54}if((G|0)==54){G=0;c[(c[j>>2]|0)+12>>2]=132}a[(c[j>>2]|0)+376|0]=0;break};case 27:{Tv(c[j>>2]|0,c[m>>2]|0);break};case 36:{c[c[m>>2]>>2]=c[(c[j>>2]|0)+16>>2];break};case 21:{Pv(c[j>>2]|0,c[m>>2]|0);break};case 17:{b[(c[j>>2]|0)+286>>1]=c[c[m>>2]>>2];break};case 35:{c[w>>2]=c[c[m>>2]>>2];c[c[m>>2]>>2]=c[(c[m>>2]|0)+4>>2];c[(c[m>>2]|0)+4>>2]=c[w>>2];break};case 37:{c[x>>2]=c[c[m>>2]>>2];if((c[x>>2]|0)>0?(c[x>>2]|0)<=(c[(c[j>>2]|0)+28>>2]|0):0){c[c[m>>2]>>2]=c[(c[(c[j>>2]|0)+24>>2]|0)+((c[(c[j>>2]|0)+28>>2]|0)-(c[x>>2]|0)<<2)>>2];break b}if((a[(c[j>>2]|0)+561|0]|0)!=0){c[(c[j>>2]|0)+12>>2]=134}c[c[m>>2]>>2]=0;break};case 19:{Nv(c[j>>2]|0,c[m>>2]|0);break};case 30:{c[(c[j>>2]|0)+324>>2]=c[c[m>>2]>>2];break};case 38:{Uv(c[j>>2]|0,c[m>>2]|0);break};case 5:case 4:case 3:case 2:case 1:case 0:{b[o>>1]=(a[n]&1)<<14;b[p>>1]=b[o>>1]^16384;if((d[n]|0)<4){b[(c[j>>2]|0)+294>>1]=b[o>>1]|0;b[(c[j>>2]|0)+296>>1]=b[p>>1]|0;b[(c[j>>2]|0)+290>>1]=b[o>>1]|0;b[(c[j>>2]|0)+292>>1]=b[p>>1]|0}if((a[n]&2|0)==0){b[(c[j>>2]|0)+298>>1]=b[o>>1]|0;b[(c[j>>2]|0)+300>>1]=b[p>>1]|0}Iv(c[j>>2]|0);break};case 31:{f=Nn(c[c[m>>2]>>2]|0,c[(c[j>>2]|0)+260>>2]|0)|0;c[(c[j>>2]|0)+328>>2]=f;break};case 23:{if((c[c[m>>2]>>2]|0)<0){c[(c[j>>2]|0)+12>>2]=132;break b}else{c[(c[j>>2]|0)+304>>2]=c[c[m>>2]>>2];break b}break};case 7:case 6:{if(((Kv(c[j>>2]|0,c[(c[m>>2]|0)+4>>2]&65535,c[c[m>>2]>>2]&65535,d[(c[j>>2]|0)+368|0]|0,(c[j>>2]|0)+294|0)|0)&255|0)==0){f=(c[j>>2]|0)+290|0;I=(c[j>>2]|0)+294|0;b[f+0>>1]=b[I+0>>1]|0;b[f+2>>1]=b[I+2>>1]|0;Iv(c[j>>2]|0)}break};case 34:{c[(c[j>>2]|0)+32>>2]=0;break};case 9:case 8:{if(((Kv(c[j>>2]|0,c[(c[m>>2]|0)+4>>2]&65535,c[c[m>>2]>>2]&65535,d[(c[j>>2]|0)+368|0]|0,(c[j>>2]|0)+298|0)|0)&255|0)==0){Iv(c[j>>2]|0)}break};case 29:{c[(c[j>>2]|0)+320>>2]=c[c[m>>2]>>2];break};case 32:{c[(c[m>>2]|0)+4>>2]=c[c[m>>2]>>2];break};case 40:{Wv(c[j>>2]|0,c[m>>2]|0);break};case 41:{Xv(c[j>>2]|0,c[m>>2]|0);break};case 42:{Yv(c[j>>2]|0,c[m>>2]|0);break};case 43:{Zv(c[j>>2]|0,c[m>>2]|0);break};case 47:case 46:{aw(c[j>>2]|0,c[m>>2]|0);break};case 45:{$v(c[j>>2]|0,c[m>>2]|0);break};case 49:case 48:{bw(c[j>>2]|0,c[m>>2]|0);break};case 51:case 50:{cw(c[j>>2]|0,c[m>>2]|0);break};case 65:{mw(c[j>>2]|0,c[m>>2]|0);break};case 117:case 116:case 115:{uw(c[j>>2]|0,c[m>>2]|0);break};case 107:case 106:case 105:case 104:{I=md[c[(c[j>>2]|0)+568>>2]&63](c[j>>2]|0,c[c[m>>2]>>2]|0,c[(c[j>>2]|0)+264+((d[(c[j>>2]|0)+368|0]|0)-104<<2)>>2]|0)|0;c[c[m>>2]>>2]=I;break};case 77:{a[(c[j>>2]|0)+316|0]=1;break};case 98:{if((c[(c[m>>2]|0)+4>>2]|0)==0){c[(c[j>>2]|0)+12>>2]=133;break b}else{I=Mn(c[c[m>>2]>>2]|0,64,c[(c[m>>2]|0)+4>>2]|0)|0;c[c[m>>2]>>2]=I;break b}break};case 103:{c[c[m>>2]>>2]=(c[c[m>>2]>>2]|0)+63&-64;break};case 118:{vw(c[j>>2]|0,16384,c[c[m>>2]>>2]|0);c[(c[j>>2]|0)+312>>2]=6;c[(c[j>>2]|0)+568>>2]=40;break};case 87:{I=((md[c[(c[j>>2]|0)+568>>2]&63](c[j>>2]|0,c[c[m>>2]>>2]|0,0)|0)&127|0)==0|0;c[c[m>>2]>>2]=I;break};case 67:{c[z>>2]=c[c[m>>2]>>2];if(!((c[z>>2]|0)>>>0>=(e[(c[j>>2]|0)+468>>1]|0)>>>0)){c[c[m>>2]>>2]=c[(c[(c[j>>2]|0)+472>>2]|0)+(c[z>>2]<<2)>>2];break b}if((a[(c[j>>2]|0)+561|0]|0)!=0){G=93}else{c[c[m>>2]>>2]=0}break};case 66:{c[y>>2]=c[c[m>>2]>>2];if((c[y>>2]|0)>>>0>=(e[(c[j>>2]|0)+468>>1]|0)>>>0){if((a[(c[j>>2]|0)+561|0]|0)!=0){G=93;break b}else{break b}}else{c[(c[(c[j>>2]|0)+472>>2]|0)+(c[y>>2]<<2)>>2]=c[(c[m>>2]|0)+4>>2];break b}break};case 72:{ow(c[j>>2]|0,c[m>>2]|0);break};case 64:{lw(c[j>>2]|0,c[m>>2]|0);break};case 102:{c[c[m>>2]>>2]=c[c[m>>2]>>2]&-64;break};case 71:case 70:{nw(c[j>>2]|0,c[m>>2]|0);break};case 99:{I=In(c[c[m>>2]>>2]|0,c[(c[m>>2]|0)+4>>2]|0,64)|0;c[c[m>>2]>>2]=I;break};case 68:{c[A>>2]=c[c[m>>2]>>2];I=c[j>>2]|0;if((c[A>>2]|0)>>>0>=(c[(c[j>>2]|0)+380>>2]|0)>>>0){if((a[I+561|0]|0)!=0){G=93;break b}else{break b}}else{wd[c[I+596>>2]&31](c[j>>2]|0,c[A>>2]|0,c[(c[m>>2]|0)+4>>2]|0);break b}break};case 75:{I=qw(c[j>>2]|0)|0;c[c[m>>2]>>2]=I;break};case 114:case 113:{sw(c[j>>2]|0,c[m>>2]|0);break};case 101:{c[c[m>>2]>>2]=0-(c[c[m>>2]>>2]|0);break};case 83:{c[c[m>>2]>>2]=(c[c[m>>2]>>2]|0)>=(c[(c[m>>2]|0)+4>>2]|0);break};case 88:{rw(c[j>>2]|0,c[m>>2]|0);break};case 74:case 73:{pw(c[j>>2]|0,c[m>>2]|0);break};case 86:{I=((md[c[(c[j>>2]|0)+568>>2]&63](c[j>>2]|0,c[c[m>>2]>>2]|0,0)|0)&127|0)==64|0;c[c[m>>2]>>2]=I;break};case 97:{I=c[m>>2]|0;c[I>>2]=(c[I>>2]|0)-(c[(c[m>>2]|0)+4>>2]|0);break};case 63:case 62:{kw(c[j>>2]|0,c[m>>2]|0);break};case 92:{c[c[m>>2]>>2]=((c[c[m>>2]>>2]|0)!=0^1)&1;break};case 90:{if((c[c[m>>2]>>2]|0)!=0){J=(c[(c[m>>2]|0)+4>>2]|0)!=0}else{J=0}c[c[m>>2]>>2]=J&1;break};case 69:{c[B>>2]=c[c[m>>2]>>2];I=c[j>>2]|0;if(!((c[B>>2]|0)>>>0>=(c[(c[j>>2]|0)+380>>2]|0)>>>0)){f=Ad[c[I+592>>2]&127](c[j>>2]|0,c[B>>2]|0)|0;c[c[m>>2]>>2]=f;break b}if((a[I+561|0]|0)!=0){G=93}else{c[c[m>>2]>>2]=0}break};case 91:{if((c[c[m>>2]>>2]|0)!=0){K=1}else{K=(c[(c[m>>2]|0)+4>>2]|0)!=0}c[c[m>>2]>>2]=K&1;break};case 93:{sw(c[j>>2]|0,c[m>>2]|0);break};case 95:{b[(c[j>>2]|0)+334>>1]=c[c[m>>2]>>2];break};case 81:{c[c[m>>2]>>2]=(c[c[m>>2]>>2]|0)<=(c[(c[m>>2]|0)+4>>2]|0);break};case 112:{c[C>>2]=c[c[m>>2]>>2];if((c[C>>2]|0)>>>0>=(c[(c[j>>2]|0)+380>>2]|0)>>>0){if((a[(c[j>>2]|0)+561|0]|0)!=0){G=93;break b}else{break b}}else{I=Nn(c[(c[m>>2]|0)+4>>2]|0,c[(c[j>>2]|0)+260>>2]|0)|0;c[(c[(c[j>>2]|0)+384>>2]|0)+(c[C>>2]<<2)>>2]=I;break b}break};case 76:{I=qw(c[j>>2]|0)|0;c[c[m>>2]>>2]=I;break};case 100:{I=c[c[m>>2]>>2]|0;c[c[m>>2]>>2]=(c[c[m>>2]>>2]|0)<0?0-I|0:I;break};case 111:case 110:case 109:case 108:{I=tw(c[j>>2]|0,c[c[m>>2]>>2]|0,c[(c[j>>2]|0)+264+((d[(c[j>>2]|0)+368|0]|0)-108<<2)>>2]|0)|0;c[c[m>>2]>>2]=I;break};case 61:{c[(c[j>>2]|0)+312>>2]=2;c[(c[j>>2]|0)+568>>2]=39;break};case 60:{iw(c[j>>2]|0,c[m>>2]|0);break};case 59:case 58:{hw(c[j>>2]|0,c[m>>2]|0);break};case 57:{gw(c[j>>2]|0,c[m>>2]|0);break};case 56:{fw(c[j>>2]|0,c[m>>2]|0);break};case 125:{c[(c[j>>2]|0)+312>>2]=3;c[(c[j>>2]|0)+568>>2]=44;break};case 124:{c[(c[j>>2]|0)+312>>2]=4;c[(c[j>>2]|0)+568>>2]=43;break};case 39:{Vv(c[j>>2]|0,c[m>>2]|0);break};case 22:{Qv(c[j>>2]|0,c[m>>2]|0);break};case 44:{_v(c[j>>2]|0,c[m>>2]|0);break};case 94:{b[(c[j>>2]|0)+332>>1]=c[c[m>>2]>>2];break};case 84:{c[c[m>>2]>>2]=(c[c[m>>2]>>2]|0)==(c[(c[m>>2]|0)+4>>2]|0);break};case 85:{c[c[m>>2]>>2]=(c[c[m>>2]>>2]|0)!=(c[(c[m>>2]|0)+4>>2]|0);break};case 53:case 52:{dw(c[j>>2]|0,c[m>>2]|0);break};case 55:case 54:{ew(c[j>>2]|0,c[m>>2]|0);break};case 82:{c[c[m>>2]>>2]=(c[c[m>>2]>>2]|0)>(c[(c[m>>2]|0)+4>>2]|0);break};case 78:{a[(c[j>>2]|0)+316|0]=0;break};case 96:{I=c[m>>2]|0;c[I>>2]=(c[I>>2]|0)+(c[(c[m>>2]|0)+4>>2]|0);break};case 79:{c[(c[j>>2]|0)+12>>2]=135;break};case 80:{c[c[m>>2]>>2]=(c[c[m>>2]>>2]|0)<(c[(c[m>>2]|0)+4>>2]|0);break};default:{if((d[n]|0)>=224){Kw(c[j>>2]|0,c[m>>2]|0);break b}if((d[n]|0)>=192){Lw(c[j>>2]|0,c[m>>2]|0);break b}if((d[n]|0)>=184){Mw(c[j>>2]|0,c[m>>2]|0);break b}I=c[j>>2]|0;f=c[m>>2]|0;if((d[n]|0)>=176){Nw(I,f);break b}else{Wv(I,f);break b}}}}while(0);if((G|0)==93){G=0;c[(c[j>>2]|0)+12>>2]=134}f=c[j>>2]|0;if((c[(c[j>>2]|0)+12>>2]|0)!=0){if((c[f+12>>2]|0)!=128){break}c[D>>2]=c[(c[j>>2]|0)+416>>2];c[E>>2]=(c[D>>2]|0)+((c[(c[j>>2]|0)+408>>2]|0)*24|0);while(1){if(!((c[D>>2]|0)>>>0<(c[E>>2]|0)>>>0)){G=208;break a}if((d[(c[D>>2]|0)+16|0]|0)!=0?(d[(c[j>>2]|0)+368|0]|0)==(c[(c[D>>2]|0)+12>>2]&255|0):0){break}c[D>>2]=(c[D>>2]|0)+24}L=c[j>>2]|0;if((c[(c[j>>2]|0)+428>>2]|0)>=(c[(c[j>>2]|0)+432>>2]|0)){G=205;break}c[F>>2]=(c[(c[j>>2]|0)+436>>2]|0)+(c[L+428>>2]<<4);c[c[F>>2]>>2]=c[(c[j>>2]|0)+352>>2];c[(c[F>>2]|0)+4>>2]=(c[(c[j>>2]|0)+360>>2]|0)+1;c[(c[F>>2]|0)+8>>2]=1;c[(c[F>>2]|0)+12>>2]=c[D>>2];if(((Ow(c[j>>2]|0,c[c[D>>2]>>2]|0,c[(c[D>>2]|0)+4>>2]|0)|0)&255|0)==1){break}}else{c[(c[j>>2]|0)+16>>2]=c[f+32>>2];if((a[(c[j>>2]|0)+376|0]|0)!=0){I=(c[j>>2]|0)+360|0;c[I>>2]=(c[I>>2]|0)+(c[(c[j>>2]|0)+372>>2]|0)}I=(c[k>>2]|0)+1|0;c[k>>2]=I;if((I|0)>1e6){G=212;break}}M=c[j>>2]|0;if((c[(c[j>>2]|0)+360>>2]|0)>=(c[(c[j>>2]|0)+364>>2]|0)){G=214;break}if(!((a[M+488|0]|0)!=0^1)){G=217;break}}if((G|0)==11){c[(c[j>>2]|0)+12>>2]=129}else if((G|0)==17){c[H+12>>2]=130}else if((G|0)==205){c[L+12>>2]=134}else if((G|0)==208){c[(c[j>>2]|0)+12>>2]=128}else if((G|0)==212){c[h>>2]=139;N=c[h>>2]|0;i=g;return N|0}else if((G|0)==214){if((c[M+428>>2]|0)>0){c[(c[j>>2]|0)+12>>2]=131}else{G=217}}else if((G|0)==218){c[(c[j>>2]|0)+12>>2]=131}if((G|0)==217){c[h>>2]=0;N=c[h>>2]|0;i=g;return N|0}if((c[(c[j>>2]|0)+12>>2]|0)!=0?(a[(c[j>>2]|0)+488|0]|0)==0:0){a[(c[(c[j>>2]|0)+4>>2]|0)+301|0]=0}c[h>>2]=c[(c[j>>2]|0)+12>>2];N=c[h>>2]|0;i=g;return N|0}function Cv(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;b=c[(c[(c[e>>2]|0)+384>>2]|0)+(c[f>>2]<<2)>>2]|0;f=Nn(b,Sw(c[e>>2]|0)|0)|0;i=d;return f|0}function Dv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;d=c[h>>2]|0;h=On(d,Sw(c[f>>2]|0)|0)|0;c[(c[(c[f>>2]|0)+384>>2]|0)+(c[g>>2]<<2)>>2]=h;i=e;return}function Ev(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;d=c[h>>2]|0;h=On(d,Sw(c[f>>2]|0)|0)|0;d=(c[(c[f>>2]|0)+384>>2]|0)+(c[g>>2]<<2)|0;c[d>>2]=(c[d>>2]|0)+h;i=e;return}function Fv(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;i=d;return c[(c[(c[e>>2]|0)+384>>2]|0)+(c[f>>2]<<2)>>2]|0}function Gv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[(c[(c[f>>2]|0)+384>>2]|0)+(c[g>>2]<<2)>>2]=c[h>>2];i=e;return}function Hv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;d=(c[(c[f>>2]|0)+384>>2]|0)+(c[g>>2]<<2)|0;c[d>>2]=(c[d>>2]|0)+(c[h>>2]|0);i=e;return}function Iv(a){a=a|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+16|0;e=d;c[e>>2]=a;a=(c[e>>2]|0)+284|0;do{if((b[(c[e>>2]|0)+298>>1]|0)!=16384){f=(c[e>>2]|0)+294|0;if((b[a+16>>1]|0)==16384){c[(c[e>>2]|0)+564>>2]=b[f+2>>1]|0;break}else{g=aa(b[f>>1]|0,b[(c[e>>2]|0)+298>>1]|0)|0;f=g+(aa(b[(c[e>>2]|0)+296>>1]|0,b[(c[e>>2]|0)+300>>1]|0)|0)>>14;c[(c[e>>2]|0)+564>>2]=f;break}}else{c[(c[e>>2]|0)+564>>2]=b[a+10>>1]|0}}while(0);a=c[e>>2]|0;do{if((b[(c[e>>2]|0)+294>>1]|0)!=16384){f=(c[e>>2]|0)+572|0;if((b[a+296>>1]|0)==16384){c[f>>2]=46;break}else{c[f>>2]=47;break}}else{c[a+572>>2]=45}}while(0);a=c[e>>2]|0;do{if((b[(c[e>>2]|0)+290>>1]|0)!=16384){f=(c[e>>2]|0)+576|0;if((b[a+292>>1]|0)==16384){c[f>>2]=46;break}else{c[f>>2]=48;break}}else{c[a+576>>2]=45}}while(0);c[(c[e>>2]|0)+584>>2]=23;c[(c[e>>2]|0)+588>>2]=24;do{if((c[(c[e>>2]|0)+564>>2]|0)==16384){a=c[e>>2]|0;if((b[(c[e>>2]|0)+298>>1]|0)==16384){c[a+584>>2]=25;c[(c[e>>2]|0)+588>>2]=26;break}if((b[a+300>>1]|0)==16384){c[(c[e>>2]|0)+584>>2]=27;c[(c[e>>2]|0)+588>>2]=28}}}while(0);a=c[(c[e>>2]|0)+564>>2]|0;if((((c[(c[e>>2]|0)+564>>2]|0)<0?0-a|0:a)|0)>=1024){h=c[e>>2]|0;j=h+244|0;k=j+12|0;c[k>>2]=0;i=d;return}c[(c[e>>2]|0)+564>>2]=16384;h=c[e>>2]|0;j=h+244|0;k=j+12|0;c[k>>2]=0;i=d;return}function Jv(b,e){b=b|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f;h=f+4|0;c[g>>2]=b;a[h]=e;switch(d[h]|0|0){case 5:{c[(c[g>>2]|0)+568>>2]=42;break};case 1:{c[(c[g>>2]|0)+568>>2]=37;break};case 4:{c[(c[g>>2]|0)+568>>2]=43;break};case 3:{c[(c[g>>2]|0)+568>>2]=44;break};case 2:{c[(c[g>>2]|0)+568>>2]=39;break};case 0:{c[(c[g>>2]|0)+568>>2]=38;break};case 6:{c[(c[g>>2]|0)+568>>2]=40;break};case 7:{c[(c[g>>2]|0)+568>>2]=41;break};default:{}}i=f;return}function Kv(d,f,g,h,j){d=d|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;k=i;i=i+48|0;l=k+36|0;m=k+28|0;n=k+32|0;o=k+34|0;p=k+24|0;q=k+20|0;r=k+12|0;s=k+8|0;t=k+4|0;u=k;v=k+16|0;c[m>>2]=d;b[n>>1]=f;b[o>>1]=g;c[p>>2]=h;c[q>>2]=j;if(!((e[n>>1]|0)>>>0>=(e[(c[m>>2]|0)+116>>1]|0)>>>0)?!((e[o>>1]|0)>>>0>=(e[(c[m>>2]|0)+80>>1]|0)>>>0):0){c[u>>2]=(c[(c[m>>2]|0)+88>>2]|0)+(e[o>>1]<<3);c[v>>2]=(c[(c[m>>2]|0)+124>>2]|0)+(e[n>>1]<<3);c[r>>2]=(c[c[u>>2]>>2]|0)-(c[c[v>>2]>>2]|0);c[s>>2]=(c[(c[u>>2]|0)+4>>2]|0)-(c[(c[v>>2]|0)+4>>2]|0);if((c[r>>2]|0)==0?(c[s>>2]|0)==0:0){c[r>>2]=16384;c[p>>2]=0}if((c[p>>2]&1|0)!=0){c[t>>2]=c[s>>2];c[s>>2]=c[r>>2];c[r>>2]=0-(c[t>>2]|0)}Lv(c[m>>2]|0,c[r>>2]|0,c[s>>2]|0,c[q>>2]|0)|0;a[l]=0;w=a[l]|0;i=k;return w|0}if((a[(c[m>>2]|0)+561|0]|0)!=0){c[(c[m>>2]|0)+12>>2]=134}a[l]=1;w=a[l]|0;i=k;return w|0}function Lv(d,e,f,g){d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=i;i=i+32|0;j=h+20|0;k=h;l=h+4|0;m=h+8|0;n=h+12|0;o=h+16|0;c[k>>2]=d;c[l>>2]=e;c[m>>2]=f;c[n>>2]=g;c[k>>2]=c[k>>2];k=c[l>>2]|0;if((((c[l>>2]|0)<0?0-k|0:k)|0)<16384?(k=c[m>>2]|0,(((c[m>>2]|0)<0?0-k|0:k)|0)<16384):0){if((c[l>>2]|0)==0?(c[m>>2]|0)==0:0){a[j]=0;p=a[j]|0;i=h;return p|0}c[l>>2]=c[l>>2]<<14;c[m>>2]=c[m>>2]<<14}c[o>>2]=Gn(c[l>>2]|0,c[m>>2]|0)|0;k=(On(c[l>>2]|0,c[o>>2]<<2)|0)&65535;b[c[n>>2]>>1]=k;k=(On(c[m>>2]|0,c[o>>2]<<2)|0)&65535;b[(c[n>>2]|0)+2>>1]=k;a[j]=0;p=a[j]|0;i=h;return p|0}function Mv(f,g){f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;h=i;i=i+80|0;j=h+52|0;k=h+48|0;l=h+58|0;m=h+56|0;n=h+60|0;o=h+62|0;p=h+64|0;q=h+44|0;r=h+40|0;s=h+24|0;t=h+20|0;u=h+16|0;v=h+12|0;w=h+8|0;x=h+4|0;y=h;z=h+32|0;c[j>>2]=f;c[k>>2]=g;b[l>>1]=c[c[k>>2]>>2];b[m>>1]=c[(c[k>>2]|0)+4>>2];b[n>>1]=c[(c[k>>2]|0)+8>>2];b[o>>1]=c[(c[k>>2]|0)+12>>2];b[p>>1]=c[(c[k>>2]|0)+16>>2];if((((!((e[o>>1]|0)>>>0>=(e[(c[j>>2]|0)+44>>1]|0)>>>0)?!((e[p>>1]|0)>>>0>=(e[(c[j>>2]|0)+44>>1]|0)>>>0):0)?!((e[m>>1]|0)>>>0>=(e[(c[j>>2]|0)+80>>1]|0)>>>0):0)?!((e[n>>1]|0)>>>0>=(e[(c[j>>2]|0)+80>>1]|0)>>>0):0)?!((e[l>>1]|0)>>>0>=(e[(c[j>>2]|0)+116>>1]|0)>>>0):0){c[w>>2]=(c[(c[(c[j>>2]|0)+52>>2]|0)+(e[p>>1]<<3)>>2]|0)-(c[(c[(c[j>>2]|0)+52>>2]|0)+(e[o>>1]<<3)>>2]|0);c[x>>2]=(c[(c[(c[j>>2]|0)+52>>2]|0)+(e[p>>1]<<3)+4>>2]|0)-(c[(c[(c[j>>2]|0)+52>>2]|0)+(e[o>>1]<<3)+4>>2]|0);c[u>>2]=(c[(c[(c[j>>2]|0)+88>>2]|0)+(e[n>>1]<<3)>>2]|0)-(c[(c[(c[j>>2]|0)+88>>2]|0)+(e[m>>1]<<3)>>2]|0);c[v>>2]=(c[(c[(c[j>>2]|0)+88>>2]|0)+(e[n>>1]<<3)+4>>2]|0)-(c[(c[(c[j>>2]|0)+88>>2]|0)+(e[m>>1]<<3)+4>>2]|0);c[s>>2]=(c[(c[(c[j>>2]|0)+52>>2]|0)+(e[o>>1]<<3)>>2]|0)-(c[(c[(c[j>>2]|0)+88>>2]|0)+(e[m>>1]<<3)>>2]|0);c[t>>2]=(c[(c[(c[j>>2]|0)+52>>2]|0)+(e[o>>1]<<3)+4>>2]|0)-(c[(c[(c[j>>2]|0)+88>>2]|0)+(e[m>>1]<<3)+4>>2]|0);k=(c[(c[j>>2]|0)+132>>2]|0)+(e[l>>1]|0)|0;a[k]=d[k]|24;k=In(c[u>>2]|0,0-(c[x>>2]|0)|0,64)|0;c[q>>2]=k+(In(c[v>>2]|0,c[w>>2]|0,64)|0);k=In(c[u>>2]|0,c[w>>2]|0,64)|0;c[r>>2]=k+(In(c[v>>2]|0,c[x>>2]|0,64)|0);k=c[q>>2]|0;g=c[r>>2]|0;if((((c[q>>2]|0)<0?0-k|0:k)*19|0)>(((c[r>>2]|0)<0?0-g|0:g)|0)){g=In(c[s>>2]|0,0-(c[x>>2]|0)|0,64)|0;c[y>>2]=g+(In(c[t>>2]|0,c[w>>2]|0,64)|0);c[z>>2]=In(c[y>>2]|0,c[u>>2]|0,c[q>>2]|0)|0;c[z+4>>2]=In(c[y>>2]|0,c[v>>2]|0,c[q>>2]|0)|0;c[(c[(c[j>>2]|0)+124>>2]|0)+(e[l>>1]<<3)>>2]=(c[(c[(c[j>>2]|0)+88>>2]|0)+(e[m>>1]<<3)>>2]|0)+(c[z>>2]|0);c[(c[(c[j>>2]|0)+124>>2]|0)+(e[l>>1]<<3)+4>>2]=(c[(c[(c[j>>2]|0)+88>>2]|0)+(e[m>>1]<<3)+4>>2]|0)+(c[z+4>>2]|0);i=h;return}else{c[(c[(c[j>>2]|0)+124>>2]|0)+(e[l>>1]<<3)>>2]=((c[(c[(c[j>>2]|0)+88>>2]|0)+(e[m>>1]<<3)>>2]|0)+(c[(c[(c[j>>2]|0)+88>>2]|0)+(e[n>>1]<<3)>>2]|0)+(c[(c[(c[j>>2]|0)+52>>2]|0)+(e[o>>1]<<3)>>2]|0)+(c[(c[(c[j>>2]|0)+52>>2]|0)+(e[p>>1]<<3)>>2]|0)|0)/4|0;c[(c[(c[j>>2]|0)+124>>2]|0)+(e[l>>1]<<3)+4>>2]=((c[(c[(c[j>>2]|0)+88>>2]|0)+(e[m>>1]<<3)+4>>2]|0)+(c[(c[(c[j>>2]|0)+88>>2]|0)+(e[n>>1]<<3)+4>>2]|0)+(c[(c[(c[j>>2]|0)+52>>2]|0)+(e[o>>1]<<3)+4>>2]|0)+(c[(c[(c[j>>2]|0)+52>>2]|0)+(e[p>>1]<<3)+4>>2]|0)|0)/4|0;i=h;return}}if((a[(c[j>>2]|0)+561|0]|0)==0){i=h;return}c[(c[j>>2]|0)+12>>2]=134;i=h;return}function Nv(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+16|0;g=f+4|0;h=f;c[g>>2]=d;c[h>>2]=e;e=c[c[h>>2]>>2]|0;if((e|0)==1){j=(c[g>>2]|0)+36|0;k=(c[g>>2]|0)+144|0;l=j+36|0;do{c[j>>2]=c[k>>2];j=j+4|0;k=k+4|0}while((j|0)<(l|0))}else if((e|0)==0){j=(c[g>>2]|0)+36|0;k=(c[g>>2]|0)+180|0;l=j+36|0;do{c[j>>2]=c[k>>2];j=j+4|0;k=k+4|0}while((j|0)<(l|0))}else{if((a[(c[g>>2]|0)+561|0]|0)==0){i=f;return}c[(c[g>>2]|0)+12>>2]=134;i=f;return}b[(c[g>>2]|0)+344>>1]=c[c[h>>2]>>2];i=f;return}function Ov(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+16|0;g=f+4|0;h=f;c[g>>2]=d;c[h>>2]=e;e=c[c[h>>2]>>2]|0;if((e|0)==1){j=(c[g>>2]|0)+72|0;k=(c[g>>2]|0)+144|0;l=j+36|0;do{c[j>>2]=c[k>>2];j=j+4|0;k=k+4|0}while((j|0)<(l|0))}else if((e|0)==0){j=(c[g>>2]|0)+72|0;k=(c[g>>2]|0)+180|0;l=j+36|0;do{c[j>>2]=c[k>>2];j=j+4|0;k=k+4|0}while((j|0)<(l|0))}else{if((a[(c[g>>2]|0)+561|0]|0)==0){i=f;return}c[(c[g>>2]|0)+12>>2]=134;i=f;return}b[(c[g>>2]|0)+346>>1]=c[c[h>>2]>>2];i=f;return}function Pv(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+16|0;g=f+4|0;h=f;c[g>>2]=d;c[h>>2]=e;e=c[c[h>>2]>>2]|0;if((e|0)==1){j=(c[g>>2]|0)+108|0;k=(c[g>>2]|0)+144|0;l=j+36|0;do{c[j>>2]=c[k>>2];j=j+4|0;k=k+4|0}while((j|0)<(l|0))}else if((e|0)==0){j=(c[g>>2]|0)+108|0;k=(c[g>>2]|0)+180|0;l=j+36|0;do{c[j>>2]=c[k>>2];j=j+4|0;k=k+4|0}while((j|0)<(l|0))}else{if((a[(c[g>>2]|0)+561|0]|0)==0){i=f;return}c[(c[g>>2]|0)+12>>2]=134;i=f;return}b[(c[g>>2]|0)+348>>1]=c[c[h>>2]>>2];i=f;return}function Qv(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+16|0;g=f+4|0;h=f;c[g>>2]=d;c[h>>2]=e;e=c[c[h>>2]>>2]|0;if((e|0)==1){j=(c[g>>2]|0)+36|0;k=(c[g>>2]|0)+144|0;l=j+36|0;do{c[j>>2]=c[k>>2];j=j+4|0;k=k+4|0}while((j|0)<(l|0))}else if((e|0)==0){j=(c[g>>2]|0)+36|0;k=(c[g>>2]|0)+180|0;l=j+36|0;do{c[j>>2]=c[k>>2];j=j+4|0;k=k+4|0}while((j|0)<(l|0))}else{if((a[(c[g>>2]|0)+561|0]|0)==0){i=f;return}c[(c[g>>2]|0)+12>>2]=134;i=f;return}j=(c[g>>2]|0)+72|0;k=(c[g>>2]|0)+36|0;l=j+36|0;do{c[j>>2]=c[k>>2];j=j+4|0;k=k+4|0}while((j|0)<(l|0));j=(c[g>>2]|0)+108|0;k=(c[g>>2]|0)+36|0;l=j+36|0;do{c[j>>2]=c[k>>2];j=j+4|0;k=k+4|0}while((j|0)<(l|0));b[(c[g>>2]|0)+344>>1]=c[c[h>>2]>>2];b[(c[g>>2]|0)+346>>1]=c[c[h>>2]>>2];b[(c[g>>2]|0)+348>>1]=c[c[h>>2]>>2];i=f;return}function Rv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+16|0;f=e+12|0;g=e;h=e+4|0;j=e+8|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[f>>2]=c[f>>2];if((c[g>>2]|0)<0){f=0-((c[h>>2]|0)-(c[g>>2]|0)+32&-64)|0;c[j>>2]=f;c[j>>2]=(c[j>>2]|0)>0?0:f;k=c[j>>2]|0;i=e;return k|0}c[j>>2]=(c[g>>2]|0)+(c[h>>2]|0)+32;if((c[g>>2]|0)!=0?(c[j>>2]|0)>0:0){c[j>>2]=c[j>>2]&-64;k=c[j>>2]|0;i=e;return k|0}c[j>>2]=0;k=c[j>>2]|0;i=e;return k|0}function Sv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e+12|0;g=e;h=e+4|0;j=e+8|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[f>>2]=c[f>>2];if((c[g>>2]|0)>=0){c[j>>2]=((c[g>>2]|0)+(c[h>>2]|0)&-64)+32;if((c[g>>2]|0)!=0?(c[j>>2]|0)<0:0){c[j>>2]=0}}else{f=0-(((c[h>>2]|0)-(c[g>>2]|0)&-64)+32)|0;c[j>>2]=f;c[j>>2]=(c[j>>2]|0)>0?0:f}i=e;return c[j>>2]|0}function Tv(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=a;c[g>>2]=b;c[f>>2]=c[f>>2];c[g>>2]=c[g>>2];c[h>>2]=1;while(1){if(((Rw(c[f>>2]|0)|0)&255|0)==1){j=7;break}g=d[(c[f>>2]|0)+368|0]|0;if((g|0)==88){c[h>>2]=(c[h>>2]|0)+1}else if((g|0)==89){c[h>>2]=(c[h>>2]|0)+ -1}if((c[h>>2]|0)==0){j=7;break}}if((j|0)==7){i=e;return}}function Uv(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e+12|0;g=e;h=e+4|0;j=e+8|0;c[f>>2]=b;c[g>>2]=d;c[h>>2]=c[c[g>>2]>>2];if((c[h>>2]|0)>0?(c[h>>2]|0)<=(c[(c[f>>2]|0)+28>>2]|0):0){c[j>>2]=c[(c[(c[f>>2]|0)+24>>2]|0)+((c[(c[f>>2]|0)+28>>2]|0)-(c[h>>2]|0)<<2)>>2];mA((c[(c[f>>2]|0)+24>>2]|0)+((c[(c[f>>2]|0)+28>>2]|0)-(c[h>>2]|0)<<2)|0,(c[(c[f>>2]|0)+24>>2]|0)+((c[(c[f>>2]|0)+28>>2]|0)-(c[h>>2]|0)+1<<2)|0,(c[h>>2]|0)-1<<2|0)|0;c[(c[(c[f>>2]|0)+24>>2]|0)+((c[(c[f>>2]|0)+28>>2]|0)-1<<2)>>2]=c[j>>2];i=e;return}if((a[(c[f>>2]|0)+561|0]|0)==0){i=e;return}c[(c[f>>2]|0)+12>>2]=134;i=e;return}function Vv(d,f){d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+16|0;h=g+8|0;j=g;k=g+14|0;l=g+12|0;m=g+4|0;c[h>>2]=d;c[j>>2]=f;b[k>>1]=c[c[j>>2]>>2];b[l>>1]=c[(c[j>>2]|0)+4>>2];if(!((e[k>>1]|0)>>>0>=(e[(c[h>>2]|0)+80>>1]|0)>>>0)?!((e[l>>1]|0)>>>0>=(e[(c[h>>2]|0)+44>>1]|0)>>>0):0){c[m>>2]=(md[c[(c[h>>2]|0)+572>>2]&63](c[h>>2]|0,(c[(c[(c[h>>2]|0)+52>>2]|0)+(e[l>>1]<<3)>>2]|0)-(c[(c[(c[h>>2]|0)+88>>2]|0)+(e[k>>1]<<3)>>2]|0)|0,(c[(c[(c[h>>2]|0)+52>>2]|0)+(e[l>>1]<<3)+4>>2]|0)-(c[(c[(c[h>>2]|0)+88>>2]|0)+(e[k>>1]<<3)+4>>2]|0)|0)|0)/2|0;Cd[c[(c[h>>2]|0)+584>>2]&31](c[h>>2]|0,(c[h>>2]|0)+72|0,b[k>>1]|0,c[m>>2]|0);Cd[c[(c[h>>2]|0)+584>>2]&31](c[h>>2]|0,(c[h>>2]|0)+36|0,b[l>>1]|0,0-(c[m>>2]|0)|0);i=g;return}if((a[(c[h>>2]|0)+561|0]|0)==0){i=g;return}c[(c[h>>2]|0)+12>>2]=134;i=g;return}function Wv(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+32|0;g=f+16|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;c[g>>2]=b;c[h>>2]=e;c[j>>2]=c[(c[g>>2]|0)+416>>2];c[k>>2]=(c[j>>2]|0)+((c[(c[g>>2]|0)+408>>2]|0)*24|0);c[g>>2]=c[g>>2];c[h>>2]=c[h>>2];while(1){if(!((c[j>>2]|0)>>>0<(c[k>>2]|0)>>>0)){m=9;break}if((c[(c[j>>2]|0)+12>>2]&255|0)==(d[(c[g>>2]|0)+368|0]|0|0)?(d[(c[j>>2]|0)+16|0]|0|0)!=0:0){break}c[j>>2]=(c[j>>2]|0)+24}if((m|0)==9){c[(c[g>>2]|0)+12>>2]=128;i=f;return}m=c[g>>2]|0;if((c[(c[g>>2]|0)+428>>2]|0)>=(c[(c[g>>2]|0)+432>>2]|0)){c[m+12>>2]=130;i=f;return}else{k=c[m+436>>2]|0;m=(c[g>>2]|0)+428|0;h=c[m>>2]|0;c[m>>2]=h+1;c[l>>2]=k+(h<<4);c[c[l>>2]>>2]=c[(c[g>>2]|0)+352>>2];c[(c[l>>2]|0)+4>>2]=(c[(c[g>>2]|0)+360>>2]|0)+1;c[(c[l>>2]|0)+8>>2]=1;c[(c[l>>2]|0)+12>>2]=c[j>>2];Ow(c[g>>2]|0,c[c[j>>2]>>2]|0,c[(c[j>>2]|0)+4>>2]|0)|0;a[(c[g>>2]|0)+376|0]=0;i=f;return}}function Xv(f,g){f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h+4|0;k=h;l=h+8|0;m=h+10|0;c[j>>2]=f;c[k>>2]=g;b[l>>1]=c[c[k>>2]>>2];if((e[l>>1]|0)>>>0>=(e[(c[j>>2]|0)+44>>1]|0)>>>0){if((a[(c[j>>2]|0)+561|0]|0)==0){i=h;return}c[(c[j>>2]|0)+12>>2]=134;i=h;return}a[m]=-1;if((b[(c[j>>2]|0)+298>>1]|0)!=0){a[m]=d[m]&-9}if((b[(c[j>>2]|0)+300>>1]|0)!=0){a[m]=d[m]&-17}k=(c[(c[j>>2]|0)+60>>2]|0)+(e[l>>1]|0)|0;a[k]=d[k]&d[m];i=h;return}function Yv(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+32|0;f=e+20|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;c[f>>2]=b;c[g>>2]=d;c[h>>2]=c[(c[g>>2]|0)+4>>2];do{if(!((c[h>>2]|0)>>>0>=((c[(c[f>>2]|0)+420>>2]|0)+1|0)>>>0)){c[k>>2]=(c[(c[f>>2]|0)+404>>2]|0)+((c[h>>2]|0)*24|0);if(!(((c[(c[f>>2]|0)+420>>2]|0)+1|0)==(c[(c[f>>2]|0)+396>>2]|0)?(c[(c[k>>2]|0)+12>>2]|0)==(c[h>>2]|0):0)){c[k>>2]=c[(c[f>>2]|0)+404>>2];c[l>>2]=(c[k>>2]|0)+((c[(c[f>>2]|0)+396>>2]|0)*24|0);while(1){if((c[k>>2]|0)>>>0<(c[l>>2]|0)>>>0){m=(c[(c[k>>2]|0)+12>>2]|0)!=(c[h>>2]|0)}else{m=0}n=c[k>>2]|0;if(!m){break}c[k>>2]=n+24}if((n|0)==(c[l>>2]|0)){break}}if((a[(c[k>>2]|0)+16|0]|0)!=0){if((c[(c[f>>2]|0)+428>>2]|0)>=(c[(c[f>>2]|0)+432>>2]|0)){c[(c[f>>2]|0)+12>>2]=130;i=e;return}if((c[c[g>>2]>>2]|0)<=0){i=e;return}c[j>>2]=(c[(c[f>>2]|0)+436>>2]|0)+(c[(c[f>>2]|0)+428>>2]<<4);c[c[j>>2]>>2]=c[(c[f>>2]|0)+352>>2];c[(c[j>>2]|0)+4>>2]=(c[(c[f>>2]|0)+360>>2]|0)+1;c[(c[j>>2]|0)+8>>2]=c[c[g>>2]>>2];c[(c[j>>2]|0)+12>>2]=c[k>>2];d=(c[f>>2]|0)+428|0;c[d>>2]=(c[d>>2]|0)+1;Ow(c[f>>2]|0,c[c[k>>2]>>2]|0,c[(c[k>>2]|0)+4>>2]|0)|0;a[(c[f>>2]|0)+376|0]=0;i=e;return}}}while(0);c[(c[f>>2]|0)+12>>2]=134;i=e;return}function Zv(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+32|0;f=e+20|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;c[f>>2]=b;c[g>>2]=d;c[h>>2]=c[c[g>>2]>>2];do{if(!((c[h>>2]|0)>>>0>=((c[(c[f>>2]|0)+420>>2]|0)+1|0)>>>0)){c[k>>2]=(c[(c[f>>2]|0)+404>>2]|0)+((c[h>>2]|0)*24|0);if(!(((c[(c[f>>2]|0)+420>>2]|0)+1|0)==(c[(c[f>>2]|0)+396>>2]|0)?(c[(c[k>>2]|0)+12>>2]|0)==(c[h>>2]|0):0)){c[k>>2]=c[(c[f>>2]|0)+404>>2];c[l>>2]=(c[k>>2]|0)+((c[(c[f>>2]|0)+396>>2]|0)*24|0);while(1){if((c[k>>2]|0)>>>0<(c[l>>2]|0)>>>0){m=(c[(c[k>>2]|0)+12>>2]|0)!=(c[h>>2]|0)}else{m=0}n=c[k>>2]|0;if(!m){break}c[k>>2]=n+24}if((n|0)==(c[l>>2]|0)){break}}if((a[(c[k>>2]|0)+16|0]|0)!=0){g=c[f>>2]|0;if((c[(c[f>>2]|0)+428>>2]|0)>=(c[(c[f>>2]|0)+432>>2]|0)){c[g+12>>2]=130;i=e;return}else{c[j>>2]=(c[g+436>>2]|0)+(c[(c[f>>2]|0)+428>>2]<<4);c[c[j>>2]>>2]=c[(c[f>>2]|0)+352>>2];c[(c[j>>2]|0)+4>>2]=(c[(c[f>>2]|0)+360>>2]|0)+1;c[(c[j>>2]|0)+8>>2]=1;c[(c[j>>2]|0)+12>>2]=c[k>>2];g=(c[f>>2]|0)+428|0;c[g>>2]=(c[g>>2]|0)+1;Ow(c[f>>2]|0,c[c[k>>2]>>2]|0,c[(c[k>>2]|0)+4>>2]|0)|0;a[(c[f>>2]|0)+376|0]=0;i=e;return}}}}while(0);c[(c[f>>2]|0)+12>>2]=134;i=e;return}function _v(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+32|0;g=f+16|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;c[g>>2]=b;c[h>>2]=e;c[k>>2]=c[(c[g>>2]|0)+404>>2];c[l>>2]=(c[k>>2]|0)+((c[(c[g>>2]|0)+396>>2]|0)*24|0);c[j>>2]=c[c[h>>2]>>2];while(1){if(!((c[k>>2]|0)>>>0<(c[l>>2]|0)>>>0)){break}if((c[(c[k>>2]|0)+12>>2]|0)==(c[j>>2]|0)){break}c[k>>2]=(c[k>>2]|0)+24}do{if((c[k>>2]|0)==(c[l>>2]|0)){h=c[g>>2]|0;if(!((c[(c[g>>2]|0)+396>>2]|0)>>>0>=(c[(c[g>>2]|0)+400>>2]|0)>>>0)){e=h+396|0;c[e>>2]=(c[e>>2]|0)+1;break}c[h+12>>2]=140;i=f;return}}while(0);l=c[g>>2]|0;if((c[j>>2]|0)>>>0>65535){c[l+12>>2]=140;i=f;return}c[c[k>>2]>>2]=c[l+352>>2];c[(c[k>>2]|0)+12>>2]=c[j>>2]&65535;c[(c[k>>2]|0)+4>>2]=(c[(c[g>>2]|0)+360>>2]|0)+1;a[(c[k>>2]|0)+16|0]=1;a[(c[k>>2]|0)+17|0]=0;c[(c[k>>2]|0)+20>>2]=0;if((c[j>>2]|0)>>>0>(c[(c[g>>2]|0)+420>>2]|0)>>>0){c[(c[g>>2]|0)+420>>2]=c[j>>2]&65535}while(1){if(((Rw(c[g>>2]|0)|0)&255|0)!=0){m=17;break}j=d[(c[g>>2]|0)+368|0]|0;if((j|0)==44|(j|0)==137){m=15;break}else if((j|0)==45){m=16;break}}if((m|0)==15){c[(c[g>>2]|0)+12>>2]=137;i=f;return}else if((m|0)==16){c[(c[k>>2]|0)+8>>2]=c[(c[g>>2]|0)+360>>2];i=f;return}else if((m|0)==17){i=f;return}}function $v(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=b;c[g>>2]=d;c[f>>2]=c[f>>2];c[g>>2]=c[g>>2];g=c[f>>2]|0;if((c[(c[f>>2]|0)+428>>2]|0)<=0){c[g+12>>2]=136;i=e;return}d=g+428|0;c[d>>2]=(c[d>>2]|0)+ -1;c[h>>2]=(c[(c[f>>2]|0)+436>>2]|0)+(c[(c[f>>2]|0)+428>>2]<<4);d=(c[h>>2]|0)+8|0;c[d>>2]=(c[d>>2]|0)+ -1;a[(c[f>>2]|0)+376|0]=0;d=c[f>>2]|0;if((c[(c[h>>2]|0)+8>>2]|0)>0){g=d+428|0;c[g>>2]=(c[g>>2]|0)+1;c[(c[f>>2]|0)+360>>2]=c[(c[(c[h>>2]|0)+12>>2]|0)+4>>2];i=e;return}else{Ow(d,c[c[h>>2]>>2]|0,c[(c[h>>2]|0)+4>>2]|0)|0;i=e;return}}function aw(d,f){d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+32|0;h=g+12|0;j=g;k=g+16|0;l=g+8|0;m=g+4|0;c[h>>2]=d;c[j>>2]=f;b[k>>1]=c[c[j>>2]>>2];j=c[h>>2]|0;if((e[k>>1]|0)>>>0>=(e[(c[h>>2]|0)+44>>1]|0)>>>0){if((a[j+561|0]|0)==0){i=g;return}c[(c[h>>2]|0)+12>>2]=134;i=g;return}if((a[j+368|0]&1|0)!=0){c[l>>2]=md[c[(c[h>>2]|0)+572>>2]&63](c[h>>2]|0,c[(c[(c[h>>2]|0)+52>>2]|0)+(e[k>>1]<<3)>>2]|0,c[(c[(c[h>>2]|0)+52>>2]|0)+(e[k>>1]<<3)+4>>2]|0)|0;j=md[c[(c[h>>2]|0)+568>>2]&63](c[h>>2]|0,c[l>>2]|0,c[(c[h>>2]|0)+264>>2]|0)|0;c[m>>2]=j-(c[l>>2]|0)}else{c[m>>2]=0}Cd[c[(c[h>>2]|0)+584>>2]&31](c[h>>2]|0,(c[h>>2]|0)+36|0,b[k>>1]|0,c[m>>2]|0);b[(c[h>>2]|0)+284>>1]=b[k>>1]|0;b[(c[h>>2]|0)+286>>1]=b[k>>1]|0;i=g;return}function bw(f,g){f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;h=i;i=i+48|0;j=h+16|0;k=h+40|0;l=h+24|0;m=h+46|0;n=h+20|0;o=h+12|0;p=h+8|0;q=h+4|0;r=h;s=h+44|0;c[j>>2]=f;c[k>>2]=g;c[j>>2]=c[j>>2];c[k>>2]=c[k>>2];if((b[(c[j>>2]|0)+154>>1]|0)==0){i=h;return}if((a[(c[j>>2]|0)+368|0]&1|0)!=0){a[m]=8;c[l>>2]=c[(c[j>>2]|0)+156>>2];c[l+4>>2]=c[(c[j>>2]|0)+160>>2];c[l+8>>2]=c[(c[j>>2]|0)+164>>2]}else{a[m]=16;c[l>>2]=(c[(c[j>>2]|0)+156>>2]|0)+4;c[l+4>>2]=(c[(c[j>>2]|0)+160>>2]|0)+4;c[l+8>>2]=(c[(c[j>>2]|0)+164>>2]|0)+4}c[l+12>>2]=e[(c[j>>2]|0)+152>>1]|0;b[s>>1]=0;c[r>>2]=0;do{c[o>>2]=(e[(c[(c[j>>2]|0)+172>>2]|0)+(b[s>>1]<<1)>>1]|0)-(e[(c[j>>2]|0)+176>>1]|0);c[n>>2]=c[r>>2];if((c[o>>2]|0)>>>0>=(e[(c[j>>2]|0)+152>>1]|0)>>>0){c[o>>2]=(e[(c[j>>2]|0)+152>>1]|0)-1}while(1){if((c[r>>2]|0)>>>0<=(c[o>>2]|0)>>>0){t=(d[(c[(c[j>>2]|0)+168>>2]|0)+(c[r>>2]|0)|0]&d[m]|0)==0}else{t=0}u=c[r>>2]|0;if(!t){break}c[r>>2]=u+1}do{if(u>>>0<=(c[o>>2]|0)>>>0){c[p>>2]=c[r>>2];c[q>>2]=c[r>>2];c[r>>2]=(c[r>>2]|0)+1;while(1){if(!((c[r>>2]|0)>>>0<=(c[o>>2]|0)>>>0)){break}if((d[(c[(c[j>>2]|0)+168>>2]|0)+(c[r>>2]|0)|0]&d[m]|0)!=0){Vw(l,(c[q>>2]|0)+1|0,(c[r>>2]|0)-1|0,c[q>>2]|0,c[r>>2]|0);c[q>>2]=c[r>>2]}c[r>>2]=(c[r>>2]|0)+1}if((c[q>>2]|0)==(c[p>>2]|0)){Ww(l,c[n>>2]|0,c[o>>2]|0,c[q>>2]|0);break}Vw(l,(c[q>>2]|0)+1&65535,c[o>>2]|0,c[q>>2]|0,c[p>>2]|0);if((c[p>>2]|0)>>>0>0){Vw(l,c[n>>2]|0,(c[p>>2]|0)-1|0,c[q>>2]|0,c[p>>2]|0)}}}while(0);b[s>>1]=(b[s>>1]|0)+1<<16>>16}while((b[s>>1]|0)<(b[(c[j>>2]|0)+154>>1]|0));i=h;return}function cw(d,f){d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;i=i+64|0;h=g+48|0;j=g;k=g+4|0;l=g+54|0;m=g+44|0;n=g+40|0;o=g+52|0;c[h>>2]=d;c[j>>2]=f;c[h>>2]=c[h>>2];c[j>>2]=c[j>>2];j=c[h>>2]|0;a:do{if((c[(c[h>>2]|0)+16>>2]|0)<(c[(c[h>>2]|0)+304>>2]|0)){if((a[j+561|0]|0)!=0){c[(c[h>>2]|0)+12>>2]=134}}else{if((Uw(j,m,n,k,l)|0)<<24>>24!=0){i=g;return}while(1){if((c[(c[h>>2]|0)+304>>2]|0)<=0){break a}f=(c[h>>2]|0)+28|0;c[f>>2]=(c[f>>2]|0)+ -1;b[o>>1]=c[(c[(c[h>>2]|0)+24>>2]|0)+(c[(c[h>>2]|0)+28>>2]<<2)>>2];f=c[h>>2]|0;if((e[o>>1]|0)>>>0>=(e[(c[h>>2]|0)+116>>1]|0)>>>0){if((a[f+561|0]|0)!=0){break}}else{Tw(f,b[o>>1]|0,c[m>>2]|0,c[n>>2]|0,1)}f=(c[h>>2]|0)+304|0;c[f>>2]=(c[f>>2]|0)+ -1}c[(c[h>>2]|0)+12>>2]=134;i=g;return}}while(0);c[(c[h>>2]|0)+304>>2]=1;c[(c[h>>2]|0)+32>>2]=c[(c[h>>2]|0)+28>>2];i=g;return}function dw(d,f){d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=i;i=i+64|0;h=g;j=g+48|0;k=g+4|0;l=g+62|0;m=g+40|0;n=g+44|0;o=g+52|0;p=g+54|0;q=g+56|0;r=g+58|0;s=g+60|0;c[h>>2]=d;c[j>>2]=f;b[o>>1]=c[c[j>>2]>>2];if((e[(c[h>>2]|0)+348>>1]|0)==0){t=1}else{t=b[(c[h>>2]|0)+118>>1]|0}b[p>>1]=t;t=c[h>>2]|0;if((b[o>>1]|0)>>>0>=(b[p>>1]|0)>>>0){if((a[t+561|0]|0)==0){i=g;return}c[(c[h>>2]|0)+12>>2]=134;i=g;return}if((Uw(t,m,n,k,l)|0)<<24>>24!=0){i=g;return}if((b[o>>1]|0)==0){b[q>>1]=0}else{b[q>>1]=(e[(c[(c[h>>2]|0)+136>>2]|0)+((b[o>>1]|0)-1<<1)>>1]|0)+1-(e[(c[h>>2]|0)+140>>1]|0)}if((e[(c[h>>2]|0)+348>>1]|0)==0){b[r>>1]=b[(c[h>>2]|0)+116>>1]|0}else{b[r>>1]=(e[(c[(c[h>>2]|0)+136>>2]|0)+(b[o>>1]<<1)>>1]|0)-(e[(c[h>>2]|0)+140>>1]|0)+1}b[s>>1]=b[q>>1]|0;while(1){if((e[s>>1]|0)>=(e[r>>1]|0)){break}if(!((c[k+16>>2]|0)==(c[(c[h>>2]|0)+124>>2]|0)?(e[l>>1]|0)==(e[s>>1]|0):0)){Tw(c[h>>2]|0,b[s>>1]|0,c[m>>2]|0,c[n>>2]|0,1)}b[s>>1]=(b[s>>1]|0)+1<<16>>16}i=g;return}function ew(d,f){d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;g=i;i=i+64|0;h=g+48|0;j=g;k=g+4|0;l=g+56|0;m=g+44|0;n=g+40|0;o=g+52|0;p=g+54|0;c[h>>2]=d;c[j>>2]=f;f=c[h>>2]|0;if((c[c[j>>2]>>2]|0)>>>0>=2){if((a[f+561|0]|0)==0){i=g;return}c[(c[h>>2]|0)+12>>2]=134;i=g;return}if((Uw(f,m,n,k,l)|0)<<24>>24!=0){i=g;return}f=c[h>>2]|0;do{if((e[(c[h>>2]|0)+348>>1]|0)==0){b[o>>1]=b[f+116>>1]|0}else{if((e[f+348>>1]|0)==1?(b[(c[h>>2]|0)+118>>1]|0)>0:0){b[o>>1]=(e[(c[(c[h>>2]|0)+136>>2]|0)+((b[(c[h>>2]|0)+118>>1]|0)-1<<1)>>1]|0)+1;break}b[o>>1]=0}}while(0);b[p>>1]=0;while(1){if((e[p>>1]|0)>=(e[o>>1]|0)){break}if(!((c[k+16>>2]|0)==(c[(c[h>>2]|0)+124>>2]|0)?(e[l>>1]|0)==(e[p>>1]|0):0)){Tw(c[h>>2]|0,b[p>>1]|0,c[m>>2]|0,c[n>>2]|0,0)}b[p>>1]=(b[p>>1]|0)+1<<16>>16}i=g;return}function fw(d,f){d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+32|0;h=g+12|0;j=g;k=g+4|0;l=g+8|0;m=g+16|0;c[h>>2]=d;c[j>>2]=f;a:do{if((c[(c[h>>2]|0)+16>>2]|0)<((c[(c[h>>2]|0)+304>>2]|0)+1|0)){if((a[(c[h>>2]|0)+561|0]|0)!=0){c[(c[h>>2]|0)+12>>2]=134}}else{c[k>>2]=Qw(c[c[j>>2]>>2]|0,b[(c[h>>2]|0)+298>>1]|0)|0;c[l>>2]=Qw(c[c[j>>2]>>2]|0,b[(c[h>>2]|0)+300>>1]|0)|0;while(1){if((c[(c[h>>2]|0)+304>>2]|0)<=0){break a}f=(c[h>>2]|0)+28|0;c[f>>2]=(c[f>>2]|0)+ -1;b[m>>1]=c[(c[(c[h>>2]|0)+24>>2]|0)+(c[(c[h>>2]|0)+28>>2]<<2)>>2];f=c[h>>2]|0;if((e[m>>1]|0)>>>0>=(e[(c[h>>2]|0)+116>>1]|0)>>>0){if((a[f+561|0]|0)!=0){break}}else{Tw(f,b[m>>1]|0,c[k>>2]|0,c[l>>2]|0,1)}f=(c[h>>2]|0)+304|0;c[f>>2]=(c[f>>2]|0)+ -1}c[(c[h>>2]|0)+12>>2]=134;i=g;return}}while(0);c[(c[h>>2]|0)+304>>2]=1;c[(c[h>>2]|0)+32>>2]=c[(c[h>>2]|0)+28>>2];i=g;return}function gw(b,d){b=b|0;d=d|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;f=i;i=i+64|0;g=f+56|0;h=f+52|0;j=f+48|0;k=f+44|0;l=f+40|0;m=f+36|0;n=f+32|0;o=f+16|0;p=f+12|0;q=f+8|0;r=f+4|0;s=f;t=f+24|0;c[g>>2]=b;c[h>>2]=d;c[g>>2]=c[g>>2];c[h>>2]=c[h>>2];h=c[g>>2]|0;a:do{if((c[(c[g>>2]|0)+16>>2]|0)<(c[(c[g>>2]|0)+304>>2]|0)){if((a[h+561|0]|0)!=0){c[(c[g>>2]|0)+12>>2]=134}}else{if((e[h+344>>1]|0)!=0?(e[(c[g>>2]|0)+346>>1]|0)!=0:0){u=(e[(c[g>>2]|0)+348>>1]|0)==0}else{u=1}c[n>>2]=u&1;if((e[(c[g>>2]|0)+286>>1]|0)>>>0>=(e[(c[g>>2]|0)+44>>1]|0)>>>0){if((a[(c[g>>2]|0)+561|0]|0)==0){break}c[(c[g>>2]|0)+12>>2]=134;break}d=e[(c[g>>2]|0)+286>>1]|0;b=(c[g>>2]|0)+36|0;if((c[n>>2]|0)!=0){c[l>>2]=(c[b+12>>2]|0)+(d<<3)}else{c[l>>2]=(c[b+20>>2]|0)+(d<<3)}c[m>>2]=(c[(c[g>>2]|0)+52>>2]|0)+(e[(c[g>>2]|0)+286>>1]<<3);if(!((e[(c[g>>2]|0)+286>>1]|0)>>>0>=(e[(c[g>>2]|0)+44>>1]|0)>>>0)?!((e[(c[g>>2]|0)+288>>1]|0)>>>0>=(e[(c[g>>2]|0)+80>>1]|0)>>>0):0){d=c[g>>2]|0;do{if((c[n>>2]|0)==0){b=c[g>>2]|0;if((c[d+220>>2]|0)==(c[(c[g>>2]|0)+224>>2]|0)){c[j>>2]=md[c[b+576>>2]&63](c[g>>2]|0,(c[(c[(c[g>>2]|0)+92>>2]|0)+(e[(c[g>>2]|0)+288>>1]<<3)>>2]|0)-(c[c[l>>2]>>2]|0)|0,(c[(c[(c[g>>2]|0)+92>>2]|0)+(e[(c[g>>2]|0)+288>>1]<<3)+4>>2]|0)-(c[(c[l>>2]|0)+4>>2]|0)|0)|0;break}else{c[o>>2]=Nn((c[(c[(c[g>>2]|0)+92>>2]|0)+(e[b+288>>1]<<3)>>2]|0)-(c[c[l>>2]>>2]|0)|0,c[(c[g>>2]|0)+220>>2]|0)|0;c[o+4>>2]=Nn((c[(c[(c[g>>2]|0)+92>>2]|0)+(e[(c[g>>2]|0)+288>>1]<<3)+4>>2]|0)-(c[(c[l>>2]|0)+4>>2]|0)|0,c[(c[g>>2]|0)+224>>2]|0)|0;c[j>>2]=md[c[(c[g>>2]|0)+576>>2]&63](c[g>>2]|0,c[o>>2]|0,c[o+4>>2]|0)|0;break}}else{c[j>>2]=md[c[d+576>>2]&63](c[g>>2]|0,(c[(c[(c[g>>2]|0)+84>>2]|0)+(e[(c[g>>2]|0)+288>>1]<<3)>>2]|0)-(c[c[l>>2]>>2]|0)|0,(c[(c[(c[g>>2]|0)+84>>2]|0)+(e[(c[g>>2]|0)+288>>1]<<3)+4>>2]|0)-(c[(c[l>>2]|0)+4>>2]|0)|0)|0}}while(0);c[k>>2]=md[c[(c[g>>2]|0)+572>>2]&63](c[g>>2]|0,(c[(c[(c[g>>2]|0)+88>>2]|0)+(e[(c[g>>2]|0)+288>>1]<<3)>>2]|0)-(c[c[m>>2]>>2]|0)|0,(c[(c[(c[g>>2]|0)+88>>2]|0)+(e[(c[g>>2]|0)+288>>1]<<3)+4>>2]|0)-(c[(c[m>>2]|0)+4>>2]|0)|0)|0}else{c[j>>2]=0;c[k>>2]=0}while(1){if((c[(c[g>>2]|0)+304>>2]|0)<=0){break a}d=(c[g>>2]|0)+28|0;b=(c[d>>2]|0)+ -1|0;c[d>>2]=b;c[p>>2]=c[(c[(c[g>>2]|0)+24>>2]|0)+(b<<2)>>2];if((c[p>>2]|0)>>>0>=(e[(c[g>>2]|0)+116>>1]|0)>>>0){if((a[(c[g>>2]|0)+561|0]|0)!=0){break}}else{b=c[g>>2]|0;do{if((c[n>>2]|0)==0){if((c[b+220>>2]|0)==(c[(c[g>>2]|0)+224>>2]|0)){c[q>>2]=md[c[(c[g>>2]|0)+576>>2]&63](c[g>>2]|0,(c[(c[(c[g>>2]|0)+128>>2]|0)+(c[p>>2]<<3)>>2]|0)-(c[c[l>>2]>>2]|0)|0,(c[(c[(c[g>>2]|0)+128>>2]|0)+(c[p>>2]<<3)+4>>2]|0)-(c[(c[l>>2]|0)+4>>2]|0)|0)|0;break}else{c[t>>2]=Nn((c[(c[(c[g>>2]|0)+128>>2]|0)+(c[p>>2]<<3)>>2]|0)-(c[c[l>>2]>>2]|0)|0,c[(c[g>>2]|0)+220>>2]|0)|0;c[t+4>>2]=Nn((c[(c[(c[g>>2]|0)+128>>2]|0)+(c[p>>2]<<3)+4>>2]|0)-(c[(c[l>>2]|0)+4>>2]|0)|0,c[(c[g>>2]|0)+224>>2]|0)|0;c[q>>2]=md[c[(c[g>>2]|0)+576>>2]&63](c[g>>2]|0,c[t>>2]|0,c[t+4>>2]|0)|0;break}}else{c[q>>2]=md[c[b+576>>2]&63](c[g>>2]|0,(c[(c[(c[g>>2]|0)+120>>2]|0)+(c[p>>2]<<3)>>2]|0)-(c[c[l>>2]>>2]|0)|0,(c[(c[(c[g>>2]|0)+120>>2]|0)+(c[p>>2]<<3)+4>>2]|0)-(c[(c[l>>2]|0)+4>>2]|0)|0)|0}}while(0);c[r>>2]=md[c[(c[g>>2]|0)+572>>2]&63](c[g>>2]|0,(c[(c[(c[g>>2]|0)+124>>2]|0)+(c[p>>2]<<3)>>2]|0)-(c[c[m>>2]>>2]|0)|0,(c[(c[(c[g>>2]|0)+124>>2]|0)+(c[p>>2]<<3)+4>>2]|0)-(c[(c[m>>2]|0)+4>>2]|0)|0)|0;do{if((c[q>>2]|0)!=0){b=c[q>>2]|0;if((c[j>>2]|0)!=0){c[s>>2]=In(b,c[k>>2]|0,c[j>>2]|0)|0;break}else{c[s>>2]=b;break}}else{c[s>>2]=0}}while(0);Cd[c[(c[g>>2]|0)+584>>2]&31](c[g>>2]|0,(c[g>>2]|0)+108|0,c[p>>2]&65535,(c[s>>2]|0)-(c[r>>2]|0)|0)}b=(c[g>>2]|0)+304|0;c[b>>2]=(c[b>>2]|0)+ -1}c[(c[g>>2]|0)+12>>2]=134;i=f;return}}while(0);c[(c[g>>2]|0)+304>>2]=1;c[(c[g>>2]|0)+32>>2]=c[(c[g>>2]|0)+28>>2];i=f;return}function hw(d,f){d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+16|0;h=g+8|0;j=g;k=g+12|0;l=g+4|0;c[h>>2]=d;c[j>>2]=f;b[k>>1]=c[c[j>>2]>>2];if(!((e[k>>1]|0)>>>0>=(e[(c[h>>2]|0)+80>>1]|0)>>>0)?!((e[(c[h>>2]|0)+284>>1]|0)>>>0>=(e[(c[h>>2]|0)+44>>1]|0)>>>0):0){if((e[(c[h>>2]|0)+346>>1]|0)==0){f=(c[(c[h>>2]|0)+84>>2]|0)+(e[k>>1]<<3)|0;d=(c[(c[h>>2]|0)+48>>2]|0)+(e[(c[h>>2]|0)+284>>1]<<3)|0;c[f+0>>2]=c[d+0>>2];c[f+4>>2]=c[d+4>>2];Cd[c[(c[h>>2]|0)+588>>2]&31](c[h>>2]|0,(c[h>>2]|0)+72|0,b[k>>1]|0,c[(c[j>>2]|0)+4>>2]|0);d=(c[(c[h>>2]|0)+88>>2]|0)+(e[k>>1]<<3)|0;f=(c[(c[h>>2]|0)+84>>2]|0)+(e[k>>1]<<3)|0;c[d+0>>2]=c[f+0>>2];c[d+4>>2]=c[f+4>>2]}c[l>>2]=md[c[(c[h>>2]|0)+572>>2]&63](c[h>>2]|0,(c[(c[(c[h>>2]|0)+88>>2]|0)+(e[k>>1]<<3)>>2]|0)-(c[(c[(c[h>>2]|0)+52>>2]|0)+(e[(c[h>>2]|0)+284>>1]<<3)>>2]|0)|0,(c[(c[(c[h>>2]|0)+88>>2]|0)+(e[k>>1]<<3)+4>>2]|0)-(c[(c[(c[h>>2]|0)+52>>2]|0)+(e[(c[h>>2]|0)+284>>1]<<3)+4>>2]|0)|0)|0;Cd[c[(c[h>>2]|0)+584>>2]&31](c[h>>2]|0,(c[h>>2]|0)+72|0,b[k>>1]|0,(c[(c[j>>2]|0)+4>>2]|0)-(c[l>>2]|0)|0);b[(c[h>>2]|0)+286>>1]=b[(c[h>>2]|0)+284>>1]|0;b[(c[h>>2]|0)+288>>1]=b[k>>1]|0;if((a[(c[h>>2]|0)+368|0]&1|0)==0){i=g;return}b[(c[h>>2]|0)+284>>1]=b[k>>1]|0;i=g;return}if((a[(c[h>>2]|0)+561|0]|0)==0){i=g;return}c[(c[h>>2]|0)+12>>2]=134;i=g;return}function iw(d,f){d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+16|0;h=g+8|0;j=g;k=g+12|0;l=g+4|0;c[h>>2]=d;c[j>>2]=f;c[h>>2]=c[h>>2];c[j>>2]=c[j>>2];a:do{if((c[(c[h>>2]|0)+16>>2]|0)>=(c[(c[h>>2]|0)+304>>2]|0)?!((e[(c[h>>2]|0)+284>>1]|0)>>>0>=(e[(c[h>>2]|0)+44>>1]|0)>>>0):0){while(1){if((c[(c[h>>2]|0)+304>>2]|0)<=0){break a}j=(c[h>>2]|0)+28|0;c[j>>2]=(c[j>>2]|0)+ -1;b[k>>1]=c[(c[(c[h>>2]|0)+24>>2]|0)+(c[(c[h>>2]|0)+28>>2]<<2)>>2];j=c[h>>2]|0;if((e[k>>1]|0)>>>0>=(e[(c[h>>2]|0)+80>>1]|0)>>>0){if((a[j+561|0]|0)!=0){break}}else{c[l>>2]=md[c[j+572>>2]&63](c[h>>2]|0,(c[(c[(c[h>>2]|0)+88>>2]|0)+(e[k>>1]<<3)>>2]|0)-(c[(c[(c[h>>2]|0)+52>>2]|0)+(e[(c[h>>2]|0)+284>>1]<<3)>>2]|0)|0,(c[(c[(c[h>>2]|0)+88>>2]|0)+(e[k>>1]<<3)+4>>2]|0)-(c[(c[(c[h>>2]|0)+52>>2]|0)+(e[(c[h>>2]|0)+284>>1]<<3)+4>>2]|0)|0)|0;Cd[c[(c[h>>2]|0)+584>>2]&31](c[h>>2]|0,(c[h>>2]|0)+72|0,b[k>>1]|0,0-(c[l>>2]|0)|0)}j=(c[h>>2]|0)+304|0;c[j>>2]=(c[j>>2]|0)+ -1}c[(c[h>>2]|0)+12>>2]=134;i=g;return}else{m=3}}while(0);if((m|0)==3?(a[(c[h>>2]|0)+561|0]|0)!=0:0){c[(c[h>>2]|0)+12>>2]=134}c[(c[h>>2]|0)+304>>2]=1;c[(c[h>>2]|0)+32>>2]=c[(c[h>>2]|0)+28>>2];i=g;return}function jw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+16|0;f=e+12|0;g=e;h=e+4|0;j=e+8|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[f>>2]=c[f>>2];if((c[g>>2]|0)<0){f=0-((c[h>>2]|0)-(c[g>>2]|0)+16&-32)|0;c[j>>2]=f;c[j>>2]=(c[j>>2]|0)>0?0:f;k=c[j>>2]|0;i=e;return k|0}c[j>>2]=(c[g>>2]|0)+(c[h>>2]|0)+16;if((c[g>>2]|0)!=0?(c[j>>2]|0)>0:0){c[j>>2]=c[j>>2]&-32;k=c[j>>2]|0;i=e;return k|0}c[j>>2]=0;k=c[j>>2]|0;i=e;return k|0}function kw(d,f){d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=i;i=i+32|0;h=g+20|0;j=g;k=g+4|0;l=g+24|0;m=g+12|0;n=g+16|0;o=g+8|0;c[h>>2]=d;c[j>>2]=f;c[o>>2]=c[(c[h>>2]|0)+320>>2];c[k>>2]=c[(c[j>>2]|0)+4>>2];b[l>>1]=c[c[j>>2]>>2];if(!((e[l>>1]|0)>>>0>=(e[(c[h>>2]|0)+44>>1]|0)>>>0)?!((c[k>>2]|0)>>>0>=(c[(c[h>>2]|0)+380>>2]|0)>>>0):0){c[m>>2]=Ad[c[(c[h>>2]|0)+592>>2]&127](c[h>>2]|0,c[k>>2]|0)|0;if((e[(c[h>>2]|0)+344>>1]|0)==0){k=Qw(c[m>>2]|0,b[(c[h>>2]|0)+298>>1]|0)|0;c[(c[(c[h>>2]|0)+48>>2]|0)+(e[l>>1]<<3)>>2]=k;k=Qw(c[m>>2]|0,b[(c[h>>2]|0)+300>>1]|0)|0;c[(c[(c[h>>2]|0)+48>>2]|0)+(e[l>>1]<<3)+4>>2]=k;k=(c[(c[h>>2]|0)+52>>2]|0)+(e[l>>1]<<3)|0;j=(c[(c[h>>2]|0)+48>>2]|0)+(e[l>>1]<<3)|0;c[k+0>>2]=c[j+0>>2];c[k+4>>2]=c[j+4>>2]}c[n>>2]=md[c[(c[h>>2]|0)+572>>2]&63](c[h>>2]|0,c[(c[(c[h>>2]|0)+52>>2]|0)+(e[l>>1]<<3)>>2]|0,c[(c[(c[h>>2]|0)+52>>2]|0)+(e[l>>1]<<3)+4>>2]|0)|0;if((a[(c[h>>2]|0)+368|0]&1|0)!=0){j=(c[m>>2]|0)-(c[n>>2]|0)|0;if(((((c[m>>2]|0)-(c[n>>2]|0)|0)<0?0-j|0:j)|0)>(c[o>>2]|0)){c[m>>2]=c[n>>2]}c[m>>2]=md[c[(c[h>>2]|0)+568>>2]&63](c[h>>2]|0,c[m>>2]|0,c[(c[h>>2]|0)+264>>2]|0)|0}Cd[c[(c[h>>2]|0)+584>>2]&31](c[h>>2]|0,(c[h>>2]|0)+36|0,b[l>>1]|0,(c[m>>2]|0)-(c[n>>2]|0)|0);p=b[l>>1]|0;q=c[h>>2]|0;r=q+284|0;b[r>>1]=p;s=b[l>>1]|0;t=c[h>>2]|0;u=t+284|0;v=u+2|0;b[v>>1]=s;i=g;return}if((a[(c[h>>2]|0)+561|0]|0)==0){p=b[l>>1]|0;q=c[h>>2]|0;r=q+284|0;b[r>>1]=p;s=b[l>>1]|0;t=c[h>>2]|0;u=t+284|0;v=u+2|0;b[v>>1]=s;i=g;return}c[(c[h>>2]|0)+12>>2]=134;p=b[l>>1]|0;q=c[h>>2]|0;r=q+284|0;b[r>>1]=p;s=b[l>>1]|0;t=c[h>>2]|0;u=t+284|0;v=u+2|0;b[v>>1]=s;i=g;return}function lw(a,f){a=a|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+16|0;h=g+4|0;j=g;k=g+10|0;l=g+8|0;c[h>>2]=a;c[j>>2]=f;b[k>>1]=d[(c[(c[h>>2]|0)+356>>2]|0)+((c[(c[h>>2]|0)+360>>2]|0)+1)|0]|0;if((e[k>>1]|0)>>>0>=((c[(c[h>>2]|0)+20>>2]|0)+1-(c[(c[h>>2]|0)+16>>2]|0)|0)>>>0){c[(c[h>>2]|0)+12>>2]=130;i=g;return}b[l>>1]=1;while(1){if((e[l>>1]|0|0)>(e[k>>1]|0|0)){break}c[(c[j>>2]|0)+((e[l>>1]|0)-1<<2)>>2]=d[(c[(c[h>>2]|0)+356>>2]|0)+((c[(c[h>>2]|0)+360>>2]|0)+(e[l>>1]|0)+1)|0]|0;b[l>>1]=(b[l>>1]|0)+1<<16>>16}l=(c[h>>2]|0)+32|0;c[l>>2]=(c[l>>2]|0)+(e[k>>1]|0);i=g;return}function mw(f,g){f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;h=i;i=i+16|0;j=h+4|0;k=h;l=h+10|0;m=h+8|0;c[j>>2]=f;c[k>>2]=g;b[l>>1]=d[(c[(c[j>>2]|0)+356>>2]|0)+((c[(c[j>>2]|0)+360>>2]|0)+1)|0]|0;g=c[j>>2]|0;if((e[l>>1]|0)>>>0>=((c[(c[j>>2]|0)+20>>2]|0)+1-(c[(c[j>>2]|0)+16>>2]|0)|0)>>>0){c[g+12>>2]=130;i=h;return}f=g+360|0;c[f>>2]=(c[f>>2]|0)+2;b[m>>1]=0;while(1){n=c[j>>2]|0;if((e[m>>1]|0|0)>=(e[l>>1]|0|0)){break}f=(Pw(n)|0)<<16>>16;c[(c[k>>2]|0)+((e[m>>1]|0)<<2)>>2]=f;b[m>>1]=(b[m>>1]|0)+1<<16>>16}a[n+376|0]=0;n=(c[j>>2]|0)+32|0;c[n>>2]=(c[n>>2]|0)+(e[l>>1]|0);i=h;return}function nw(b,d){b=b|0;d=d|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+16|0;g=f+12|0;h=f;j=f+4|0;k=f+8|0;c[g>>2]=b;c[h>>2]=d;c[j>>2]=c[c[h>>2]>>2];d=c[g>>2]|0;if((c[j>>2]|0)>>>0>=(e[(c[g>>2]|0)+116>>1]|0)>>>0){if((a[d+561|0]|0)!=0){c[(c[g>>2]|0)+12>>2]=134}c[k>>2]=0;l=c[k>>2]|0;m=c[h>>2]|0;c[m>>2]=l;i=f;return}b=c[g>>2]|0;if((a[d+368|0]&1|0)!=0){c[k>>2]=md[c[b+576>>2]&63](c[g>>2]|0,c[(c[(c[g>>2]|0)+120>>2]|0)+(c[j>>2]<<3)>>2]|0,c[(c[(c[g>>2]|0)+120>>2]|0)+(c[j>>2]<<3)+4>>2]|0)|0;l=c[k>>2]|0;m=c[h>>2]|0;c[m>>2]=l;i=f;return}else{c[k>>2]=md[c[b+572>>2]&63](c[g>>2]|0,c[(c[(c[g>>2]|0)+124>>2]|0)+(c[j>>2]<<3)>>2]|0,c[(c[(c[g>>2]|0)+124>>2]|0)+(c[j>>2]<<3)+4>>2]|0)|0;l=c[k>>2]|0;m=c[h>>2]|0;c[m>>2]=l;i=f;return}}function ow(d,f){d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+16|0;h=g+8|0;j=g;k=g+4|0;l=g+12|0;c[h>>2]=d;c[j>>2]=f;b[l>>1]=c[c[j>>2]>>2];f=c[h>>2]|0;if((e[l>>1]|0)>>>0>=(e[(c[h>>2]|0)+116>>1]|0)>>>0){if((a[f+561|0]|0)==0){i=g;return}c[(c[h>>2]|0)+12>>2]=134;i=g;return}else{c[k>>2]=md[c[f+572>>2]&63](c[h>>2]|0,c[(c[(c[h>>2]|0)+124>>2]|0)+(e[l>>1]<<3)>>2]|0,c[(c[(c[h>>2]|0)+124>>2]|0)+(e[l>>1]<<3)+4>>2]|0)|0;Cd[c[(c[h>>2]|0)+584>>2]&31](c[h>>2]|0,(c[h>>2]|0)+108|0,b[l>>1]|0,(c[(c[j>>2]|0)+4>>2]|0)-(c[k>>2]|0)|0);if((e[(c[h>>2]|0)+348>>1]|0)!=0){i=g;return}k=(c[(c[h>>2]|0)+120>>2]|0)+(e[l>>1]<<3)|0;j=(c[(c[h>>2]|0)+124>>2]|0)+(e[l>>1]<<3)|0;c[k+0>>2]=c[j+0>>2];c[k+4>>2]=c[j+4>>2];i=g;return}}function pw(d,f){d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=i;i=i+48|0;h=g+36|0;j=g+32|0;k=g+40|0;l=g+42|0;m=g+28|0;n=g+24|0;o=g+8|0;p=g+4|0;q=g;r=g+16|0;c[h>>2]=d;c[j>>2]=f;b[k>>1]=c[(c[j>>2]|0)+4>>2];b[l>>1]=c[c[j>>2]>>2];if(!((e[l>>1]|0)>>>0>=(e[(c[h>>2]|0)+44>>1]|0)>>>0)?!((e[k>>1]|0)>>>0>=(e[(c[h>>2]|0)+80>>1]|0)>>>0):0){f=c[h>>2]|0;if((a[(c[h>>2]|0)+368|0]&1|0)!=0){c[m>>2]=md[c[f+572>>2]&63](c[h>>2]|0,(c[(c[(c[h>>2]|0)+52>>2]|0)+(e[l>>1]<<3)>>2]|0)-(c[(c[(c[h>>2]|0)+88>>2]|0)+(e[k>>1]<<3)>>2]|0)|0,(c[(c[(c[h>>2]|0)+52>>2]|0)+(e[l>>1]<<3)+4>>2]|0)-(c[(c[(c[h>>2]|0)+88>>2]|0)+(e[k>>1]<<3)+4>>2]|0)|0)|0;s=c[m>>2]|0;t=c[j>>2]|0;c[t>>2]=s;i=g;return}if((e[f+344>>1]|0)!=0?(e[(c[h>>2]|0)+346>>1]|0)!=0:0){c[p>>2]=(c[(c[h>>2]|0)+56>>2]|0)+(e[l>>1]<<3);c[q>>2]=(c[(c[h>>2]|0)+92>>2]|0)+(e[k>>1]<<3);if((c[(c[h>>2]|0)+220>>2]|0)==(c[(c[h>>2]|0)+224>>2]|0)){c[m>>2]=md[c[(c[h>>2]|0)+576>>2]&63](c[h>>2]|0,(c[c[p>>2]>>2]|0)-(c[c[q>>2]>>2]|0)|0,(c[(c[p>>2]|0)+4>>2]|0)-(c[(c[q>>2]|0)+4>>2]|0)|0)|0;c[m>>2]=Nn(c[m>>2]|0,c[(c[h>>2]|0)+220>>2]|0)|0;s=c[m>>2]|0;t=c[j>>2]|0;c[t>>2]=s;i=g;return}else{c[r>>2]=Nn((c[c[p>>2]>>2]|0)-(c[c[q>>2]>>2]|0)|0,c[(c[h>>2]|0)+220>>2]|0)|0;c[r+4>>2]=Nn((c[(c[p>>2]|0)+4>>2]|0)-(c[(c[q>>2]|0)+4>>2]|0)|0,c[(c[h>>2]|0)+224>>2]|0)|0;c[m>>2]=md[c[(c[h>>2]|0)+576>>2]&63](c[h>>2]|0,c[r>>2]|0,c[r+4>>2]|0)|0;s=c[m>>2]|0;t=c[j>>2]|0;c[t>>2]=s;i=g;return}}c[n>>2]=(c[(c[h>>2]|0)+48>>2]|0)+(e[l>>1]<<3);c[o>>2]=(c[(c[h>>2]|0)+84>>2]|0)+(e[k>>1]<<3);c[m>>2]=md[c[(c[h>>2]|0)+576>>2]&63](c[h>>2]|0,(c[c[n>>2]>>2]|0)-(c[c[o>>2]>>2]|0)|0,(c[(c[n>>2]|0)+4>>2]|0)-(c[(c[o>>2]|0)+4>>2]|0)|0)|0;s=c[m>>2]|0;t=c[j>>2]|0;c[t>>2]=s;i=g;return}if((a[(c[h>>2]|0)+561|0]|0)!=0){c[(c[h>>2]|0)+12>>2]=134}c[m>>2]=0;s=c[m>>2]|0;t=c[j>>2]|0;c[t>>2]=s;i=g;return}function qw(a){a=a|0;var b=0,d=0,f=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=e[(c[d>>2]|0)+252>>1]|0;f=Nn(a,Sw(c[d>>2]|0)|0)|0;i=b;return f|0}function rw(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+16|0;g=f+8|0;h=f;j=f+4|0;k=f+12|0;c[g>>2]=b;c[h>>2]=e;if((c[c[h>>2]>>2]|0)!=0){i=f;return}c[j>>2]=1;a[k]=0;while(1){if(((Rw(c[g>>2]|0)|0)&255|0)==1){l=9;break}h=d[(c[g>>2]|0)+368|0]|0;if((h|0)==89){c[j>>2]=(c[j>>2]|0)+ -1;a[k]=(c[j>>2]|0)==0}else if((h|0)==27){a[k]=(c[j>>2]|0)==1}else if((h|0)==88){c[j>>2]=(c[j>>2]|0)+1}if((d[k]|0|0)!=0){l=9;break}}if((l|0)==9){i=f;return}}function sw(f,g){f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;h=i;i=i+32|0;j=h+20|0;k=h;l=h+4|0;m=h+8|0;n=h+24|0;o=h+16|0;p=h+12|0;c[j>>2]=f;c[k>>2]=g;c[m>>2]=c[c[k>>2]>>2];c[l>>2]=1;while(1){if(!((c[l>>2]|0)>>>0<=(c[m>>2]|0)>>>0)){q=18;break}r=c[j>>2]|0;if((c[(c[j>>2]|0)+28>>2]|0)<2){break}k=r+28|0;c[k>>2]=(c[k>>2]|0)-2;b[n>>1]=c[(c[(c[j>>2]|0)+24>>2]|0)+((c[(c[j>>2]|0)+28>>2]|0)+1<<2)>>2];c[p>>2]=c[(c[(c[j>>2]|0)+24>>2]|0)+(c[(c[j>>2]|0)+28>>2]<<2)>>2];if((e[n>>1]|0)>>>0>=(e[(c[j>>2]|0)+44>>1]|0)>>>0){if((a[(c[j>>2]|0)+561|0]|0)!=0){c[(c[j>>2]|0)+12>>2]=134}}else{c[o>>2]=(c[p>>2]&240)>>>4;k=d[(c[j>>2]|0)+368|0]|0;if((k|0)==113){c[o>>2]=(c[o>>2]|0)+16}else if((k|0)==114){c[o>>2]=(c[o>>2]|0)+32}c[o>>2]=(c[o>>2]|0)+(b[(c[j>>2]|0)+332>>1]|0);k=qw(c[j>>2]|0)|0;if((k|0)==(c[o>>2]|0)){c[p>>2]=(c[p>>2]&15)-8;if((c[p>>2]|0)>=0){c[p>>2]=(c[p>>2]|0)+1}c[p>>2]=(c[p>>2]<<6|0)/(1<<b[(c[j>>2]|0)+334>>1]|0)|0;Cd[c[(c[j>>2]|0)+584>>2]&31](c[j>>2]|0,(c[j>>2]|0)+36|0,b[n>>1]|0,c[p>>2]|0)}}c[l>>2]=(c[l>>2]|0)+1}if((q|0)==18){s=c[j>>2]|0;t=s+28|0;u=c[t>>2]|0;v=c[j>>2]|0;w=v+32|0;c[w>>2]=u;i=h;return}if((a[r+561|0]|0)!=0){c[(c[j>>2]|0)+12>>2]=129}c[(c[j>>2]|0)+28>>2]=0;s=c[j>>2]|0;t=s+28|0;u=c[t>>2]|0;v=c[j>>2]|0;w=v+32|0;c[w>>2]=u;i=h;return}function tw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e+12|0;g=e;h=e+4|0;j=e+8|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[f>>2]=c[f>>2];f=c[g>>2]|0;d=c[h>>2]|0;if((c[g>>2]|0)>=0){c[j>>2]=f+d;if((c[g>>2]|0)!=0?(c[j>>2]|0)<0:0){c[j>>2]=0}}else{g=f-d|0;c[j>>2]=g;c[j>>2]=(c[j>>2]|0)>0?0:g}i=e;return c[j>>2]|0}function uw(e,f){e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+32|0;h=g+24|0;j=g;k=g+4|0;l=g+8|0;m=g+12|0;n=g+16|0;o=g+20|0;c[h>>2]=e;c[j>>2]=f;c[k>>2]=c[c[j>>2]>>2];c[l>>2]=1;while(1){if(!((c[l>>2]|0)>>>0<=(c[k>>2]|0)>>>0)){break}p=c[h>>2]|0;if((c[(c[h>>2]|0)+28>>2]|0)<2){q=4;break}j=p+28|0;c[j>>2]=(c[j>>2]|0)-2;c[m>>2]=c[(c[(c[h>>2]|0)+24>>2]|0)+((c[(c[h>>2]|0)+28>>2]|0)+1<<2)>>2];c[o>>2]=c[(c[(c[h>>2]|0)+24>>2]|0)+(c[(c[h>>2]|0)+28>>2]<<2)>>2];if((c[m>>2]|0)>>>0>=(c[(c[h>>2]|0)+380>>2]|0)>>>0){if((a[(c[h>>2]|0)+561|0]|0)!=0){q=9;break}}else{c[n>>2]=(c[o>>2]&240)>>>4;j=d[(c[h>>2]|0)+368|0]|0;if((j|0)==117){c[n>>2]=(c[n>>2]|0)+32}else if((j|0)==116){c[n>>2]=(c[n>>2]|0)+16}c[n>>2]=(c[n>>2]|0)+(b[(c[h>>2]|0)+332>>1]|0);j=qw(c[h>>2]|0)|0;if((j|0)==(c[n>>2]|0)){c[o>>2]=(c[o>>2]&15)-8;if((c[o>>2]|0)>=0){c[o>>2]=(c[o>>2]|0)+1}c[o>>2]=(c[o>>2]<<6|0)/(1<<b[(c[h>>2]|0)+334>>1]|0)|0;wd[c[(c[h>>2]|0)+600>>2]&31](c[h>>2]|0,c[m>>2]|0,c[o>>2]|0)}}c[l>>2]=(c[l>>2]|0)+1}if((q|0)==9){c[(c[h>>2]|0)+12>>2]=134;i=g;return}if((q|0)==4){if((a[p+561|0]|0)!=0){c[(c[h>>2]|0)+12>>2]=129}c[(c[h>>2]|0)+28>>2]=0}c[(c[h>>2]|0)+32>>2]=c[(c[h>>2]|0)+28>>2];i=g;return}function vw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;d=c[h>>2]&192;if((d|0)==64){c[(c[f>>2]|0)+476>>2]=c[g>>2]}else if((d|0)==192){c[(c[f>>2]|0)+476>>2]=c[g>>2]}else if((d|0)==0){c[(c[f>>2]|0)+476>>2]=(c[g>>2]|0)/2|0}else if((d|0)==128){c[(c[f>>2]|0)+476>>2]=c[g>>2]<<1}g=c[h>>2]&48;if((g|0)==16){c[(c[f>>2]|0)+480>>2]=(c[(c[f>>2]|0)+476>>2]|0)/4|0}else if((g|0)==0){c[(c[f>>2]|0)+480>>2]=0}else if((g|0)==48){c[(c[f>>2]|0)+480>>2]=((c[(c[f>>2]|0)+476>>2]|0)*3|0)/4|0}else if((g|0)==32){c[(c[f>>2]|0)+480>>2]=(c[(c[f>>2]|0)+476>>2]|0)/2|0}if((c[h>>2]&15|0)==0){c[(c[f>>2]|0)+484>>2]=(c[(c[f>>2]|0)+476>>2]|0)-1;j=c[f>>2]|0;k=j+476|0;l=c[k>>2]|0;m=(l|0)/256|0;c[k>>2]=m;n=c[f>>2]|0;o=n+480|0;p=c[o>>2]|0;q=(p|0)/256|0;c[o>>2]=q;r=c[f>>2]|0;s=r+484|0;t=c[s>>2]|0;u=(t|0)/256|0;c[s>>2]=u;i=e;return}else{g=(aa((c[h>>2]&15)-4|0,c[(c[f>>2]|0)+476>>2]|0)|0)/8|0;c[(c[f>>2]|0)+484>>2]=g;j=c[f>>2]|0;k=j+476|0;l=c[k>>2]|0;m=(l|0)/256|0;c[k>>2]=m;n=c[f>>2]|0;o=n+480|0;p=c[o>>2]|0;q=(p|0)/256|0;c[o>>2]=q;r=c[f>>2]|0;s=r+484|0;t=c[s>>2]|0;u=(t|0)/256|0;c[s>>2]=u;i=e;return}}function ww(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+16|0;f=e+12|0;g=e;h=e+4|0;j=e+8|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;if((c[g>>2]|0)<0){d=0-((c[(c[f>>2]|0)+484>>2]|0)-(c[(c[f>>2]|0)+480>>2]|0)-(c[g>>2]|0)+(c[h>>2]|0)&0-(c[(c[f>>2]|0)+476>>2]|0))|0;c[j>>2]=d;c[j>>2]=(c[j>>2]|0)>0?0:d;c[j>>2]=(c[j>>2]|0)-(c[(c[f>>2]|0)+480>>2]|0);k=c[j>>2]|0;i=e;return k|0}c[j>>2]=(c[g>>2]|0)-(c[(c[f>>2]|0)+480>>2]|0)+(c[(c[f>>2]|0)+484>>2]|0)+(c[h>>2]|0)&0-(c[(c[f>>2]|0)+476>>2]|0);if((c[g>>2]|0)!=0?(c[j>>2]|0)<0:0){c[j>>2]=0}c[j>>2]=(c[j>>2]|0)+(c[(c[f>>2]|0)+480>>2]|0);k=c[j>>2]|0;i=e;return k|0}function xw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+16|0;f=e+12|0;g=e;h=e+4|0;j=e+8|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;if((c[g>>2]|0)<0){d=0-(aa(((c[(c[f>>2]|0)+484>>2]|0)-(c[(c[f>>2]|0)+480>>2]|0)-(c[g>>2]|0)+(c[h>>2]|0)|0)/(c[(c[f>>2]|0)+476>>2]|0)|0,c[(c[f>>2]|0)+476>>2]|0)|0)|0;c[j>>2]=d;c[j>>2]=(c[j>>2]|0)>0?0:d;c[j>>2]=(c[j>>2]|0)-(c[(c[f>>2]|0)+480>>2]|0);k=c[j>>2]|0;i=e;return k|0}c[j>>2]=aa(((c[g>>2]|0)-(c[(c[f>>2]|0)+480>>2]|0)+(c[(c[f>>2]|0)+484>>2]|0)+(c[h>>2]|0)|0)/(c[(c[f>>2]|0)+476>>2]|0)|0,c[(c[f>>2]|0)+476>>2]|0)|0;if((c[g>>2]|0)!=0?(c[j>>2]|0)<0:0){c[j>>2]=0}c[j>>2]=(c[j>>2]|0)+(c[(c[f>>2]|0)+480>>2]|0);k=c[j>>2]|0;i=e;return k|0}function yw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+16|0;f=e+12|0;g=e;h=e+4|0;j=e+8|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[f>>2]=c[f>>2];if((c[g>>2]|0)<0){f=0-((c[h>>2]|0)-(c[g>>2]|0)+63&-64)|0;c[j>>2]=f;c[j>>2]=(c[j>>2]|0)>0?0:f;k=c[j>>2]|0;i=e;return k|0}c[j>>2]=(c[g>>2]|0)+(c[h>>2]|0)+63;if((c[g>>2]|0)!=0?(c[j>>2]|0)>0:0){c[j>>2]=c[j>>2]&-64;k=c[j>>2]|0;i=e;return k|0}c[j>>2]=0;k=c[j>>2]|0;i=e;return k|0}function zw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+16|0;f=e+12|0;g=e;h=e+4|0;j=e+8|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[f>>2]=c[f>>2];if((c[g>>2]|0)<0){f=0-((c[h>>2]|0)-(c[g>>2]|0)&-64)|0;c[j>>2]=f;c[j>>2]=(c[j>>2]|0)>0?0:f;k=c[j>>2]|0;i=e;return k|0}c[j>>2]=(c[g>>2]|0)+(c[h>>2]|0);if((c[g>>2]|0)!=0?(c[j>>2]|0)>0:0){c[j>>2]=c[j>>2]&-64;k=c[j>>2]|0;i=e;return k|0}c[j>>2]=0;k=c[j>>2]|0;i=e;return k|0}function Aw(f,g){f=f|0;g=g|0;var h=0,j=0,k=0,l=0;h=i;i=i+16|0;j=h+4|0;k=h;l=h+8|0;c[j>>2]=f;c[k>>2]=g;c[j>>2]=c[j>>2];c[k>>2]=c[k>>2];a:do{if((c[(c[j>>2]|0)+16>>2]|0)<(c[(c[j>>2]|0)+304>>2]|0)){if((a[(c[j>>2]|0)+561|0]|0)!=0){c[(c[j>>2]|0)+12>>2]=129}}else{while(1){if((c[(c[j>>2]|0)+304>>2]|0)<=0){break a}k=(c[j>>2]|0)+28|0;c[k>>2]=(c[k>>2]|0)+ -1;b[l>>1]=c[(c[(c[j>>2]|0)+24>>2]|0)+(c[(c[j>>2]|0)+28>>2]<<2)>>2];if((e[l>>1]|0)>>>0>=(e[(c[j>>2]|0)+152>>1]|0)>>>0){if((a[(c[j>>2]|0)+561|0]|0)!=0){break}}else{k=(c[(c[j>>2]|0)+168>>2]|0)+(e[l>>1]|0)|0;a[k]=d[k]^1}k=(c[j>>2]|0)+304|0;c[k>>2]=(c[k>>2]|0)+ -1}c[(c[j>>2]|0)+12>>2]=134;i=h;return}}while(0);c[(c[j>>2]|0)+304>>2]=1;c[(c[j>>2]|0)+32>>2]=c[(c[j>>2]|0)+28>>2];i=h;return}function Bw(f,g){f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;h=i;i=i+16|0;j=h+4|0;k=h;l=h+12|0;m=h+8|0;n=h+10|0;c[j>>2]=f;c[k>>2]=g;b[m>>1]=c[(c[k>>2]|0)+4>>2];b[n>>1]=c[c[k>>2]>>2];if(!((e[m>>1]|0)>>>0>=(e[(c[j>>2]|0)+152>>1]|0)>>>0)?!((e[n>>1]|0)>>>0>=(e[(c[j>>2]|0)+152>>1]|0)>>>0):0){b[l>>1]=b[n>>1]|0;while(1){if((e[l>>1]|0)>(e[m>>1]|0)){break}n=(c[(c[j>>2]|0)+168>>2]|0)+(e[l>>1]|0)|0;a[n]=d[n]|1;b[l>>1]=(b[l>>1]|0)+1<<16>>16}i=h;return}if((a[(c[j>>2]|0)+561|0]|0)==0){i=h;return}c[(c[j>>2]|0)+12>>2]=134;i=h;return}function Cw(f,g){f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;h=i;i=i+16|0;j=h+4|0;k=h;l=h+12|0;m=h+8|0;n=h+10|0;c[j>>2]=f;c[k>>2]=g;b[m>>1]=c[(c[k>>2]|0)+4>>2];b[n>>1]=c[c[k>>2]>>2];if(!((e[m>>1]|0)>>>0>=(e[(c[j>>2]|0)+152>>1]|0)>>>0)?!((e[n>>1]|0)>>>0>=(e[(c[j>>2]|0)+152>>1]|0)>>>0):0){b[l>>1]=b[n>>1]|0;while(1){if((e[l>>1]|0)>(e[m>>1]|0)){break}n=(c[(c[j>>2]|0)+168>>2]|0)+(e[l>>1]|0)|0;a[n]=d[n]&-2;b[l>>1]=(b[l>>1]|0)+1<<16>>16}i=h;return}if((a[(c[j>>2]|0)+561|0]|0)==0){i=h;return}c[(c[j>>2]|0)+12>>2]=134;i=h;return}function Dw(b,f){b=b|0;f=f|0;var g=0,h=0,j=0,k=0;g=i;i=i+16|0;h=g+8|0;j=g;k=g+4|0;c[h>>2]=b;c[j>>2]=f;c[k>>2]=c[c[j>>2]>>2]&255;if((c[k>>2]|0)==255){a[(c[h>>2]|0)+337|0]=1;i=g;return}if((c[k>>2]|0)==0){a[(c[h>>2]|0)+337|0]=0;i=g;return}if((c[c[j>>2]>>2]&256|0)!=0?(e[(c[h>>2]|0)+252>>1]|0|0)<=(c[k>>2]|0):0){a[(c[h>>2]|0)+337|0]=1}if((c[c[j>>2]>>2]&512|0)!=0?(d[(c[h>>2]|0)+281|0]|0|0)!=0:0){a[(c[h>>2]|0)+337|0]=1}if((c[c[j>>2]>>2]&1024|0)!=0?(d[(c[h>>2]|0)+282|0]|0|0)!=0:0){a[(c[h>>2]|0)+337|0]=1}if((c[c[j>>2]>>2]&2048|0)!=0?(e[(c[h>>2]|0)+252>>1]|0|0)>(c[k>>2]|0):0){a[(c[h>>2]|0)+337|0]=0}if((c[c[j>>2]>>2]&4096|0)!=0?(d[(c[h>>2]|0)+281|0]|0|0)!=0:0){a[(c[h>>2]|0)+337|0]=0}if((c[c[j>>2]>>2]&8192|0)==0){i=g;return}if((d[(c[h>>2]|0)+282|0]|0|0)==0){i=g;return}a[(c[h>>2]|0)+337|0]=0;i=g;return}function Ew(f,g){f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;h=i;i=i+48|0;j=h+20|0;k=h+36|0;l=h+32|0;m=h+28|0;n=h+24|0;o=h+42|0;p=h+40|0;q=h+12|0;r=h+8|0;s=h+4|0;t=h;u=h+16|0;c[j>>2]=f;c[k>>2]=g;c[q>>2]=d[(c[j>>2]|0)+368|0]|0;b[o>>1]=c[(c[k>>2]|0)+4>>2];b[p>>1]=c[c[k>>2]>>2];if(!((e[p>>1]|0)>>>0>=(e[(c[j>>2]|0)+80>>1]|0)>>>0)?!((e[o>>1]|0)>>>0>=(e[(c[j>>2]|0)+116>>1]|0)>>>0):0){c[r>>2]=(c[(c[j>>2]|0)+84>>2]|0)+(e[p>>1]<<3);c[s>>2]=(c[(c[j>>2]|0)+120>>2]|0)+(e[o>>1]<<3);c[l>>2]=(c[c[r>>2]>>2]|0)-(c[c[s>>2]>>2]|0);c[m>>2]=(c[(c[r>>2]|0)+4>>2]|0)-(c[(c[s>>2]|0)+4>>2]|0);if((c[l>>2]|0)==0?(c[m>>2]|0)==0:0){c[l>>2]=16384;c[q>>2]=0}if((c[q>>2]&1|0)!=0){c[n>>2]=c[m>>2];c[m>>2]=c[l>>2];c[l>>2]=0-(c[n>>2]|0)}Lv(c[j>>2]|0,c[l>>2]|0,c[m>>2]|0,(c[j>>2]|0)+290|0)|0;c[t>>2]=(c[(c[j>>2]|0)+88>>2]|0)+(e[p>>1]<<3);c[u>>2]=(c[(c[j>>2]|0)+124>>2]|0)+(e[o>>1]<<3);c[l>>2]=(c[c[t>>2]>>2]|0)-(c[c[u>>2]>>2]|0);c[m>>2]=(c[(c[t>>2]|0)+4>>2]|0)-(c[(c[u>>2]|0)+4>>2]|0);if((c[l>>2]|0)==0?(c[m>>2]|0)==0:0){c[l>>2]=16384;c[q>>2]=0}if((c[q>>2]&1|0)!=0){c[n>>2]=c[m>>2];c[m>>2]=c[l>>2];c[l>>2]=0-(c[n>>2]|0)}Lv(c[j>>2]|0,c[l>>2]|0,c[m>>2]|0,(c[j>>2]|0)+294|0)|0;Iv(c[j>>2]|0);i=h;return}if((a[(c[j>>2]|0)+561|0]|0)==0){i=h;return}c[(c[j>>2]|0)+12>>2]=134;i=h;return}function Fw(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=0;c[h>>2]=(c[c[g>>2]>>2]&1|0)!=0?35:0;if((c[c[g>>2]>>2]&2|0)!=0?(d[(c[f>>2]|0)+281|0]|0|0)!=0:0){c[h>>2]=c[h>>2]|128}if((c[c[g>>2]>>2]&4|0)!=0?(d[(c[f>>2]|0)+282|0]|0|0)!=0:0){c[h>>2]=c[h>>2]|256}if((c[c[g>>2]>>2]&32|0)==0){j=c[h>>2]|0;k=c[g>>2]|0;c[k>>2]=j;i=e;return}if((d[(c[f>>2]|0)+604|0]|0|0)==0){j=c[h>>2]|0;k=c[g>>2]|0;c[k>>2]=j;i=e;return}c[h>>2]=c[h>>2]|4096;j=c[h>>2]|0;k=c[g>>2]|0;c[k>>2]=j;i=e;return}function Gw(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+16|0;g=f+12|0;h=f;j=f+4|0;k=f+8|0;c[g>>2]=b;c[h>>2]=e;c[j>>2]=c[(c[g>>2]|0)+416>>2];c[k>>2]=(c[j>>2]|0)+((c[(c[g>>2]|0)+408>>2]|0)*24|0);while(1){if(!((c[j>>2]|0)>>>0<(c[k>>2]|0)>>>0)){break}if((c[(c[j>>2]|0)+12>>2]|0)==(c[c[h>>2]>>2]|0)){break}c[j>>2]=(c[j>>2]|0)+24}do{if((c[j>>2]|0)==(c[k>>2]|0)){e=c[g>>2]|0;if(!((c[(c[g>>2]|0)+408>>2]|0)>>>0>=(c[(c[g>>2]|0)+412>>2]|0)>>>0)){b=e+408|0;c[b>>2]=(c[b>>2]|0)+1;break}c[e+12>>2]=141;i=f;return}}while(0);if(0<=(c[c[h>>2]>>2]|0)?(c[c[h>>2]>>2]|0)<=255:0){c[(c[j>>2]|0)+12>>2]=c[c[h>>2]>>2]&255;c[(c[j>>2]|0)+4>>2]=(c[(c[g>>2]|0)+360>>2]|0)+1;c[c[j>>2]>>2]=c[(c[g>>2]|0)+352>>2];a[(c[j>>2]|0)+16|0]=1;if((c[c[h>>2]>>2]|0)>>>0>(c[(c[g>>2]|0)+424>>2]|0)>>>0){c[(c[g>>2]|0)+424>>2]=c[c[h>>2]>>2]&255}while(1){if(((Rw(c[g>>2]|0)|0)&255|0)!=0){l=17;break}h=d[(c[g>>2]|0)+368|0]|0;if((h|0)==45){l=17;break}else if((h|0)==44|(h|0)==137){l=16;break}}if((l|0)==16){c[(c[g>>2]|0)+12>>2]=137;i=f;return}else if((l|0)==17){i=f;return}}c[(c[g>>2]|0)+12>>2]=141;i=f;return}function Hw(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+32|0;e=d+16|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;c[e>>2]=a;c[f>>2]=b;c[e>>2]=c[e>>2];c[g>>2]=c[(c[f>>2]|0)+8>>2];c[h>>2]=c[(c[f>>2]|0)+4>>2];c[j>>2]=c[c[f>>2]>>2];c[(c[f>>2]|0)+8>>2]=c[j>>2];c[(c[f>>2]|0)+4>>2]=c[g>>2];c[c[f>>2]>>2]=c[h>>2];i=d;return}function Iw(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;if((c[c[f>>2]>>2]|0)<0){i=d;return}c[(c[e>>2]|0)+340>>2]=c[c[f>>2]>>2];i=d;return}function Jw(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;g=f+12|0;h=f;j=f+4|0;k=f+8|0;c[g>>2]=b;c[h>>2]=e;c[j>>2]=c[(c[h>>2]|0)+4>>2];c[k>>2]=c[c[h>>2]>>2];if((c[j>>2]|0)<1|(c[j>>2]|0)>2){if((a[(c[g>>2]|0)+561|0]|0)==0){i=f;return}c[(c[g>>2]|0)+12>>2]=134;i=f;return}else{if((c[k>>2]|0)!=0){c[k>>2]=c[j>>2]}a[(c[g>>2]|0)+336|0]=d[(c[g>>2]|0)+336|0]&~(c[j>>2]&255)|c[k>>2]&255;i=f;return}}function Kw(d,f){d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;g=i;i=i+48|0;h=g+32|0;j=g+28|0;k=g+36|0;l=g+24|0;m=g+20|0;n=g+16|0;o=g+8|0;p=g+4|0;q=g;r=g+12|0;c[h>>2]=d;c[j>>2]=f;c[r>>2]=c[(c[h>>2]|0)+308>>2];c[q>>2]=c[(c[h>>2]|0)+320>>2];b[k>>1]=c[c[j>>2]>>2];c[l>>2]=(c[(c[j>>2]|0)+4>>2]|0)+1;if((!((e[k>>1]|0)>>>0>=(e[(c[h>>2]|0)+80>>1]|0)>>>0)?!((c[l>>2]|0)>>>0>=((c[(c[h>>2]|0)+380>>2]|0)+1|0)>>>0):0)?!((e[(c[h>>2]|0)+284>>1]|0)>>>0>=(e[(c[h>>2]|0)+44>>1]|0)>>>0):0){if((c[l>>2]|0)!=0){c[m>>2]=Ad[c[(c[h>>2]|0)+592>>2]&127](c[h>>2]|0,(c[l>>2]|0)-1|0)|0}else{c[m>>2]=0}l=(c[m>>2]|0)-(c[(c[h>>2]|0)+328>>2]|0)|0;do{if(((((c[m>>2]|0)-(c[(c[h>>2]|0)+328>>2]|0)|0)<0?0-l|0:l)|0)<(c[(c[h>>2]|0)+324>>2]|0)){j=c[(c[h>>2]|0)+328>>2]|0;if((c[m>>2]|0)>=0){c[m>>2]=j;break}else{c[m>>2]=0-j;break}}}while(0);if((e[(c[h>>2]|0)+346>>1]|0)==0){l=c[(c[(c[h>>2]|0)+48>>2]|0)+(e[(c[h>>2]|0)+284>>1]<<3)>>2]|0;j=l+(Qw(c[m>>2]|0,b[(c[h>>2]|0)+298>>1]|0)|0)|0;c[(c[(c[h>>2]|0)+84>>2]|0)+(e[k>>1]<<3)>>2]=j;j=c[(c[(c[h>>2]|0)+48>>2]|0)+(e[(c[h>>2]|0)+284>>1]<<3)+4>>2]|0;l=j+(Qw(c[m>>2]|0,b[(c[h>>2]|0)+300>>1]|0)|0)|0;c[(c[(c[h>>2]|0)+84>>2]|0)+(e[k>>1]<<3)+4>>2]=l;l=(c[(c[h>>2]|0)+88>>2]|0)+(e[k>>1]<<3)|0;j=(c[(c[h>>2]|0)+84>>2]|0)+(e[k>>1]<<3)|0;c[l+0>>2]=c[j+0>>2];c[l+4>>2]=c[j+4>>2]}c[p>>2]=md[c[(c[h>>2]|0)+576>>2]&63](c[h>>2]|0,(c[(c[(c[h>>2]|0)+84>>2]|0)+(e[k>>1]<<3)>>2]|0)-(c[(c[(c[h>>2]|0)+48>>2]|0)+(e[(c[h>>2]|0)+284>>1]<<3)>>2]|0)|0,(c[(c[(c[h>>2]|0)+84>>2]|0)+(e[k>>1]<<3)+4>>2]|0)-(c[(c[(c[h>>2]|0)+48>>2]|0)+(e[(c[h>>2]|0)+284>>1]<<3)+4>>2]|0)|0)|0;c[o>>2]=md[c[(c[h>>2]|0)+572>>2]&63](c[h>>2]|0,(c[(c[(c[h>>2]|0)+88>>2]|0)+(e[k>>1]<<3)>>2]|0)-(c[(c[(c[h>>2]|0)+52>>2]|0)+(e[(c[h>>2]|0)+284>>1]<<3)>>2]|0)|0,(c[(c[(c[h>>2]|0)+88>>2]|0)+(e[k>>1]<<3)+4>>2]|0)-(c[(c[(c[h>>2]|0)+52>>2]|0)+(e[(c[h>>2]|0)+284>>1]<<3)+4>>2]|0)|0)|0;if((a[(c[h>>2]|0)+316|0]|0)!=0?(c[p>>2]^c[m>>2]|0)<0:0){c[m>>2]=0-(c[m>>2]|0)}j=c[h>>2]|0;if((a[(c[h>>2]|0)+368|0]&4|0)!=0){if((e[j+344>>1]|0)==(e[(c[h>>2]|0)+346>>1]|0)?(l=(c[m>>2]|0)-(c[p>>2]|0)|0,((((c[m>>2]|0)-(c[p>>2]|0)|0)<0?0-l|0:l)|0)>(c[q>>2]|0)):0){c[m>>2]=c[p>>2]}c[n>>2]=md[c[(c[h>>2]|0)+568>>2]&63](c[h>>2]|0,c[m>>2]|0,c[(c[h>>2]|0)+264+((a[(c[h>>2]|0)+368|0]&3)<<2)>>2]|0)|0}else{c[n>>2]=tw(j,c[m>>2]|0,c[(c[h>>2]|0)+264+((a[(c[h>>2]|0)+368|0]&3)<<2)>>2]|0)|0}do{if((a[(c[h>>2]|0)+368|0]&8|0)!=0){m=c[n>>2]|0;j=c[r>>2]|0;if((c[p>>2]|0)>=0){if((m|0)>=(j|0)){break}c[n>>2]=c[r>>2];break}else{if((m|0)<=(0-j|0)){break}c[n>>2]=0-(c[r>>2]|0);break}}}while(0);Cd[c[(c[h>>2]|0)+584>>2]&31](c[h>>2]|0,(c[h>>2]|0)+72|0,b[k>>1]|0,(c[n>>2]|0)-(c[o>>2]|0)|0)}else{s=4}if((s|0)==4?(a[(c[h>>2]|0)+561|0]|0)!=0:0){c[(c[h>>2]|0)+12>>2]=134}b[(c[h>>2]|0)+286>>1]=b[(c[h>>2]|0)+284>>1]|0;if((a[(c[h>>2]|0)+368|0]&16|0)==0){t=b[k>>1]|0;u=c[h>>2]|0;v=u+284|0;w=v+4|0;b[w>>1]=t;i=g;return}b[(c[h>>2]|0)+284>>1]=b[k>>1]|0;t=b[k>>1]|0;u=c[h>>2]|0;v=u+284|0;w=v+4|0;b[w>>1]=t;i=g;return}function Lw(d,f){d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=i;i=i+48|0;h=g+40|0;j=g+36|0;k=g+44|0;l=g+32|0;m=g+28|0;n=g+24|0;o=g+12|0;p=g+8|0;q=g+4|0;r=g;s=g+16|0;c[h>>2]=d;c[j>>2]=f;c[n>>2]=c[(c[h>>2]|0)+308>>2];b[k>>1]=c[c[j>>2]>>2];if(!((e[k>>1]|0)>>>0>=(e[(c[h>>2]|0)+80>>1]|0)>>>0)?!((e[(c[h>>2]|0)+284>>1]|0)>>>0>=(e[(c[h>>2]|0)+44>>1]|0)>>>0):0){do{if((e[(c[h>>2]|0)+344>>1]|0)!=0?(e[(c[h>>2]|0)+346>>1]|0)!=0:0){c[q>>2]=(c[(c[h>>2]|0)+92>>2]|0)+(e[k>>1]<<3);c[r>>2]=(c[(c[h>>2]|0)+56>>2]|0)+(e[(c[h>>2]|0)+284>>1]<<3);if((c[(c[h>>2]|0)+220>>2]|0)==(c[(c[h>>2]|0)+224>>2]|0)){c[l>>2]=md[c[(c[h>>2]|0)+576>>2]&63](c[h>>2]|0,(c[c[q>>2]>>2]|0)-(c[c[r>>2]>>2]|0)|0,(c[(c[q>>2]|0)+4>>2]|0)-(c[(c[r>>2]|0)+4>>2]|0)|0)|0;c[l>>2]=Nn(c[l>>2]|0,c[(c[h>>2]|0)+220>>2]|0)|0;break}else{c[s>>2]=Nn((c[c[q>>2]>>2]|0)-(c[c[r>>2]>>2]|0)|0,c[(c[h>>2]|0)+220>>2]|0)|0;c[s+4>>2]=Nn((c[(c[q>>2]|0)+4>>2]|0)-(c[(c[r>>2]|0)+4>>2]|0)|0,c[(c[h>>2]|0)+224>>2]|0)|0;c[l>>2]=md[c[(c[h>>2]|0)+576>>2]&63](c[h>>2]|0,c[s>>2]|0,c[s+4>>2]|0)|0;break}}else{t=7}}while(0);if((t|0)==7){c[o>>2]=(c[(c[h>>2]|0)+84>>2]|0)+(e[k>>1]<<3);c[p>>2]=(c[(c[h>>2]|0)+48>>2]|0)+(e[(c[h>>2]|0)+284>>1]<<3);c[l>>2]=md[c[(c[h>>2]|0)+576>>2]&63](c[h>>2]|0,(c[c[o>>2]>>2]|0)-(c[c[p>>2]>>2]|0)|0,(c[(c[o>>2]|0)+4>>2]|0)-(c[(c[p>>2]|0)+4>>2]|0)|0)|0}p=(c[l>>2]|0)-(c[(c[h>>2]|0)+328>>2]|0)|0;do{if(((((c[l>>2]|0)-(c[(c[h>>2]|0)+328>>2]|0)|0)<0?0-p|0:p)|0)<(c[(c[h>>2]|0)+324>>2]|0)){o=c[(c[h>>2]|0)+328>>2]|0;if((c[l>>2]|0)>=0){c[l>>2]=o;break}else{c[l>>2]=0-o;break}}}while(0);p=c[h>>2]|0;if((a[(c[h>>2]|0)+368|0]&4|0)!=0){c[m>>2]=md[c[p+568>>2]&63](c[h>>2]|0,c[l>>2]|0,c[(c[h>>2]|0)+264+((a[(c[h>>2]|0)+368|0]&3)<<2)>>2]|0)|0}else{c[m>>2]=tw(p,c[l>>2]|0,c[(c[h>>2]|0)+264+((a[(c[h>>2]|0)+368|0]&3)<<2)>>2]|0)|0}do{if((a[(c[h>>2]|0)+368|0]&8|0)!=0){p=c[m>>2]|0;o=c[n>>2]|0;if((c[l>>2]|0)>=0){if((p|0)>=(o|0)){break}c[m>>2]=c[n>>2];break}else{if((p|0)<=(0-o|0)){break}c[m>>2]=0-(c[n>>2]|0);break}}}while(0);c[l>>2]=md[c[(c[h>>2]|0)+572>>2]&63](c[h>>2]|0,(c[(c[(c[h>>2]|0)+88>>2]|0)+(e[k>>1]<<3)>>2]|0)-(c[(c[(c[h>>2]|0)+52>>2]|0)+(e[(c[h>>2]|0)+284>>1]<<3)>>2]|0)|0,(c[(c[(c[h>>2]|0)+88>>2]|0)+(e[k>>1]<<3)+4>>2]|0)-(c[(c[(c[h>>2]|0)+52>>2]|0)+(e[(c[h>>2]|0)+284>>1]<<3)+4>>2]|0)|0)|0;Cd[c[(c[h>>2]|0)+584>>2]&31](c[h>>2]|0,(c[h>>2]|0)+72|0,b[k>>1]|0,(c[m>>2]|0)-(c[l>>2]|0)|0)}else{t=3}if((t|0)==3?(a[(c[h>>2]|0)+561|0]|0)!=0:0){c[(c[h>>2]|0)+12>>2]=134}b[(c[h>>2]|0)+286>>1]=b[(c[h>>2]|0)+284>>1]|0;b[(c[h>>2]|0)+288>>1]=b[k>>1]|0;if((a[(c[h>>2]|0)+368|0]&16|0)==0){i=g;return}b[(c[h>>2]|0)+284>>1]=b[k>>1]|0;i=g;return}function Mw(f,g){f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;h=i;i=i+16|0;j=h+4|0;k=h;l=h+10|0;m=h+8|0;c[j>>2]=f;c[k>>2]=g;b[l>>1]=(d[(c[j>>2]|0)+368|0]|0)-184+1;g=c[j>>2]|0;if((e[l>>1]|0)>>>0>=((c[(c[j>>2]|0)+20>>2]|0)+1-(c[(c[j>>2]|0)+16>>2]|0)|0)>>>0){c[g+12>>2]=130;i=h;return}f=g+360|0;c[f>>2]=(c[f>>2]|0)+1;b[m>>1]=0;while(1){n=c[j>>2]|0;if((e[m>>1]|0|0)>=(e[l>>1]|0|0)){break}f=(Pw(n)|0)<<16>>16;c[(c[k>>2]|0)+((e[m>>1]|0)<<2)>>2]=f;b[m>>1]=(b[m>>1]|0)+1<<16>>16}a[n+376|0]=0;i=h;return}function Nw(a,f){a=a|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+16|0;h=g+4|0;j=g;k=g+10|0;l=g+8|0;c[h>>2]=a;c[j>>2]=f;b[k>>1]=(d[(c[h>>2]|0)+368|0]|0)-176+1;if((e[k>>1]|0)>>>0>=((c[(c[h>>2]|0)+20>>2]|0)+1-(c[(c[h>>2]|0)+16>>2]|0)|0)>>>0){c[(c[h>>2]|0)+12>>2]=130;i=g;return}b[l>>1]=1;while(1){if((e[l>>1]|0|0)>(e[k>>1]|0|0)){break}c[(c[j>>2]|0)+((e[l>>1]|0)-1<<2)>>2]=d[(c[(c[h>>2]|0)+356>>2]|0)+((c[(c[h>>2]|0)+360>>2]|0)+(e[l>>1]|0))|0]|0;b[l>>1]=(b[l>>1]|0)+1<<16>>16}i=g;return}function Ow(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+32|0;g=f+16|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;if((c[j>>2]|0)<1|(c[j>>2]|0)>3){c[(c[h>>2]|0)+12>>2]=132;a[g]=1;m=a[g]|0;i=f;return m|0}c[l>>2]=(c[h>>2]|0)+444+((c[j>>2]|0)-1<<3);if((c[c[l>>2]>>2]|0)==0){c[(c[h>>2]|0)+12>>2]=138;a[g]=1;m=a[g]|0;i=f;return m|0}if((c[k>>2]|0)>>>0>(c[(c[l>>2]|0)+4>>2]|0)>>>0){c[(c[h>>2]|0)+12>>2]=131;a[g]=1;m=a[g]|0;i=f;return m|0}else{c[(c[h>>2]|0)+356>>2]=c[c[l>>2]>>2];c[(c[h>>2]|0)+364>>2]=c[(c[l>>2]|0)+4>>2];c[(c[h>>2]|0)+360>>2]=c[k>>2];c[(c[h>>2]|0)+352>>2]=c[j>>2];a[g]=0;m=a[g]|0;i=f;return m|0}return 0}function Pw(a){a=a|0;var b=0,e=0;b=i;i=i+16|0;e=b;c[e>>2]=a;a=(c[e>>2]|0)+360|0;c[a>>2]=(c[a>>2]|0)+2;i=b;return((d[(c[(c[e>>2]|0)+356>>2]|0)+((c[(c[e>>2]|0)+360>>2]|0)-2)|0]|0)<<8)+(d[(c[(c[e>>2]|0)+356>>2]|0)+((c[(c[e>>2]|0)+360>>2]|0)-1)|0]|0)&65535|0}function Qw(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;d=i;i=i+32|0;e=d+28|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;k=d+16|0;l=d+20|0;m=d+24|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=c[e>>2]^c[f>>2];if((c[e>>2]|0)<0){c[e>>2]=0-(c[e>>2]|0)}if((c[f>>2]|0)<0){c[f>>2]=0-(c[f>>2]|0)}c[h>>2]=c[e>>2]>>16&65535;c[j>>2]=c[e>>2]&65535;c[l>>2]=aa(c[j>>2]|0,c[f>>2]|0)|0;c[k>>2]=aa(c[h>>2]|0,c[f>>2]|0)|0;c[m>>2]=(c[k>>2]|0)>>>16;c[k>>2]=(c[k>>2]<<16)+8192;c[l>>2]=(c[l>>2]|0)+(c[k>>2]|0);if(!((c[l>>2]|0)>>>0<(c[k>>2]|0)>>>0)){n=c[l>>2]|0;o=n>>>14;p=c[m>>2]|0;q=p<<18;r=o|q;c[k>>2]=r;s=c[g>>2]|0;t=(s|0)>=0;u=c[k>>2]|0;v=0-u|0;w=t?u:v;i=d;return w|0}c[m>>2]=(c[m>>2]|0)+1;n=c[l>>2]|0;o=n>>>14;p=c[m>>2]|0;q=p<<18;r=o|q;c[k>>2]=r;s=c[g>>2]|0;t=(s|0)>=0;u=c[k>>2]|0;v=0-u|0;w=t?u:v;i=d;return w|0}function Rw(b){b=b|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+4|0;g=e;c[g>>2]=b;b=(c[g>>2]|0)+360|0;c[b>>2]=(c[b>>2]|0)+(c[(c[g>>2]|0)+372>>2]|0);do{if((c[(c[g>>2]|0)+360>>2]|0)<(c[(c[g>>2]|0)+364>>2]|0)){a[(c[g>>2]|0)+368|0]=a[(c[(c[g>>2]|0)+356>>2]|0)+(c[(c[g>>2]|0)+360>>2]|0)|0]|0;c[(c[g>>2]|0)+372>>2]=a[95240+(d[(c[g>>2]|0)+368|0]|0)|0]|0;if((c[(c[g>>2]|0)+372>>2]|0)<0){if(((c[(c[g>>2]|0)+360>>2]|0)+1|0)>=(c[(c[g>>2]|0)+364>>2]|0)){break}b=2-(aa(c[(c[g>>2]|0)+372>>2]|0,d[(c[(c[g>>2]|0)+356>>2]|0)+((c[(c[g>>2]|0)+360>>2]|0)+1)|0]|0)|0)|0;c[(c[g>>2]|0)+372>>2]=b}if(((c[(c[g>>2]|0)+360>>2]|0)+(c[(c[g>>2]|0)+372>>2]|0)|0)<=(c[(c[g>>2]|0)+364>>2]|0)){a[f]=0;h=a[f]|0;i=e;return h|0}}}while(0);c[(c[g>>2]|0)+12>>2]=131;a[f]=1;h=a[f]|0;i=e;return h|0}function Sw(a){a=a|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d+8|0;f=d;g=d+4|0;c[e>>2]=a;do{if((c[(c[e>>2]|0)+256>>2]|0)==0){a=c[e>>2]|0;if((b[(c[e>>2]|0)+296>>1]|0)==0){c[(c[e>>2]|0)+256>>2]=c[a+244>>2];break}h=(c[e>>2]|0)+244|0;if((b[a+294>>1]|0)==0){c[(c[e>>2]|0)+256>>2]=c[h+4>>2];break}else{c[f>>2]=Qw(c[h>>2]|0,b[(c[e>>2]|0)+294>>1]|0)|0;c[g>>2]=Qw(c[(c[e>>2]|0)+248>>2]|0,b[(c[e>>2]|0)+296>>1]|0)|0;h=Gn(c[f>>2]|0,c[g>>2]|0)|0;c[(c[e>>2]|0)+256>>2]=h;break}}}while(0);i=d;return c[(c[e>>2]|0)+256>>2]|0}function Tw(f,g,h,j,k){f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0;l=i;i=i+16|0;m=l+8|0;n=l+12|0;o=l+4|0;p=l;q=l+14|0;c[m>>2]=f;b[n>>1]=g;c[o>>2]=h;c[p>>2]=j;a[q]=k;if((b[(c[m>>2]|0)+298>>1]|0)!=0?(k=(c[(c[m>>2]|0)+124>>2]|0)+(e[n>>1]<<3)|0,c[k>>2]=(c[k>>2]|0)+(c[o>>2]|0),(a[q]|0)!=0):0){o=(c[(c[m>>2]|0)+132>>2]|0)+(e[n>>1]|0)|0;a[o]=d[o]|8}if((b[(c[m>>2]|0)+300>>1]|0)==0){i=l;return}o=(c[(c[m>>2]|0)+124>>2]|0)+(e[n>>1]<<3)+4|0;c[o>>2]=(c[o>>2]|0)+(c[p>>2]|0);if((a[q]|0)==0){i=l;return}q=(c[(c[m>>2]|0)+132>>2]|0)+(e[n>>1]|0)|0;a[q]=d[q]|16;i=l;return}function Uw(d,f,g,h,j){d=d|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;k=i;i=i+64|0;l=k+62|0;m=k+56|0;n=k+52|0;o=k+48|0;p=k+44|0;q=k+36|0;r=k;s=k+60|0;t=k+40|0;c[m>>2]=d;c[n>>2]=f;c[o>>2]=g;c[p>>2]=h;c[q>>2]=j;j=c[m>>2]|0;if((a[(c[m>>2]|0)+368|0]&1|0)!=0){u=r+0|0;v=j+36|0;w=u+36|0;do{c[u>>2]=c[v>>2];u=u+4|0;v=v+4|0}while((u|0)<(w|0));b[s>>1]=b[(c[m>>2]|0)+286>>1]|0}else{u=r+0|0;v=j+72|0;w=u+36|0;do{c[u>>2]=c[v>>2];u=u+4|0;v=v+4|0}while((u|0)<(w|0));b[s>>1]=b[(c[m>>2]|0)+288>>1]|0}if(!((e[s>>1]|0)>>>0>=(e[r+8>>1]|0)>>>0)){u=(c[p>>2]|0)+0|0;v=r+0|0;w=u+36|0;do{c[u>>2]=c[v>>2];u=u+4|0;v=v+4|0}while((u|0)<(w|0));b[c[q>>2]>>1]=b[s>>1]|0;c[t>>2]=md[c[(c[m>>2]|0)+572>>2]&63](c[m>>2]|0,(c[(c[r+16>>2]|0)+(e[s>>1]<<3)>>2]|0)-(c[(c[r+12>>2]|0)+(e[s>>1]<<3)>>2]|0)|0,(c[(c[r+16>>2]|0)+(e[s>>1]<<3)+4>>2]|0)-(c[(c[r+12>>2]|0)+(e[s>>1]<<3)+4>>2]|0)|0)|0;s=In(c[t>>2]|0,b[(c[m>>2]|0)+298>>1]|0,c[(c[m>>2]|0)+564>>2]|0)|0;c[c[n>>2]>>2]=s;s=In(c[t>>2]|0,b[(c[m>>2]|0)+300>>1]|0,c[(c[m>>2]|0)+564>>2]|0)|0;c[c[o>>2]>>2]=s;a[l]=0;x=a[l]|0;i=k;return x|0}if((a[(c[m>>2]|0)+561|0]|0)!=0){c[(c[m>>2]|0)+12>>2]=134}b[c[q>>2]>>1]=0;a[l]=1;x=a[l]|0;i=k;return x|0}



function Vw(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;h=i;i=i+80|0;j=h+64|0;k=h+60|0;l=h+56|0;m=h+52|0;n=h+48|0;o=h+44|0;p=h+40|0;q=h+36|0;r=h+12|0;s=h;t=h+4|0;u=h+8|0;v=h+16|0;w=h+20|0;x=h+24|0;y=h+28|0;z=h+68|0;A=h+32|0;c[j>>2]=b;c[k>>2]=d;c[l>>2]=e;c[m>>2]=f;c[n>>2]=g;if((c[k>>2]|0)>>>0>(c[l>>2]|0)>>>0){i=h;return}if((c[m>>2]|0)>>>0>=(c[(c[j>>2]|0)+12>>2]|0)>>>0){i=h;return}if((c[n>>2]|0)>>>0>=(c[(c[j>>2]|0)+12>>2]|0)>>>0){i=h;return}c[p>>2]=c[(c[(c[j>>2]|0)+8>>2]|0)+(c[m>>2]<<3)>>2];c[q>>2]=c[(c[(c[j>>2]|0)+8>>2]|0)+(c[n>>2]<<3)>>2];if((c[p>>2]|0)>(c[q>>2]|0)){c[v>>2]=c[p>>2];c[p>>2]=c[q>>2];c[q>>2]=c[v>>2];c[w>>2]=c[m>>2];c[m>>2]=c[n>>2];c[n>>2]=c[w>>2]}c[r>>2]=c[(c[c[j>>2]>>2]|0)+(c[m>>2]<<3)>>2];c[s>>2]=c[(c[c[j>>2]>>2]|0)+(c[n>>2]<<3)>>2];c[t>>2]=(c[(c[(c[j>>2]|0)+4>>2]|0)+(c[m>>2]<<3)>>2]|0)-(c[r>>2]|0);c[u>>2]=(c[(c[(c[j>>2]|0)+4>>2]|0)+(c[n>>2]<<3)>>2]|0)-(c[s>>2]|0);if((c[p>>2]|0)==(c[q>>2]|0)){c[o>>2]=c[k>>2];while(1){if(!((c[o>>2]|0)>>>0<=(c[l>>2]|0)>>>0)){break}c[x>>2]=c[(c[c[j>>2]>>2]|0)+(c[o>>2]<<3)>>2];if((c[x>>2]|0)<=(c[r>>2]|0)){c[x>>2]=(c[x>>2]|0)+(c[t>>2]|0)}else{c[x>>2]=(c[x>>2]|0)+(c[u>>2]|0)}c[(c[(c[j>>2]|0)+4>>2]|0)+(c[o>>2]<<3)>>2]=c[x>>2];c[o>>2]=(c[o>>2]|0)+1}i=h;return}c[y>>2]=0;a[z]=0;c[o>>2]=c[k>>2];while(1){if(!((c[o>>2]|0)>>>0<=(c[l>>2]|0)>>>0)){break}c[A>>2]=c[(c[c[j>>2]>>2]|0)+(c[o>>2]<<3)>>2];do{if((c[A>>2]|0)<=(c[r>>2]|0)){c[A>>2]=(c[A>>2]|0)+(c[t>>2]|0)}else{if((c[A>>2]|0)>=(c[s>>2]|0)){c[A>>2]=(c[A>>2]|0)+(c[u>>2]|0);break}if((a[z]|0)==0){a[z]=1;c[y>>2]=On((c[s>>2]|0)+(c[u>>2]|0)-((c[r>>2]|0)+(c[t>>2]|0))|0,(c[q>>2]|0)-(c[p>>2]|0)|0)|0}k=(c[r>>2]|0)+(c[t>>2]|0)|0;c[A>>2]=k+(Nn((c[(c[(c[j>>2]|0)+8>>2]|0)+(c[o>>2]<<3)>>2]|0)-(c[p>>2]|0)|0,c[y>>2]|0)|0)}}while(0);c[(c[(c[j>>2]|0)+4>>2]|0)+(c[o>>2]<<3)>>2]=c[A>>2];c[o>>2]=(c[o>>2]|0)+1}i=h;return}function Ww(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+32|0;g=f+20|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;m=f+16|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;c[m>>2]=(c[(c[(c[g>>2]|0)+4>>2]|0)+(c[k>>2]<<3)>>2]|0)-(c[(c[c[g>>2]>>2]|0)+(c[k>>2]<<3)>>2]|0);if((c[m>>2]|0)==0){i=f;return}c[l>>2]=c[h>>2];while(1){if(!((c[l>>2]|0)>>>0<(c[k>>2]|0)>>>0)){break}h=(c[(c[g>>2]|0)+4>>2]|0)+(c[l>>2]<<3)|0;c[h>>2]=(c[h>>2]|0)+(c[m>>2]|0);c[l>>2]=(c[l>>2]|0)+1}c[l>>2]=(c[k>>2]|0)+1;while(1){if(!((c[l>>2]|0)>>>0<=(c[j>>2]|0)>>>0)){break}k=(c[(c[g>>2]|0)+4>>2]|0)+(c[l>>2]<<3)|0;c[k>>2]=(c[k>>2]|0)+(c[m>>2]|0);c[l>>2]=(c[l>>2]|0)+1}i=f;return}function Xw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[f>>2]=c[f>>2];c[h>>2]=c[h>>2];i=e;return c[g>>2]|0}function Yw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[f>>2]=c[f>>2];c[g>>2]=c[g>>2];i=e;return c[h>>2]|0}function Zw(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+16|0;g=f+8|0;h=f;j=f+4|0;c[g>>2]=a;c[h>>2]=d;c[j>>2]=e;e=fx(c[h>>2]|0,c[j>>2]|0,b[(c[g>>2]|0)+294>>1]|0,b[(c[g>>2]|0)+296>>1]|0)|0;i=f;return e|0}function _w(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+16|0;g=f+8|0;h=f;j=f+4|0;c[g>>2]=a;c[h>>2]=d;c[j>>2]=e;e=fx(c[h>>2]|0,c[j>>2]|0,b[(c[g>>2]|0)+290>>1]|0,b[(c[g>>2]|0)+292>>1]|0)|0;i=f;return e|0}function $w(f,g,h,j){f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0;k=i;i=i+32|0;l=k+12|0;m=k;n=k+16|0;o=k+8|0;p=k+4|0;c[l>>2]=f;c[m>>2]=g;b[n>>1]=h;c[o>>2]=j;c[p>>2]=b[(c[l>>2]|0)+298>>1]|0;if((c[p>>2]|0)!=0){j=In(c[o>>2]|0,c[p>>2]|0,c[(c[l>>2]|0)+564>>2]|0)|0;h=(c[(c[m>>2]|0)+16>>2]|0)+(e[n>>1]<<3)|0;c[h>>2]=(c[h>>2]|0)+j;j=(c[(c[m>>2]|0)+24>>2]|0)+(e[n>>1]|0)|0;a[j]=d[j]|8}c[p>>2]=b[(c[l>>2]|0)+300>>1]|0;if((c[p>>2]|0)==0){i=k;return}j=In(c[o>>2]|0,c[p>>2]|0,c[(c[l>>2]|0)+564>>2]|0)|0;l=(c[(c[m>>2]|0)+16>>2]|0)+(e[n>>1]<<3)+4|0;c[l>>2]=(c[l>>2]|0)+j;j=(c[(c[m>>2]|0)+24>>2]|0)+(e[n>>1]|0)|0;a[j]=d[j]|16;i=k;return}function ax(a,d,f,g){a=a|0;d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;h=i;i=i+32|0;j=h+12|0;k=h;l=h+16|0;m=h+8|0;n=h+4|0;c[j>>2]=a;c[k>>2]=d;b[l>>1]=f;c[m>>2]=g;c[n>>2]=b[(c[j>>2]|0)+298>>1]|0;if((c[n>>2]|0)!=0){g=In(c[m>>2]|0,c[n>>2]|0,c[(c[j>>2]|0)+564>>2]|0)|0;f=(c[(c[k>>2]|0)+12>>2]|0)+(e[l>>1]<<3)|0;c[f>>2]=(c[f>>2]|0)+g}c[n>>2]=b[(c[j>>2]|0)+300>>1]|0;if((c[n>>2]|0)==0){i=h;return}g=In(c[m>>2]|0,c[n>>2]|0,c[(c[j>>2]|0)+564>>2]|0)|0;j=(c[(c[k>>2]|0)+12>>2]|0)+(e[l>>1]<<3)+4|0;c[j>>2]=(c[j>>2]|0)+g;i=h;return}function bx(f,g,h,j){f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0;k=i;i=i+16|0;l=k+8|0;m=k;n=k+12|0;o=k+4|0;c[l>>2]=f;c[m>>2]=g;b[n>>1]=h;c[o>>2]=j;c[l>>2]=c[l>>2];l=(c[(c[m>>2]|0)+16>>2]|0)+((e[n>>1]|0)<<3)|0;c[l>>2]=(c[l>>2]|0)+(c[o>>2]|0);o=(c[(c[m>>2]|0)+24>>2]|0)+(e[n>>1]|0)|0;a[o]=d[o]|0|8;i=k;return}function cx(a,d,f,g){a=a|0;d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h+8|0;k=h;l=h+12|0;m=h+4|0;c[j>>2]=a;c[k>>2]=d;b[l>>1]=f;c[m>>2]=g;c[j>>2]=c[j>>2];j=(c[(c[k>>2]|0)+12>>2]|0)+((e[l>>1]|0)<<3)|0;c[j>>2]=(c[j>>2]|0)+(c[m>>2]|0);i=h;return}function dx(f,g,h,j){f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0;k=i;i=i+16|0;l=k+8|0;m=k;n=k+12|0;o=k+4|0;c[l>>2]=f;c[m>>2]=g;b[n>>1]=h;c[o>>2]=j;c[l>>2]=c[l>>2];l=(c[(c[m>>2]|0)+16>>2]|0)+((e[n>>1]|0)<<3)+4|0;c[l>>2]=(c[l>>2]|0)+(c[o>>2]|0);o=(c[(c[m>>2]|0)+24>>2]|0)+(e[n>>1]|0)|0;a[o]=d[o]|0|16;i=k;return}function ex(a,d,f,g){a=a|0;d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h+8|0;k=h;l=h+12|0;m=h+4|0;c[j>>2]=a;c[k>>2]=d;b[l>>1]=f;c[m>>2]=g;c[j>>2]=c[j>>2];j=(c[(c[k>>2]|0)+12>>2]|0)+((e[l>>1]|0)<<3)+4|0;c[j>>2]=(c[j>>2]|0)+(c[m>>2]|0);i=h;return}function fx(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;f=i;i=i+64|0;g=f+48|0;h=f+44|0;j=f+40|0;k=f+36|0;l=f+32|0;m=f+28|0;n=f+24|0;o=f+16|0;p=f+12|0;q=f+8|0;r=f+4|0;s=f;t=f+20|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;c[q>>2]=aa(c[g>>2]&65535,c[j>>2]|0)|0;c[l>>2]=aa(c[g>>2]>>16,c[j>>2]|0)|0;c[r>>2]=(c[q>>2]|0)+(c[l>>2]<<16);c[n>>2]=(c[l>>2]>>16)+(c[q>>2]>>31)+((c[r>>2]|0)>>>0<(c[q>>2]|0)>>>0);c[q>>2]=aa(c[h>>2]&65535,c[k>>2]|0)|0;c[l>>2]=aa(c[h>>2]>>16,c[k>>2]|0)|0;c[s>>2]=(c[q>>2]|0)+(c[l>>2]<<16);c[o>>2]=(c[l>>2]>>16)+(c[q>>2]>>31)+((c[s>>2]|0)>>>0<(c[q>>2]|0)>>>0);c[t>>2]=(c[r>>2]|0)+(c[s>>2]|0);c[p>>2]=(c[n>>2]|0)+(c[o>>2]|0)+((c[t>>2]|0)>>>0<(c[r>>2]|0)>>>0);c[m>>2]=c[p>>2]>>31;c[q>>2]=(c[t>>2]|0)+(c[m>>2]|0);c[p>>2]=(c[p>>2]|0)+((c[m>>2]|0)+((c[q>>2]|0)>>>0<(c[t>>2]|0)>>>0));c[t>>2]=c[q>>2];c[q>>2]=(c[t>>2]|0)+8192;c[p>>2]=(c[p>>2]|0)+((c[q>>2]|0)>>>0<(c[t>>2]|0)>>>0);i=f;return c[p>>2]<<18|(c[q>>2]|0)>>>14|0}function gx(a){a=a|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=c[(c[e>>2]|0)+8>>2];b[(c[e>>2]|0)+440>>1]=0;b[(c[e>>2]|0)+442>>1]=0;Vn(c[f>>2]|0,c[(c[e>>2]|0)+24>>2]|0);c[(c[e>>2]|0)+24>>2]=0;c[(c[e>>2]|0)+20>>2]=0;Vn(c[f>>2]|0,c[(c[e>>2]|0)+436>>2]|0);c[(c[e>>2]|0)+436>>2]=0;c[(c[e>>2]|0)+432>>2]=0;c[(c[e>>2]|0)+428>>2]=0;Vn(c[f>>2]|0,c[(c[e>>2]|0)+392>>2]|0);c[(c[e>>2]|0)+392>>2]=0;c[(c[e>>2]|0)+388>>2]=0;c[(c[e>>2]|0)+4>>2]=0;c[c[e>>2]>>2]=0;Vn(c[f>>2]|0,c[e>>2]|0);c[e>>2]=0;i=d;return 0}function hx(d){d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e+12|0;g=e;h=e+4|0;j=e+8|0;c[f>>2]=d;c[g>>2]=c[f>>2];c[h>>2]=c[c[f>>2]>>2];c[j>>2]=c[(c[h>>2]|0)+100>>2];if((a[(c[g>>2]|0)+292|0]|0)!=0){c[(c[g>>2]|0)+296>>2]=0;a[(c[g>>2]|0)+292|0]=0}Vn(c[j>>2]|0,c[(c[g>>2]|0)+244>>2]|0);c[(c[g>>2]|0)+244>>2]=0;c[(c[g>>2]|0)+240>>2]=0;Vn(c[j>>2]|0,c[(c[g>>2]|0)+252>>2]|0);c[(c[g>>2]|0)+252>>2]=0;b[(c[g>>2]|0)+248>>1]=0;ix((c[g>>2]|0)+256|0);Vn(c[j>>2]|0,c[(c[g>>2]|0)+124>>2]|0);c[(c[g>>2]|0)+124>>2]=0;Vn(c[j>>2]|0,c[(c[g>>2]|0)+136>>2]|0);c[(c[g>>2]|0)+136>>2]=0;c[(c[g>>2]|0)+116>>2]=0;c[(c[g>>2]|0)+120>>2]=0;c[(c[g>>2]|0)+128>>2]=0;c[(c[g>>2]|0)+132>>2]=0;c[(c[g>>2]|0)+140>>2]=0;c[(c[g>>2]|0)+144>>2]=0;a[(c[g>>2]|0)+300|0]=0;a[(c[g>>2]|0)+301|0]=0;i=e;return}function ix(a){a=a|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=c[c[e>>2]>>2];if((c[f>>2]|0)==0){i=d;return}Vn(c[f>>2]|0,c[(c[e>>2]|0)+28>>2]|0);c[(c[e>>2]|0)+28>>2]=0;Vn(c[f>>2]|0,c[(c[e>>2]|0)+24>>2]|0);c[(c[e>>2]|0)+24>>2]=0;Vn(c[f>>2]|0,c[(c[e>>2]|0)+16>>2]|0);c[(c[e>>2]|0)+16>>2]=0;Vn(c[f>>2]|0,c[(c[e>>2]|0)+12>>2]|0);c[(c[e>>2]|0)+12>>2]=0;Vn(c[f>>2]|0,c[(c[e>>2]|0)+20>>2]|0);c[(c[e>>2]|0)+20>>2]=0;b[(c[e>>2]|0)+8>>1]=0;b[(c[e>>2]|0)+4>>1]=0;b[(c[e>>2]|0)+10>>1]=0;b[(c[e>>2]|0)+6>>1]=0;c[c[e>>2]>>2]=0;i=d;return}function jx(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b+4|0;e=b;c[d>>2]=a;c[e>>2]=c[(c[d>>2]|0)+104>>2];zp(c[e>>2]|0,(c[d>>2]|0)+700|0);c[(c[d>>2]|0)+696>>2]=0;i=b;return}function kx(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;i=i+16|0;d=b+8|0;e=b;f=b+4|0;c[d>>2]=a;c[e>>2]=c[(c[d>>2]|0)+104>>2];c[f>>2]=c[(c[e>>2]|0)+28>>2];Vn(c[f>>2]|0,c[(c[d>>2]|0)+720>>2]|0);c[(c[d>>2]|0)+720>>2]=0;zp(c[e>>2]|0,(c[d>>2]|0)+704|0);i=b;return}function lx(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d+8|0;f=d;g=d+4|0;c[e>>2]=a;c[f>>2]=b;if((c[f>>2]|0)==0){i=d;return}Vn(c[e>>2]|0,c[(c[f>>2]|0)+4>>2]|0);c[(c[f>>2]|0)+4>>2]=0;Vn(c[e>>2]|0,c[(c[f>>2]|0)+8>>2]|0);c[(c[f>>2]|0)+8>>2]=0;if((c[(c[f>>2]|0)+20>>2]|0)!=0){c[g>>2]=0;while(1){h=c[e>>2]|0;if(!((c[g>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0)){break}Vn(h,c[(c[(c[f>>2]|0)+20>>2]|0)+(c[g>>2]<<3)+4>>2]|0);c[(c[(c[f>>2]|0)+20>>2]|0)+(c[g>>2]<<3)+4>>2]=0;c[g>>2]=(c[g>>2]|0)+1}Vn(h,c[(c[f>>2]|0)+20>>2]|0);c[(c[f>>2]|0)+20>>2]=0}Vn(c[e>>2]|0,c[(c[f>>2]|0)+28>>2]|0);c[(c[f>>2]|0)+28>>2]=0;Vn(c[e>>2]|0,c[(c[f>>2]|0)+36>>2]|0);c[(c[f>>2]|0)+36>>2]=0;Vn(c[e>>2]|0,c[f>>2]|0);c[f>>2]=0;i=d;return}function mx(b){b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[f>>2]=b;do{if((c[f>>2]|0)!=0){if((c[(c[f>>2]|0)+20>>2]|0)!=0?((Fx(c[(c[f>>2]|0)+20>>2]|0)|0)&255|0)!=0:0){a[e]=1;break}if((Gx(c[f>>2]|0)|0)<<24>>24!=0){a[e]=1;break}else{a[e]=0;break}}else{a[e]=0}}while(0);i=d;return a[e]|0}function nx(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;f=i;i=i+48|0;g=f+44|0;h=f+40|0;j=f+36|0;k=f+32|0;l=f+28|0;m=f+24|0;n=f+20|0;o=f+12|0;p=f+8|0;q=f+4|0;r=f;s=f+16|0;c[h>>2]=b;c[j>>2]=e;c[l>>2]=c[(c[j>>2]|0)+28>>2];c[k>>2]=yd[c[(c[h>>2]|0)+508>>2]&31](c[h>>2]|0,1751412088,c[j>>2]|0,p)|0;if((c[k>>2]|0)==0?!((c[p>>2]|0)>>>0<8):0){e=xp(c[j>>2]|0,c[p>>2]|0,(c[h>>2]|0)+704|0)|0;c[k>>2]=e;do{if((e|0)==0){c[r>>2]=c[(c[h>>2]|0)+704>>2];c[s>>2]=(c[r>>2]|0)+(c[p>>2]|0);c[r>>2]=(c[r>>2]|0)+2;c[m>>2]=((a[(c[r>>2]|0)+ -2|0]&255)<<8|(a[(c[r>>2]|0)+ -2+1|0]&255)<<0)&65535;c[r>>2]=(c[r>>2]|0)+2;c[o>>2]=((a[(c[r>>2]|0)+ -2|0]&255)<<8|(a[(c[r>>2]|0)+ -2+1|0]&255)<<0)&65535;c[r>>2]=(c[r>>2]|0)+4;c[q>>2]=(d[(c[r>>2]|0)+ -4|0]|0)<<24|(d[(c[r>>2]|0)+ -4+1|0]|0)<<16|(d[(c[r>>2]|0)+ -4+2|0]|0)<<8|(d[(c[r>>2]|0)+ -4+3|0]|0)<<0;if((c[q>>2]|0)>>>0>=4294901760){c[q>>2]=c[q>>2]&65535}if(((c[m>>2]|0)==0?!((c[o>>2]|0)>>>0>255):0)?!((c[q>>2]|0)>>>0>65537):0){b=Yn(c[l>>2]|0,1,0,c[o>>2]|0,0,k)|0;c[(c[h>>2]|0)+720>>2]=b;if((c[k>>2]|0)==0){c[n>>2]=0;while(1){if(!((c[n>>2]|0)>>>0<(c[o>>2]|0)>>>0)){break}if(((c[r>>2]|0)+(c[q>>2]|0)|0)>>>0>(c[s>>2]|0)>>>0){break}a[(c[(c[h>>2]|0)+720>>2]|0)+(c[n>>2]|0)|0]=a[c[r>>2]|0]|0;c[r>>2]=(c[r>>2]|0)+(c[q>>2]|0);c[n>>2]=(c[n>>2]|0)+1}c[(c[h>>2]|0)+712>>2]=c[n>>2];c[(c[h>>2]|0)+708>>2]=c[p>>2];c[(c[h>>2]|0)+716>>2]=c[q>>2];break}}else{c[k>>2]=3}zp(c[j>>2]|0,(c[h>>2]|0)+704|0);c[(c[h>>2]|0)+708>>2]=0}}while(0);c[g>>2]=c[k>>2];t=c[g>>2]|0;i=f;return t|0}c[g>>2]=0;t=c[g>>2]|0;i=f;return t|0}function ox(a,d){a=a|0;d=d|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;f=i;i=i+48|0;g=f+40|0;h=f+36|0;j=f+32|0;k=f+28|0;l=f+24|0;m=f+20|0;n=f+12|0;o=f+8|0;p=f+4|0;q=f;r=f+16|0;c[g>>2]=a;c[h>>2]=d;c[j>>2]=yd[c[(c[g>>2]|0)+508>>2]&31](c[g>>2]|0,1735162214,c[h>>2]|0,(c[g>>2]|0)+668|0)|0;if((c[j>>2]&255|0)!=142){if((c[j>>2]|0)!=0){s=c[j>>2]|0;i=f;return s|0}}else{c[(c[g>>2]|0)+668>>2]=0}c[j>>2]=yd[c[(c[g>>2]|0)+508>>2]&31](c[g>>2]|0,1819239265,c[h>>2]|0,k)|0;if((c[j>>2]|0)!=0){c[j>>2]=144;s=c[j>>2]|0;i=f;return s|0}do{if((b[(c[g>>2]|0)+210>>1]|0)!=0){c[l>>2]=2;if(!((c[k>>2]|0)>>>0>=262144)){c[(c[g>>2]|0)+696>>2]=(c[k>>2]|0)>>>(c[l>>2]|0);break}c[j>>2]=8;s=c[j>>2]|0;i=f;return s|0}else{c[l>>2]=1;if(!((c[k>>2]|0)>>>0>=131072)){c[(c[g>>2]|0)+696>>2]=(c[k>>2]|0)>>>(c[l>>2]|0);break}c[j>>2]=8;s=c[j>>2]|0;i=f;return s|0}}while(0);if((c[(c[g>>2]|0)+696>>2]|0)!=((c[(c[g>>2]|0)+16>>2]|0)+1|0)?(c[(c[g>>2]|0)+696>>2]|0)>>>0<=(c[(c[g>>2]|0)+16>>2]|0)>>>0:0){c[m>>2]=(c[(c[g>>2]|0)+16>>2]|0)+1<<c[l>>2];c[n>>2]=c[(c[g>>2]|0)+156>>2];c[o>>2]=(c[n>>2]|0)+(e[(c[g>>2]|0)+152>>1]<<4);c[p>>2]=vp(c[h>>2]|0)|0;c[q>>2]=2147483647;while(1){t=c[n>>2]|0;if(!((c[n>>2]|0)>>>0<(c[o>>2]|0)>>>0)){break}c[r>>2]=(c[t+8>>2]|0)-(c[p>>2]|0);if((c[r>>2]|0)>0?(c[r>>2]|0)<(c[q>>2]|0):0){c[q>>2]=c[r>>2]}c[n>>2]=(c[n>>2]|0)+16}if((t|0)==(c[o>>2]|0)){c[q>>2]=(c[(c[h>>2]|0)+4>>2]|0)-(c[p>>2]|0)}if((c[m>>2]|0)<=(c[q>>2]|0)){c[(c[g>>2]|0)+696>>2]=(c[(c[g>>2]|0)+16>>2]|0)+1;c[k>>2]=c[m>>2]}}c[j>>2]=xp(c[h>>2]|0,c[k>>2]|0,(c[g>>2]|0)+700|0)|0;s=c[j>>2]|0;i=f;return s|0}function px(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+32|0;g=f+24|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;m=f+16|0;n=f+20|0;c[g>>2]=d;c[h>>2]=e;c[k>>2]=c[(c[h>>2]|0)+28>>2];c[j>>2]=yd[c[(c[g>>2]|0)+508>>2]&31](c[g>>2]|0,1668707360,c[h>>2]|0,l)|0;if((c[j>>2]|0)!=0){c[(c[g>>2]|0)+644>>2]=0;c[(c[g>>2]|0)+648>>2]=0;c[j>>2]=0;o=c[j>>2]|0;i=f;return o|0}c[(c[g>>2]|0)+644>>2]=((c[l>>2]|0)>>>0)/2|0;l=Yn(c[k>>2]|0,2,0,c[(c[g>>2]|0)+644>>2]|0,0,j)|0;c[(c[g>>2]|0)+648>>2]=l;if((c[j>>2]|0)!=0){o=c[j>>2]|0;i=f;return o|0}l=yp(c[h>>2]|0,c[(c[g>>2]|0)+644>>2]<<1)|0;c[j>>2]=l;if((l|0)!=0){o=c[j>>2]|0;i=f;return o|0}c[m>>2]=c[(c[g>>2]|0)+648>>2];c[n>>2]=(c[m>>2]|0)+(c[(c[g>>2]|0)+644>>2]<<1);while(1){p=c[h>>2]|0;if(!((c[m>>2]|0)>>>0<(c[n>>2]|0)>>>0)){break}l=Dp(p)|0;b[c[m>>2]>>1]=l;c[m>>2]=(c[m>>2]|0)+2}Bp(p);if((a[(c[g>>2]|0)+672|0]|0)==0){o=c[j>>2]|0;i=f;return o|0}c[j>>2]=Bx(c[g>>2]|0,c[h>>2]|0)|0;o=c[j>>2]|0;i=f;return o|0}function qx(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;e=d+12|0;f=d;g=d+4|0;h=d+8|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=yd[c[(c[e>>2]|0)+508>>2]&31](c[e>>2]|0,1718642541,c[f>>2]|0,h)|0;if((c[g>>2]|0)!=0){c[(c[e>>2]|0)+632>>2]=0;c[(c[e>>2]|0)+628>>2]=0;c[g>>2]=0;j=c[g>>2]|0;i=d;return j|0}else{c[(c[e>>2]|0)+628>>2]=c[h>>2];c[g>>2]=xp(c[f>>2]|0,c[h>>2]|0,(c[e>>2]|0)+632|0)|0;j=c[g>>2]|0;i=d;return j|0}return 0}function rx(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;e=d+12|0;f=d;g=d+4|0;h=d+8|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=yd[c[(c[e>>2]|0)+508>>2]&31](c[e>>2]|0,1886545264,c[f>>2]|0,h)|0;if((c[g>>2]|0)!=0){c[(c[e>>2]|0)+640>>2]=0;c[(c[e>>2]|0)+636>>2]=0;c[g>>2]=0;j=c[g>>2]|0;i=d;return j|0}else{c[(c[e>>2]|0)+636>>2]=c[h>>2];c[g>>2]=xp(c[f>>2]|0,c[h>>2]|0,(c[e>>2]|0)+640|0)|0;j=c[g>>2]|0;i=d;return j|0}return 0}function sx(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+48|0;e=d+16|0;f=d+40|0;g=d+24|0;h=d+20|0;j=d+12|0;k=d+8|0;l=d+4|0;m=d;n=d+32|0;c[e>>2]=b;a[f]=0;c[g>>2]=c[e>>2];c[k>>2]=0;c[l>>2]=0;c[j>>2]=0;while(1){if(!((c[j>>2]|0)>>>0<(c[(c[g>>2]|0)+696>>2]|0)>>>0)){break}Ax(c[g>>2]|0,c[j>>2]|0,h)|0;if((c[h>>2]|0)>>>0>0){c[l>>2]=(c[l>>2]|0)+1;if((c[l>>2]|0)>>>0>1){break}c[k>>2]=c[j>>2]}c[j>>2]=(c[j>>2]|0)+1}do{if((c[l>>2]|0)==1){if((c[k>>2]|0)==0){a[f]=1;break}c[m>>2]=Xo(c[e>>2]|0,c[k>>2]|0,n,8)|0;if(((c[m>>2]|0)==0?(a[n]|0)==46:0)?(dA(n,95760,8)|0)==0:0){a[f]=1}}}while(0);i=d;return a[f]|0}function tx(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;c[(c[d>>2]|0)+512>>2]=19;c[(c[d>>2]|0)+520>>2]=37;c[(c[d>>2]|0)+524>>2]=38;c[(c[d>>2]|0)+528>>2]=39;c[(c[d>>2]|0)+516>>2]=65;i=b;return}function ux(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+32|0;g=f+24|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;m=f+16|0;n=f+20|0;c[h>>2]=a;c[j>>2]=b;c[k>>2]=d;c[l>>2]=e;c[n>>2]=c[(c[h>>2]|0)+24>>2];c[j>>2]=c[j>>2];j=qp(c[n>>2]|0,c[k>>2]|0)|0;c[m>>2]=j;if((j|0)==0?(j=yp(c[n>>2]|0,c[l>>2]|0)|0,c[m>>2]=j,(j|0)==0):0){c[(c[h>>2]|0)+200>>2]=c[(c[n>>2]|0)+32>>2];c[(c[h>>2]|0)+204>>2]=c[(c[n>>2]|0)+36>>2];c[g>>2]=0;o=c[g>>2]|0;i=f;return o|0}c[g>>2]=c[m>>2];o=c[g>>2]|0;i=f;return o|0}function vx(d){d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+16|0;f=e+12|0;g=e;h=e+4|0;j=e+8|0;c[g>>2]=d;c[h>>2]=c[(c[g>>2]|0)+200>>2];c[j>>2]=c[(c[g>>2]|0)+204>>2];if(((c[h>>2]|0)+10|0)>>>0>(c[j>>2]|0)>>>0){c[f>>2]=20;k=c[f>>2]|0;i=e;return k|0}else{c[h>>2]=(c[h>>2]|0)+2;b[(c[g>>2]|0)+32>>1]=(a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0;c[h>>2]=(c[h>>2]|0)+2;c[(c[g>>2]|0)+36>>2]=(((a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0)&65535)<<16>>16;c[h>>2]=(c[h>>2]|0)+2;c[(c[g>>2]|0)+40>>2]=(((a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0)&65535)<<16>>16;c[h>>2]=(c[h>>2]|0)+2;c[(c[g>>2]|0)+44>>2]=(((a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0)&65535)<<16>>16;c[h>>2]=(c[h>>2]|0)+2;c[(c[g>>2]|0)+48>>2]=(((a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0)&65535)<<16>>16;c[(c[g>>2]|0)+200>>2]=c[h>>2];c[f>>2]=0;k=c[f>>2]|0;i=e;return k|0}return 0}function wx(f){f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;g=i;i=i+96|0;h=g+68|0;j=g+48|0;k=g+52|0;l=g+56|0;m=g+60|0;n=g+64|0;o=g+72|0;p=g+76|0;q=g+80|0;r=g+4|0;s=g;t=g+16|0;u=g+8|0;v=g+87|0;w=g+86|0;x=g+12|0;y=g+20|0;z=g+24|0;A=g+28|0;B=g+32|0;C=g+82|0;D=g+36|0;E=g+40|0;F=g+84|0;G=g+44|0;H=g+85|0;c[j>>2]=f;c[l>>2]=c[(c[j>>2]|0)+200>>2];c[m>>2]=c[(c[j>>2]|0)+204>>2];c[n>>2]=c[(c[j>>2]|0)+12>>2];c[o>>2]=b[(c[j>>2]|0)+32>>1]|0;c[D>>2]=0;if((c[o>>2]|0)!=0?!(((b[(c[n>>2]|0)+20>>1]|0)+(b[(c[n>>2]|0)+56>>1]|0)+(c[o>>2]|0)|0)>>>0<=(c[(c[n>>2]|0)+8>>2]|0)>>>0):0){I=_n(c[n>>2]|0,0,c[o>>2]|0)|0}else{I=0}c[k>>2]=I;a:do{if((c[k>>2]|0)==0){c[A>>2]=c[(c[n>>2]|0)+68>>2];c[B>>2]=(c[A>>2]|0)+(c[o>>2]<<1);b:do{if((c[o>>2]|0)<4095?!(((c[l>>2]|0)+((c[o>>2]|0)+1<<1)|0)>>>0>(c[m>>2]|0)>>>0):0){c[l>>2]=(c[l>>2]|0)+2;b[C>>1]=(a[(c[l>>2]|0)+ -2|0]&255)<<8|(a[(c[l>>2]|0)+ -2+1|0]&255)<<0;if((c[o>>2]|0)>0){b[c[A>>2]>>1]=b[C>>1]|0}if((b[C>>1]|0)>=0){c[A>>2]=(c[A>>2]|0)+2;while(1){if(!((c[A>>2]|0)>>>0<(c[B>>2]|0)>>>0)){break}c[l>>2]=(c[l>>2]|0)+2;b[c[A>>2]>>1]=(a[(c[l>>2]|0)+ -2|0]&255)<<8|(a[(c[l>>2]|0)+ -2+1|0]&255)<<0;if((b[c[A>>2]>>1]|0)<=(b[C>>1]|0)){break b}b[C>>1]=b[c[A>>2]>>1]|0;c[A>>2]=(c[A>>2]|0)+2}c[r>>2]=0;if((c[o>>2]|0)>0?(c[r>>2]=(b[(c[A>>2]|0)+ -2>>1]|0)+1,(c[r>>2]|0)<0):0){break}if(((c[r>>2]|0)+4|0)!=0?!(((b[(c[n>>2]|0)+22>>1]|0)+(b[(c[n>>2]|0)+58>>1]|0)+((c[r>>2]|0)+4)|0)>>>0<=(c[(c[n>>2]|0)+4>>2]|0)>>>0):0){J=_n(c[n>>2]|0,(c[r>>2]|0)+4|0,0)|0}else{J=0}c[k>>2]=J;if((c[k>>2]|0)!=0){break a}c[(c[(c[j>>2]|0)+8>>2]|0)+140>>2]=0;c[(c[(c[j>>2]|0)+8>>2]|0)+136>>2]=0;if(!(((c[l>>2]|0)+2|0)>>>0>(c[m>>2]|0)>>>0)){c[l>>2]=(c[l>>2]|0)+2;b[q>>1]=(a[(c[l>>2]|0)+ -2|0]&255)<<8|(a[(c[l>>2]|0)+ -2+1|0]&255)<<0;if(((c[m>>2]|0)-(c[l>>2]|0)|0)<(e[q>>1]|0)){c[k>>2]=22;break a}do{if((c[(c[j>>2]|0)+16>>2]&2|0)==0){c[s>>2]=c[(c[(c[j>>2]|0)+160>>2]|0)+388>>2];c[k>>2]=zx(c[(c[(c[j>>2]|0)+160>>2]|0)+8>>2]|0,s,1,(c[(c[j>>2]|0)+160>>2]|0)+392|0,e[q>>1]|0)|0;c[(c[(c[j>>2]|0)+160>>2]|0)+388>>2]=c[s>>2]&65535;if((c[k>>2]|0)==0){c[(c[(c[j>>2]|0)+8>>2]|0)+140>>2]=e[q>>1]|0;c[(c[(c[j>>2]|0)+8>>2]|0)+136>>2]=c[(c[(c[j>>2]|0)+160>>2]|0)+392>>2];lA(c[(c[(c[j>>2]|0)+160>>2]|0)+392>>2]|0,c[l>>2]|0,e[q>>1]|0)|0;break}c[h>>2]=c[k>>2];K=c[h>>2]|0;i=g;return K|0}}while(0);c[l>>2]=(c[l>>2]|0)+(e[q>>1]|0);c[p>>2]=(c[n>>2]|0)+56;c[t>>2]=c[(c[p>>2]|0)+8>>2];c[u>>2]=(c[t>>2]|0)+(c[r>>2]|0);c:while(1){if(!((c[t>>2]|0)>>>0<(c[u>>2]|0)>>>0)){break}if(((c[l>>2]|0)+1|0)>>>0>(c[m>>2]|0)>>>0){break b}I=c[l>>2]|0;c[l>>2]=I+1;f=a[I]|0;a[v]=f;I=c[t>>2]|0;c[t>>2]=I+1;a[I]=f;if((a[v]&8|0)==0){continue}if(((c[l>>2]|0)+1|0)>>>0>(c[m>>2]|0)>>>0){break b}f=c[l>>2]|0;c[l>>2]=f+1;a[w]=a[f]|0;if(((c[t>>2]|0)+(d[w]|0)|0)>>>0>(c[u>>2]|0)>>>0){break b}while(1){if((d[w]|0)<=0){continue c}f=a[v]|0;I=c[t>>2]|0;c[t>>2]=I+1;a[I]=f;a[w]=(a[w]|0)+ -1<<24>>24}}c[x>>2]=c[(c[p>>2]|0)+4>>2];c[y>>2]=(c[x>>2]|0)+(c[r>>2]<<3);c[t>>2]=c[(c[p>>2]|0)+8>>2];c[z>>2]=0;if(!(((c[l>>2]|0)+(c[D>>2]|0)|0)>>>0>(c[m>>2]|0)>>>0)){while(1){if(!((c[x>>2]|0)>>>0<(c[y>>2]|0)>>>0)){break}c[E>>2]=0;a[F]=a[c[t>>2]|0]|0;if((a[F]&2|0)!=0){if(((c[l>>2]|0)+1|0)>>>0>(c[m>>2]|0)>>>0){break b}f=c[l>>2]|0;c[l>>2]=f+1;c[E>>2]=d[f]|0;if((a[F]&16|0)==0){c[E>>2]=0-(c[E>>2]|0)}}else{if((a[F]&16|0)==0){if(((c[l>>2]|0)+2|0)>>>0>(c[m>>2]|0)>>>0){break b}c[l>>2]=(c[l>>2]|0)+2;c[E>>2]=(((a[(c[l>>2]|0)+ -2|0]&255)<<8|(a[(c[l>>2]|0)+ -2+1|0]&255)<<0)&65535)<<16>>16}}c[z>>2]=(c[z>>2]|0)+(c[E>>2]|0);c[c[x>>2]>>2]=c[z>>2];a[c[t>>2]|0]=d[F]&-19;c[x>>2]=(c[x>>2]|0)+8;c[t>>2]=(c[t>>2]|0)+1}c[x>>2]=c[(c[n>>2]|0)+60>>2];c[y>>2]=(c[x>>2]|0)+(c[r>>2]<<3);c[t>>2]=c[(c[p>>2]|0)+8>>2];c[z>>2]=0;while(1){if(!((c[x>>2]|0)>>>0<(c[y>>2]|0)>>>0)){break}c[G>>2]=0;a[H]=a[c[t>>2]|0]|0;if((a[H]&4|0)!=0){if(((c[l>>2]|0)+1|0)>>>0>(c[m>>2]|0)>>>0){break b}f=c[l>>2]|0;c[l>>2]=f+1;c[G>>2]=d[f]|0;if((a[H]&32|0)==0){c[G>>2]=0-(c[G>>2]|0)}}else{if((a[H]&32|0)==0){if(((c[l>>2]|0)+2|0)>>>0>(c[m>>2]|0)>>>0){break b}c[l>>2]=(c[l>>2]|0)+2;c[G>>2]=(((a[(c[l>>2]|0)+ -2|0]&255)<<8|(a[(c[l>>2]|0)+ -2+1|0]&255)<<0)&65535)<<16>>16}}c[z>>2]=(c[z>>2]|0)+(c[G>>2]|0);c[(c[x>>2]|0)+4>>2]=c[z>>2];a[c[t>>2]|0]=a[H]&1;c[x>>2]=(c[x>>2]|0)+8;c[t>>2]=(c[t>>2]|0)+1}b[(c[p>>2]|0)+2>>1]=c[r>>2];b[c[p>>2]>>1]=c[o>>2];c[(c[j>>2]|0)+200>>2]=c[l>>2];break a}}}}}while(0);c[k>>2]=20}}while(0);c[h>>2]=c[k>>2];K=c[h>>2]|0;i=g;return K|0}function xx(d){d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;e=i;i=i+64|0;f=e+48|0;g=e+44|0;h=e+40|0;j=e+36|0;k=e+32|0;l=e+28|0;m=e+24|0;n=e+16|0;o=e+12|0;p=e+8|0;q=e+4|0;r=e;s=e+20|0;c[f>>2]=d;c[h>>2]=c[(c[f>>2]|0)+200>>2];c[j>>2]=c[(c[f>>2]|0)+204>>2];c[k>>2]=c[(c[f>>2]|0)+12>>2];c[m>>2]=0;while(1){c[g>>2]=$n(c[k>>2]|0,(c[m>>2]|0)+1|0)|0;if((c[g>>2]|0)!=0){t=24;break}if(((c[h>>2]|0)+4|0)>>>0>(c[j>>2]|0)>>>0){t=25;break}c[l>>2]=(c[(c[k>>2]|0)+88>>2]|0)+(c[m>>2]<<5);c[(c[l>>2]|0)+12>>2]=0;c[(c[l>>2]|0)+8>>2]=0;c[h>>2]=(c[h>>2]|0)+2;b[(c[l>>2]|0)+4>>1]=(a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0;c[h>>2]=(c[h>>2]|0)+2;c[c[l>>2]>>2]=((a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0)&65535;c[r>>2]=2;if((b[(c[l>>2]|0)+4>>1]&1|0)!=0){c[r>>2]=(c[r>>2]|0)+2}do{if((b[(c[l>>2]|0)+4>>1]&8|0)==0){if((b[(c[l>>2]|0)+4>>1]&64|0)!=0){c[r>>2]=(c[r>>2]|0)+4;break}if((b[(c[l>>2]|0)+4>>1]&128|0)!=0){c[r>>2]=(c[r>>2]|0)+8}}else{c[r>>2]=(c[r>>2]|0)+2}}while(0);if(((c[h>>2]|0)+(c[r>>2]|0)|0)>>>0>(c[j>>2]|0)>>>0){t=25;break}d=c[h>>2]|0;if((b[(c[l>>2]|0)+4>>1]&1|0)!=0){c[h>>2]=d+2;c[(c[l>>2]|0)+8>>2]=(((a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0)&65535)<<16>>16;c[h>>2]=(c[h>>2]|0)+2;c[(c[l>>2]|0)+12>>2]=(((a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0)&65535)<<16>>16}else{c[h>>2]=d+1;c[(c[l>>2]|0)+8>>2]=a[d]|0;d=c[h>>2]|0;c[h>>2]=d+1;c[(c[l>>2]|0)+12>>2]=a[d]|0}c[p>>2]=65536;c[n>>2]=65536;c[q>>2]=0;c[o>>2]=0;do{if((b[(c[l>>2]|0)+4>>1]&8|0)==0){if((b[(c[l>>2]|0)+4>>1]&64|0)!=0){c[h>>2]=(c[h>>2]|0)+2;c[n>>2]=(((a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0)&65535)<<16>>16<<2;c[h>>2]=(c[h>>2]|0)+2;c[p>>2]=(((a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0)&65535)<<16>>16<<2;break}if((b[(c[l>>2]|0)+4>>1]&128|0)!=0){c[h>>2]=(c[h>>2]|0)+2;c[n>>2]=(((a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0)&65535)<<16>>16<<2;c[h>>2]=(c[h>>2]|0)+2;c[q>>2]=(((a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0)&65535)<<16>>16<<2;c[h>>2]=(c[h>>2]|0)+2;c[o>>2]=(((a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0)&65535)<<16>>16<<2;c[h>>2]=(c[h>>2]|0)+2;c[p>>2]=(((a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0)&65535)<<16>>16<<2}}else{c[h>>2]=(c[h>>2]|0)+2;c[n>>2]=(((a[(c[h>>2]|0)+ -2|0]&255)<<8|(a[(c[h>>2]|0)+ -2+1|0]&255)<<0)&65535)<<16>>16<<2;c[p>>2]=c[n>>2]}}while(0);c[(c[l>>2]|0)+16>>2]=c[n>>2];c[(c[l>>2]|0)+20>>2]=c[o>>2];c[(c[l>>2]|0)+24>>2]=c[q>>2];c[(c[l>>2]|0)+28>>2]=c[p>>2];c[m>>2]=(c[m>>2]|0)+1;if((b[(c[l>>2]|0)+4>>1]&32|0)==0){t=23;break}}if((t|0)==23){c[(c[k>>2]|0)+84>>2]=c[m>>2];c[s>>2]=c[(c[f>>2]|0)+24>>2];m=vp(c[s>>2]|0)|0;c[(c[f>>2]|0)+168>>2]=(c[h>>2]|0)+m-(c[j>>2]|0);c[(c[f>>2]|0)+200>>2]=c[h>>2];u=c[g>>2]|0;i=e;return u|0}else if((t|0)==24){u=c[g>>2]|0;i=e;return u|0}else if((t|0)==25){c[g>>2]=21;u=c[g>>2]|0;i=e;return u|0}return 0}function yx(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b+4|0;e=b;c[d>>2]=a;c[e>>2]=c[(c[d>>2]|0)+24>>2];Bp(c[e>>2]|0);i=b;return}function zx(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+32|0;h=g+28|0;j=g;k=g+4|0;l=g+8|0;m=g+12|0;n=g+16|0;o=g+20|0;p=g+24|0;c[j>>2]=a;c[k>>2]=b;c[l>>2]=d;c[m>>2]=e;c[n>>2]=f;c[p>>2]=c[m>>2];do{if((c[c[k>>2]>>2]|0)>>>0<(c[n>>2]|0)>>>0){m=aa(c[c[k>>2]>>2]|0,c[l>>2]|0)|0;f=aa(c[n>>2]|0,c[l>>2]|0)|0;e=Yn(c[j>>2]|0,1,m,f,c[c[p>>2]>>2]|0,o)|0;c[c[p>>2]>>2]=e;if((c[o>>2]|0)==0){c[c[k>>2]>>2]=c[n>>2];break}c[h>>2]=c[o>>2];q=c[h>>2]|0;i=g;return q|0}}while(0);c[h>>2]=0;q=c[h>>2]|0;i=g;return q|0}function Ax(e,f,g){e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;h=i;i=i+32|0;j=h+28|0;k=h;l=h+4|0;m=h+8|0;n=h+12|0;o=h+16|0;p=h+20|0;q=h+24|0;c[k>>2]=e;c[l>>2]=f;c[m>>2]=g;c[o>>2]=0;c[n>>2]=0;do{if((c[l>>2]|0)>>>0<(c[(c[k>>2]|0)+696>>2]|0)>>>0){g=c[(c[k>>2]|0)+700>>2]|0;f=c[l>>2]|0;if((b[(c[k>>2]|0)+210>>1]|0)!=0){c[p>>2]=g+(f<<2);c[q>>2]=(c[(c[k>>2]|0)+700>>2]|0)+(c[(c[k>>2]|0)+696>>2]<<2);c[p>>2]=(c[p>>2]|0)+4;c[n>>2]=d[(c[p>>2]|0)+ -4|0]<<24|d[(c[p>>2]|0)+ -4+1|0]<<16|d[(c[p>>2]|0)+ -4+2|0]<<8|d[(c[p>>2]|0)+ -4+3|0]<<0;c[o>>2]=c[n>>2];if(!(((c[p>>2]|0)+4|0)>>>0<=(c[q>>2]|0)>>>0)){break}c[p>>2]=(c[p>>2]|0)+4;c[o>>2]=d[(c[p>>2]|0)+ -4|0]<<24|d[(c[p>>2]|0)+ -4+1|0]<<16|d[(c[p>>2]|0)+ -4+2|0]<<8|d[(c[p>>2]|0)+ -4+3|0]<<0;break}c[p>>2]=g+(f<<1);c[q>>2]=(c[(c[k>>2]|0)+700>>2]|0)+(c[(c[k>>2]|0)+696>>2]<<1);c[p>>2]=(c[p>>2]|0)+2;c[n>>2]=((a[(c[p>>2]|0)+ -2|0]&255)<<8|(a[(c[p>>2]|0)+ -2+1|0]&255)<<0)&65535;c[o>>2]=c[n>>2];if(((c[p>>2]|0)+2|0)>>>0<=(c[q>>2]|0)>>>0){c[p>>2]=(c[p>>2]|0)+2;c[o>>2]=((a[(c[p>>2]|0)+ -2|0]&255)<<8|(a[(c[p>>2]|0)+ -2+1|0]&255)<<0)&65535}c[n>>2]=c[n>>2]<<1;c[o>>2]=c[o>>2]<<1}}while(0);if((c[n>>2]|0)>>>0>(c[(c[k>>2]|0)+668>>2]|0)>>>0){c[c[m>>2]>>2]=0;c[j>>2]=0;r=c[j>>2]|0;i=h;return r|0}if((c[o>>2]|0)>>>0>(c[(c[k>>2]|0)+668>>2]|0)>>>0){c[o>>2]=c[(c[k>>2]|0)+668>>2]}if((c[o>>2]|0)>>>0>=(c[n>>2]|0)>>>0){c[c[m>>2]>>2]=(c[o>>2]|0)-(c[n>>2]|0)}else{c[c[m>>2]>>2]=(c[(c[k>>2]|0)+668>>2]|0)-(c[n>>2]|0)}c[j>>2]=c[n>>2];r=c[j>>2]|0;i=h;return r|0}function Bx(a,d){a=a|0;d=d|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;f=i;i=i+96|0;g=f+84|0;h=f+80|0;j=f+76|0;k=f+72|0;l=f+68|0;m=f+64|0;n=f+60|0;o=f+56|0;p=f+52|0;q=f+48|0;r=f+44|0;s=f+40|0;t=f+12|0;u=f;v=f+4|0;w=f+8|0;x=f+16|0;y=f+20|0;z=f+24|0;A=f+28|0;B=f+32|0;C=f+36|0;c[g>>2]=a;c[h>>2]=d;c[k>>2]=c[(c[h>>2]|0)+28>>2];c[s>>2]=0;c[t>>2]=0;c[u>>2]=0;c[v>>2]=c[(c[g>>2]|0)+676>>2];if((c[v>>2]|0)==0){c[j>>2]=0;D=c[k>>2]|0;E=c[s>>2]|0;Vn(D,E);c[s>>2]=0;F=c[k>>2]|0;G=c[t>>2]|0;Vn(F,G);c[t>>2]=0;H=c[k>>2]|0;I=c[u>>2]|0;Vn(H,I);c[u>>2]=0;J=c[j>>2]|0;i=f;return J|0}if((c[(c[g>>2]|0)+648>>2]|0)==0){c[j>>2]=0;D=c[k>>2]|0;E=c[s>>2]|0;Vn(D,E);c[s>>2]=0;F=c[k>>2]|0;G=c[t>>2]|0;Vn(F,G);c[t>>2]=0;H=c[k>>2]|0;I=c[u>>2]|0;Vn(H,I);c[u>>2]=0;J=c[j>>2]|0;i=f;return J|0}c[j>>2]=yd[c[(c[g>>2]|0)+508>>2]&31](c[g>>2]|0,1668702578,c[h>>2]|0,m)|0;if((c[j>>2]|0)!=0){c[j>>2]=0;D=c[k>>2]|0;E=c[s>>2]|0;Vn(D,E);c[s>>2]=0;F=c[k>>2]|0;G=c[t>>2]|0;Vn(F,G);c[t>>2]=0;H=c[k>>2]|0;I=c[u>>2]|0;Vn(H,I);c[u>>2]=0;J=c[j>>2]|0;i=f;return J|0}d=yp(c[h>>2]|0,c[m>>2]|0)|0;c[j>>2]=d;if((d|0)!=0){c[j>>2]=0;D=c[k>>2]|0;E=c[s>>2]|0;Vn(D,E);c[s>>2]=0;F=c[k>>2]|0;G=c[t>>2]|0;Vn(F,G);c[t>>2]=0;H=c[k>>2]|0;I=c[u>>2]|0;Vn(H,I);c[u>>2]=0;J=c[j>>2]|0;i=f;return J|0}c[l>>2]=(c[(c[h>>2]|0)+32>>2]|0)-(c[c[h>>2]>>2]|0);a:do{if((Ep(c[h>>2]|0)|0)==65536){c[s>>2]=Yn(c[k>>2]|0,4,0,c[c[v>>2]>>2]|0,0,j)|0;if(((c[j>>2]|0)==0?(c[t>>2]=Yn(c[k>>2]|0,4,0,c[c[v>>2]>>2]|0,0,j)|0,(c[j>>2]|0)==0):0)?(c[u>>2]=Yn(c[k>>2]|0,4,0,c[c[v>>2]>>2]|0,0,j)|0,(c[j>>2]|0)==0):0){c[n>>2]=(Dp(c[h>>2]|0)|0)&65535;d=c[l>>2]|0;c[o>>2]=d+((Dp(c[h>>2]|0)|0)&65535);c[q>>2]=0;while(1){if(!((c[q>>2]|0)>>>0<(c[n>>2]&4095)>>>0)){break a}c[z>>2]=(Dp(c[h>>2]|0)|0)&65535;c[A>>2]=(Dp(c[h>>2]|0)|0)&65535;do{if((c[A>>2]&32768|0)!=0){c[r>>2]=0;while(1){if(!((c[r>>2]|0)>>>0<(c[c[v>>2]>>2]|0)>>>0)){break}d=(Dp(c[h>>2]|0)|0)<<16>>16<<2;c[(c[s>>2]|0)+(c[r>>2]<<2)>>2]=d;c[r>>2]=(c[r>>2]|0)+1}b:do{if((c[A>>2]&16384|0)!=0){c[r>>2]=0;while(1){if(!((c[r>>2]|0)>>>0<(c[c[v>>2]>>2]|0)>>>0)){break}d=(Dp(c[h>>2]|0)|0)<<16>>16<<2;c[(c[t>>2]|0)+(c[r>>2]<<2)>>2]=d;c[r>>2]=(c[r>>2]|0)+1}c[r>>2]=0;while(1){if(!((c[r>>2]|0)>>>0<(c[c[v>>2]>>2]|0)>>>0)){break b}d=(Dp(c[h>>2]|0)|0)<<16>>16<<2;c[(c[u>>2]|0)+(c[r>>2]<<2)>>2]=d;c[r>>2]=(c[r>>2]|0)+1}}}while(0);c[B>>2]=Cx(c[v>>2]|0,c[A>>2]&65535,c[s>>2]|0,c[t>>2]|0,c[u>>2]|0)|0;if((c[B>>2]|0)!=0?(c[A>>2]&8192|0)!=0:0){c[p>>2]=(c[(c[h>>2]|0)+32>>2]|0)-(c[c[h>>2]>>2]|0);c[(c[h>>2]|0)+32>>2]=(c[c[h>>2]>>2]|0)+(c[o>>2]|0);c[x>>2]=Dx(c[h>>2]|0,w)|0;if((c[w>>2]|0)==0){K=c[(c[g>>2]|0)+644>>2]|0}else{K=c[w>>2]|0}c[y>>2]=Ex(c[h>>2]|0,K)|0;c:do{if((c[x>>2]|0)!=0?(c[y>>2]|0)!=0:0){d=(c[x>>2]|0)==(-1|0);c[r>>2]=0;if(d){while(1){if(!((c[r>>2]|0)>>>0<(c[(c[g>>2]|0)+644>>2]|0)>>>0)){break c}d=b[(c[(c[g>>2]|0)+648>>2]|0)+(c[r>>2]<<1)>>1]|0;m=d+(Nn(b[(c[y>>2]|0)+(c[r>>2]<<1)>>1]|0,c[B>>2]|0)|0)&65535;b[(c[(c[g>>2]|0)+648>>2]|0)+(c[r>>2]<<1)>>1]=m;c[r>>2]=(c[r>>2]|0)+1}}else{while(1){if(!((c[r>>2]|0)>>>0<(c[w>>2]|0)>>>0)){break c}c[C>>2]=e[(c[x>>2]|0)+(c[r>>2]<<1)>>1]|0;m=b[(c[(c[g>>2]|0)+648>>2]|0)+(c[C>>2]<<1)>>1]|0;d=m+(Nn(b[(c[y>>2]|0)+(c[r>>2]<<1)>>1]|0,c[B>>2]|0)|0)&65535;b[(c[(c[g>>2]|0)+648>>2]|0)+(c[C>>2]<<1)>>1]=d;c[r>>2]=(c[r>>2]|0)+1}}}}while(0);if((c[x>>2]|0)!=(-1|0)){Vn(c[k>>2]|0,c[x>>2]|0);c[x>>2]=0}Vn(c[k>>2]|0,c[y>>2]|0);c[y>>2]=0;c[o>>2]=(c[o>>2]|0)+(c[z>>2]|0);c[(c[h>>2]|0)+32>>2]=(c[c[h>>2]>>2]|0)+(c[p>>2]|0);break}c[o>>2]=(c[o>>2]|0)+(c[z>>2]|0)}else{d:do{if((c[A>>2]&16384|0)!=0){c[r>>2]=0;while(1){if(!((c[r>>2]|0)>>>0<c[c[v>>2]>>2]<<1>>>0)){break d}Dp(c[h>>2]|0)|0;c[r>>2]=(c[r>>2]|0)+1}}}while(0);c[o>>2]=(c[o>>2]|0)+(c[z>>2]|0)}}while(0);c[q>>2]=(c[q>>2]|0)+1}}}else{c[j>>2]=0}}while(0);Bp(c[h>>2]|0);D=c[k>>2]|0;E=c[s>>2]|0;Vn(D,E);c[s>>2]=0;F=c[k>>2]|0;G=c[t>>2]|0;Vn(F,G);c[t>>2]=0;H=c[k>>2]|0;I=c[u>>2]|0;Vn(H,I);c[u>>2]=0;J=c[j>>2]|0;i=f;return J|0}function Cx(a,d,e,f,g){a=a|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;h=i;i=i+32|0;j=h+20|0;k=h+24|0;l=h+4|0;m=h+8|0;n=h+12|0;o=h+16|0;p=h;c[j>>2]=a;b[k>>1]=d;c[l>>2]=e;c[m>>2]=f;c[n>>2]=g;c[p>>2]=65536;c[o>>2]=0;a:while(1){if(!((c[o>>2]|0)>>>0<(c[c[j>>2]>>2]|0)>>>0)){q=19;break}do{if((c[(c[l>>2]|0)+(c[o>>2]<<2)>>2]|0)!=0){if((c[(c[(c[j>>2]|0)+4>>2]|0)+(c[o>>2]<<2)>>2]|0)==0){q=9;break a}if((c[(c[(c[j>>2]|0)+4>>2]|0)+(c[o>>2]<<2)>>2]|0)<0?(c[(c[l>>2]|0)+(c[o>>2]<<2)>>2]|0)>0:0){q=9;break a}if((c[(c[(c[j>>2]|0)+4>>2]|0)+(c[o>>2]<<2)>>2]|0)>0?(c[(c[l>>2]|0)+(c[o>>2]<<2)>>2]|0)<0:0){q=9;break a}if((b[k>>1]&16384|0)==0){g=c[(c[(c[j>>2]|0)+4>>2]|0)+(c[o>>2]<<2)>>2]|0;c[p>>2]=Nn(c[p>>2]|0,(c[(c[(c[j>>2]|0)+4>>2]|0)+(c[o>>2]<<2)>>2]|0)>0?g:0-g|0)|0;break}if((c[(c[(c[j>>2]|0)+4>>2]|0)+(c[o>>2]<<2)>>2]|0)<=(c[(c[m>>2]|0)+(c[o>>2]<<2)>>2]|0)){q=14;break a}if((c[(c[(c[j>>2]|0)+4>>2]|0)+(c[o>>2]<<2)>>2]|0)>=(c[(c[n>>2]|0)+(c[o>>2]<<2)>>2]|0)){q=14;break a}g=c[p>>2]|0;f=c[o>>2]|0;if((c[(c[(c[j>>2]|0)+4>>2]|0)+(c[o>>2]<<2)>>2]|0)<(c[(c[l>>2]|0)+(c[o>>2]<<2)>>2]|0)){c[p>>2]=In(g,(c[(c[(c[j>>2]|0)+4>>2]|0)+(f<<2)>>2]|0)-(c[(c[m>>2]|0)+(c[o>>2]<<2)>>2]|0)|0,(c[(c[l>>2]|0)+(c[o>>2]<<2)>>2]|0)-(c[(c[m>>2]|0)+(c[o>>2]<<2)>>2]|0)|0)|0;break}else{c[p>>2]=In(g,(c[(c[n>>2]|0)+(f<<2)>>2]|0)-(c[(c[(c[j>>2]|0)+4>>2]|0)+(c[o>>2]<<2)>>2]|0)|0,(c[(c[n>>2]|0)+(c[o>>2]<<2)>>2]|0)-(c[(c[l>>2]|0)+(c[o>>2]<<2)>>2]|0)|0)|0;break}}}while(0);c[o>>2]=(c[o>>2]|0)+1}if((q|0)==9){c[p>>2]=0;r=c[p>>2]|0;i=h;return r|0}else if((q|0)==14){c[p>>2]=0;r=c[p>>2]|0;i=h;return r|0}else if((q|0)==19){r=c[p>>2]|0;i=h;return r|0}return 0}function Dx(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+48|0;f=e+40|0;g=e+36|0;h=e+32|0;j=e+28|0;k=e+24|0;l=e+20|0;m=e+12|0;n=e+8|0;o=e+4|0;p=e;q=e+16|0;c[g>>2]=a;c[h>>2]=d;c[j>>2]=0;c[p>>2]=c[(c[g>>2]|0)+28>>2];c[q>>2]=0;c[q>>2]=c[q>>2];d=(Cp(c[g>>2]|0)|0)&255;c[k>>2]=d;c[c[h>>2]>>2]=d;if((c[k>>2]|0)==0){c[f>>2]=-1;r=c[f>>2]|0;i=e;return r|0}if((c[k>>2]&128|0)!=0){d=(Cp(c[g>>2]|0)|0)&255;c[k>>2]=d|(c[k>>2]&127)<<8}c[j>>2]=Yn(c[p>>2]|0,2,0,c[k>>2]|0,0,q)|0;if((c[q>>2]|0)!=0){c[f>>2]=0;r=c[f>>2]|0;i=e;return r|0}c[m>>2]=0;a:while(1){if((c[m>>2]|0)>=(c[k>>2]|0)){break}c[l>>2]=(Cp(c[g>>2]|0)|0)&255;if((c[l>>2]&128|0)!=0){c[l>>2]=c[l>>2]&127;q=Dp(c[g>>2]|0)|0;p=c[m>>2]|0;c[m>>2]=p+1;b[(c[j>>2]|0)+(p<<1)>>1]=q;c[o>>2]=q&65535;if((c[l>>2]|0)<1){break}if(((c[m>>2]|0)+(c[l>>2]|0)|0)>=(c[k>>2]|0)){break}c[n>>2]=0;while(1){if((c[n>>2]|0)>=(c[l>>2]|0)){continue a}q=(Dp(c[g>>2]|0)|0)&65535;p=(c[o>>2]|0)+q|0;c[o>>2]=p;q=c[m>>2]|0;c[m>>2]=q+1;b[(c[j>>2]|0)+(q<<1)>>1]=p;c[n>>2]=(c[n>>2]|0)+1}}else{p=(Cp(c[g>>2]|0)|0)&255;q=c[m>>2]|0;c[m>>2]=q+1;b[(c[j>>2]|0)+(q<<1)>>1]=p;c[o>>2]=p&65535;if((c[l>>2]|0)<1){break}if(((c[m>>2]|0)+(c[l>>2]|0)|0)>=(c[k>>2]|0)){break}c[n>>2]=0;while(1){if((c[n>>2]|0)>=(c[l>>2]|0)){continue a}p=(Cp(c[g>>2]|0)|0)&255;q=(c[o>>2]|0)+p|0;c[o>>2]=q;p=c[m>>2]|0;c[m>>2]=p+1;b[(c[j>>2]|0)+(p<<1)>>1]=q;c[n>>2]=(c[n>>2]|0)+1}}}c[f>>2]=c[j>>2];r=c[f>>2]|0;i=e;return r|0}function Ex(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+48|0;f=e+32|0;g=e+28|0;h=e+24|0;j=e+20|0;k=e+16|0;l=e+8|0;m=e+4|0;n=e;o=e+12|0;c[g>>2]=a;c[h>>2]=d;c[j>>2]=0;c[n>>2]=c[(c[g>>2]|0)+28>>2];c[o>>2]=0;c[o>>2]=c[o>>2];c[j>>2]=Yn(c[n>>2]|0,2,0,c[h>>2]|0,0,o)|0;if((c[o>>2]|0)!=0){c[f>>2]=0;p=c[f>>2]|0;i=e;return p|0}c[l>>2]=0;while(1){if(!((c[l>>2]|0)>>>0<(c[h>>2]|0)>>>0)){q=19;break}c[k>>2]=(Cp(c[g>>2]|0)|0)&255;a:do{if((c[k>>2]&128|0)==0){o=(c[k>>2]&64|0)!=0;c[m>>2]=0;if(o){while(1){if(!((c[m>>2]|0)>>>0<=(c[k>>2]&63)>>>0)){break a}if(!((c[l>>2]|0)>>>0<(c[h>>2]|0)>>>0)){break a}o=Dp(c[g>>2]|0)|0;d=c[l>>2]|0;c[l>>2]=d+1;b[(c[j>>2]|0)+(d<<1)>>1]=o;c[m>>2]=(c[m>>2]|0)+1}}else{while(1){if(!((c[m>>2]|0)>>>0<=(c[k>>2]&63)>>>0)){break a}if(!((c[l>>2]|0)>>>0<(c[h>>2]|0)>>>0)){break a}o=(Cp(c[g>>2]|0)|0)<<24>>24;d=c[l>>2]|0;c[l>>2]=d+1;b[(c[j>>2]|0)+(d<<1)>>1]=o;c[m>>2]=(c[m>>2]|0)+1}}}else{c[m>>2]=0;while(1){if(!((c[m>>2]|0)>>>0<=(c[k>>2]&63)>>>0)){break a}if(!((c[l>>2]|0)>>>0<(c[h>>2]|0)>>>0)){break a}o=c[l>>2]|0;c[l>>2]=o+1;b[(c[j>>2]|0)+(o<<1)>>1]=0;c[m>>2]=(c[m>>2]|0)+1}}}while(0);if((c[m>>2]|0)>>>0<=(c[k>>2]&63)>>>0){q=18;break}}if((q|0)==18){Vn(c[n>>2]|0,c[j>>2]|0);c[j>>2]=0;c[f>>2]=0;p=c[f>>2]|0;i=e;return p|0}else if((q|0)==19){c[f>>2]=c[j>>2];p=c[f>>2]|0;i=e;return p|0}return 0}function Fx(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;e=d+8|0;f=d;g=d+4|0;c[f>>2]=b;c[g>>2]=0;while(1){if((c[g>>2]|0)>=9){h=6;break}if((Vz(c[f>>2]|0,96176+((c[g>>2]|0)*20|0)|0)|0)!=0){h=4;break}c[g>>2]=(c[g>>2]|0)+1}if((h|0)==4){a[e]=1;j=a[e]|0;i=d;return j|0}else if((h|0)==6){a[e]=0;j=a[e]|0;i=d;return j|0}return 0}function Gx(d){d=d|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;f=i;i=i+96|0;g=f+89|0;h=f;j=f+4|0;k=f+8|0;l=f+88|0;m=f+87|0;n=f+86|0;o=f+84|0;p=f+76|0;q=f+80|0;c[h>>2]=d;d=k+0|0;r=d+68|0;do{c[d>>2]=0;d=d+4|0}while((d|0)<(r|0));a[l]=0;a[m]=0;a[n]=0;b[o>>1]=0;a:while(1){if((e[o>>1]|0)>=(e[(c[h>>2]|0)+152>>1]|0)){break}c[j>>2]=0;d=c[(c[(c[h>>2]|0)+156>>2]|0)+(e[o>>1]<<4)>>2]|0;if((d|0)==1668707360){c[q>>2]=0;a[l]=1;s=7}else if((d|0)==1886545264){c[q>>2]=2;a[n]=1;s=7}else if((d|0)==1718642541){c[q>>2]=1;a[m]=1;s=7}b:do{if((s|0)==7){s=0;c[p>>2]=0;while(1){if((c[p>>2]|0)>=17){break b}if((c[(c[(c[h>>2]|0)+156>>2]|0)+(e[o>>1]<<4)+12>>2]|0)==(c[95768+((c[p>>2]|0)*24|0)+(c[q>>2]<<3)+4>>2]|0)){if((c[j>>2]|0)==0){c[j>>2]=Hx(c[h>>2]|0,b[o>>1]|0)|0}if((c[95768+((c[p>>2]|0)*24|0)+(c[q>>2]<<3)>>2]|0)==(c[j>>2]|0)){d=k+(c[p>>2]<<2)|0;c[d>>2]=(c[d>>2]|0)+1}if((c[k+(c[p>>2]<<2)>>2]|0)==3){s=15;break a}}c[p>>2]=(c[p>>2]|0)+1}}}while(0);b[o>>1]=(b[o>>1]|0)+1<<16>>16}if((s|0)==15){a[g]=1;t=a[g]|0;i=f;return t|0}c[p>>2]=0;while(1){if((c[p>>2]|0)>=17){s=32;break}if((a[l]|0)==0?(c[95772+((c[p>>2]|0)*24|0)>>2]|0)==0:0){o=k+(c[p>>2]<<2)|0;c[o>>2]=(c[o>>2]|0)+1}if((a[m]|0)==0?(c[95780+((c[p>>2]|0)*24|0)>>2]|0)==0:0){o=k+(c[p>>2]<<2)|0;c[o>>2]=(c[o>>2]|0)+1}if((a[n]|0)==0?(c[95788+((c[p>>2]|0)*24|0)>>2]|0)==0:0){o=k+(c[p>>2]<<2)|0;c[o>>2]=(c[o>>2]|0)+1}if((c[k+(c[p>>2]<<2)>>2]|0)==3){s=30;break}c[p>>2]=(c[p>>2]|0)+1}if((s|0)==30){a[g]=1;t=a[g]|0;i=f;return t|0}else if((s|0)==32){a[g]=0;t=a[g]|0;i=f;return t|0}return 0}function Hx(a,d){a=a|0;d=d|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;g=f+4|0;h=f;j=f+8|0;c[h>>2]=a;b[j>>1]=d;if((c[(c[h>>2]|0)+508>>2]|0)==0){c[g>>2]=0;k=c[g>>2]|0;i=f;return k|0}if((yd[c[(c[h>>2]|0)+508>>2]&31](c[h>>2]|0,c[(c[(c[h>>2]|0)+156>>2]|0)+((e[j>>1]|0)<<4)>>2]|0,c[(c[h>>2]|0)+104>>2]|0,0)|0)!=0){c[g>>2]=0;k=c[g>>2]|0;i=f;return k|0}else{c[g>>2]=Ix(c[(c[h>>2]|0)+104>>2]|0,c[(c[(c[h>>2]|0)+156>>2]|0)+((e[j>>1]|0)<<4)+12>>2]|0)|0;k=c[g>>2]|0;i=f;return k|0}return 0}function Ix(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+32|0;e=d+20|0;f=d;g=d+4|0;h=d+12|0;j=d+16|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=0;b=yp(c[f>>2]|0,c[g>>2]|0)|0;c[d+8>>2]=b;if((b|0)!=0){c[e>>2]=0;k=c[e>>2]|0;i=d;return k|0}while(1){if(!((c[g>>2]|0)>>>0>3)){break}b=Ep(c[f>>2]|0)|0;c[h>>2]=(c[h>>2]|0)+b;c[g>>2]=(c[g>>2]|0)-4}c[j>>2]=3;while(1){l=c[f>>2]|0;if(!((c[g>>2]|0)>>>0>0)){break}b=(Cp(l)|0)&255;c[h>>2]=(c[h>>2]|0)+(b<<(c[j>>2]<<3));c[g>>2]=(c[g>>2]|0)+ -1;c[j>>2]=(c[j>>2]|0)+ -1}Bp(l);c[e>>2]=c[h>>2];k=c[e>>2]|0;i=d;return k|0}function Jx(d){d=d|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+32|0;g=f+16|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;c[h>>2]=d;c[k>>2]=0;a[(c[h>>2]|0)+108|0]=0;c[j>>2]=c[c[h>>2]>>2];c[l>>2]=(c[h>>2]|0)+44;d=c[l>>2]|0;m=(c[h>>2]|0)+12|0;c[d+0>>2]=c[m+0>>2];c[d+4>>2]=c[m+4>>2];c[d+8>>2]=c[m+8>>2];c[d+12>>2]=c[m+12>>2];c[d+16>>2]=c[m+16>>2];c[d+20>>2]=c[m+20>>2];c[d+24>>2]=c[m+24>>2];if((e[c[l>>2]>>1]|0)>=1?(e[(c[l>>2]|0)+2>>1]|0)>=1:0){if((b[(c[j>>2]|0)+176>>1]&8|0)!=0){m=On(e[c[l>>2]>>1]<<6,e[(c[j>>2]|0)+68>>1]|0)|0;c[(c[l>>2]|0)+4>>2]=m;m=On(e[(c[l>>2]|0)+2>>1]<<6,e[(c[j>>2]|0)+68>>1]|0)|0;c[(c[l>>2]|0)+8>>2]=m;m=(Nn(b[(c[j>>2]|0)+70>>1]|0,c[(c[l>>2]|0)+8>>2]|0)|0)+32&-64;c[(c[l>>2]|0)+12>>2]=m;m=(Nn(b[(c[j>>2]|0)+72>>1]|0,c[(c[l>>2]|0)+8>>2]|0)|0)+32&-64;c[(c[l>>2]|0)+16>>2]=m;m=(Nn(b[(c[j>>2]|0)+74>>1]|0,c[(c[l>>2]|0)+8>>2]|0)|0)+32&-64;c[(c[l>>2]|0)+20>>2]=m;m=(Nn(b[(c[j>>2]|0)+76>>1]|0,c[(c[l>>2]|0)+4>>2]|0)|0)+32&-64;c[(c[l>>2]|0)+24>>2]=m}m=c[l>>2]|0;if((e[c[l>>2]>>1]|0)>=(e[(c[l>>2]|0)+2>>1]|0)){c[(c[h>>2]|0)+88>>2]=c[m+4>>2];b[(c[h>>2]|0)+80>>1]=b[c[l>>2]>>1]|0;c[(c[h>>2]|0)+72>>2]=65536;j=On(e[(c[l>>2]|0)+2>>1]|0,e[c[l>>2]>>1]|0)|0;c[(c[h>>2]|0)+76>>2]=j}else{c[(c[h>>2]|0)+88>>2]=c[m+8>>2];b[(c[h>>2]|0)+80>>1]=b[(c[l>>2]|0)+2>>1]|0;m=On(e[c[l>>2]>>1]|0,e[(c[l>>2]|0)+2>>1]|0)|0;c[(c[h>>2]|0)+72>>2]=m;c[(c[h>>2]|0)+76>>2]=65536}a[(c[h>>2]|0)+301|0]=0;if((c[k>>2]|0)==0){a[(c[h>>2]|0)+108|0]=1}c[g>>2]=c[k>>2];n=c[g>>2]|0;i=f;return n|0}c[g>>2]=151;n=c[g>>2]|0;i=f;return n|0}function Kx(d,f,g,h,j){d=d|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0;k=i;i=i+32|0;l=k+16|0;m=k;n=k+4|0;o=k+8|0;p=k+12|0;c[l>>2]=d;c[m>>2]=f;c[n>>2]=g;c[o>>2]=h;c[p>>2]=j;j=c[l>>2]|0;if((a[(c[l>>2]|0)+292|0]|0)!=0){Bd[c[(c[j+532>>2]|0)+112>>2]&15](c[l>>2]|0,1,c[m>>2]|0,c[o>>2]|0,c[p>>2]|0)|0;i=k;return}m=c[l>>2]|0;if((e[j+364>>1]|0)!=65535){b[c[o>>2]>>1]=(b[m+434>>1]|0)-(c[n>>2]|0);b[c[p>>2]>>1]=(b[(c[l>>2]|0)+434>>1]|0)-(b[(c[l>>2]|0)+436>>1]|0);i=k;return}else{b[c[o>>2]>>1]=(b[m+220>>1]|0)-(c[n>>2]|0);b[c[p>>2]>>1]=(b[(c[l>>2]|0)+220>>1]|0)-(b[(c[l>>2]|0)+222>>1]|0);i=k;return}}function Lx(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;g=f+12|0;h=f;j=f+4|0;k=f+8|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;Bd[c[(c[(c[g>>2]|0)+532>>2]|0)+112>>2]&15](c[g>>2]|0,0,c[h>>2]|0,c[j>>2]|0,c[k>>2]|0)|0;i=f;return}function Mx(b,d,f,g){b=b|0;d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;h=i;i=i+240|0;j=h+232|0;k=h;l=h+4|0;m=h+8|0;n=h+12|0;o=h+16|0;p=h+24|0;c[k>>2]=b;c[l>>2]=d;c[m>>2]=f;c[n>>2]=g;if(((c[(c[k>>2]|0)+112>>2]|0)!=-1?(c[n>>2]&8|0)==0:0)?(c[o>>2]=Nx(c[k>>2]|0,c[l>>2]|0,c[m>>2]|0,c[n>>2]|0)|0,(c[o>>2]|0)==0):0){if(((c[(c[(c[l>>2]|0)+4>>2]|0)+8>>2]&1|0)!=0?(Ox(p,c[k>>2]|0,c[l>>2]|0,c[n>>2]|0,1)|0,Px(p,c[m>>2]|0,0,1)|0,c[(c[l>>2]|0)+56>>2]=c[p+60>>2],c[(c[l>>2]|0)+60>>2]=(c[p+176>>2]|0)+(c[p+48>>2]|0)-(c[p+180>>2]|0),(c[(c[l>>2]|0)+40>>2]|0)==0):0)?(c[(c[l>>2]|0)+56>>2]|0)!=0:0){g=Nn(c[(c[l>>2]|0)+56>>2]|0,c[(c[k>>2]|0)+16>>2]|0)|0;c[(c[l>>2]|0)+40>>2]=g}c[j>>2]=0;q=c[j>>2]|0;i=h;return q|0}if((c[n>>2]&1|0)==0?(a[(c[k>>2]|0)+108|0]|0)==0:0){c[j>>2]=36;q=c[j>>2]|0;i=h;return q|0}if((c[n>>2]&16384|0)!=0){c[j>>2]=6;q=c[j>>2]|0;i=h;return q|0}c[o>>2]=Ox(p,c[k>>2]|0,c[l>>2]|0,c[n>>2]|0,0)|0;if((c[o>>2]|0)!=0){c[j>>2]=c[o>>2];q=c[j>>2]|0;i=h;return q|0}c[(c[l>>2]|0)+72>>2]=1869968492;c[(c[l>>2]|0)+128>>2]=0;c[(c[l>>2]|0)+124>>2]=0;c[o>>2]=Px(p,c[m>>2]|0,0,0)|0;if((c[o>>2]|0)==0){if((c[(c[l>>2]|0)+72>>2]|0)!=1668246896){g=(c[l>>2]|0)+108|0;f=(c[p+12>>2]|0)+20|0;c[g+0>>2]=c[f+0>>2];c[g+4>>2]=c[f+4>>2];c[g+8>>2]=c[f+8>>2];c[g+12>>2]=c[f+12>>2];c[g+16>>2]=c[f+16>>2];f=(c[l>>2]|0)+124|0;c[f>>2]=c[f>>2]&-513;if((c[p+68>>2]|0)!=0){xo((c[l>>2]|0)+108|0,0-(c[p+68>>2]|0)|0,0)}}else{c[(c[l>>2]|0)+128>>2]=c[(c[p+12>>2]|0)+48>>2];c[(c[l>>2]|0)+132>>2]=c[(c[p+12>>2]|0)+52>>2]}do{if((c[n>>2]&2|0)==0){if((a[(c[p+160>>2]|0)+337|0]|0)==0){f=(c[l>>2]|0)+124|0;c[f>>2]=c[f>>2]|8;break}f=c[(c[p+160>>2]|0)+340>>2]|0;if((f|0)==4){g=(c[l>>2]|0)+124|0;c[g>>2]=c[g>>2]|48;break}else if((f|0)==0){g=(c[l>>2]|0)+124|0;c[g>>2]=c[g>>2]|32;break}else if((f|0)==1){break}else if((f|0)==5){f=(c[l>>2]|0)+124|0;c[f>>2]=c[f>>2]|16;break}else{f=(c[l>>2]|0)+124|0;c[f>>2]=c[f>>2]|8;break}}}while(0);Qx(p,c[m>>2]|0)|0}if((c[n>>2]&1|0)==0?(e[(c[k>>2]|0)+14>>1]|0)<24:0){k=(c[l>>2]|0)+124|0;c[k>>2]=c[k>>2]|256}c[j>>2]=c[o>>2];q=c[j>>2]|0;i=h;return q|0}function Nx(a,d,f,g){a=a|0;d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;h=i;i=i+48|0;j=h+16|0;k=h+28|0;l=h+24|0;m=h+20|0;n=h+12|0;o=h+8|0;p=h+4|0;q=h;r=h+32|0;c[j>>2]=a;c[k>>2]=d;c[l>>2]=f;c[m>>2]=g;c[n>>2]=c[(c[k>>2]|0)+4>>2];c[o>>2]=c[(c[n>>2]|0)+532>>2];c[p>>2]=c[(c[n>>2]|0)+104>>2];c[q>>2]=ld[c[(c[o>>2]|0)+72>>2]&1](c[n>>2]|0,c[(c[j>>2]|0)+112>>2]|0,c[l>>2]|0,c[m>>2]|0,c[p>>2]|0,(c[k>>2]|0)+76|0,r)|0;if((c[q>>2]|0)!=0){s=c[q>>2]|0;i=h;return s|0}b[(c[k>>2]|0)+110>>1]=0;b[(c[k>>2]|0)+108>>1]=0;c[(c[k>>2]|0)+24>>2]=e[r+2>>1]<<6;c[(c[k>>2]|0)+28>>2]=e[r>>1]<<6;c[(c[k>>2]|0)+32>>2]=b[r+4>>1]<<6;c[(c[k>>2]|0)+36>>2]=b[r+6>>1]<<6;c[(c[k>>2]|0)+40>>2]=e[r+8>>1]<<6;c[(c[k>>2]|0)+44>>2]=b[r+10>>1]<<6;c[(c[k>>2]|0)+48>>2]=b[r+12>>1]<<6;c[(c[k>>2]|0)+52>>2]=e[r+14>>1]<<6;c[(c[k>>2]|0)+72>>2]=1651078259;if((c[m>>2]&16|0)!=0){c[(c[k>>2]|0)+100>>2]=b[r+10>>1]|0;c[(c[k>>2]|0)+104>>2]=b[r+12>>1]|0;s=c[q>>2]|0;i=h;return s|0}else{c[(c[k>>2]|0)+100>>2]=b[r+4>>1]|0;c[(c[k>>2]|0)+104>>2]=b[r+6>>1]|0;s=c[q>>2]|0;i=h;return s|0}return 0}function Ox(e,f,g,h,j){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;k=i;i=i+64|0;l=k+16|0;m=k+44|0;n=k+36|0;o=k+40|0;p=k+32|0;q=k+51|0;r=k+20|0;s=k+24|0;t=k+50|0;u=k+12|0;v=k+49|0;w=k+48|0;x=k+8|0;y=k+4|0;z=k;A=k+28|0;c[m>>2]=e;c[n>>2]=f;c[o>>2]=g;c[p>>2]=h;a[q]=j;a[t]=c[p>>2]&128;c[r>>2]=c[(c[o>>2]|0)+4>>2];c[s>>2]=c[(c[r>>2]|0)+104>>2];nA(c[m>>2]|0,0,208)|0;if((c[p>>2]&2|0)==0?(a[q]|0)==0:0){a[w]=0;if((a[(c[n>>2]|0)+301|0]|0)==0?(c[x>>2]=cy(c[n>>2]|0,a[t]|0)|0,(c[x>>2]|0)!=0):0){c[l>>2]=c[x>>2];B=c[l>>2]|0;i=k;return B|0}if((d[(c[n>>2]|0)+292|0]|0)!=0){C=c[(c[n>>2]|0)+296>>2]|0}else{C=c[(c[(c[r>>2]|0)+96>>2]|0)+28>>2]|0}c[u>>2]=C;if((c[u>>2]|0)==0){c[l>>2]=153;B=c[l>>2]|0;i=k;return B|0}a[v]=(c[p>>2]>>16&15|0)!=2;dy(c[u>>2]|0,c[r>>2]|0,c[n>>2]|0)|0;if((d[v]|0)!=(d[(c[u>>2]|0)+604|0]|0)){a[(c[u>>2]|0)+604|0]=a[v]|0;a[w]=1}if((a[w]|0)!=0){c[y>>2]=0;while(1){if(!((c[y>>2]|0)>>>0<(c[(c[n>>2]|0)+240>>2]|0)>>>0)){break}w=Nn(b[(c[(c[r>>2]|0)+648>>2]|0)+(c[y>>2]<<1)>>1]|0,c[(c[n>>2]|0)+88>>2]|0)|0;c[(c[(c[n>>2]|0)+244>>2]|0)+(c[y>>2]<<2)>>2]=w;c[y>>2]=(c[y>>2]|0)+1}ey(c[n>>2]|0,a[t]|0)|0}if((a[(c[u>>2]|0)+336|0]&1|0)!=0){c[p>>2]=c[p>>2]|2}if((a[(c[u>>2]|0)+336|0]&2|0)!=0){t=(c[u>>2]|0)+284|0;y=95168|0;w=t+68|0;do{c[t>>2]=c[y>>2];t=t+4|0;y=y+4|0}while((t|0)<(w|0))}a[(c[u>>2]|0)+561|0]=c[p>>2]&128;c[(c[m>>2]|0)+160>>2]=c[u>>2];c[(c[m>>2]|0)+164>>2]=c[(c[u>>2]|0)+392>>2]}do{if((c[(c[(c[r>>2]|0)+128>>2]|0)+48>>2]|0)!=0){c[(c[m>>2]|0)+84>>2]=0}else{c[z>>2]=yd[c[(c[r>>2]|0)+508>>2]&31](c[r>>2]|0,1735162214,c[s>>2]|0,0)|0;if((c[z>>2]&255|0)==142){c[(c[m>>2]|0)+84>>2]=0;break}if((c[z>>2]|0)==0){u=vp(c[s>>2]|0)|0;c[(c[m>>2]|0)+84>>2]=u;break}c[l>>2]=c[z>>2];B=c[l>>2]|0;i=k;return B|0}}while(0);if((a[q]|0)==0){c[A>>2]=c[c[(c[o>>2]|0)+156>>2]>>2];Tn(c[A>>2]|0);c[(c[m>>2]|0)+12>>2]=c[A>>2]}c[(c[m>>2]|0)+16>>2]=c[p>>2];c[c[m>>2]>>2]=c[r>>2];c[(c[m>>2]|0)+4>>2]=c[n>>2];c[(c[m>>2]|0)+8>>2]=c[o>>2];c[(c[m>>2]|0)+24>>2]=c[s>>2];c[l>>2]=0;B=c[l>>2]|0;i=k;return B|0}function Px(d,f,g,h){d=d|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;j=i;i=i+192|0;k=j+116|0;l=j+96|0;m=j+100|0;n=j+184|0;o=j+104|0;p=j+108|0;q=j+112|0;r=j+120|0;s=j+124|0;t=j+128|0;u=j+186|0;v=j+132|0;w=j+136|0;x=j+176|0;y=j+185|0;z=j+92|0;A=j+88|0;B=j+24|0;C=j;D=j+4|0;E=j+8|0;F=j+12|0;G=j+16|0;H=j+20|0;I=j+28|0;J=j+32|0;K=j+36|0;L=j+40|0;M=j+44|0;N=j+48|0;O=j+52|0;P=j+56|0;c[k>>2]=d;c[l>>2]=f;c[m>>2]=g;a[n]=h;c[o>>2]=0;c[s>>2]=c[c[k>>2]>>2];c[t>>2]=c[(c[k>>2]|0)+12>>2];a[u]=0;c[v>>2]=0;a[y]=0;if((c[m>>2]|0)>>>0>1?(c[m>>2]|0)>>>0>(e[(c[s>>2]|0)+290>>1]|0)>>>0:0){c[o>>2]=21}else{Q=4}a:do{if((Q|0)==4){if((c[l>>2]|0)>>>0>=(c[(c[s>>2]|0)+16>>2]|0)>>>0){c[o>>2]=16;break}c[(c[k>>2]|0)+20>>2]=c[l>>2];if((c[(c[k>>2]|0)+16>>2]&1|0)==0){c[p>>2]=c[(c[(c[k>>2]|0)+4>>2]|0)+48>>2];c[q>>2]=c[(c[(c[k>>2]|0)+4>>2]|0)+52>>2]}else{c[p>>2]=65536;c[q>>2]=65536}h=c[s>>2]|0;if((c[(c[(c[s>>2]|0)+128>>2]|0)+48>>2]|0)!=0){c[o>>2]=md[c[c[c[(c[h+128>>2]|0)+48>>2]>>2]>>2]&63](c[(c[(c[(c[s>>2]|0)+128>>2]|0)+48>>2]|0)+4>>2]|0,c[l>>2]|0,x)|0;if((c[o>>2]|0)!=0){break}a[y]=1;c[r>>2]=0;c[(c[k>>2]|0)+28>>2]=c[x+4>>2];g=w+0|0;f=g+40|0;do{c[g>>2]=0;g=g+4|0}while((g|0)<(f|0));io(w,c[x>>2]|0,c[x+4>>2]|0);c[(c[k>>2]|0)+24>>2]=w}else{c[r>>2]=Ax(h,c[l>>2]|0,(c[k>>2]|0)+28|0)|0}if((c[(c[k>>2]|0)+28>>2]|0)>0){if((c[(c[k>>2]|0)+84>>2]|0)==0?(c[(c[(c[s>>2]|0)+128>>2]|0)+48>>2]|0)==0:0){c[o>>2]=8;break}c[o>>2]=yd[c[(c[s>>2]|0)+512>>2]&31](c[k>>2]|0,c[l>>2]|0,(c[(c[k>>2]|0)+84>>2]|0)+(c[r>>2]|0)|0,c[(c[k>>2]|0)+28>>2]|0)|0;if((c[o>>2]|0)!=0){break}a[u]=1;c[o>>2]=vd[c[(c[s>>2]|0)+520>>2]&63](c[k>>2]|0)|0;if((c[o>>2]|0)!=0){break}c[o>>2]=Sx(c[k>>2]|0,c[l>>2]|0)|0;if((c[o>>2]|0)!=0){break}if((a[n]|0)!=0){break}}if((c[(c[k>>2]|0)+28>>2]|0)!=0?(b[(c[k>>2]|0)+32>>1]|0)!=0:0){c[(c[k>>2]|0)+68>>2]=(c[(c[k>>2]|0)+36>>2]|0)-(c[(c[k>>2]|0)+52>>2]|0);c[(c[k>>2]|0)+72>>2]=0;c[(c[k>>2]|0)+76>>2]=(c[(c[k>>2]|0)+68>>2]|0)+(c[(c[k>>2]|0)+56>>2]|0);c[(c[k>>2]|0)+80>>2]=0;c[(c[k>>2]|0)+184>>2]=0;c[(c[k>>2]|0)+188>>2]=(c[(c[k>>2]|0)+48>>2]|0)+(c[(c[k>>2]|0)+176>>2]|0);c[(c[k>>2]|0)+192>>2]=0;c[(c[k>>2]|0)+196>>2]=(c[(c[k>>2]|0)+188>>2]|0)-(c[(c[k>>2]|0)+180>>2]|0);Tx(c[k>>2]|0,c[l>>2]|0);if((b[(c[k>>2]|0)+32>>1]|0)>0){c[o>>2]=vd[c[(c[s>>2]|0)+524>>2]&63](c[k>>2]|0)|0;if((c[o>>2]|0)!=0){break}rd[c[(c[s>>2]|0)+516>>2]&127](c[k>>2]|0);a[u]=0;c[o>>2]=Vx(c[k>>2]|0)|0;if((c[o>>2]|0)!=0){break}co(c[t>>2]|0);break}if(!((b[(c[k>>2]|0)+32>>1]|0)==-1)){c[o>>2]=20;break}c[A>>2]=b[(c[t>>2]|0)+22>>1]|0;c[B>>2]=b[(c[t>>2]|0)+20>>1]|0;c[o>>2]=vd[c[(c[s>>2]|0)+528>>2]&63](c[k>>2]|0)|0;if((c[o>>2]|0)!=0){break}c[C>>2]=c[(c[k>>2]|0)+168>>2];rd[c[(c[s>>2]|0)+516>>2]&127](c[k>>2]|0);a[u]=0;if((a[(c[s>>2]|0)+672|0]|0)!=0){c[G>>2]=c[(c[s>>2]|0)+100>>2];g=Ux(c[s>>2]|0,c[l>>2]|0,v,(c[(c[t>>2]|0)+84>>2]|0)+4|0)|0;c[o>>2]=g;if((g|0)!=0){break}c[F>>2]=(c[(c[t>>2]|0)+88>>2]|0)+(c[(c[t>>2]|0)+48>>2]<<5);c[E>>2]=c[(c[t>>2]|0)+84>>2];c[D>>2]=0;while(1){if((c[D>>2]|0)>=(c[E>>2]|0)){break}if((b[(c[F>>2]|0)+4>>1]&2|0)!=0){g=(c[F>>2]|0)+8|0;c[g>>2]=(c[g>>2]|0)+((c[(c[v>>2]|0)+(c[D>>2]<<3)>>2]&65535)<<16>>16);g=(c[F>>2]|0)+12|0;c[g>>2]=(c[g>>2]|0)+((c[(c[v>>2]|0)+(c[D>>2]<<3)+4>>2]&65535)<<16>>16)}c[D>>2]=(c[D>>2]|0)+1;c[F>>2]=(c[F>>2]|0)+32}h=(c[k>>2]|0)+68|0;c[h>>2]=(c[h>>2]|0)+(c[(c[v>>2]|0)+((c[D>>2]|0)+0<<3)>>2]|0);h=(c[k>>2]|0)+72|0;c[h>>2]=(c[h>>2]|0)+(c[(c[v>>2]|0)+((c[D>>2]|0)+0<<3)+4>>2]|0);h=(c[k>>2]|0)+76|0;c[h>>2]=(c[h>>2]|0)+(c[(c[v>>2]|0)+((c[D>>2]|0)+1<<3)>>2]|0);h=(c[k>>2]|0)+80|0;c[h>>2]=(c[h>>2]|0)+(c[(c[v>>2]|0)+((c[D>>2]|0)+1<<3)+4>>2]|0);h=(c[k>>2]|0)+184|0;c[h>>2]=(c[h>>2]|0)+(c[(c[v>>2]|0)+((c[D>>2]|0)+2<<3)>>2]|0);h=(c[k>>2]|0)+188|0;c[h>>2]=(c[h>>2]|0)+(c[(c[v>>2]|0)+((c[D>>2]|0)+2<<3)+4>>2]|0);h=(c[k>>2]|0)+192|0;c[h>>2]=(c[h>>2]|0)+(c[(c[v>>2]|0)+((c[D>>2]|0)+3<<3)>>2]|0);h=(c[k>>2]|0)+196|0;c[h>>2]=(c[h>>2]|0)+(c[(c[v>>2]|0)+((c[D>>2]|0)+3<<3)+4>>2]|0);Vn(c[G>>2]|0,c[v>>2]|0);c[v>>2]=0}if((c[(c[k>>2]|0)+16>>2]&1|0)==0){h=Nn(c[(c[k>>2]|0)+68>>2]|0,c[p>>2]|0)|0;c[(c[k>>2]|0)+68>>2]=h;h=Nn(c[(c[k>>2]|0)+76>>2]|0,c[p>>2]|0)|0;c[(c[k>>2]|0)+76>>2]=h;h=Nn(c[(c[k>>2]|0)+184>>2]|0,c[p>>2]|0)|0;c[(c[k>>2]|0)+184>>2]=h;h=Nn(c[(c[k>>2]|0)+188>>2]|0,c[q>>2]|0)|0;c[(c[k>>2]|0)+188>>2]=h;h=Nn(c[(c[k>>2]|0)+192>>2]|0,c[p>>2]|0)|0;c[(c[k>>2]|0)+192>>2]=h;h=Nn(c[(c[k>>2]|0)+196>>2]|0,c[q>>2]|0)|0;c[(c[k>>2]|0)+196>>2]=h}if((c[(c[k>>2]|0)+16>>2]&1024|0)!=0){co(c[t>>2]|0);c[(c[(c[k>>2]|0)+8>>2]|0)+72>>2]=1668246896;break}c[J>>2]=0;c[K>>2]=c[A>>2];c[L>>2]=c[(c[t>>2]|0)+84>>2];c[M>>2]=c[(c[t>>2]|0)+48>>2];c[N>>2]=c[(c[k>>2]|0)+24>>2];c[O>>2]=c[(c[k>>2]|0)+28>>2];co(c[t>>2]|0);c[H>>2]=0;while(1){if(!((c[H>>2]|0)>>>0<(c[L>>2]|0)>>>0)){break}c[J>>2]=(c[(c[t>>2]|0)+52>>2]|0)+(c[M>>2]<<5)+(c[H>>2]<<5);h=(c[k>>2]|0)+68|0;c[P+0>>2]=c[h+0>>2];c[P+4>>2]=c[h+4>>2];h=P+8|0;g=(c[k>>2]|0)+76|0;c[h+0>>2]=c[g+0>>2];c[h+4>>2]=c[g+4>>2];g=P+16|0;h=(c[k>>2]|0)+184|0;c[g+0>>2]=c[h+0>>2];c[g+4>>2]=c[h+4>>2];h=P+24|0;g=(c[k>>2]|0)+192|0;c[h+0>>2]=c[g+0>>2];c[h+4>>2]=c[g+4>>2];c[I>>2]=b[(c[t>>2]|0)+22>>1]|0;c[o>>2]=Px(c[k>>2]|0,c[c[J>>2]>>2]|0,(c[m>>2]|0)+1|0,0)|0;if((c[o>>2]|0)!=0){break a}c[J>>2]=(c[(c[t>>2]|0)+52>>2]|0)+(c[M>>2]<<5)+(c[H>>2]<<5);if((b[(c[J>>2]|0)+4>>1]&512|0)==0){g=(c[k>>2]|0)+68|0;c[g+0>>2]=c[P+0>>2];c[g+4>>2]=c[P+4>>2];g=(c[k>>2]|0)+76|0;h=P+8|0;c[g+0>>2]=c[h+0>>2];c[g+4>>2]=c[h+4>>2];h=(c[k>>2]|0)+184|0;g=P+16|0;c[h+0>>2]=c[g+0>>2];c[h+4>>2]=c[g+4>>2];g=(c[k>>2]|0)+192|0;h=P+24|0;c[g+0>>2]=c[h+0>>2];c[g+4>>2]=c[h+4>>2]}c[K>>2]=b[(c[t>>2]|0)+22>>1]|0;if((c[K>>2]|0)!=(c[I>>2]|0)){Wx(c[k>>2]|0,c[J>>2]|0,c[A>>2]|0,c[I>>2]|0)|0}c[H>>2]=(c[H>>2]|0)+1}c[(c[k>>2]|0)+24>>2]=c[N>>2];c[(c[k>>2]|0)+28>>2]=c[O>>2];c[(c[k>>2]|0)+168>>2]=c[C>>2];if((c[(c[k>>2]|0)+16>>2]&2|0)!=0){break}if((b[(c[J>>2]|0)+4>>1]&256|0)==0){break}if(!((c[K>>2]|0)>>>0>(c[A>>2]|0)>>>0)){break}Xx(c[k>>2]|0,c[A>>2]|0,c[B>>2]|0)|0;break}c[(c[k>>2]|0)+36>>2]=0;c[(c[k>>2]|0)+44>>2]=0;c[(c[k>>2]|0)+40>>2]=0;c[(c[k>>2]|0)+48>>2]=0;c[o>>2]=Sx(c[k>>2]|0,c[l>>2]|0)|0;if((c[o>>2]|0)==0?(a[n]|0)==0:0){c[(c[k>>2]|0)+68>>2]=(c[(c[k>>2]|0)+36>>2]|0)-(c[(c[k>>2]|0)+52>>2]|0);c[(c[k>>2]|0)+72>>2]=0;c[(c[k>>2]|0)+76>>2]=(c[(c[k>>2]|0)+68>>2]|0)+(c[(c[k>>2]|0)+56>>2]|0);c[(c[k>>2]|0)+80>>2]=0;c[(c[k>>2]|0)+184>>2]=0;c[(c[k>>2]|0)+188>>2]=(c[(c[k>>2]|0)+48>>2]|0)+(c[(c[k>>2]|0)+176>>2]|0);c[(c[k>>2]|0)+192>>2]=0;c[(c[k>>2]|0)+196>>2]=(c[(c[k>>2]|0)+188>>2]|0)-(c[(c[k>>2]|0)+180>>2]|0);Tx(c[k>>2]|0,c[l>>2]|0);if((a[(c[c[k>>2]>>2]|0)+672|0]|0)!=0){c[z>>2]=c[(c[c[k>>2]>>2]|0)+100>>2];c[o>>2]=Ux(c[c[k>>2]>>2]|0,c[l>>2]|0,v,4)|0;if((c[o>>2]|0)!=0){break}h=(c[k>>2]|0)+68|0;c[h>>2]=(c[h>>2]|0)+(c[c[v>>2]>>2]|0);h=(c[k>>2]|0)+72|0;c[h>>2]=(c[h>>2]|0)+(c[(c[v>>2]|0)+4>>2]|0);h=(c[k>>2]|0)+76|0;c[h>>2]=(c[h>>2]|0)+(c[(c[v>>2]|0)+8>>2]|0);h=(c[k>>2]|0)+80|0;c[h>>2]=(c[h>>2]|0)+(c[(c[v>>2]|0)+12>>2]|0);h=(c[k>>2]|0)+184|0;c[h>>2]=(c[h>>2]|0)+(c[(c[v>>2]|0)+16>>2]|0);h=(c[k>>2]|0)+188|0;c[h>>2]=(c[h>>2]|0)+(c[(c[v>>2]|0)+20>>2]|0);h=(c[k>>2]|0)+192|0;c[h>>2]=(c[h>>2]|0)+(c[(c[v>>2]|0)+24>>2]|0);h=(c[k>>2]|0)+196|0;c[h>>2]=(c[h>>2]|0)+(c[(c[v>>2]|0)+28>>2]|0);Vn(c[z>>2]|0,c[v>>2]|0);c[v>>2]=0}if((c[(c[k>>2]|0)+16>>2]&1|0)==0){h=Nn(c[(c[k>>2]|0)+68>>2]|0,c[p>>2]|0)|0;c[(c[k>>2]|0)+68>>2]=h;h=Nn(c[(c[k>>2]|0)+76>>2]|0,c[p>>2]|0)|0;c[(c[k>>2]|0)+76>>2]=h;h=Nn(c[(c[k>>2]|0)+184>>2]|0,c[p>>2]|0)|0;c[(c[k>>2]|0)+184>>2]=h;h=Nn(c[(c[k>>2]|0)+188>>2]|0,c[q>>2]|0)|0;c[(c[k>>2]|0)+188>>2]=h;h=Nn(c[(c[k>>2]|0)+192>>2]|0,c[p>>2]|0)|0;c[(c[k>>2]|0)+192>>2]=h;h=Nn(c[(c[k>>2]|0)+196>>2]|0,c[q>>2]|0)|0;c[(c[k>>2]|0)+196>>2]=h}c[o>>2]=0}}}while(0);if((a[u]|0)!=0){rd[c[(c[s>>2]|0)+516>>2]&127](c[k>>2]|0)}if((a[y]|0)==0){R=c[o>>2]|0;i=j;return R|0}td[c[(c[c[(c[(c[s>>2]|0)+128>>2]|0)+48>>2]>>2]|0)+4>>2]&31](c[(c[(c[(c[s>>2]|0)+128>>2]|0)+48>>2]|0)+4>>2]|0,x);R=c[o>>2]|0;i=j;return R|0}function Qx(a,f){a=a|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;g=i;i=i+96|0;h=g+84|0;j=g+80|0;k=g+76|0;l=g+72|0;m=g+56|0;n=g+48|0;o=g+44|0;p=g+40|0;q=g+32|0;r=g+28|0;s=g+24|0;t=g+20|0;u=g+16|0;v=g;w=g+36|0;c[j>>2]=a;c[k>>2]=f;c[l>>2]=c[c[j>>2]>>2];c[o>>2]=c[(c[j>>2]|0)+8>>2];c[p>>2]=c[(c[j>>2]|0)+4>>2];c[n>>2]=65536;if((c[(c[j>>2]|0)+16>>2]&1|0)==0){c[n>>2]=c[(c[p>>2]|0)+20>>2]}if((c[(c[o>>2]|0)+72>>2]|0)!=1668246896){pp((c[o>>2]|0)+108|0,m)}else{f=(c[j>>2]|0)+36|0;c[m+0>>2]=c[f+0>>2];c[m+4>>2]=c[f+4>>2];c[m+8>>2]=c[f+8>>2];c[m+12>>2]=c[f+12>>2]}c[(c[o>>2]|0)+56>>2]=c[(c[j>>2]|0)+60>>2];c[(c[o>>2]|0)+32>>2]=c[m>>2];c[(c[o>>2]|0)+36>>2]=c[m+12>>2];c[(c[o>>2]|0)+40>>2]=(c[(c[j>>2]|0)+76>>2]|0)-(c[(c[j>>2]|0)+68>>2]|0);if(((c[(c[l>>2]|0)+480>>2]|0)==0?(c[(c[j>>2]|0)+16>>2]&2|0)==0:0)?(c[q>>2]=Rx(c[l>>2]|0,e[(c[p>>2]|0)+12>>1]|0,c[k>>2]|0)|0,(c[q>>2]|0)!=0):0){c[(c[o>>2]|0)+40>>2]=d[c[q>>2]|0]<<6}c[(c[o>>2]|0)+24>>2]=(c[m+8>>2]|0)-(c[m>>2]|0);c[(c[o>>2]|0)+28>>2]=(c[m+12>>2]|0)-(c[m+4>>2]|0);do{if((d[(c[l>>2]|0)+292|0]|0)!=0?(e[(c[l>>2]|0)+330>>1]|0)>0:0){c[r>>2]=((On((c[(c[j>>2]|0)+188>>2]|0)-(c[m+12>>2]|0)|0,c[n>>2]|0)|0)&65535)<<16>>16;if((c[(c[j>>2]|0)+188>>2]|0)<=(c[(c[j>>2]|0)+196>>2]|0)){c[s>>2]=0;break}else{c[s>>2]=(On((c[(c[j>>2]|0)+188>>2]|0)-(c[(c[j>>2]|0)+196>>2]|0)|0,c[n>>2]|0)|0)&65535;break}}else{x=15}}while(0);if((x|0)==15){c[t>>2]=((On((c[m+12>>2]|0)-(c[m+4>>2]|0)|0,c[n>>2]|0)|0)&65535)<<16>>16;m=c[l>>2]|0;if((e[(c[l>>2]|0)+364>>1]|0)!=65535){c[s>>2]=(b[m+434>>1]|0)-(b[(c[l>>2]|0)+436>>1]|0)}else{c[s>>2]=(b[m+220>>1]|0)-(b[(c[l>>2]|0)+222>>1]|0)}c[r>>2]=((c[s>>2]|0)-(c[t>>2]|0)|0)/2|0}c[u>>2]=c[(c[(c[l>>2]|0)+128>>2]|0)+48>>2];do{if((c[u>>2]|0)!=0?(c[(c[c[u>>2]>>2]|0)+8>>2]|0)!=0:0){c[v>>2]=0;c[v+4>>2]=c[r>>2];c[v+8>>2]=c[s>>2];c[w>>2]=yd[c[(c[c[u>>2]>>2]|0)+8>>2]&31](c[(c[u>>2]|0)+4>>2]|0,c[k>>2]|0,1,v)|0;if((c[w>>2]|0)==0){c[r>>2]=c[v+4>>2];c[s>>2]=c[v+8>>2];break}c[h>>2]=c[w>>2];y=c[h>>2]|0;i=g;return y|0}}while(0);c[(c[o>>2]|0)+60>>2]=c[s>>2];if((c[(c[j>>2]|0)+16>>2]&1|0)==0){c[r>>2]=Nn(c[r>>2]|0,c[n>>2]|0)|0;c[s>>2]=Nn(c[s>>2]|0,c[n>>2]|0)|0}c[(c[o>>2]|0)+44>>2]=(c[(c[o>>2]|0)+32>>2]|0)-((c[(c[o>>2]|0)+40>>2]|0)/2|0);c[(c[o>>2]|0)+48>>2]=c[r>>2];c[(c[o>>2]|0)+52>>2]=c[s>>2];c[h>>2]=0;y=c[h>>2]|0;i=g;return y|0}function Rx(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+32|0;g=f+24|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;m=f+16|0;n=f+20|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=e;c[l>>2]=0;c[m>>2]=c[(c[g>>2]|0)+716>>2];c[n>>2]=(c[(c[g>>2]|0)+704>>2]|0)+8;c[k>>2]=0;while(1){if(!((c[k>>2]|0)>>>0<(c[(c[g>>2]|0)+712>>2]|0)>>>0)){o=7;break}if((d[(c[(c[g>>2]|0)+720>>2]|0)+(c[k>>2]|0)|0]|0|0)==(c[h>>2]|0)){break}c[k>>2]=(c[k>>2]|0)+1}if((o|0)==7){p=c[l>>2]|0;i=f;return p|0}c[j>>2]=(c[j>>2]|0)+2;if(!((c[j>>2]|0)>>>0<(c[m>>2]|0)>>>0)){p=c[l>>2]|0;i=f;return p|0}o=(c[n>>2]|0)+(aa(c[k>>2]|0,c[m>>2]|0)|0)|0;c[l>>2]=o+(c[j>>2]|0);p=c[l>>2]|0;i=f;return p|0}function Sx(d,f){d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=i;i=i+48|0;h=g+24|0;j=g+20|0;k=g+4|0;l=g+8|0;m=g+12|0;n=g;o=g+34|0;p=g+32|0;q=g+28|0;r=g+30|0;s=g+16|0;c[j>>2]=d;c[k>>2]=f;c[l>>2]=c[c[j>>2]>>2];c[n>>2]=c[(c[j>>2]|0)+24>>2];b[o>>1]=0;b[p>>1]=0;b[q>>1]=0;b[r>>1]=0;c[s>>2]=vp(c[n>>2]|0)|0;Lx(c[l>>2]|0,c[k>>2]|0,o,q);Kx(c[l>>2]|0,c[k>>2]|0,c[(c[j>>2]|0)+48>>2]|0,p,r);k=qp(c[n>>2]|0,c[s>>2]|0)|0;c[m>>2]=k;if((k|0)!=0){c[h>>2]=c[m>>2];t=c[h>>2]|0;i=g;return t|0}c[(c[j>>2]|0)+52>>2]=b[o>>1]|0;c[(c[j>>2]|0)+56>>2]=e[q>>1]|0;c[(c[j>>2]|0)+176>>2]=b[p>>1]|0;c[(c[j>>2]|0)+180>>2]=e[r>>1]|0;if((a[(c[j>>2]|0)+64|0]|0)==0){a[(c[j>>2]|0)+64|0]=1;c[(c[j>>2]|0)+60>>2]=e[q>>1]|0}c[h>>2]=0;t=c[h>>2]|0;i=g;return t|0}function Tx(d,f){d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+48|0;h=g+20|0;j=g+28|0;k=g+24|0;l=g+38|0;m=g+36|0;n=g+34|0;o=g+32|0;p=g;q=g+16|0;c[h>>2]=d;c[j>>2]=f;c[k>>2]=c[c[h>>2]>>2];b[l>>1]=0;b[m>>1]=0;b[n>>1]=0;b[o>>1]=0;if((c[(c[(c[k>>2]|0)+128>>2]|0)+48>>2]|0)==0){i=g;return}if((c[(c[c[(c[(c[k>>2]|0)+128>>2]|0)+48>>2]>>2]|0)+8>>2]|0)==0){i=g;return}c[p>>2]=c[(c[h>>2]|0)+52>>2];c[p+4>>2]=0;c[p+8>>2]=c[(c[h>>2]|0)+56>>2];c[p+12>>2]=0;c[q>>2]=yd[c[(c[c[(c[(c[k>>2]|0)+128>>2]|0)+48>>2]>>2]|0)+8>>2]&31](c[(c[(c[(c[k>>2]|0)+128>>2]|0)+48>>2]|0)+4>>2]|0,c[j>>2]|0,0,p)|0;if((c[q>>2]|0)!=0){i=g;return}b[l>>1]=c[p>>2];b[n>>1]=c[p+8>>2];c[(c[h>>2]|0)+52>>2]=b[l>>1]|0;c[(c[h>>2]|0)+56>>2]=e[n>>1]|0;c[(c[h>>2]|0)+176>>2]=b[m>>1]|0;c[(c[h>>2]|0)+180>>2]=e[o>>1]|0;if((a[(c[h>>2]|0)+64|0]|0)!=0){i=g;return}a[(c[h>>2]|0)+64|0]=1;c[(c[h>>2]|0)+60>>2]=e[n>>1]|0;i=g;return}function Ux(d,f,g,h){d=d|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;j=i;i=i+128|0;k=j+112|0;l=j+108|0;m=j+104|0;n=j+100|0;o=j+96|0;p=j+92|0;q=j+88|0;r=j+84|0;s=j+80|0;t=j+76|0;u=j+72|0;v=j+68|0;w=j+64|0;x=j+60|0;y=j+56|0;z=j+20|0;A=j;B=j+4|0;C=j+8|0;D=j+12|0;E=j+16|0;F=j+24|0;G=j+28|0;H=j+32|0;I=j+36|0;J=j+40|0;K=j+44|0;L=j+48|0;M=j+52|0;c[l>>2]=d;c[m>>2]=f;c[n>>2]=g;c[o>>2]=h;c[p>>2]=c[(c[l>>2]|0)+104>>2];c[q>>2]=c[(c[p>>2]|0)+28>>2];c[r>>2]=c[(c[l>>2]|0)+676>>2];c[s>>2]=0;c[A>>2]=0;c[B>>2]=0;c[C>>2]=0;c[E>>2]=0;c[F>>2]=0;c[G>>2]=0;if((a[(c[l>>2]|0)+672|0]|0)!=0?(c[r>>2]|0)!=0:0){c[s>>2]=Yn(c[q>>2]|0,8,0,c[o>>2]|0,0,t)|0;do{if((c[t>>2]|0)==0){c[c[n>>2]>>2]=c[s>>2];if(!((c[m>>2]|0)>>>0>=(c[(c[r>>2]|0)+32>>2]|0)>>>0)?(c[(c[(c[r>>2]|0)+36>>2]|0)+(c[m>>2]<<2)>>2]|0)!=(c[(c[(c[r>>2]|0)+36>>2]|0)+((c[m>>2]|0)+1<<2)>>2]|0):0){l=qp(c[p>>2]|0,c[(c[(c[r>>2]|0)+36>>2]|0)+(c[m>>2]<<2)>>2]|0)|0;c[t>>2]=l;if((l|0)==0?(l=yp(c[p>>2]|0,(c[(c[(c[r>>2]|0)+36>>2]|0)+((c[m>>2]|0)+1<<2)>>2]|0)-(c[(c[(c[r>>2]|0)+36>>2]|0)+(c[m>>2]<<2)>>2]|0)|0)|0,c[t>>2]=l,(l|0)==0):0){c[u>>2]=(c[(c[p>>2]|0)+32>>2]|0)-(c[c[p>>2]>>2]|0);c[A>>2]=Yn(c[q>>2]|0,4,0,c[c[r>>2]>>2]|0,0,t)|0;if(((c[t>>2]|0)==0?(c[B>>2]=Yn(c[q>>2]|0,4,0,c[c[r>>2]>>2]|0,0,t)|0,(c[t>>2]|0)==0):0)?(c[C>>2]=Yn(c[q>>2]|0,4,0,c[c[r>>2]>>2]|0,0,t)|0,(c[t>>2]|0)==0):0){c[v>>2]=(Dp(c[p>>2]|0)|0)&65535;l=c[u>>2]|0;c[w>>2]=l+((Dp(c[p>>2]|0)|0)&65535);if((c[v>>2]&32768|0)!=0){c[x>>2]=(c[(c[p>>2]|0)+32>>2]|0)-(c[c[p>>2]>>2]|0);c[(c[p>>2]|0)+32>>2]=(c[c[p>>2]>>2]|0)+(c[w>>2]|0);c[F>>2]=Dx(c[p>>2]|0,E)|0;c[w>>2]=(c[(c[p>>2]|0)+32>>2]|0)-(c[c[p>>2]>>2]|0);c[(c[p>>2]|0)+32>>2]=(c[c[p>>2]>>2]|0)+(c[x>>2]|0)}c[y>>2]=0;a:while(1){if(!((c[y>>2]|0)>>>0<(c[v>>2]&4095)>>>0)){break}c[K>>2]=(Dp(c[p>>2]|0)|0)&65535;c[L>>2]=(Dp(c[p>>2]|0)|0)&65535;b:do{if((c[L>>2]&32768|0)!=0){c[z>>2]=0;while(1){if(!((c[z>>2]|0)>>>0<(c[c[r>>2]>>2]|0)>>>0)){break b}l=(Dp(c[p>>2]|0)|0)<<16>>16<<2;c[(c[A>>2]|0)+(c[z>>2]<<2)>>2]=l;c[z>>2]=(c[z>>2]|0)+1}}else{if((c[L>>2]&4095)>>>0>=(c[(c[r>>2]|0)+24>>2]|0)>>>0){N=22;break a}l=aa(c[L>>2]&4095,c[c[r>>2]>>2]|0)|0;lA(c[A>>2]|0,(c[(c[r>>2]|0)+28>>2]|0)+(l<<2)|0,c[c[r>>2]>>2]<<2|0)|0}}while(0);c:do{if((c[L>>2]&16384|0)!=0){c[z>>2]=0;while(1){if(!((c[z>>2]|0)>>>0<(c[c[r>>2]>>2]|0)>>>0)){break}l=(Dp(c[p>>2]|0)|0)<<16>>16<<2;c[(c[B>>2]|0)+(c[z>>2]<<2)>>2]=l;c[z>>2]=(c[z>>2]|0)+1}c[z>>2]=0;while(1){if(!((c[z>>2]|0)>>>0<(c[c[r>>2]>>2]|0)>>>0)){break c}l=(Dp(c[p>>2]|0)|0)<<16>>16<<2;c[(c[C>>2]|0)+(c[z>>2]<<2)>>2]=l;c[z>>2]=(c[z>>2]|0)+1}}}while(0);c[M>>2]=Cx(c[r>>2]|0,c[L>>2]&65535,c[A>>2]|0,c[B>>2]|0,c[C>>2]|0)|0;if((c[M>>2]|0)==0){c[w>>2]=(c[w>>2]|0)+(c[K>>2]|0)}else{c[x>>2]=(c[(c[p>>2]|0)+32>>2]|0)-(c[c[p>>2]>>2]|0);if((c[L>>2]&8192|0)!=0){c[(c[p>>2]|0)+32>>2]=(c[c[p>>2]>>2]|0)+(c[w>>2]|0);c[G>>2]=Dx(c[p>>2]|0,D)|0;c[H>>2]=c[G>>2]}else{c[H>>2]=c[F>>2];c[D>>2]=c[E>>2]}c[I>>2]=Ex(c[p>>2]|0,(c[D>>2]|0)==0?c[o>>2]|0:c[D>>2]|0)|0;c[J>>2]=Ex(c[p>>2]|0,(c[D>>2]|0)==0?c[o>>2]|0:c[D>>2]|0)|0;d:do{if(((c[H>>2]|0)!=0?(c[J>>2]|0)!=0:0)?(c[I>>2]|0)!=0:0){l=(c[H>>2]|0)==(-1|0);c[z>>2]=0;if(l){while(1){if(!((c[z>>2]|0)>>>0<(c[o>>2]|0)>>>0)){break d}l=Nn(b[(c[I>>2]|0)+(c[z>>2]<<1)>>1]|0,c[M>>2]|0)|0;h=(c[s>>2]|0)+(c[z>>2]<<3)|0;c[h>>2]=(c[h>>2]|0)+l;l=Nn(b[(c[J>>2]|0)+(c[z>>2]<<1)>>1]|0,c[M>>2]|0)|0;h=(c[s>>2]|0)+(c[z>>2]<<3)+4|0;c[h>>2]=(c[h>>2]|0)+l;c[z>>2]=(c[z>>2]|0)+1}}while(1){if(!((c[z>>2]|0)>>>0<(c[D>>2]|0)>>>0)){break d}if(!((e[(c[G>>2]|0)+(c[z>>2]<<1)>>1]|0)>>>0>=(c[o>>2]|0)>>>0)){l=Nn(b[(c[I>>2]|0)+(c[z>>2]<<1)>>1]|0,c[M>>2]|0)|0;h=(c[s>>2]|0)+(e[(c[G>>2]|0)+(c[z>>2]<<1)>>1]<<3)|0;c[h>>2]=(c[h>>2]|0)+l;l=Nn(b[(c[J>>2]|0)+(c[z>>2]<<1)>>1]|0,c[M>>2]|0)|0;h=(c[s>>2]|0)+(e[(c[G>>2]|0)+(c[z>>2]<<1)>>1]<<3)+4|0;c[h>>2]=(c[h>>2]|0)+l}c[z>>2]=(c[z>>2]|0)+1}}}while(0);if((c[G>>2]|0)!=(-1|0)){Vn(c[q>>2]|0,c[G>>2]|0);c[G>>2]=0}Vn(c[q>>2]|0,c[I>>2]|0);c[I>>2]=0;Vn(c[q>>2]|0,c[J>>2]|0);c[J>>2]=0;c[w>>2]=(c[w>>2]|0)+(c[K>>2]|0);c[(c[p>>2]|0)+32>>2]=(c[c[p>>2]>>2]|0)+(c[x>>2]|0)}c[y>>2]=(c[y>>2]|0)+1}if((N|0)==22){c[t>>2]=8}Vn(c[q>>2]|0,c[A>>2]|0);c[A>>2]=0;Vn(c[q>>2]|0,c[B>>2]|0);c[B>>2]=0;Vn(c[q>>2]|0,c[C>>2]|0);c[C>>2]=0}Bp(c[p>>2]|0)}if((c[t>>2]|0)==0){break}Vn(c[q>>2]|0,c[s>>2]|0);c[s>>2]=0;c[c[n>>2]>>2]=0;break}c[k>>2]=0;O=c[k>>2]|0;i=j;return O|0}}while(0);c[k>>2]=c[t>>2];O=c[k>>2]|0;i=j;return O|0}c[k>>2]=6;O=c[k>>2]|0;i=j;return O|0}function Vx(d){d=d|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;f=i;i=i+64|0;g=f+24|0;h=f+48|0;j=f+44|0;k=f+40|0;l=f+36|0;m=f+32|0;n=f+28|0;o=f+20|0;p=f+16|0;q=f+12|0;r=f+8|0;s=f+4|0;t=f;u=f+52|0;c[h>>2]=d;c[j>>2]=c[(c[h>>2]|0)+12>>2];c[k>>2]=0;c[l>>2]=(c[j>>2]|0)+56;c[m>>2]=b[(c[l>>2]|0)+2>>1]|0;d=(c[(c[l>>2]|0)+4>>2]|0)+(c[m>>2]<<3)|0;v=(c[h>>2]|0)+68|0;c[d+0>>2]=c[v+0>>2];c[d+4>>2]=c[v+4>>2];v=(c[(c[l>>2]|0)+4>>2]|0)+((c[m>>2]|0)+1<<3)|0;d=(c[h>>2]|0)+76|0;c[v+0>>2]=c[d+0>>2];c[v+4>>2]=c[d+4>>2];d=(c[(c[l>>2]|0)+4>>2]|0)+((c[m>>2]|0)+2<<3)|0;v=(c[h>>2]|0)+184|0;c[d+0>>2]=c[v+0>>2];c[d+4>>2]=c[v+4>>2];v=(c[(c[l>>2]|0)+4>>2]|0)+((c[m>>2]|0)+3<<3)|0;d=(c[h>>2]|0)+192|0;c[v+0>>2]=c[d+0>>2];c[v+4>>2]=c[d+4>>2];a[(c[(c[l>>2]|0)+8>>2]|0)+(c[m>>2]|0)|0]=0;a[(c[(c[l>>2]|0)+8>>2]|0)+((c[m>>2]|0)+1)|0]=0;a[(c[(c[l>>2]|0)+8>>2]|0)+((c[m>>2]|0)+2)|0]=0;a[(c[(c[l>>2]|0)+8>>2]|0)+((c[m>>2]|0)+3)|0]=0;c[m>>2]=(c[m>>2]|0)+4;if((a[(c[c[h>>2]>>2]|0)+672|0]|0)!=0){c[o>>2]=c[(c[c[h>>2]>>2]|0)+100>>2];c[k>>2]=Ux(c[c[h>>2]>>2]|0,c[(c[h>>2]|0)+20>>2]|0,n,c[m>>2]|0)|0;if((c[k>>2]|0)!=0){c[g>>2]=c[k>>2];w=c[g>>2]|0;i=f;return w|0}c[p>>2]=0;while(1){if((c[p>>2]|0)>=(c[m>>2]|0)){break}d=(c[(c[l>>2]|0)+4>>2]|0)+(c[p>>2]<<3)|0;c[d>>2]=(c[d>>2]|0)+(c[(c[n>>2]|0)+(c[p>>2]<<3)>>2]|0);d=(c[(c[l>>2]|0)+4>>2]|0)+(c[p>>2]<<3)+4|0;c[d>>2]=(c[d>>2]|0)+(c[(c[n>>2]|0)+(c[p>>2]<<3)+4>>2]|0);c[p>>2]=(c[p>>2]|0)+1}Vn(c[o>>2]|0,c[n>>2]|0);c[n>>2]=0}if((c[(c[h>>2]|0)+16>>2]&2|0)==0){Yx((c[h>>2]|0)+124|0,(c[j>>2]|0)+56|0,0,0);lA(c[(c[h>>2]|0)+144>>2]|0,c[(c[h>>2]|0)+140>>2]|0,(e[(c[h>>2]|0)+132>>1]|0)+4<<3|0)|0}c[q>>2]=c[(c[l>>2]|0)+4>>2];c[r>>2]=(c[(c[l>>2]|0)+4>>2]|0)+(c[m>>2]<<3);c[s>>2]=0;c[t>>2]=0;a[u]=0;if((c[(c[h>>2]|0)+16>>2]&1|0)==0){c[s>>2]=c[(c[(c[h>>2]|0)+4>>2]|0)+48>>2];c[t>>2]=c[(c[(c[h>>2]|0)+4>>2]|0)+52>>2];a[u]=1}if((a[u]|0)!=0){while(1){if(!((c[q>>2]|0)>>>0<(c[r>>2]|0)>>>0)){break}u=Nn(c[c[q>>2]>>2]|0,c[s>>2]|0)|0;c[c[q>>2]>>2]=u;u=Nn(c[(c[q>>2]|0)+4>>2]|0,c[t>>2]|0)|0;c[(c[q>>2]|0)+4>>2]=u;c[q>>2]=(c[q>>2]|0)+8}q=(c[h>>2]|0)+68|0;t=(c[(c[l>>2]|0)+4>>2]|0)+((c[m>>2]|0)-4<<3)|0;c[q+0>>2]=c[t+0>>2];c[q+4>>2]=c[t+4>>2];t=(c[h>>2]|0)+76|0;q=(c[(c[l>>2]|0)+4>>2]|0)+((c[m>>2]|0)-3<<3)|0;c[t+0>>2]=c[q+0>>2];c[t+4>>2]=c[q+4>>2];q=(c[h>>2]|0)+184|0;t=(c[(c[l>>2]|0)+4>>2]|0)+((c[m>>2]|0)-2<<3)|0;c[q+0>>2]=c[t+0>>2];c[q+4>>2]=c[t+4>>2];t=(c[h>>2]|0)+192|0;q=(c[(c[l>>2]|0)+4>>2]|0)+((c[m>>2]|0)-1<<3)|0;c[t+0>>2]=c[q+0>>2];c[t+4>>2]=c[q+4>>2]}if((c[(c[h>>2]|0)+16>>2]&2|0)==0){q=(c[h>>2]|0)+132|0;b[q>>1]=(e[q>>1]|0)+4;c[k>>2]=Zx(c[h>>2]|0,0)|0}c[g>>2]=c[k>>2];w=c[g>>2]|0;i=f;return w|0}function Wx(e,f,g,h){e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;j=i;i=i+80|0;k=j+56|0;l=j+44|0;m=j+48|0;n=j+52|0;o=j+60|0;p=j+64|0;q=j+68|0;r=j+72|0;s=j+76|0;t=j+40|0;u=j+36|0;v=j+12|0;w=j;x=j+4|0;y=j+8|0;z=j+16|0;A=j+20|0;B=j+24|0;C=j+28|0;D=j+32|0;c[l>>2]=e;c[m>>2]=f;c[n>>2]=g;c[o>>2]=h;c[p>>2]=c[(c[l>>2]|0)+12>>2];c[q>>2]=c[(c[p>>2]|0)+24>>2];c[r>>2]=b[(c[p>>2]|0)+22>>1]|0;a[s]=b[(c[m>>2]|0)+4>>1]&200;a:do{if((a[s]|0)!=0){c[v>>2]=c[o>>2];while(1){if(!((c[v>>2]|0)>>>0<(c[r>>2]|0)>>>0)){break a}yo((c[q>>2]|0)+(c[v>>2]<<3)|0,(c[m>>2]|0)+16|0);c[v>>2]=(c[v>>2]|0)+1}}}while(0);v=c[(c[m>>2]|0)+8>>2]|0;do{if((b[(c[m>>2]|0)+4>>1]&2|0)!=0){c[t>>2]=v;c[u>>2]=c[(c[m>>2]|0)+12>>2];if((c[t>>2]|0)==0?(c[u>>2]|0)==0:0){c[k>>2]=0;E=c[k>>2]|0;i=j;return E|0}if((d[s]|0)!=0?(b[(c[m>>2]|0)+4>>1]&2048|0)!=0:0){c[A>>2]=Gn(c[(c[m>>2]|0)+16>>2]|0,c[(c[m>>2]|0)+20>>2]|0)|0;c[B>>2]=Gn(c[(c[m>>2]|0)+28>>2]|0,c[(c[m>>2]|0)+24>>2]|0)|0;c[t>>2]=Nn(c[t>>2]|0,c[A>>2]|0)|0;c[u>>2]=Nn(c[u>>2]|0,c[B>>2]|0)|0}if((c[(c[l>>2]|0)+16>>2]&1|0)==0?(c[C>>2]=c[(c[(c[l>>2]|0)+4>>2]|0)+48>>2],c[D>>2]=c[(c[(c[l>>2]|0)+4>>2]|0)+52>>2],c[t>>2]=Nn(c[t>>2]|0,c[C>>2]|0)|0,c[u>>2]=Nn(c[u>>2]|0,c[D>>2]|0)|0,(b[(c[m>>2]|0)+4>>1]&4|0)!=0):0){c[t>>2]=(c[t>>2]|0)+32&-64;c[u>>2]=(c[u>>2]|0)+32&-64}}else{c[w>>2]=v;c[x>>2]=c[(c[m>>2]|0)+12>>2];c[w>>2]=(c[w>>2]|0)+(c[n>>2]|0);c[x>>2]=(c[x>>2]|0)+(c[o>>2]|0);if(!((c[w>>2]|0)>>>0>=(c[o>>2]|0)>>>0)?!((c[x>>2]|0)>>>0>=(c[r>>2]|0)>>>0):0){c[y>>2]=(c[(c[p>>2]|0)+24>>2]|0)+(c[w>>2]<<3);c[z>>2]=(c[(c[p>>2]|0)+24>>2]|0)+(c[x>>2]<<3);c[t>>2]=(c[c[y>>2]>>2]|0)-(c[c[z>>2]>>2]|0);c[u>>2]=(c[(c[y>>2]|0)+4>>2]|0)-(c[(c[z>>2]|0)+4>>2]|0);break}c[k>>2]=21;E=c[k>>2]|0;i=j;return E|0}}while(0);if(!((c[t>>2]|0)==0?(c[u>>2]|0)==0:0)){by((c[r>>2]|0)-(c[o>>2]|0)|0,(c[q>>2]|0)+(c[o>>2]<<3)|0,c[t>>2]|0,c[u>>2]|0)}c[k>>2]=0;E=c[k>>2]|0;i=j;return E|0}function Xx(f,g,h){f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;j=i;i=i+48|0;k=j+32|0;l=j+28|0;m=j+24|0;n=j+20|0;o=j+12|0;p=j+8|0;q=j+4|0;r=j;s=j+38|0;t=j+36|0;u=j+16|0;c[l>>2]=f;c[m>>2]=g;c[n>>2]=h;c[p>>2]=(c[(c[l>>2]|0)+12>>2]|0)+20;if(((b[(c[p>>2]|0)+2>>1]|0)+4|0)!=0?!(((b[(c[(c[l>>2]|0)+12>>2]|0)+22>>1]|0)+(b[(c[(c[l>>2]|0)+12>>2]|0)+58>>1]|0)+((b[(c[p>>2]|0)+2>>1]|0)+4)|0)>>>0<=(c[(c[(c[l>>2]|0)+12>>2]|0)+4>>2]|0)>>>0):0){v=_n(c[(c[l>>2]|0)+12>>2]|0,(b[(c[p>>2]|0)+2>>1]|0)+4|0,0)|0}else{v=0}c[o>>2]=v;if((c[o>>2]|0)!=0){c[k>>2]=c[o>>2];w=c[k>>2]|0;i=j;return w|0}v=(c[(c[p>>2]|0)+4>>2]|0)+(b[(c[p>>2]|0)+2>>1]<<3)|0;h=(c[l>>2]|0)+68|0;c[v+0>>2]=c[h+0>>2];c[v+4>>2]=c[h+4>>2];h=(c[(c[p>>2]|0)+4>>2]|0)+((b[(c[p>>2]|0)+2>>1]|0)+1<<3)|0;v=(c[l>>2]|0)+76|0;c[h+0>>2]=c[v+0>>2];c[h+4>>2]=c[v+4>>2];v=(c[(c[p>>2]|0)+4>>2]|0)+((b[(c[p>>2]|0)+2>>1]|0)+2<<3)|0;h=(c[l>>2]|0)+184|0;c[v+0>>2]=c[h+0>>2];c[v+4>>2]=c[h+4>>2];h=(c[(c[p>>2]|0)+4>>2]|0)+((b[(c[p>>2]|0)+2>>1]|0)+3<<3)|0;v=(c[l>>2]|0)+192|0;c[h+0>>2]=c[v+0>>2];c[h+4>>2]=c[v+4>>2];a[(c[(c[p>>2]|0)+8>>2]|0)+(b[(c[p>>2]|0)+2>>1]|0)|0]=0;a[(c[(c[p>>2]|0)+8>>2]|0)+((b[(c[p>>2]|0)+2>>1]|0)+1)|0]=0;a[(c[(c[p>>2]|0)+8>>2]|0)+((b[(c[p>>2]|0)+2>>1]|0)+2)|0]=0;a[(c[(c[p>>2]|0)+8>>2]|0)+((b[(c[p>>2]|0)+2>>1]|0)+3)|0]=0;c[r>>2]=c[(c[l>>2]|0)+24>>2];p=qp(c[r>>2]|0,c[(c[l>>2]|0)+168>>2]|0)|0;c[o>>2]=p;if((p|0)==0?(b[s>>1]=tp(c[r>>2]|0,o)|0,(c[o>>2]|0)==0):0){b[t>>1]=b[(c[c[l>>2]>>2]|0)+286>>1]|0;p=e[s>>1]|0;if((e[s>>1]|0)>(e[t>>1]|0)){if((p|0)>(c[(c[l>>2]|0)+28>>2]|0)){c[k>>2]=22;w=c[k>>2]|0;i=j;return w|0}c[u>>2]=c[(c[(c[l>>2]|0)+160>>2]|0)+388>>2];c[o>>2]=zx(c[(c[(c[l>>2]|0)+160>>2]|0)+8>>2]|0,u,1,(c[(c[l>>2]|0)+160>>2]|0)+392|0,e[s>>1]|0)|0;c[(c[(c[l>>2]|0)+160>>2]|0)+388>>2]=c[u>>2]&65535;if((c[o>>2]|0)!=0){c[k>>2]=c[o>>2];w=c[k>>2]|0;i=j;return w|0}}else{if((p|0)==0){c[k>>2]=0;w=c[k>>2]|0;i=j;return w|0}}p=rp(c[r>>2]|0,c[(c[(c[l>>2]|0)+160>>2]|0)+392>>2]|0,e[s>>1]|0)|0;c[o>>2]=p;if((p|0)!=0){c[k>>2]=c[o>>2];w=c[k>>2]|0;i=j;return w|0}c[(c[(c[l>>2]|0)+8>>2]|0)+136>>2]=c[(c[(c[l>>2]|0)+160>>2]|0)+392>>2];c[(c[(c[l>>2]|0)+8>>2]|0)+140>>2]=e[s>>1]|0;Yx((c[l>>2]|0)+124|0,(c[(c[l>>2]|0)+12>>2]|0)+20|0,c[m>>2]|0,c[n>>2]|0);c[q>>2]=0;while(1){if(!((c[q>>2]|0)>>>0<(e[(c[l>>2]|0)+132>>1]|0)>>>0)){break}n=(c[(c[l>>2]|0)+148>>2]|0)+(c[q>>2]|0)|0;a[n]=d[n]&-25;c[q>>2]=(c[q>>2]|0)+1}q=(c[l>>2]|0)+132|0;b[q>>1]=(e[q>>1]|0)+4;c[k>>2]=Zx(c[l>>2]|0,1)|0;w=c[k>>2]|0;i=j;return w|0}c[k>>2]=c[o>>2];w=c[k>>2]|0;i=j;return w|0}function Yx(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+16|0;h=g+12|0;j=g;k=g+4|0;l=g+8|0;c[h>>2]=a;c[j>>2]=d;c[k>>2]=e;c[l>>2]=f;b[(c[h>>2]|0)+8>>1]=(b[(c[j>>2]|0)+2>>1]|0)-(c[k>>2]|0);b[(c[h>>2]|0)+10>>1]=(b[c[j>>2]>>1]|0)-(c[l>>2]|0);c[(c[h>>2]|0)+12>>2]=(c[(c[j>>2]|0)+20>>2]|0)+(c[k>>2]<<3);c[(c[h>>2]|0)+16>>2]=(c[(c[j>>2]|0)+4>>2]|0)+(c[k>>2]<<3);c[(c[h>>2]|0)+20>>2]=(c[(c[j>>2]|0)+24>>2]|0)+(c[k>>2]<<3);c[(c[h>>2]|0)+24>>2]=(c[(c[j>>2]|0)+8>>2]|0)+(c[k>>2]|0);c[(c[h>>2]|0)+28>>2]=(c[(c[j>>2]|0)+12>>2]|0)+(c[l>>2]<<1);b[(c[h>>2]|0)+32>>1]=c[k>>2];i=g;return}function Zx(b,f){b=b|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;g=i;i=i+48|0;h=g+40|0;j=g+36|0;k=g+44|0;l=g+32|0;m=g+28|0;n=g+45|0;o=g+4|0;p=g;q=g+8|0;c[j>>2]=b;a[k]=f;c[l>>2]=(c[j>>2]|0)+124;c[m>>2]=c[(c[(c[j>>2]|0)+8>>2]|0)+140>>2];if((c[m>>2]|0)>>>0>0){lA(c[(c[l>>2]|0)+12>>2]|0,c[(c[l>>2]|0)+16>>2]|0,e[(c[l>>2]|0)+8>>1]<<3|0)|0}f=(c[(c[j>>2]|0)+160>>2]|0)+284|0;b=(c[(c[j>>2]|0)+4>>2]|0)+172|0;r=f+68|0;do{c[f>>2]=c[b>>2];f=f+4|0;b=b+4|0}while((f|0)<(r|0));s=c[j>>2]|0;if((a[k]|0)!=0){c[(c[s+160>>2]|0)+220>>2]=65536;c[(c[(c[j>>2]|0)+160>>2]|0)+224>>2]=65536;lA(c[(c[l>>2]|0)+20>>2]|0,c[(c[l>>2]|0)+16>>2]|0,e[(c[l>>2]|0)+8>>1]<<3|0)|0}else{c[(c[(c[j>>2]|0)+160>>2]|0)+220>>2]=c[(c[s+4>>2]|0)+48>>2];c[(c[(c[j>>2]|0)+160>>2]|0)+224>>2]=c[(c[(c[j>>2]|0)+4>>2]|0)+52>>2]}c[(c[(c[l>>2]|0)+16>>2]|0)+((e[(c[l>>2]|0)+8>>1]|0)-4<<3)>>2]=(c[(c[(c[l>>2]|0)+16>>2]|0)+((e[(c[l>>2]|0)+8>>1]|0)-4<<3)>>2]|0)+32&-64;c[(c[(c[l>>2]|0)+16>>2]|0)+((e[(c[l>>2]|0)+8>>1]|0)-3<<3)>>2]=(c[(c[(c[l>>2]|0)+16>>2]|0)+((e[(c[l>>2]|0)+8>>1]|0)-3<<3)>>2]|0)+32&-64;c[(c[(c[l>>2]|0)+16>>2]|0)+((e[(c[l>>2]|0)+8>>1]|0)-2<<3)+4>>2]=(c[(c[(c[l>>2]|0)+16>>2]|0)+((e[(c[l>>2]|0)+8>>1]|0)-2<<3)+4>>2]|0)+32&-64;c[(c[(c[l>>2]|0)+16>>2]|0)+((e[(c[l>>2]|0)+8>>1]|0)-1<<3)+4>>2]=(c[(c[(c[l>>2]|0)+16>>2]|0)+((e[(c[l>>2]|0)+8>>1]|0)-1<<3)+4>>2]|0)+32&-64;if((c[m>>2]|0)>>>0>0){c[p>>2]=c[(c[j>>2]|0)+12>>2];s=(c[p>>2]|0)+56|0;c[q+0>>2]=c[s+0>>2];c[q+4>>2]=c[s+4>>2];c[q+8>>2]=c[s+8>>2];c[q+12>>2]=c[s+12>>2];c[q+16>>2]=c[s+16>>2];c[o>>2]=_x(c[(c[j>>2]|0)+160>>2]|0,3,c[(c[(c[j>>2]|0)+160>>2]|0)+392>>2]|0,c[m>>2]|0)|0;if((c[o>>2]|0)!=0){c[h>>2]=c[o>>2];t=c[h>>2]|0;i=g;return t|0}a[(c[(c[j>>2]|0)+160>>2]|0)+560|0]=a[k]|0;f=(c[(c[j>>2]|0)+160>>2]|0)+144|0;b=(c[l>>2]|0)+0|0;r=f+36|0;do{c[f>>2]=c[b>>2];f=f+4|0;b=b+4|0}while((f|0)<(r|0));if((c[(c[j>>2]|0)+16>>2]&1|0)!=0){u=0}else{u=(d[(c[(c[j>>2]|0)+4>>2]|0)+292|0]|0)!=0}a[n]=u&1;c[o>>2]=$x(c[(c[j>>2]|0)+160>>2]|0,a[n]|0)|0;if((c[o>>2]|0)!=0?(d[(c[(c[j>>2]|0)+160>>2]|0)+561|0]|0)!=0:0){c[h>>2]=c[o>>2];t=c[h>>2]|0;i=g;return t|0}o=c[q+8>>2]|0;a[o]=a[o]|(c[(c[(c[j>>2]|0)+160>>2]|0)+340>>2]<<5|4)}o=(c[j>>2]|0)+68|0;q=(c[(c[l>>2]|0)+16>>2]|0)+((e[(c[l>>2]|0)+8>>1]|0)-4<<3)|0;c[o+0>>2]=c[q+0>>2];c[o+4>>2]=c[q+4>>2];q=(c[j>>2]|0)+76|0;o=(c[(c[l>>2]|0)+16>>2]|0)+((e[(c[l>>2]|0)+8>>1]|0)-3<<3)|0;c[q+0>>2]=c[o+0>>2];c[q+4>>2]=c[o+4>>2];o=(c[j>>2]|0)+184|0;q=(c[(c[l>>2]|0)+16>>2]|0)+((e[(c[l>>2]|0)+8>>1]|0)-2<<3)|0;c[o+0>>2]=c[q+0>>2];c[o+4>>2]=c[q+4>>2];q=(c[j>>2]|0)+192|0;j=(c[(c[l>>2]|0)+16>>2]|0)+((e[(c[l>>2]|0)+8>>1]|0)-1<<3)|0;c[q+0>>2]=c[j+0>>2];c[q+4>>2]=c[j+4>>2];c[h>>2]=0;t=c[h>>2]|0;i=g;return t|0}function _x(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;g=f+12|0;h=f;j=f+4|0;k=f+8|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;c[(c[g>>2]|0)+444+((c[h>>2]|0)-1<<3)>>2]=c[j>>2];c[(c[g>>2]|0)+444+((c[h>>2]|0)-1<<3)+4>>2]=c[k>>2];i=f;return 0}function $x(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+16|0;g=f+8|0;h=f;j=f+12|0;k=f+4|0;c[h>>2]=d;a[j]=e;e=ay(c[h>>2]|0,3,0)|0;c[k>>2]=e;if((e|0)!=0){c[g>>2]=c[k>>2];l=c[g>>2]|0;i=f;return l|0}else{k=(c[h>>2]|0)+36|0;e=(c[h>>2]|0)+144|0;d=k+36|0;do{c[k>>2]=c[e>>2];k=k+4|0;e=e+4|0}while((k|0)<(d|0));k=(c[h>>2]|0)+72|0;e=(c[h>>2]|0)+144|0;d=k+36|0;do{c[k>>2]=c[e>>2];k=k+4|0;e=e+4|0}while((k|0)<(d|0));k=(c[h>>2]|0)+108|0;e=(c[h>>2]|0)+144|0;d=k+36|0;do{c[k>>2]=c[e>>2];k=k+4|0;e=e+4|0}while((k|0)<(d|0));b[(c[h>>2]|0)+344>>1]=1;b[(c[h>>2]|0)+346>>1]=1;b[(c[h>>2]|0)+348>>1]=1;b[(c[h>>2]|0)+294>>1]=16384;b[(c[h>>2]|0)+296>>1]=0;e=(c[h>>2]|0)+298|0;k=(c[h>>2]|0)+294|0;b[e+0>>1]=b[k+0>>1]|0;b[e+2>>1]=b[k+2>>1]|0;k=(c[h>>2]|0)+290|0;e=(c[h>>2]|0)+294|0;b[k+0>>1]=b[e+0>>1]|0;b[k+2>>1]=b[e+2>>1]|0;c[(c[h>>2]|0)+312>>2]=1;c[(c[h>>2]|0)+304>>2]=1;c[(c[h>>2]|0)+16>>2]=0;c[(c[h>>2]|0)+428>>2]=0;a[j]=a[j]|0;c[g>>2]=vd[c[(c[c[h>>2]>>2]|0)+652>>2]&63](c[h>>2]|0)|0;l=c[g>>2]|0;i=f;return l|0}return 0}function ay(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e+12|0;g=e;h=e+4|0;j=e+8|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[j>>2]=(c[f>>2]|0)+444+((c[g>>2]|0)-1<<3);c[(c[f>>2]|0)+356>>2]=c[c[j>>2]>>2];c[(c[f>>2]|0)+364>>2]=c[(c[j>>2]|0)+4>>2];c[(c[f>>2]|0)+360>>2]=c[h>>2];c[(c[f>>2]|0)+352>>2]=c[g>>2];i=e;return 0}function by(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+32|0;g=f+16|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;a:do{if((c[j>>2]|0)!=0){c[l>>2]=0;while(1){if(!((c[l>>2]|0)>>>0<(c[g>>2]|0)>>>0)){break a}e=(c[h>>2]|0)+(c[l>>2]<<3)|0;c[e>>2]=(c[e>>2]|0)+(c[j>>2]|0);c[l>>2]=(c[l>>2]|0)+1}}}while(0);if((c[k>>2]|0)==0){i=f;return}c[l>>2]=0;while(1){if(!((c[l>>2]|0)>>>0<(c[g>>2]|0)>>>0)){break}j=(c[h>>2]|0)+(c[l>>2]<<3)+4|0;c[j>>2]=(c[j>>2]|0)+(c[k>>2]|0);c[l>>2]=(c[l>>2]|0)+1}i=f;return}function cy(d,f){d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+32|0;h=g+12|0;j=g+16|0;k=g+4|0;l=g+8|0;m=g;c[h>>2]=d;a[j]=f;c[k>>2]=0;if((a[(c[h>>2]|0)+300|0]|0)==0?(c[k>>2]=hy(c[h>>2]|0,a[j]|0)|0,(c[k>>2]|0)!=0):0){n=c[k>>2]|0;i=g;return n|0}if((a[(c[h>>2]|0)+301|0]|0)!=0){n=c[k>>2]|0;i=g;return n|0}c[m>>2]=c[c[h>>2]>>2];c[l>>2]=0;while(1){if(!((c[l>>2]|0)>>>0<(c[(c[h>>2]|0)+240>>2]|0)>>>0)){break}f=Nn(b[(c[(c[m>>2]|0)+648>>2]|0)+(c[l>>2]<<1)>>1]|0,c[(c[h>>2]|0)+88>>2]|0)|0;c[(c[(c[h>>2]|0)+244>>2]|0)+(c[l>>2]<<2)>>2]=f;c[l>>2]=(c[l>>2]|0)+1}c[l>>2]=0;while(1){if(!((c[l>>2]|0)>>>0<(e[(c[h>>2]|0)+264>>1]|0)>>>0)){break}c[(c[(c[h>>2]|0)+268>>2]|0)+(c[l>>2]<<3)>>2]=0;c[(c[(c[h>>2]|0)+268>>2]|0)+(c[l>>2]<<3)+4>>2]=0;c[(c[(c[h>>2]|0)+272>>2]|0)+(c[l>>2]<<3)>>2]=0;c[(c[(c[h>>2]|0)+272>>2]|0)+(c[l>>2]<<3)+4>>2]=0;c[l>>2]=(c[l>>2]|0)+1}c[l>>2]=0;while(1){if(!((c[l>>2]|0)>>>0<(e[(c[h>>2]|0)+248>>1]|0)>>>0)){break}c[(c[(c[h>>2]|0)+252>>2]|0)+(c[l>>2]<<2)>>2]=0;c[l>>2]=(c[l>>2]|0)+1}l=(c[h>>2]|0)+172|0;m=95168|0;f=l+68|0;do{c[l>>2]=c[m>>2];l=l+4|0;m=m+4|0}while((l|0)<(f|0));c[k>>2]=ey(c[h>>2]|0,a[j]|0)|0;if((c[k>>2]|0)!=0){n=c[k>>2]|0;i=g;return n|0}a[(c[h>>2]|0)+301|0]=1;n=c[k>>2]|0;i=g;return n|0}function dy(d,f,g){d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;h=i;i=i+32|0;j=h+28|0;k=h;l=h+4|0;m=h+8|0;n=h+12|0;o=h+16|0;p=h+20|0;q=h+24|0;c[k>>2]=d;c[l>>2]=f;c[m>>2]=g;c[c[k>>2]>>2]=c[l>>2];c[p>>2]=(c[l>>2]|0)+260;c[(c[k>>2]|0)+4>>2]=c[m>>2];if((c[m>>2]|0)!=0){c[(c[k>>2]|0)+396>>2]=c[(c[m>>2]|0)+116>>2];c[(c[k>>2]|0)+400>>2]=c[(c[m>>2]|0)+120>>2];c[(c[k>>2]|0)+408>>2]=c[(c[m>>2]|0)+128>>2];c[(c[k>>2]|0)+412>>2]=c[(c[m>>2]|0)+132>>2];c[(c[k>>2]|0)+404>>2]=c[(c[m>>2]|0)+124>>2];c[(c[k>>2]|0)+416>>2]=c[(c[m>>2]|0)+136>>2];r=(c[k>>2]|0)+244|0;s=(c[m>>2]|0)+72|0;t=r+40|0;do{c[r>>2]=c[s>>2];r=r+4|0;s=s+4|0}while((r|0)<(t|0));l=(c[k>>2]|0)+216|0;g=(c[m>>2]|0)+44|0;c[l+0>>2]=c[g+0>>2];c[l+4>>2]=c[g+4>>2];c[l+8>>2]=c[g+8>>2];c[l+12>>2]=c[g+12>>2];c[l+16>>2]=c[g+16>>2];c[l+20>>2]=c[g+20>>2];c[l+24>>2]=c[g+24>>2];c[(c[k>>2]|0)+420>>2]=c[(c[m>>2]|0)+140>>2];c[(c[k>>2]|0)+424>>2]=c[(c[m>>2]|0)+144>>2];c[n>>2]=0;while(1){if((c[n>>2]|0)>=3){break}g=(c[k>>2]|0)+444+(c[n>>2]<<3)|0;l=(c[m>>2]|0)+148+(c[n>>2]<<3)|0;c[g+0>>2]=c[l+0>>2];c[g+4>>2]=c[l+4>>2];c[n>>2]=(c[n>>2]|0)+1}r=(c[k>>2]|0)+284|0;s=(c[m>>2]|0)+172|0;t=r+68|0;do{c[r>>2]=c[s>>2];r=r+4|0;s=s+4|0}while((r|0)<(t|0));c[(c[k>>2]|0)+380>>2]=c[(c[m>>2]|0)+240>>2];c[(c[k>>2]|0)+384>>2]=c[(c[m>>2]|0)+244>>2];b[(c[k>>2]|0)+468>>1]=b[(c[m>>2]|0)+248>>1]|0;c[(c[k>>2]|0)+472>>2]=c[(c[m>>2]|0)+252>>2];r=(c[k>>2]|0)+180|0;s=(c[m>>2]|0)+256|0;t=r+36|0;do{c[r>>2]=c[s>>2];r=r+4|0;s=s+4|0}while((r|0)<(t|0));r=(c[k>>2]|0)+36|0;t=r+36|0;do{c[r>>2]=0;r=r+4|0}while((r|0)<(t|0));r=(c[k>>2]|0)+72|0;s=(c[k>>2]|0)+36|0;t=r+36|0;do{c[r>>2]=c[s>>2];r=r+4|0;s=s+4|0}while((r|0)<(t|0));r=(c[k>>2]|0)+108|0;s=(c[k>>2]|0)+36|0;t=r+36|0;do{c[r>>2]=c[s>>2];r=r+4|0;s=s+4|0}while((r|0)<(t|0))}c[o>>2]=c[(c[k>>2]|0)+20>>2];c[q>>2]=zx(c[(c[k>>2]|0)+8>>2]|0,o,4,(c[k>>2]|0)+24|0,(e[(c[p>>2]|0)+24>>1]|0)+32|0)|0;c[(c[k>>2]|0)+20>>2]=c[o>>2];if((c[q>>2]|0)!=0){c[j>>2]=c[q>>2];u=c[j>>2]|0;i=h;return u|0}c[o>>2]=c[(c[k>>2]|0)+388>>2];c[q>>2]=zx(c[(c[k>>2]|0)+8>>2]|0,o,1,(c[k>>2]|0)+392|0,e[(c[p>>2]|0)+26>>1]|0)|0;c[(c[k>>2]|0)+388>>2]=c[o>>2]&65535;if((c[q>>2]|0)!=0){c[j>>2]=c[q>>2];u=c[j>>2]|0;i=h;return u|0}else{b[(c[k>>2]|0)+152>>1]=0;b[(c[k>>2]|0)+154>>1]=0;r=(c[k>>2]|0)+72|0;s=(c[k>>2]|0)+144|0;t=r+36|0;do{c[r>>2]=c[s>>2];r=r+4|0;s=s+4|0}while((r|0)<(t|0));r=(c[k>>2]|0)+108|0;s=(c[k>>2]|0)+144|0;t=r+36|0;do{c[r>>2]=c[s>>2];r=r+4|0;s=s+4|0}while((r|0)<(t|0));r=(c[k>>2]|0)+36|0;s=(c[k>>2]|0)+144|0;t=r+36|0;do{c[r>>2]=c[s>>2];r=r+4|0;s=s+4|0}while((r|0)<(t|0));a[(c[k>>2]|0)+488|0]=0;c[j>>2]=0;u=c[j>>2]|0;i=h;return u|0}return 0}function ey(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+32|0;g=f+16|0;h=f;j=f+20|0;k=f+8|0;l=f+12|0;m=f+4|0;c[h>>2]=d;a[j]=e;c[k>>2]=c[c[h>>2]>>2];if((a[(c[h>>2]|0)+292|0]|0)!=0){c[l>>2]=c[(c[h>>2]|0)+296>>2]}else{c[l>>2]=c[(c[(c[k>>2]|0)+96>>2]|0)+28>>2]}if((c[l>>2]|0)==0){c[g>>2]=153;n=c[g>>2]|0;i=f;return n|0}dy(c[l>>2]|0,c[k>>2]|0,c[h>>2]|0)|0;c[(c[l>>2]|0)+428>>2]=0;c[(c[l>>2]|0)+16>>2]=0;a[(c[l>>2]|0)+488|0]=0;a[(c[l>>2]|0)+561|0]=a[j]|0;_x(c[l>>2]|0,2,c[(c[k>>2]|0)+640>>2]|0,c[(c[k>>2]|0)+636>>2]|0)|0;fy(c[l>>2]|0,3)|0;if((c[(c[k>>2]|0)+636>>2]|0)>>>0>0){c[m>>2]=ay(c[l>>2]|0,2,0)|0;if((c[m>>2]|0)==0?(a[(c[h>>2]|0)+292|0]|0)==0:0){c[m>>2]=vd[c[(c[k>>2]|0)+652>>2]&63](c[l>>2]|0)|0}}else{c[m>>2]=0}b[(c[l>>2]|0)+290>>1]=16384;b[(c[l>>2]|0)+292>>1]=0;b[(c[l>>2]|0)+294>>1]=16384;b[(c[l>>2]|0)+296>>1]=0;b[(c[l>>2]|0)+298>>1]=16384;b[(c[l>>2]|0)+300>>1]=0;b[(c[l>>2]|0)+284>>1]=0;b[(c[l>>2]|0)+286>>1]=0;b[(c[l>>2]|0)+288>>1]=0;b[(c[l>>2]|0)+344>>1]=1;b[(c[l>>2]|0)+346>>1]=1;b[(c[l>>2]|0)+348>>1]=1;c[(c[l>>2]|0)+304>>2]=1;k=(c[h>>2]|0)+172|0;j=(c[l>>2]|0)+284|0;e=k+68|0;do{c[k>>2]=c[j>>2];k=k+4|0;j=j+4|0}while((k|0)<(e|0));gy(c[l>>2]|0,c[h>>2]|0)|0;c[g>>2]=c[m>>2];n=c[g>>2]|0;i=f;return n|0}function fy(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;c[(c[e>>2]|0)+444+((c[f>>2]|0)-1<<3)>>2]=0;c[(c[e>>2]|0)+444+((c[f>>2]|0)-1<<3)+4>>2]=0;i=d;return 0}function gy(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d+8|0;f=d;g=d+4|0;c[e>>2]=a;c[f>>2]=b;c[(c[f>>2]|0)+116>>2]=c[(c[e>>2]|0)+396>>2];c[(c[f>>2]|0)+128>>2]=c[(c[e>>2]|0)+408>>2];c[(c[f>>2]|0)+140>>2]=c[(c[e>>2]|0)+420>>2];c[(c[f>>2]|0)+144>>2]=c[(c[e>>2]|0)+424>>2];c[g>>2]=0;while(1){if((c[g>>2]|0)>=3){break}b=(c[f>>2]|0)+148+(c[g>>2]<<3)|0;a=(c[e>>2]|0)+444+(c[g>>2]<<3)|0;c[b+0>>2]=c[a+0>>2];c[b+4>>2]=c[a+4>>2];c[g>>2]=(c[g>>2]|0)+1}i=d;return 0}function hy(d,f){d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=i;i=i+48|0;h=g+32|0;j=g+38|0;k=g+28|0;l=g+24|0;m=g+20|0;n=g+16|0;o=g+8|0;p=g+36|0;q=g+4|0;r=g;s=g+12|0;c[h>>2]=d;a[j]=f;c[l>>2]=c[h>>2];c[m>>2]=c[c[h>>2]>>2];c[n>>2]=c[(c[m>>2]|0)+100>>2];c[q>>2]=(c[m>>2]|0)+260;a[(c[l>>2]|0)+300|0]=1;a[(c[l>>2]|0)+301|0]=0;c[(c[l>>2]|0)+120>>2]=e[(c[q>>2]|0)+20>>1]|0;c[(c[l>>2]|0)+132>>2]=e[(c[q>>2]|0)+22>>1]|0;c[(c[l>>2]|0)+116>>2]=0;c[(c[l>>2]|0)+128>>2]=0;c[(c[l>>2]|0)+140>>2]=0;c[(c[l>>2]|0)+144>>2]=0;c[(c[l>>2]|0)+240>>2]=c[(c[m>>2]|0)+644>>2];b[(c[l>>2]|0)+248>>1]=b[(c[q>>2]|0)+18>>1]|0;c[r>>2]=(c[l>>2]|0)+72;a[(c[r>>2]|0)+37|0]=0;a[(c[r>>2]|0)+38|0]=0;c[o>>2]=0;while(1){if((c[o>>2]|0)>=4){break}c[(c[r>>2]|0)+20+(c[o>>2]<<2)>>2]=0;c[o>>2]=(c[o>>2]|0)+1}o=Yn(c[n>>2]|0,24,0,c[(c[l>>2]|0)+120>>2]|0,0,k)|0;c[(c[l>>2]|0)+124>>2]=o;if(((((c[k>>2]|0)==0?(o=Yn(c[n>>2]|0,24,0,c[(c[l>>2]|0)+132>>2]|0,0,k)|0,c[(c[l>>2]|0)+136>>2]=o,(c[k>>2]|0)==0):0)?(o=Yn(c[n>>2]|0,4,0,c[(c[l>>2]|0)+240>>2]|0,0,k)|0,c[(c[l>>2]|0)+244>>2]=o,(c[k>>2]|0)==0):0)?(o=Yn(c[n>>2]|0,4,0,e[(c[l>>2]|0)+248>>1]|0,0,k)|0,c[(c[l>>2]|0)+252>>2]=o,(c[k>>2]|0)==0):0)?(b[p>>1]=b[(c[q>>2]|0)+16>>1]|0,b[p>>1]=(e[p>>1]|0)+4,c[k>>2]=iy(c[n>>2]|0,b[p>>1]|0,0,(c[l>>2]|0)+256|0)|0,(c[k>>2]|0)==0):0){b[(c[l>>2]|0)+264>>1]=b[p>>1]|0;p=(c[l>>2]|0)+172|0;n=95168|0;q=p+68|0;do{c[p>>2]=c[n>>2];p=p+4|0;n=n+4|0}while((p|0)<(q|0));c[s>>2]=c[(c[(c[m>>2]|0)+96>>2]|0)+4>>2];c[(c[m>>2]|0)+652>>2]=c[(c[s>>2]|0)+172>>2];if((c[(c[m>>2]|0)+652>>2]|0)==0){c[(c[m>>2]|0)+652>>2]=40}c[k>>2]=jy(c[l>>2]|0,a[j]|0)|0}if((c[k>>2]|0)==0){t=c[k>>2]|0;i=g;return t|0}hx(c[h>>2]|0);t=c[k>>2]|0;i=g;return t|0}function iy(a,d,f,g){a=a|0;d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0;h=i;i=i+16|0;j=h+8|0;k=h+14|0;l=h+12|0;m=h+4|0;n=h;c[j>>2]=a;b[k>>1]=d;b[l>>1]=f;c[m>>2]=g;g=(c[m>>2]|0)+0|0;f=g+36|0;do{c[g>>2]=0;g=g+4|0}while((g|0)<(f|0));c[c[m>>2]>>2]=c[j>>2];g=Yn(c[j>>2]|0,8,0,e[k>>1]|0,0,n)|0;c[(c[m>>2]|0)+12>>2]=g;if(((((c[n>>2]|0)==0?(g=Yn(c[j>>2]|0,8,0,e[k>>1]|0,0,n)|0,c[(c[m>>2]|0)+16>>2]=g,(c[n>>2]|0)==0):0)?(g=Yn(c[j>>2]|0,8,0,e[k>>1]|0,0,n)|0,c[(c[m>>2]|0)+20>>2]=g,(c[n>>2]|0)==0):0)?(g=Yn(c[j>>2]|0,1,0,e[k>>1]|0,0,n)|0,c[(c[m>>2]|0)+24>>2]=g,(c[n>>2]|0)==0):0)?(g=Yn(c[j>>2]|0,2,0,b[l>>1]|0,0,n)|0,c[(c[m>>2]|0)+28>>2]=g,(c[n>>2]|0)==0):0){b[(c[m>>2]|0)+4>>1]=b[k>>1]|0;b[(c[m>>2]|0)+6>>1]=b[l>>1]|0;o=c[n>>2]|0;i=h;return o|0}ix(c[m>>2]|0);o=c[n>>2]|0;i=h;return o|0}function jy(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+32|0;g=f+24|0;h=f;j=f+28|0;k=f+8|0;l=f+12|0;m=f+16|0;n=f+20|0;o=f+4|0;c[h>>2]=d;a[j]=e;c[k>>2]=c[c[h>>2]>>2];if((a[(c[h>>2]|0)+292|0]|0)!=0){c[l>>2]=c[(c[h>>2]|0)+296>>2]}else{c[l>>2]=c[(c[(c[k>>2]|0)+96>>2]|0)+28>>2]}if((c[l>>2]|0)==0){c[g>>2]=153;p=c[g>>2]|0;i=f;return p|0}dy(c[l>>2]|0,c[k>>2]|0,c[h>>2]|0)|0;c[(c[l>>2]|0)+428>>2]=0;c[(c[l>>2]|0)+16>>2]=0;c[(c[l>>2]|0)+476>>2]=64;c[(c[l>>2]|0)+480>>2]=0;c[(c[l>>2]|0)+484>>2]=0;a[(c[l>>2]|0)+488|0]=0;c[(c[l>>2]|0)+564>>2]=16384;a[(c[l>>2]|0)+561|0]=a[j]|0;c[n>>2]=(c[l>>2]|0)+216;c[o>>2]=(c[l>>2]|0)+244;b[c[n>>2]>>1]=0;b[(c[n>>2]|0)+2>>1]=0;c[(c[n>>2]|0)+4>>2]=0;c[(c[n>>2]|0)+8>>2]=0;b[(c[o>>2]|0)+8>>1]=0;c[(c[o>>2]|0)+16>>2]=0;c[(c[o>>2]|0)+12>>2]=65536;_x(c[l>>2]|0,1,c[(c[k>>2]|0)+632>>2]|0,c[(c[k>>2]|0)+628>>2]|0)|0;fy(c[l>>2]|0,2)|0;fy(c[l>>2]|0,3)|0;if((c[(c[k>>2]|0)+628>>2]|0)>>>0>0){c[m>>2]=ay(c[l>>2]|0,1,0)|0;if((c[m>>2]|0)==0){c[m>>2]=vd[c[(c[k>>2]|0)+652>>2]&63](c[l>>2]|0)|0}}else{c[m>>2]=0}if((c[m>>2]|0)==0){gy(c[l>>2]|0,c[h>>2]|0)|0}c[g>>2]=c[m>>2];p=c[g>>2]|0;i=f;return p|0}function ky(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+32|0;f=e+24|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;m=e+20|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[k>>2]=0;c[l>>2]=c[g>>2];if((cA(c[h>>2]|0,96552)|0)!=0){c[f>>2]=12;n=c[f>>2]|0;i=e;return n|0}c[m>>2]=c[j>>2];if((c[c[m>>2]>>2]|0)!=35){c[k>>2]=7}else{c[(c[l>>2]|0)+68>>2]=c[c[m>>2]>>2]}c[f>>2]=c[k>>2];n=c[f>>2]|0;i=e;return n|0}function ly(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+32|0;f=e+28|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;m=e+20|0;n=e+24|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[k>>2]=0;c[l>>2]=c[g>>2];c[m>>2]=c[(c[l>>2]|0)+68>>2];if((cA(c[h>>2]|0,96552)|0)!=0){c[f>>2]=12;o=c[f>>2]|0;i=e;return o|0}else{c[n>>2]=c[j>>2];c[c[n>>2]>>2]=c[m>>2];c[f>>2]=c[k>>2];o=c[f>>2]|0;i=e;return o|0}return 0}function my(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;i=i+48|0;g=f+32|0;h=f+28|0;j=f+24|0;k=f+20|0;l=f+16|0;m=f+8|0;n=f+4|0;o=f;p=f+12|0;c[g>>2]=b;c[h>>2]=d;c[j>>2]=e;c[k>>2]=0;c[o>>2]=c[(c[g>>2]|0)+100>>2];a[(c[g>>2]|0)+672|0]=0;if((c[(c[g>>2]|0)+676>>2]|0)==0?(e=ny(c[g>>2]|0,0)|0,c[k>>2]=e,(e|0)!=0):0){q=c[k>>2]|0;i=f;return q|0}c[l>>2]=c[(c[g>>2]|0)+676>>2];c[m>>2]=c[(c[l>>2]|0)+8>>2];if((c[h>>2]|0)!=(c[c[m>>2]>>2]|0)){c[k>>2]=6;q=c[k>>2]|0;i=f;return q|0}c[n>>2]=0;while(1){if(!((c[n>>2]|0)>>>0<(c[h>>2]|0)>>>0)){break}if((c[(c[j>>2]|0)+(c[n>>2]<<2)>>2]|0)<-65536){r=9;break}if((c[(c[j>>2]|0)+(c[n>>2]<<2)>>2]|0)>65536){r=9;break}c[n>>2]=(c[n>>2]|0)+1}if((r|0)==9){c[k>>2]=6;q=c[k>>2]|0;i=f;return q|0}if((c[(c[l>>2]|0)+36>>2]|0)==0?(r=qy(c[g>>2]|0)|0,c[k>>2]=r,(r|0)!=0):0){q=c[k>>2]|0;i=f;return q|0}a:do{if((c[(c[l>>2]|0)+4>>2]|0)==0){r=Yn(c[o>>2]|0,4,0,c[h>>2]|0,0,k)|0;c[(c[l>>2]|0)+4>>2]=r;if((c[k>>2]|0)!=0){q=c[k>>2]|0;i=f;return q|0}else{c[p>>2]=1;break}}else{c[p>>2]=0;c[n>>2]=0;while(1){if(!((c[n>>2]|0)>>>0<(c[h>>2]|0)>>>0)){break a}if((c[(c[(c[l>>2]|0)+4>>2]|0)+(c[n>>2]<<2)>>2]|0)!=(c[(c[j>>2]|0)+(c[n>>2]<<2)>>2]|0)){break}c[n>>2]=(c[n>>2]|0)+1}c[p>>2]=2}}while(0);c[c[l>>2]>>2]=c[h>>2];lA(c[(c[l>>2]|0)+4>>2]|0,c[j>>2]|0,c[h>>2]<<2|0)|0;a[(c[g>>2]|0)+672|0]=1;if((c[(c[g>>2]|0)+648>>2]|0)==0){q=c[k>>2]|0;i=f;return q|0}h=c[p>>2]|0;if((h|0)==1){Bx(c[g>>2]|0,c[(c[g>>2]|0)+104>>2]|0)|0;q=c[k>>2]|0;i=f;return q|0}else if((h|0)==2){Vn(c[o>>2]|0,c[(c[g>>2]|0)+648>>2]|0);c[(c[g>>2]|0)+648>>2]=0;c[(c[g>>2]|0)+648>>2]=0;px(c[g>>2]|0,c[(c[g>>2]|0)+104>>2]|0)|0;q=c[k>>2]|0;i=f;return q|0}else{q=c[k>>2]|0;i=f;return q|0}return 0}function ny(b,d){b=b|0;d=d|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;f=i;i=i+112|0;g=f+96|0;h=f+92|0;j=f+88|0;k=f+84|0;l=f+80|0;m=f+76|0;n=f+72|0;o=f+68|0;p=f+64|0;q=f+56|0;r=f+52|0;s=f+48|0;t=f+44|0;u=f+40|0;v=f+24|0;w=f;x=f+60|0;c[g>>2]=b;c[h>>2]=d;c[j>>2]=c[(c[g>>2]|0)+104>>2];c[k>>2]=c[(c[g>>2]|0)+100>>2];c[m>>2]=0;c[q>>2]=0;a:do{if((c[(c[g>>2]|0)+676>>2]|0)==0){d=yd[c[(c[g>>2]|0)+508>>2]&31](c[g>>2]|0,1735811442,c[j>>2]|0,l)|0;c[m>>2]=d;if((d|0)!=0){y=c[m>>2]|0;i=f;return y|0}d=yd[c[(c[g>>2]|0)+508>>2]&31](c[g>>2]|0,1719034226,c[j>>2]|0,l)|0;c[m>>2]=d;if((d|0)!=0){y=c[m>>2]|0;i=f;return y|0}c[n>>2]=vp(c[j>>2]|0)|0;d=Gp(c[j>>2]|0,96576,v)|0;c[m>>2]=d;if((d|0)!=0){y=c[m>>2]|0;i=f;return y|0}if(((((((c[v>>2]|0)==65536?(e[v+6>>1]|0|0)==2:0)?(e[v+10>>1]|0|0)==20:0)?(e[v+8>>1]|0|0)<=16382:0)?(e[v+14>>1]|0|0)==(4+((e[v+8>>1]|0)<<2)|0):0)?(e[v+12>>1]|0|0)<=32511:0)?(d=(e[v+4>>1]|0)+((e[v+8>>1]|0)*20|0)+(aa(e[v+12>>1]|0,e[v+14>>1]|0)|0)|0,!(d>>>0>(c[l>>2]|0)>>>0)):0){d=Sn(c[k>>2]|0,40,m)|0;c[(c[g>>2]|0)+676>>2]=d;if((c[m>>2]|0)!=0){y=c[m>>2]|0;i=f;return y|0}d=20+((e[v+8>>1]|0)*24|0)+((e[v+12>>1]|0)<<3)+((aa(e[v+12>>1]|0,e[v+8>>1]|0)|0)<<2)|0;c[(c[(c[g>>2]|0)+676>>2]|0)+12>>2]=d+((e[v+8>>1]|0)*5|0);c[q>>2]=Sn(c[k>>2]|0,c[(c[(c[g>>2]|0)+676>>2]|0)+12>>2]|0,m)|0;if((c[m>>2]|0)!=0){y=c[m>>2]|0;i=f;return y|0}c[(c[(c[g>>2]|0)+676>>2]|0)+8>>2]=c[q>>2];c[c[q>>2]>>2]=e[v+8>>1]|0;c[(c[q>>2]|0)+4>>2]=-1;c[(c[q>>2]|0)+8>>2]=e[v+12>>1]|0;c[(c[q>>2]|0)+12>>2]=(c[q>>2]|0)+20;c[(c[q>>2]|0)+16>>2]=(c[(c[q>>2]|0)+12>>2]|0)+((e[v+8>>1]|0)*24|0);c[r>>2]=(c[(c[q>>2]|0)+16>>2]|0)+((e[v+12>>1]|0)<<3);c[o>>2]=0;while(1){z=c[r>>2]|0;if((c[o>>2]|0)>=(e[v+12>>1]|0|0)){break}c[(c[(c[q>>2]|0)+16>>2]|0)+(c[o>>2]<<3)>>2]=z;c[r>>2]=(c[r>>2]|0)+((e[v+8>>1]|0)<<2);c[o>>2]=(c[o>>2]|0)+1}c[s>>2]=z;c[o>>2]=0;while(1){if((c[o>>2]|0)>=(e[v+8>>1]|0|0)){break}c[(c[(c[q>>2]|0)+12>>2]|0)+((c[o>>2]|0)*24|0)>>2]=c[s>>2];c[s>>2]=(c[s>>2]|0)+5;c[o>>2]=(c[o>>2]|0)+1}d=qp(c[j>>2]|0,(c[n>>2]|0)+(e[v+4>>1]|0)|0)|0;c[m>>2]=d;if((d|0)!=0){y=c[m>>2]|0;i=f;return y|0}c[t>>2]=c[(c[q>>2]|0)+12>>2];c[o>>2]=0;while(1){if((c[o>>2]|0)>=(e[v+8>>1]|0|0)){break}d=Gp(c[j>>2]|0,96616,w)|0;c[m>>2]=d;if((d|0)!=0){A=50;break}c[(c[t>>2]|0)+16>>2]=c[w>>2];c[(c[t>>2]|0)+4>>2]=c[w+4>>2];c[(c[t>>2]|0)+8>>2]=c[w+8>>2];c[(c[t>>2]|0)+12>>2]=c[w+12>>2];c[(c[t>>2]|0)+20>>2]=e[w+18>>1]|0;a[c[c[t>>2]>>2]|0]=(c[(c[t>>2]|0)+16>>2]|0)>>>24;a[(c[c[t>>2]>>2]|0)+1|0]=(c[(c[t>>2]|0)+16>>2]|0)>>>16&255;a[(c[c[t>>2]>>2]|0)+2|0]=(c[(c[t>>2]|0)+16>>2]|0)>>>8&255;a[(c[c[t>>2]>>2]|0)+3|0]=c[(c[t>>2]|0)+16>>2]&255;a[(c[c[t>>2]>>2]|0)+4|0]=0;c[t>>2]=(c[t>>2]|0)+24;c[o>>2]=(c[o>>2]|0)+1}if((A|0)==50){y=c[m>>2]|0;i=f;return y|0}c[u>>2]=c[(c[q>>2]|0)+16>>2];c[o>>2]=0;while(1){if((c[o>>2]|0)>=(e[v+12>>1]|0|0)){break a}d=yp(c[j>>2]|0,4+((e[v+8>>1]|0)<<2)|0)|0;c[m>>2]=d;if((d|0)!=0){break}d=(Dp(c[j>>2]|0)|0)&65535;c[(c[u>>2]|0)+4>>2]=d;Dp(c[j>>2]|0)|0;c[p>>2]=0;while(1){B=c[j>>2]|0;if((c[p>>2]|0)>=(e[v+8>>1]|0|0)){break}d=Ep(B)|0;c[(c[c[u>>2]>>2]|0)+(c[p>>2]<<2)>>2]=d;c[p>>2]=(c[p>>2]|0)+1}Bp(B);c[o>>2]=(c[o>>2]|0)+1;c[u>>2]=(c[u>>2]|0)+8}y=c[m>>2]|0;i=f;return y|0}c[m>>2]=8;y=c[m>>2]|0;i=f;return y|0}}while(0);if((c[h>>2]|0)==0){y=c[m>>2]|0;i=f;return y|0}c[q>>2]=Sn(c[k>>2]|0,c[(c[(c[g>>2]|0)+676>>2]|0)+12>>2]|0,m)|0;if((c[m>>2]|0)!=0){y=c[m>>2]|0;i=f;return y|0}lA(c[q>>2]|0,c[(c[(c[g>>2]|0)+676>>2]|0)+8>>2]|0,c[(c[(c[g>>2]|0)+676>>2]|0)+12>>2]|0)|0;c[(c[q>>2]|0)+12>>2]=(c[q>>2]|0)+20;c[(c[q>>2]|0)+16>>2]=(c[(c[q>>2]|0)+12>>2]|0)+((c[c[q>>2]>>2]|0)*24|0);c[r>>2]=(c[(c[q>>2]|0)+16>>2]|0)+(c[(c[q>>2]|0)+8>>2]<<3);c[x>>2]=0;while(1){if(!((c[x>>2]|0)>>>0<(c[(c[q>>2]|0)+8>>2]|0)>>>0)){break}c[(c[(c[q>>2]|0)+16>>2]|0)+(c[x>>2]<<3)>>2]=c[r>>2];c[r>>2]=(c[r>>2]|0)+(c[c[q>>2]>>2]<<2);c[x>>2]=(c[x>>2]|0)+1}c[t>>2]=c[(c[q>>2]|0)+12>>2];c[s>>2]=c[r>>2];c[x>>2]=0;while(1){if(!((c[x>>2]|0)>>>0<(c[c[q>>2]>>2]|0)>>>0)){break}c[c[t>>2]>>2]=c[s>>2];r=c[t>>2]|0;do{if((c[(c[t>>2]|0)+16>>2]|0)!=2003265652){g=c[t>>2]|0;if((c[r+16>>2]|0)==2003072104){c[g>>2]=96656;break}k=c[t>>2]|0;if((c[g+16>>2]|0)==1869640570){c[k>>2]=96664;break}if((c[k+16>>2]|0)==1936486004){c[c[t>>2]>>2]=96680}}else{c[r>>2]=96648}}while(0);c[s>>2]=(c[s>>2]|0)+5;c[t>>2]=(c[t>>2]|0)+24;c[x>>2]=(c[x>>2]|0)+1}c[c[h>>2]>>2]=c[q>>2];y=c[m>>2]|0;i=f;return y|0}function oy(b,d,f){b=b|0;d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;g=i;i=i+48|0;h=g+44|0;j=g+40|0;k=g+36|0;l=g+32|0;m=g+28|0;n=g+24|0;o=g+20|0;p=g+12|0;q=g+8|0;r=g+4|0;s=g;t=g+16|0;c[h>>2]=b;c[j>>2]=d;c[k>>2]=f;c[l>>2]=0;c[m>>2]=0;c[t>>2]=c[(c[h>>2]|0)+100>>2];if((c[(c[h>>2]|0)+676>>2]|0)==0?(f=ny(c[h>>2]|0,0)|0,c[l>>2]=f,(f|0)!=0):0){u=c[t>>2]|0;v=c[m>>2]|0;Vn(u,v);c[m>>2]=0;w=c[l>>2]|0;i=g;return w|0}c[n>>2]=c[(c[h>>2]|0)+676>>2];c[o>>2]=c[(c[n>>2]|0)+8>>2];if((c[j>>2]|0)!=(c[c[o>>2]>>2]|0)){c[l>>2]=6;u=c[t>>2]|0;v=c[m>>2]|0;Vn(u,v);c[m>>2]=0;w=c[l>>2]|0;i=g;return w|0}c[m>>2]=Yn(c[t>>2]|0,4,0,c[c[o>>2]>>2]|0,0,l)|0;if((c[l>>2]|0)!=0){u=c[t>>2]|0;v=c[m>>2]|0;Vn(u,v);c[m>>2]=0;w=c[l>>2]|0;i=g;return w|0}c[r>>2]=c[(c[o>>2]|0)+12>>2];c[p>>2]=0;while(1){if(!((c[p>>2]|0)>>>0<(c[c[o>>2]>>2]|0)>>>0)){break}if((c[(c[k>>2]|0)+(c[p>>2]<<2)>>2]|0)>(c[(c[r>>2]|0)+12>>2]|0)){x=10;break}if((c[(c[k>>2]|0)+(c[p>>2]<<2)>>2]|0)<(c[(c[r>>2]|0)+4>>2]|0)){x=10;break}do{if((c[(c[k>>2]|0)+(c[p>>2]<<2)>>2]|0)>=(c[(c[r>>2]|0)+8>>2]|0)){f=c[p>>2]|0;if((c[(c[r>>2]|0)+12>>2]|0)==(c[(c[r>>2]|0)+8>>2]|0)){c[(c[m>>2]|0)+(f<<2)>>2]=0;break}else{d=On((c[(c[k>>2]|0)+(f<<2)>>2]|0)-(c[(c[r>>2]|0)+8>>2]|0)|0,(c[(c[r>>2]|0)+12>>2]|0)-(c[(c[r>>2]|0)+8>>2]|0)|0)|0;c[(c[m>>2]|0)+(c[p>>2]<<2)>>2]=d;break}}else{d=0-(On((c[(c[k>>2]|0)+(c[p>>2]<<2)>>2]|0)-(c[(c[r>>2]|0)+8>>2]|0)|0,(c[(c[r>>2]|0)+4>>2]|0)-(c[(c[r>>2]|0)+8>>2]|0)|0)|0)|0;c[(c[m>>2]|0)+(c[p>>2]<<2)>>2]=d}}while(0);c[p>>2]=(c[p>>2]|0)+1;c[r>>2]=(c[r>>2]|0)+24}if((x|0)==10){c[l>>2]=6;u=c[t>>2]|0;v=c[m>>2]|0;Vn(u,v);c[m>>2]=0;w=c[l>>2]|0;i=g;return w|0}if((a[(c[n>>2]|0)+16|0]|0)==0){py(c[h>>2]|0)}a:do{if((c[(c[n>>2]|0)+20>>2]|0)!=0){c[s>>2]=c[(c[n>>2]|0)+20>>2];c[p>>2]=0;while(1){if(!((c[p>>2]|0)>>>0<(c[c[o>>2]>>2]|0)>>>0)){break a}c[q>>2]=1;while(1){if(!((c[q>>2]|0)>>>0<(e[c[s>>2]>>1]|0)>>>0)){break}if((c[(c[m>>2]|0)+(c[p>>2]<<2)>>2]|0)<(c[(c[(c[s>>2]|0)+4>>2]|0)+(c[q>>2]<<3)>>2]|0)){x=25;break}c[q>>2]=(c[q>>2]|0)+1}if((x|0)==25){x=0;r=In((c[(c[m>>2]|0)+(c[p>>2]<<2)>>2]|0)-(c[(c[(c[s>>2]|0)+4>>2]|0)+((c[q>>2]|0)-1<<3)>>2]|0)|0,(c[(c[(c[s>>2]|0)+4>>2]|0)+(c[q>>2]<<3)+4>>2]|0)-(c[(c[(c[s>>2]|0)+4>>2]|0)+((c[q>>2]|0)-1<<3)+4>>2]|0)|0,(c[(c[(c[s>>2]|0)+4>>2]|0)+(c[q>>2]<<3)>>2]|0)-(c[(c[(c[s>>2]|0)+4>>2]|0)+((c[q>>2]|0)-1<<3)>>2]|0)|0)|0;c[(c[m>>2]|0)+(c[p>>2]<<2)>>2]=r+(c[(c[(c[s>>2]|0)+4>>2]|0)+((c[q>>2]|0)-1<<3)+4>>2]|0)}c[p>>2]=(c[p>>2]|0)+1;c[s>>2]=(c[s>>2]|0)+8}}}while(0);c[l>>2]=my(c[h>>2]|0,c[j>>2]|0,c[m>>2]|0)|0;u=c[t>>2]|0;v=c[m>>2]|0;Vn(u,v);c[m>>2]=0;w=c[l>>2]|0;i=g;return w|0}function py(d){d=d|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;f=i;i=i+48|0;g=f+40|0;h=f+36|0;j=f+32|0;k=f+28|0;l=f+24|0;m=f+20|0;n=f+12|0;o=f+8|0;p=f+4|0;q=f;r=f+16|0;c[g>>2]=d;c[h>>2]=c[(c[g>>2]|0)+104>>2];c[j>>2]=c[(c[h>>2]|0)+28>>2];c[k>>2]=c[(c[g>>2]|0)+676>>2];c[m>>2]=0;c[m>>2]=c[m>>2];a[(c[k>>2]|0)+16|0]=1;d=yd[c[(c[g>>2]|0)+508>>2]&31](c[g>>2]|0,1635148146,c[h>>2]|0,r)|0;c[m>>2]=d;if((d|0)!=0){i=f;return}d=yp(c[h>>2]|0,c[r>>2]|0)|0;c[m>>2]=d;if((d|0)!=0){i=f;return}c[n>>2]=Ep(c[h>>2]|0)|0;c[o>>2]=Ep(c[h>>2]|0)|0;a:do{if(((c[n>>2]|0)==65536?(c[o>>2]|0)==(c[c[(c[k>>2]|0)+8>>2]>>2]|0):0)?(d=Yn(c[j>>2]|0,8,0,c[o>>2]|0,0,m)|0,c[(c[k>>2]|0)+20>>2]=d,(c[m>>2]|0)==0):0){c[l>>2]=c[(c[k>>2]|0)+20>>2];c[p>>2]=0;while(1){if((c[p>>2]|0)>=(c[o>>2]|0)){break a}d=Dp(c[h>>2]|0)|0;b[c[l>>2]>>1]=d;d=Yn(c[j>>2]|0,8,0,e[c[l>>2]>>1]|0,0,m)|0;c[(c[l>>2]|0)+4>>2]=d;if((c[m>>2]|0)!=0){break}c[q>>2]=0;while(1){if((c[q>>2]|0)>=(e[c[l>>2]>>1]|0|0)){break}d=(Dp(c[h>>2]|0)|0)<<16>>16<<2;c[(c[(c[l>>2]|0)+4>>2]|0)+(c[q>>2]<<3)>>2]=d;d=(Dp(c[h>>2]|0)|0)<<16>>16<<2;c[(c[(c[l>>2]|0)+4>>2]|0)+(c[q>>2]<<3)+4>>2]=d;c[q>>2]=(c[q>>2]|0)+1}c[p>>2]=(c[p>>2]|0)+1;c[l>>2]=(c[l>>2]|0)+8}c[q>>2]=(c[p>>2]|0)-1;while(1){s=c[j>>2]|0;if((c[q>>2]|0)<0){break}Vn(s,c[(c[(c[k>>2]|0)+20>>2]|0)+(c[q>>2]<<3)+4>>2]|0);c[(c[(c[k>>2]|0)+20>>2]|0)+(c[q>>2]<<3)+4>>2]=0;c[q>>2]=(c[q>>2]|0)+ -1}Vn(s,c[(c[k>>2]|0)+20>>2]|0);c[(c[k>>2]|0)+20>>2]=0;c[(c[k>>2]|0)+20>>2]=0}}while(0);Bp(c[h>>2]|0);i=f;return}function qy(a){a=a|0;var d=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=i;i=i+64|0;f=d+56|0;g=d+52|0;h=d+48|0;j=d+44|0;k=d+40|0;l=d+36|0;m=d+12|0;n=d+4|0;o=d;p=d+16|0;c[f>>2]=a;c[g>>2]=c[(c[f>>2]|0)+104>>2];c[h>>2]=c[(c[g>>2]|0)+28>>2];c[j>>2]=c[(c[f>>2]|0)+676>>2];a=yd[c[(c[f>>2]|0)+508>>2]&31](c[f>>2]|0,1735811442,c[g>>2]|0,d+8|0)|0;c[k>>2]=a;if((a|0)!=0){q=c[k>>2]|0;i=d;return q|0}c[n>>2]=vp(c[g>>2]|0)|0;a=Gp(c[g>>2]|0,96688,p)|0;c[k>>2]=a;if((a|0)!=0){q=c[k>>2]|0;i=d;return q|0}c[(c[j>>2]|0)+24>>2]=e[p+6>>1]|0;c[(c[j>>2]|0)+32>>2]=e[p+12>>1]|0;c[o>>2]=(c[n>>2]|0)+(c[p+16>>2]|0);if((c[p>>2]|0)==65536?(e[p+4>>1]|0|0)==(c[c[(c[j>>2]|0)+8>>2]>>2]&65535|0):0){a=Yn(c[h>>2]|0,4,0,(c[(c[j>>2]|0)+32>>2]|0)+1|0,0,k)|0;c[(c[j>>2]|0)+36>>2]=a;if((c[k>>2]|0)!=0){q=c[k>>2]|0;i=d;return q|0}a=c[g>>2]|0;f=(c[(c[j>>2]|0)+32>>2]|0)+1|0;if((b[p+14>>1]&1|0)!=0){r=yp(a,f<<2)|0;c[k>>2]=r;if((r|0)!=0){q=c[k>>2]|0;i=d;return q|0}c[l>>2]=0;while(1){if(!((c[l>>2]|0)>>>0<=(c[(c[j>>2]|0)+32>>2]|0)>>>0)){break}r=c[o>>2]|0;s=r+(Ep(c[g>>2]|0)|0)|0;c[(c[(c[j>>2]|0)+36>>2]|0)+(c[l>>2]<<2)>>2]=s;c[l>>2]=(c[l>>2]|0)+1}Bp(c[g>>2]|0)}else{s=yp(a,f<<1)|0;c[k>>2]=s;if((s|0)!=0){q=c[k>>2]|0;i=d;return q|0}c[l>>2]=0;while(1){if(!((c[l>>2]|0)>>>0<=(c[(c[j>>2]|0)+32>>2]|0)>>>0)){break}s=c[o>>2]|0;f=s+(((Dp(c[g>>2]|0)|0)&65535)<<1)|0;c[(c[(c[j>>2]|0)+36>>2]|0)+(c[l>>2]<<2)>>2]=f;c[l>>2]=(c[l>>2]|0)+1}Bp(c[g>>2]|0)}if((c[(c[j>>2]|0)+24>>2]|0)==0){q=c[k>>2]|0;i=d;return q|0}o=Yn(c[h>>2]|0,4,0,aa(e[p+4>>1]|0,c[(c[j>>2]|0)+24>>2]|0)|0,0,k)|0;c[(c[j>>2]|0)+28>>2]=o;if((c[k>>2]|0)!=0){q=c[k>>2]|0;i=d;return q|0}o=qp(c[g>>2]|0,(c[n>>2]|0)+(c[p+8>>2]|0)|0)|0;c[k>>2]=o;if((o|0)!=0){q=c[k>>2]|0;i=d;return q|0}o=yp(c[g>>2]|0,(aa(c[(c[j>>2]|0)+24>>2]|0,e[p+4>>1]|0)|0)<<1)|0;c[k>>2]=o;if((o|0)!=0){q=c[k>>2]|0;i=d;return q|0}c[l>>2]=0;while(1){if(!((c[l>>2]|0)>>>0<(c[(c[j>>2]|0)+24>>2]|0)>>>0)){break}c[m>>2]=0;while(1){if(!((c[m>>2]|0)>>>0<(e[p+4>>1]|0)>>>0)){break}o=(Dp(c[g>>2]|0)|0)<<16>>16<<2;n=aa(c[l>>2]|0,e[p+4>>1]|0)|0;c[(c[(c[j>>2]|0)+28>>2]|0)+(n+(c[m>>2]|0)<<2)>>2]=o;c[m>>2]=(c[m>>2]|0)+1}c[l>>2]=(c[l>>2]|0)+1}Bp(c[g>>2]|0);q=c[k>>2]|0;i=d;return q|0}c[k>>2]=8;q=c[k>>2]|0;i=d;return q|0}function ry(d,e,f,g){d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;h=i;i=i+208|0;j=h+32|0;k=h+188|0;l=h+184|0;m=h+180|0;n=h+176|0;o=h+44|0;p=h+40|0;q=h+36|0;r=h+28|0;s=h+24|0;t=h+20|0;u=h+16|0;v=h+12|0;w=h+8|0;x=h+4|0;y=h;z=h+192|0;c[k>>2]=d;c[l>>2]=e;c[m>>2]=f;c[n>>2]=g;c[o>>2]=h+48;if((b[(c[l>>2]|0)+2>>1]|0)!=0?(b[c[l>>2]>>1]|0)!=0:0){c[p>>2]=sy(c[o>>2]|0,c[l>>2]|0,c[k>>2]|0,c[m>>2]|0)|0;a:do{if((c[p>>2]|0)==0){c[r>>2]=(c[(c[o>>2]|0)+24>>2]|0)+4;c[s>>2]=(c[(c[o>>2]|0)+24>>2]|0)+208;c[t>>2]=c[(c[r>>2]|0)+196>>2];c[u>>2]=c[(c[s>>2]|0)+196>>2];c[v>>2]=c[t>>2];c[w>>2]=c[u>>2];a[z]=0;c[x>>2]=Nn(c[(c[m>>2]|0)+416>>2]|0,c[u>>2]|0)|0;c[y>>2]=(c[x>>2]|0)+32&-64;if((c[y>>2]|0)!=0?(c[x>>2]|0)!=(c[y>>2]|0):0){a[z]=1;c[u>>2]=In(c[u>>2]|0,c[y>>2]|0,c[x>>2]|0)|0;if((c[y>>2]|0)<(c[x>>2]|0)){c[t>>2]=(c[t>>2]|0)-((c[t>>2]|0)/50|0)}ty(c[(c[o>>2]|0)+24>>2]|0,c[t>>2]|0,c[u>>2]|0,0,0)|0}a[(c[o>>2]|0)+120|0]=1;a[(c[o>>2]|0)+121|0]=1;if((c[n>>2]|0)==2){A=1}else{A=(c[n>>2]|0)==3}a[(c[o>>2]|0)+122|0]=A&1;if((c[n>>2]|0)==2){B=1}else{B=(c[n>>2]|0)==4}a[(c[o>>2]|0)+123|0]=B&1;a[(c[o>>2]|0)+124|0]=(c[n>>2]|0)!=1;c[q>>2]=0;while(1){if((c[q>>2]|0)>=2){break a}uy(c[o>>2]|0,c[q>>2]|0);vy(c[o>>2]|0);wy((c[o>>2]|0)+28+((c[q>>2]|0)*40|0)|0,c[(c[o>>2]|0)+24>>2]|0,c[q>>2]|0,c[o>>2]|0);xy(c[o>>2]|0,c[q>>2]|0);if((c[q>>2]|0)==1){yy((c[m>>2]|0)+412|0,c[o>>2]|0)}zy(c[o>>2]|0,c[q>>2]|0);Ay(c[o>>2]|0,c[q>>2]|0);By(c[o>>2]|0,c[q>>2]|0);Cy(c[o>>2]|0,c[q>>2]|0);if((a[z]|0)!=0){ty(c[(c[o>>2]|0)+24>>2]|0,c[v>>2]|0,c[w>>2]|0,0,0)|0}c[q>>2]=(c[q>>2]|0)+1}}}while(0);Dy(c[o>>2]|0);c[j>>2]=c[p>>2];C=c[j>>2]|0;i=h;return C|0}c[j>>2]=0;C=c[j>>2]|0;i=h;return C|0}function sy(d,e,f,g){d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;h=i;i=i+96|0;j=h+88|0;k=h+84|0;l=h+80|0;m=h+76|0;n=h+72|0;o=h+68|0;p=h+64|0;q=h+60|0;r=h+56|0;s=h+52|0;t=h+48|0;u=h+44|0;v=h+16|0;w=h;x=h+4|0;y=h+8|0;z=h+12|0;A=h+20|0;B=h+24|0;C=h+28|0;D=h+32|0;E=h+36|0;F=h+40|0;c[j>>2]=d;c[k>>2]=e;c[l>>2]=f;c[m>>2]=g;g=(c[j>>2]|0)+0|0;f=g+128|0;do{c[g>>2]=0;g=g+4|0}while((g|0)<(f|0));g=c[c[m>>2]>>2]|0;c[(c[j>>2]|0)+16>>2]=g;c[o>>2]=g;g=Yn(c[o>>2]|0,40,0,b[(c[k>>2]|0)+2>>1]|0,0,n)|0;c[(c[j>>2]|0)+8>>2]=g;if((c[n>>2]|0)!=0){G=c[n>>2]|0;i=h;return G|0}g=Yn(c[o>>2]|0,8,0,b[c[k>>2]>>1]|0,0,n)|0;c[(c[j>>2]|0)+12>>2]=g;if((c[n>>2]|0)!=0){G=c[n>>2]|0;i=h;return G|0}c[c[j>>2]>>2]=b[(c[k>>2]|0)+2>>1]|0;c[(c[j>>2]|0)+4>>2]=b[c[k>>2]>>1]|0;c[p>>2]=0;c[s>>2]=c[(c[j>>2]|0)+8>>2];c[t>>2]=c[(c[j>>2]|0)+12>>2];c[r>>2]=0;while(1){if(!((c[r>>2]|0)>>>0<(c[(c[j>>2]|0)+4>>2]|0)>>>0)){break}c[q>>2]=(b[(c[(c[k>>2]|0)+12>>2]|0)+(c[r>>2]<<1)>>1]|0)+1;c[u>>2]=(c[q>>2]|0)-(c[p>>2]|0);c[c[t>>2]>>2]=(c[s>>2]|0)+((c[p>>2]|0)*40|0);c[(c[t>>2]|0)+4>>2]=c[u>>2];if((c[u>>2]|0)>0){c[v>>2]=(c[s>>2]|0)+((c[p>>2]|0)*40|0);c[c[v>>2]>>2]=(c[s>>2]|0)+((c[q>>2]|0)*40|0)+ -40;c[(c[v>>2]|0)+8>>2]=c[t>>2];while(1){if((c[u>>2]|0)<=1){break}c[(c[v>>2]|0)+4>>2]=(c[v>>2]|0)+40;c[(c[v>>2]|0)+40>>2]=c[v>>2];c[v>>2]=(c[v>>2]|0)+40;c[(c[v>>2]|0)+8>>2]=c[t>>2];c[u>>2]=(c[u>>2]|0)+ -1}c[(c[v>>2]|0)+4>>2]=(c[s>>2]|0)+((c[p>>2]|0)*40|0)}c[t>>2]=(c[t>>2]|0)+8;c[p>>2]=c[q>>2];c[r>>2]=(c[r>>2]|0)+1}c[w>>2]=c[(c[j>>2]|0)+8>>2];c[x>>2]=c[w>>2];c[y>>2]=c[(c[k>>2]|0)+4>>2];c[z>>2]=0;while(1){if(!((c[z>>2]|0)>>>0<(c[c[j>>2]>>2]|0)>>>0)){break}c[A>>2]=((c[c[x>>2]>>2]|0)-(c[w>>2]|0)|0)/40|0;c[B>>2]=((c[(c[x>>2]|0)+4>>2]|0)-(c[w>>2]|0)|0)/40|0;if((a[(c[(c[k>>2]|0)+8>>2]|0)+(c[z>>2]|0)|0]&1|0)==0){c[(c[x>>2]|0)+12>>2]=1}c[C>>2]=(c[(c[y>>2]|0)+(c[z>>2]<<3)>>2]|0)-(c[(c[y>>2]|0)+(c[A>>2]<<3)>>2]|0);c[D>>2]=(c[(c[y>>2]|0)+(c[z>>2]<<3)+4>>2]|0)-(c[(c[y>>2]|0)+(c[A>>2]<<3)+4>>2]|0);r=(Kz(c[C>>2]|0,c[D>>2]|0)|0)&255;a[(c[x>>2]|0)+20|0]=r;c[E>>2]=(c[(c[y>>2]|0)+(c[B>>2]<<3)>>2]|0)-(c[(c[y>>2]|0)+(c[z>>2]<<3)>>2]|0);c[F>>2]=(c[(c[y>>2]|0)+(c[B>>2]<<3)+4>>2]|0)-(c[(c[y>>2]|0)+(c[z>>2]<<3)+4>>2]|0);r=(Kz(c[E>>2]|0,c[F>>2]|0)|0)&255;a[(c[x>>2]|0)+21|0]=r;r=c[x>>2]|0;do{if((c[(c[x>>2]|0)+12>>2]&1|0)==0){if((a[r+20|0]|0)==(a[(c[x>>2]|0)+21|0]|0)){if((a[(c[x>>2]|0)+21|0]|0)==4?(Qn(c[C>>2]|0,c[D>>2]|0,c[E>>2]|0,c[F>>2]|0)|0)==0:0){break}q=(c[x>>2]|0)+12|0;c[q>>2]=c[q>>2]|2}}else{q=r+12|0;c[q>>2]=c[q>>2]|2}}while(0);c[z>>2]=(c[z>>2]|0)+1;c[x>>2]=(c[x>>2]|0)+40}c[(c[j>>2]|0)+20>>2]=c[k>>2];c[(c[j>>2]|0)+24>>2]=c[m>>2];uy(c[j>>2]|0,0);Lz(c[j>>2]|0);c[n>>2]=Mz((c[j>>2]|0)+28|0,(c[l>>2]|0)+16|0,(c[l>>2]|0)+28|0,(c[l>>2]|0)+40|0,c[o>>2]|0)|0;if((c[n>>2]|0)!=0){G=c[n>>2]|0;i=h;return G|0}c[n>>2]=Mz((c[j>>2]|0)+68|0,(c[l>>2]|0)+52|0,(c[l>>2]|0)+64|0,(c[l>>2]|0)+76|0,c[o>>2]|0)|0;G=c[n>>2]|0;i=h;return G|0}function ty(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+32|0;h=g+20|0;j=g;k=g+4|0;l=g+8|0;m=g+12|0;n=g+16|0;c[h>>2]=a;c[j>>2]=b;c[k>>2]=d;c[l>>2]=e;c[m>>2]=f;c[n>>2]=(c[h>>2]|0)+4;if(!((c[j>>2]|0)==(c[(c[n>>2]|0)+196>>2]|0)?(c[l>>2]|0)==(c[(c[n>>2]|0)+200>>2]|0):0)){c[(c[n>>2]|0)+196>>2]=c[j>>2];c[(c[n>>2]|0)+200>>2]=c[l>>2];Iz(c[h>>2]|0,0)}c[n>>2]=(c[h>>2]|0)+208;if((c[k>>2]|0)==(c[(c[n>>2]|0)+196>>2]|0)?(c[m>>2]|0)==(c[(c[n>>2]|0)+200>>2]|0):0){i=g;return 0}c[(c[n>>2]|0)+196>>2]=c[k>>2];c[(c[n>>2]|0)+200>>2]=c[m>>2];Iz(c[h>>2]|0,1);Jz((c[h>>2]|0)+412|0,c[k>>2]|0,c[m>>2]|0);i=g;return 0}function uy(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+32|0;e=d+16|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=c[(c[(c[e>>2]|0)+20>>2]|0)+4>>2];c[h>>2]=c[(c[e>>2]|0)+8>>2];c[j>>2]=c[c[e>>2]>>2];while(1){if(!((c[j>>2]|0)>>>0>0)){break}c[(c[h>>2]|0)+16>>2]=0;c[(c[h>>2]|0)+24>>2]=0;e=c[g>>2]|0;if((c[f>>2]|0)==0){c[(c[h>>2]|0)+28>>2]=c[e>>2];c[(c[h>>2]|0)+32>>2]=c[(c[g>>2]|0)+4>>2]}else{c[(c[h>>2]|0)+28>>2]=c[e+4>>2];c[(c[h>>2]|0)+32>>2]=c[c[g>>2]>>2]}c[j>>2]=(c[j>>2]|0)+ -1;c[h>>2]=(c[h>>2]|0)+40;c[g>>2]=(c[g>>2]|0)+8}i=d;return}function vy(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;b=i;i=i+48|0;d=b+32|0;e=b+28|0;f=b+24|0;g=b+20|0;h=b+16|0;j=b+8|0;k=b+4|0;l=b;m=b+12|0;c[d>>2]=a;c[e>>2]=0;a:while(1){if(!((c[e>>2]|0)>>>0<(c[(c[d>>2]|0)+4>>2]|0)>>>0)){n=17;break}c[f>>2]=c[(c[(c[d>>2]|0)+12>>2]|0)+(c[e>>2]<<3)>>2];b:do{if((c[(c[(c[d>>2]|0)+12>>2]|0)+(c[e>>2]<<3)+4>>2]|0)!=0){c[g>>2]=c[f>>2];c[h>>2]=c[g>>2];do{c[h>>2]=c[c[h>>2]>>2];if((c[h>>2]|0)==(c[f>>2]|0)){n=30;break a}}while((c[(c[h>>2]|0)+28>>2]|0)==(c[(c[g>>2]|0)+28>>2]|0));a=c[(c[h>>2]|0)+4>>2]|0;c[g>>2]=a;c[f>>2]=a;while(1){c[j>>2]=c[g>>2];do{c[j>>2]=c[(c[j>>2]|0)+4>>2];if((c[j>>2]|0)==(c[f>>2]|0)){break b}}while((c[(c[j>>2]|0)+28>>2]|0)==(c[(c[g>>2]|0)+28>>2]|0));a=c[(c[j>>2]|0)+28>>2]|0;o=c[(c[g>>2]|0)+28>>2]|0;if((c[(c[h>>2]|0)+28>>2]|0)<(c[(c[g>>2]|0)+28>>2]|0)){if((a|0)<(o|0)){n=14}}else{if((a|0)>(o|0)){n=14}}if((n|0)==14){while(1){n=0;o=(c[g>>2]|0)+16|0;c[o>>2]=c[o>>2]|64;c[g>>2]=c[(c[g>>2]|0)+4>>2];if((c[g>>2]|0)!=(c[j>>2]|0)){n=14}else{break}}}c[h>>2]=c[c[j>>2]>>2];c[g>>2]=c[j>>2]}}}while(0);c[e>>2]=(c[e>>2]|0)+1}if((n|0)==17){c[e>>2]=0}c:while(1){if((n|0)==30){n=0;c[e>>2]=(c[e>>2]|0)+1}if(!((c[e>>2]|0)>>>0<(c[c[d>>2]>>2]|0)>>>0)){break}c[k>>2]=(c[(c[d>>2]|0)+8>>2]|0)+((c[e>>2]|0)*40|0);c[l>>2]=c[k>>2];c[m>>2]=c[k>>2];if((c[(c[k>>2]|0)+16>>2]&64|0)!=0){while(1){c[l>>2]=c[c[l>>2]>>2];if((c[l>>2]|0)==(c[k>>2]|0)){n=30;continue c}if((c[(c[l>>2]|0)+32>>2]|0)!=(c[(c[k>>2]|0)+32>>2]|0)){break}}while(1){c[m>>2]=c[(c[m>>2]|0)+4>>2];if((c[m>>2]|0)==(c[k>>2]|0)){n=30;continue c}if((c[(c[m>>2]|0)+32>>2]|0)!=(c[(c[k>>2]|0)+32>>2]|0)){break}}}if((c[(c[l>>2]|0)+32>>2]|0)<(c[(c[k>>2]|0)+32>>2]|0)?(c[(c[m>>2]|0)+32>>2]|0)>(c[(c[k>>2]|0)+32>>2]|0):0){j=(c[k>>2]|0)+16|0;c[j>>2]=c[j>>2]|128;n=30;continue}if((c[(c[l>>2]|0)+32>>2]|0)<=(c[(c[k>>2]|0)+32>>2]|0)){n=30;continue}if((c[(c[m>>2]|0)+32>>2]|0)>=(c[(c[k>>2]|0)+32>>2]|0)){n=30;continue}j=(c[k>>2]|0)+16|0;c[j>>2]=c[j>>2]|256;n=30}i=b;return}function wy(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+32|0;g=f+20|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;m=f+16|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;c[l>>2]=c[(c[g>>2]|0)+8>>2];c[m>>2]=c[c[g>>2]>>2];while(1){if(!((c[m>>2]|0)>>>0>0)){break}Ez(c[l>>2]|0,c[h>>2]|0,c[j>>2]|0,c[k>>2]|0);c[m>>2]=(c[m>>2]|0)+ -1;c[l>>2]=(c[l>>2]|0)+28}i=f;return}function xy(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+80|0;e=d+64|0;f=d+60|0;g=d+56|0;h=d+52|0;j=d+48|0;k=d+44|0;l=d+40|0;m=d+36|0;n=d+32|0;o=d+24|0;p=d+20|0;q=d+16|0;r=d+12|0;s=d+8|0;t=d+4|0;u=d;v=d+28|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=(c[e>>2]|0)+28+((c[f>>2]|0)*40|0);c[h>>2]=c[(c[(c[g>>2]|0)+32>>2]|0)+8>>2];c[j>>2]=c[c[(c[g>>2]|0)+32>>2]>>2];c[k>>2]=0;c[l>>2]=(c[f>>2]|0)==0?1:2;c[m>>2]=(c[(c[e>>2]|0)+24>>2]|0)+4+((c[f>>2]|0)*204|0);c[n>>2]=c[(c[m>>2]|0)+196>>2];m=On(32,c[n>>2]|0)|0;c[o>>2]=m;c[o>>2]=(c[o>>2]|0)>30?30:m;a:do{if((c[j>>2]|0)>>>0>1?(c[c[e>>2]>>2]|0)>>>0>0:0){if((c[(c[h>>2]|0)+12>>2]|0)>>>0>(c[c[e>>2]>>2]|0)>>>0){w=c[c[e>>2]>>2]|0}else{w=c[(c[h>>2]|0)+12>>2]|0}c[k>>2]=w;c[h>>2]=(c[h>>2]|0)+16;while(1){if(!((c[j>>2]|0)>>>0>1)){break a}if((c[(c[h>>2]|0)+12>>2]|0)>>>0>(c[c[e>>2]>>2]|0)>>>0){x=c[c[e>>2]>>2]|0}else{x=c[(c[h>>2]|0)+12>>2]|0}c[p>>2]=x;c[q>>2]=(c[p>>2]|0)-(c[k>>2]|0);if((c[q>>2]|0)>0){c[r>>2]=(c[(c[e>>2]|0)+8>>2]|0)+((c[k>>2]|0)*40|0);Bz(c[g>>2]|0,c[h>>2]|0);Cz(c[g>>2]|0,c[r>>2]|0,c[q>>2]|0,c[o>>2]|0,c[l>>2]|0)}c[k>>2]=c[p>>2];c[j>>2]=(c[j>>2]|0)+ -1;c[h>>2]=(c[h>>2]|0)+16}}}while(0);if((c[j>>2]|0)==1){c[s>>2]=c[c[e>>2]>>2];c[t>>2]=c[(c[e>>2]|0)+8>>2];Bz(c[g>>2]|0,c[(c[(c[g>>2]|0)+32>>2]|0)+8>>2]|0);Cz(c[g>>2]|0,c[t>>2]|0,c[s>>2]|0,c[o>>2]|0,c[l>>2]|0)}c[u>>2]=c[c[e>>2]>>2];c[v>>2]=c[(c[e>>2]|0)+8>>2];while(1){if(!((c[u>>2]|0)>>>0>0)){break}if((c[(c[v>>2]|0)+24>>2]|0)!=0?(c[(c[v>>2]|0)+16>>2]&16|0)==0:0){e=(c[v>>2]|0)+16|0;c[e>>2]=c[e>>2]|16}c[u>>2]=(c[u>>2]|0)+ -1;c[v>>2]=(c[v>>2]|0)+40}i=d;return}function yy(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;i=i+48|0;g=f+36|0;h=f+32|0;j=f+28|0;k=f+24|0;l=f+20|0;m=f+16|0;n=f+8|0;o=f+4|0;p=f;q=f+12|0;c[g>>2]=b;c[h>>2]=e;c[l>>2]=c[c[h>>2]>>2];c[n>>2]=c[(c[h>>2]|0)+8>>2];while(1){if(!((c[l>>2]|0)>>>0>0)){break}if(!((((a[(c[n>>2]|0)+20|0]|0)!=2?!((a[(c[n>>2]|0)+20|0]|0)==-2):0)?(a[(c[n>>2]|0)+21|0]|0)!=2:0)?!((a[(c[n>>2]|0)+21|0]|0)==-2):0)){r=7}a:do{if((r|0)==7?(r=0,(c[(c[n>>2]|0)+16>>2]&16|0)==0):0){c[o>>2]=c[(c[n>>2]|0)+28>>2];c[j>>2]=c[g>>2];c[m>>2]=c[c[j>>2]>>2];c[k>>2]=(c[j>>2]|0)+4;while(1){if(!((c[m>>2]|0)>>>0>0)){break}c[p>>2]=(c[o>>2]|0)-(c[(c[k>>2]|0)+12>>2]|0);if((c[p>>2]|0)<(0-(c[(c[g>>2]|0)+2076>>2]|0)|0)){break}do{if((c[o>>2]|0)<=((c[(c[k>>2]|0)+8>>2]|0)+(c[(c[g>>2]|0)+2076>>2]|0)|0)){if((d[(c[g>>2]|0)+2080|0]|0)==0?(c[p>>2]|0)>(c[(c[g>>2]|0)+2072>>2]|0):0){break}c[(c[n>>2]|0)+36>>2]=c[(c[k>>2]|0)+24>>2];h=(c[n>>2]|0)+16|0;c[h>>2]=c[h>>2]|16;h=(c[n>>2]|0)+16|0;c[h>>2]=c[h>>2]|32}}while(0);c[m>>2]=(c[m>>2]|0)+ -1;c[k>>2]=(c[k>>2]|0)+32}c[j>>2]=(c[g>>2]|0)+516;c[m>>2]=c[c[j>>2]>>2];c[k>>2]=(c[j>>2]|0)+4+(c[m>>2]<<5)+ -32;while(1){if(!((c[m>>2]|0)>>>0>0)){break a}c[q>>2]=(c[(c[k>>2]|0)+8>>2]|0)-(c[o>>2]|0);if((c[q>>2]|0)<(0-(c[(c[g>>2]|0)+2076>>2]|0)|0)){break a}do{if((c[o>>2]|0)>=((c[(c[k>>2]|0)+12>>2]|0)-(c[(c[g>>2]|0)+2076>>2]|0)|0)){if((d[(c[g>>2]|0)+2080|0]|0)==0?(c[q>>2]|0)>=(c[(c[g>>2]|0)+2072>>2]|0):0){break}c[(c[n>>2]|0)+36>>2]=c[(c[k>>2]|0)+28>>2];h=(c[n>>2]|0)+16|0;c[h>>2]=c[h>>2]|16;h=(c[n>>2]|0)+16|0;c[h>>2]=c[h>>2]|32}}while(0);c[m>>2]=(c[m>>2]|0)+ -1;c[k>>2]=(c[k>>2]|0)+ -32}}}while(0);c[l>>2]=(c[l>>2]|0)+ -1;c[n>>2]=(c[n>>2]|0)+40}i=f;return}function zy(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;i=i+32|0;e=d+28|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;k=d+16|0;l=d+20|0;m=d+24|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=(c[(c[e>>2]|0)+24>>2]|0)+4+((c[f>>2]|0)*204|0);c[h>>2]=c[(c[g>>2]|0)+196>>2];c[j>>2]=c[c[e>>2]>>2];c[k>>2]=c[(c[e>>2]|0)+8>>2];while(1){if(!((c[j>>2]|0)>>>0>0)){break}c[l>>2]=c[(c[k>>2]|0)+24>>2];if((c[l>>2]|0)!=0){do{if((c[(c[k>>2]|0)+16>>2]&512|0)==0){if((c[(c[k>>2]|0)+16>>2]&1024|0)!=0){c[(c[k>>2]|0)+36>>2]=(c[(c[l>>2]|0)+8>>2]|0)+(c[(c[l>>2]|0)+12>>2]|0);break}c[m>>2]=(c[(c[k>>2]|0)+28>>2]|0)-(c[c[l>>2]>>2]|0);if((c[m>>2]|0)<=0){e=c[(c[l>>2]|0)+8>>2]|0;g=e+(Nn(c[m>>2]|0,c[h>>2]|0)|0)|0;c[(c[k>>2]|0)+36>>2]=g;break}g=c[(c[l>>2]|0)+8>>2]|0;if((c[m>>2]|0)>=(c[(c[l>>2]|0)+4>>2]|0)){e=g+(c[(c[l>>2]|0)+12>>2]|0)|0;f=e+(Nn((c[m>>2]|0)-(c[(c[l>>2]|0)+4>>2]|0)|0,c[h>>2]|0)|0)|0;c[(c[k>>2]|0)+36>>2]=f;break}else{f=g+(In(c[m>>2]|0,c[(c[l>>2]|0)+12>>2]|0,c[(c[l>>2]|0)+4>>2]|0)|0)|0;c[(c[k>>2]|0)+36>>2]=f;break}}else{c[(c[k>>2]|0)+36>>2]=c[(c[l>>2]|0)+8>>2]}}while(0);f=(c[k>>2]|0)+16|0;c[f>>2]=c[f>>2]|32}c[j>>2]=(c[j>>2]|0)+ -1;c[k>>2]=(c[k>>2]|0)+40}i=d;return}function Ay(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+128|0;f=e+124|0;g=e+120|0;h=e+116|0;j=e+112|0;k=e+108|0;l=e+104|0;m=e+40|0;n=e+36|0;o=e+32|0;p=e+24|0;q=e+20|0;r=e+16|0;s=e+12|0;t=e+8|0;u=e+4|0;v=e;w=e+28|0;c[f>>2]=b;c[g>>2]=d;c[h>>2]=(c[(c[f>>2]|0)+24>>2]|0)+4+((c[g>>2]|0)*204|0);c[j>>2]=c[(c[h>>2]|0)+196>>2];c[k>>2]=c[(c[f>>2]|0)+16>>2];c[l>>2]=0;c[n>>2]=0;c[o>>2]=c[(c[f>>2]|0)+8>>2];c[p>>2]=(c[o>>2]|0)+((c[c[f>>2]>>2]|0)*40|0);c[q>>2]=c[o>>2];while(1){if(!((c[q>>2]|0)>>>0<(c[p>>2]|0)>>>0)){break}if((c[(c[q>>2]|0)+16>>2]&16|0)!=0){c[n>>2]=(c[n>>2]|0)+1}c[q>>2]=(c[q>>2]|0)+40}if((c[n>>2]|0)==0){i=e;return}if(!((c[n>>2]|0)>>>0<=16)){c[l>>2]=Yn(c[k>>2]|0,4,0,c[n>>2]|0,0,r)|0;if((c[r>>2]|0)!=0){i=e;return}}else{c[l>>2]=m}c[n>>2]=0;c[q>>2]=c[o>>2];while(1){if(!((c[q>>2]|0)>>>0<(c[p>>2]|0)>>>0)){break}if((c[(c[q>>2]|0)+16>>2]&16|0)!=0){c[s>>2]=(c[l>>2]|0)+(c[n>>2]<<2);while(1){if(!((c[s>>2]|0)>>>0>(c[l>>2]|0)>>>0)){break}if((c[(c[(c[s>>2]|0)+ -4>>2]|0)+28>>2]|0)<=(c[(c[q>>2]|0)+28>>2]|0)){break}c[c[s>>2]>>2]=c[(c[s>>2]|0)+ -4>>2];c[s>>2]=(c[s>>2]|0)+ -4}c[c[s>>2]>>2]=c[q>>2];c[n>>2]=(c[n>>2]|0)+1}c[q>>2]=(c[q>>2]|0)+40}c[q>>2]=c[o>>2];while(1){if(!((c[q>>2]|0)>>>0<(c[p>>2]|0)>>>0)){break}do{if((c[(c[q>>2]|0)+16>>2]&16|0)==0){if((c[(c[q>>2]|0)+12>>2]&2|0)!=0){if((a[(c[q>>2]|0)+20|0]|0)==4){break}if((a[(c[q>>2]|0)+20|0]|0)!=(a[(c[q>>2]|0)+21|0]|0)){break}if((c[(c[q>>2]|0)+16>>2]&64|0)==0?(c[(c[q>>2]|0)+12>>2]&4|0)==0:0){break}o=(c[q>>2]|0)+12|0;c[o>>2]=c[o>>2]&-3}c[v>>2]=0;while(1){if(!((c[v>>2]|0)>>>0<(c[n>>2]|0)>>>0)){break}if((c[(c[(c[l>>2]|0)+(c[v>>2]<<2)>>2]|0)+28>>2]|0)>(c[(c[q>>2]|0)+28>>2]|0)){break}c[v>>2]=(c[v>>2]|0)+1}do{if((c[v>>2]|0)!=0){c[t>>2]=c[(c[l>>2]|0)+((c[v>>2]|0)-1<<2)>>2];c[v>>2]=c[n>>2];while(1){if(!((c[v>>2]|0)>>>0>0)){break}if((c[(c[(c[l>>2]|0)+((c[v>>2]|0)-1<<2)>>2]|0)+28>>2]|0)<(c[(c[q>>2]|0)+28>>2]|0)){break}c[v>>2]=(c[v>>2]|0)+ -1}o=c[v>>2]|0;if((c[v>>2]|0)==(c[n>>2]|0)){c[t>>2]=c[(c[l>>2]|0)+(o-1<<2)>>2];s=c[(c[t>>2]|0)+36>>2]|0;r=s+(Nn((c[(c[q>>2]|0)+28>>2]|0)-(c[(c[t>>2]|0)+28>>2]|0)|0,c[j>>2]|0)|0)|0;c[(c[q>>2]|0)+36>>2]=r;break}c[u>>2]=c[(c[l>>2]|0)+(o<<2)>>2];c[w>>2]=c[(c[q>>2]|0)+28>>2];if((c[w>>2]|0)==(c[(c[t>>2]|0)+28>>2]|0)){c[(c[q>>2]|0)+36>>2]=c[(c[t>>2]|0)+36>>2];break}if((c[w>>2]|0)==(c[(c[u>>2]|0)+28>>2]|0)){c[(c[q>>2]|0)+36>>2]=c[(c[u>>2]|0)+36>>2];break}else{o=c[(c[t>>2]|0)+36>>2]|0;r=o+(In((c[w>>2]|0)-(c[(c[t>>2]|0)+28>>2]|0)|0,(c[(c[u>>2]|0)+36>>2]|0)-(c[(c[t>>2]|0)+36>>2]|0)|0,(c[(c[u>>2]|0)+28>>2]|0)-(c[(c[t>>2]|0)+28>>2]|0)|0)|0)|0;c[(c[q>>2]|0)+36>>2]=r;break}}else{c[u>>2]=c[c[l>>2]>>2];r=c[(c[u>>2]|0)+36>>2]|0;o=r+(Nn((c[(c[q>>2]|0)+28>>2]|0)-(c[(c[u>>2]|0)+28>>2]|0)|0,c[j>>2]|0)|0)|0;c[(c[q>>2]|0)+36>>2]=o}}while(0);o=(c[q>>2]|0)+16|0;c[o>>2]=c[o>>2]|32}}while(0);c[q>>2]=(c[q>>2]|0)+40}if((c[l>>2]|0)==(m|0)){i=e;return}Vn(c[k>>2]|0,c[l>>2]|0);c[l>>2]=0;i=e;return}function By(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;d=i;i=i+80|0;e=d+76|0;f=d+72|0;g=d+68|0;h=d+64|0;j=d+60|0;k=d+56|0;l=d+52|0;m=d+48|0;n=d+44|0;o=d+40|0;p=d+36|0;q=d+12|0;r=d;s=d+4|0;t=d+8|0;u=d+16|0;v=d+20|0;w=d+24|0;x=d+28|0;y=d+32|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=(c[(c[e>>2]|0)+24>>2]|0)+4+((c[f>>2]|0)*204|0);c[h>>2]=c[(c[g>>2]|0)+196>>2];c[j>>2]=c[(c[g>>2]|0)+200>>2];c[k>>2]=c[(c[e>>2]|0)+12>>2];c[l>>2]=c[(c[e>>2]|0)+4>>2];while(1){if(!((c[l>>2]|0)>>>0>0)){break}c[m>>2]=c[c[k>>2]>>2];c[o>>2]=(c[m>>2]|0)+((c[(c[k>>2]|0)+4>>2]|0)*40|0);c[q>>2]=0;c[n>>2]=0;c[p>>2]=c[m>>2];while(1){if(!((c[p>>2]|0)>>>0<(c[o>>2]|0)>>>0)){break}if((c[(c[p>>2]|0)+16>>2]&32|0)!=0){if((c[n>>2]|0)==0){c[n>>2]=c[p>>2]}c[q>>2]=(c[q>>2]|0)+1}c[p>>2]=(c[p>>2]|0)+40}a:do{if((c[q>>2]|0)>>>0<2){if((c[q>>2]|0)==1){e=c[(c[n>>2]|0)+36>>2]|0;c[j>>2]=e-(Nn(c[(c[n>>2]|0)+28>>2]|0,c[h>>2]|0)|0)}c[p>>2]=c[m>>2];while(1){if(!((c[p>>2]|0)>>>0<(c[o>>2]|0)>>>0)){break a}if((c[p>>2]|0)!=(c[n>>2]|0)){e=Nn(c[(c[p>>2]|0)+28>>2]|0,c[h>>2]|0)|0;c[(c[p>>2]|0)+36>>2]=e+(c[j>>2]|0)}c[p>>2]=(c[p>>2]|0)+40}}else{c[m>>2]=c[n>>2];while(1){c[o>>2]=c[(c[n>>2]|0)+4>>2];if((c[o>>2]|0)==(c[m>>2]|0)){break a}if((c[(c[o>>2]|0)+16>>2]&32|0)!=0){c[n>>2]=c[o>>2];continue}do{c[o>>2]=c[(c[o>>2]|0)+4>>2]}while((c[(c[o>>2]|0)+16>>2]&32|0)==0);if((c[(c[n>>2]|0)+28>>2]|0)<=(c[(c[o>>2]|0)+28>>2]|0)){c[r>>2]=c[(c[n>>2]|0)+28>>2];c[t>>2]=c[(c[n>>2]|0)+36>>2];c[s>>2]=(c[(c[o>>2]|0)+28>>2]|0)-(c[r>>2]|0);c[u>>2]=(c[(c[o>>2]|0)+36>>2]|0)-(c[t>>2]|0)}else{c[r>>2]=c[(c[o>>2]|0)+28>>2];c[t>>2]=c[(c[o>>2]|0)+36>>2];c[s>>2]=(c[(c[n>>2]|0)+28>>2]|0)-(c[r>>2]|0);c[u>>2]=(c[(c[n>>2]|0)+36>>2]|0)-(c[t>>2]|0)}c[y>>2]=65536;if((c[s>>2]|0)>0){c[y>>2]=On(c[u>>2]|0,c[s>>2]|0)|0}c[p>>2]=c[(c[n>>2]|0)+4>>2];do{c[v>>2]=c[(c[p>>2]|0)+28>>2];c[w>>2]=(c[v>>2]|0)-(c[r>>2]|0);do{if((c[w>>2]|0)>0){e=c[t>>2]|0;if((c[w>>2]|0)>=(c[s>>2]|0)){g=e+(c[u>>2]|0)|0;c[x>>2]=g+(Nn((c[w>>2]|0)-(c[s>>2]|0)|0,c[h>>2]|0)|0);break}else{c[x>>2]=e+(Nn(c[w>>2]|0,c[y>>2]|0)|0);break}}else{e=c[t>>2]|0;c[x>>2]=e+(Nn(c[w>>2]|0,c[h>>2]|0)|0)}}while(0);c[(c[p>>2]|0)+36>>2]=c[x>>2];c[p>>2]=c[(c[p>>2]|0)+4>>2]}while((c[p>>2]|0)!=(c[o>>2]|0));c[n>>2]=c[o>>2];if((c[n>>2]|0)==(c[m>>2]|0)){break}}}}while(0);c[l>>2]=(c[l>>2]|0)+ -1;c[k>>2]=(c[k>>2]|0)+8}i=d;return}function Cy(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+32|0;f=e+20|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;c[f>>2]=b;c[g>>2]=d;c[j>>2]=c[(c[f>>2]|0)+8>>2];c[k>>2]=c[(c[(c[f>>2]|0)+20>>2]|0)+4>>2];c[l>>2]=c[(c[(c[f>>2]|0)+20>>2]|0)+8>>2];c[h>>2]=0;while(1){if(!((c[h>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0)){break}d=c[(c[j>>2]|0)+36>>2]|0;b=(c[k>>2]|0)+(c[h>>2]<<3)|0;if((c[g>>2]|0)==0){c[b>>2]=d}else{c[b+4>>2]=d}if((c[(c[j>>2]|0)+16>>2]&16|0)!=0){d=(c[l>>2]|0)+(c[h>>2]|0)|0;a[d]=a[d]|(((c[g>>2]|0)==0?32:64)&255)<<24>>24}c[j>>2]=(c[j>>2]|0)+40;c[h>>2]=(c[h>>2]|0)+1}i=e;return}function Dy(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b+4|0;e=b;c[d>>2]=a;c[e>>2]=c[(c[d>>2]|0)+16>>2];Az((c[d>>2]|0)+68|0,c[e>>2]|0);Az((c[d>>2]|0)+28|0,c[e>>2]|0);Vn(c[e>>2]|0,c[(c[d>>2]|0)+8>>2]|0);c[(c[d>>2]|0)+8>>2]=0;Vn(c[e>>2]|0,c[(c[d>>2]|0)+12>>2]|0);c[(c[d>>2]|0)+12>>2]=0;c[c[d>>2]>>2]=0;c[(c[d>>2]|0)+4>>2]=0;c[(c[d>>2]|0)+16>>2]=0;i=b;return}function Ey(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;i=i+16|0;d=b+8|0;e=b;f=b+4|0;c[d>>2]=a;c[e>>2]=c[(c[d>>2]|0)+8>>2];c[f>>2]=(c[d>>2]|0)+12;Ly((c[d>>2]|0)+12|0,c[e>>2]|0)|0;My((c[d>>2]|0)+100|0);Ny((c[d>>2]|0)+112|0);c[(c[d>>2]|0)+112>>2]=c[f>>2];Oy((c[d>>2]|0)+140|0);c[(c[d>>2]|0)+140>>2]=c[f>>2];i=b;return 0}function Fy(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;c[(c[d>>2]|0)+112>>2]=0;c[(c[d>>2]|0)+140>>2]=0;Gy((c[d>>2]|0)+12|0);i=b;return}function Gy(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b+4|0;e=b;c[d>>2]=a;c[e>>2]=c[c[d>>2]>>2];Hy((c[d>>2]|0)+16|0,c[e>>2]|0);Hy((c[d>>2]|0)+52|0,c[e>>2]|0);c[(c[d>>2]|0)+4>>2]=0;c[c[d>>2]>>2]=0;i=b;return}function Hy(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;Iy((c[e>>2]|0)+24|0,c[f>>2]|0);Iy((c[e>>2]|0)+12|0,c[f>>2]|0);Jy(c[e>>2]|0,c[f>>2]|0);i=d;return}function Iy(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d+12|0;f=d;g=d+4|0;h=d+8|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=c[(c[e>>2]|0)+4>>2];c[h>>2]=c[(c[e>>2]|0)+8>>2];while(1){if(!((c[g>>2]|0)>>>0>0)){break}Ky(c[h>>2]|0,c[f>>2]|0);c[g>>2]=(c[g>>2]|0)+ -1;c[h>>2]=(c[h>>2]|0)+16}Vn(c[f>>2]|0,c[(c[e>>2]|0)+8>>2]|0);c[(c[e>>2]|0)+8>>2]=0;c[c[e>>2]>>2]=0;c[(c[e>>2]|0)+4>>2]=0;i=d;return}function Jy(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;Vn(c[f>>2]|0,c[(c[e>>2]|0)+8>>2]|0);c[(c[e>>2]|0)+8>>2]=0;c[c[e>>2]>>2]=0;c[(c[e>>2]|0)+4>>2]=0;i=d;return}function Ky(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;Vn(c[f>>2]|0,c[(c[e>>2]|0)+8>>2]|0);c[(c[e>>2]|0)+8>>2]=0;c[c[e>>2]>>2]=0;c[(c[e>>2]|0)+4>>2]=0;c[(c[e>>2]|0)+12>>2]=0;i=d;return}function Ly(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;b=(c[e>>2]|0)+0|0;a=b+88|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(a|0));c[c[e>>2]>>2]=c[f>>2];i=d;return 0}function My(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;c[c[d>>2]>>2]=49;c[(c[d>>2]|0)+4>>2]=13;c[(c[d>>2]|0)+8>>2]=66;i=b;return}function Ny(b){b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d;c[e>>2]=b;b=(c[e>>2]|0)+0|0;f=b+28|0;do{a[b]=0;b=b+1|0}while((b|0)<(f|0));c[(c[e>>2]|0)+4>>2]=67;c[(c[e>>2]|0)+8>>2]=109;c[(c[e>>2]|0)+12>>2]=26;c[(c[e>>2]|0)+16>>2]=27;c[(c[e>>2]|0)+20>>2]=27;c[(c[e>>2]|0)+24>>2]=20;i=d;return}function Oy(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;a=c[d>>2]|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[a+16>>2]=0;c[a+20>>2]=0;c[a+24>>2]=0;c[(c[d>>2]|0)+4>>2]=68;c[(c[d>>2]|0)+8>>2]=109;c[(c[d>>2]|0)+12>>2]=29;c[(c[d>>2]|0)+16>>2]=30;c[(c[d>>2]|0)+20>>2]=28;c[(c[d>>2]|0)+24>>2]=20;i=b;return}function Py(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;kz(c[d>>2]|0,2);i=b;return}function Qy(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+32|0;e=d+16|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=c[(c[e>>2]|0)+4>>2];if((c[g>>2]|0)!=0){k=c[g>>2]|0;i=d;return k|0}c[h>>2]=c[c[e>>2]>>2];c[j>>2]=(c[e>>2]|0)+16;c[g>>2]=fz(c[j>>2]|0,c[f>>2]|0,c[h>>2]|0)|0;if((c[g>>2]|0)!=0){k=c[g>>2]|0;i=d;return k|0}c[g>>2]=fz((c[j>>2]|0)+36|0,c[f>>2]|0,c[h>>2]|0)|0;k=c[g>>2]|0;i=d;return k|0}function Ry(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+160|0;g=f+156|0;h=f;j=f+4|0;k=f+8|0;l=f+16|0;m=f+144|0;n=f+148|0;o=f+152|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;c[o>>2]=c[j>>2];c[m>>2]=0;while(1){if((c[o>>2]|0)<=0){break}e=c[o>>2]|0;c[j>>2]=e;c[j>>2]=(c[j>>2]|0)>16?16:e;c[n>>2]=0;while(1){if((c[n>>2]|0)>=(c[j>>2]<<1|0)){break}c[m>>2]=(c[m>>2]|0)+(c[(c[k>>2]|0)+(c[n>>2]<<2)>>2]|0);e=(En(c[m>>2]|0)|0)>>16;c[l+(c[n>>2]<<2)>>2]=e;c[n>>2]=(c[n>>2]|0)+1}c[n>>2]=0;while(1){if((c[n>>2]|0)>=(c[j>>2]<<1|0)){break}c[l+((c[n>>2]|0)+1<<2)>>2]=(c[l+((c[n>>2]|0)+1<<2)>>2]|0)-(c[l+(c[n>>2]<<2)>>2]|0);c[n>>2]=(c[n>>2]|0)+2}az(c[g>>2]|0,c[h>>2]|0,c[j>>2]|0,l);c[o>>2]=(c[o>>2]|0)-(c[j>>2]|0)}i=f;return}function Sy(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+48|0;g=f+32|0;h=f+28|0;j=f+24|0;k=f+20|0;l=f+16|0;m=f+8|0;n=f+4|0;o=f;p=f+12|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;if((c[(c[g>>2]|0)+4>>2]|0)!=0){i=f;return}c[m>>2]=(c[g>>2]|0)+16;c[n>>2]=c[c[g>>2]>>2];c[o>>2]=c[c[m>>2]>>2];c[p>>2]=c[(c[m>>2]|0)+36>>2];if((c[j>>2]|0)!=((c[o>>2]|0)+(c[p>>2]|0)|0)){i=f;return}c[l>>2]=Uy(c[m>>2]|0,c[k>>2]|0,c[p>>2]|0,c[o>>2]|0,c[h>>2]|0,c[n>>2]|0)|0;if((c[l>>2]|0)==0?(c[l>>2]=Uy((c[m>>2]|0)+36|0,c[k>>2]|0,0,c[p>>2]|0,c[h>>2]|0,c[n>>2]|0)|0,(c[l>>2]|0)==0):0){i=f;return}c[(c[g>>2]|0)+4>>2]=c[l>>2];i=f;return}function Ty(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+32|0;f=e+28|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;m=e+20|0;n=e+24|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;if((c[(c[f>>2]|0)+4>>2]|0)!=0){i=e;return}c[k>>2]=(c[f>>2]|0)+16;c[l>>2]=c[c[f>>2]>>2];c[m>>2]=c[c[k>>2]>>2];c[n>>2]=c[(c[k>>2]|0)+36>>2];if((c[g>>2]|0)!=((c[m>>2]|0)+(c[n>>2]|0)|0)){i=e;return}c[j>>2]=Uy(c[k>>2]|0,c[h>>2]|0,0,c[m>>2]|0,0,c[l>>2]|0)|0;if((c[j>>2]|0)==0?(c[j>>2]=Uy((c[k>>2]|0)+36|0,c[h>>2]|0,c[m>>2]|0,c[n>>2]|0,0,c[l>>2]|0)|0,(c[j>>2]|0)==0):0){i=e;return}c[(c[f>>2]|0)+4>>2]=c[j>>2];i=e;return}



function Vs(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;i=i+48|0;f=e+36|0;g=e+32|0;h=e+28|0;j=e+24|0;k=e+20|0;l=e+16|0;m=e+8|0;n=e+4|0;o=e;p=e+12|0;c[f>>2]=a;c[g>>2]=b;if(((c[f>>2]|0)+16|0)>>>0>(c[(c[g>>2]|0)+4>>2]|0)>>>0){go(c[g>>2]|0,8)}c[h>>2]=(c[f>>2]|0)+4;c[h>>2]=(c[h>>2]|0)+4;c[j>>2]=(d[(c[h>>2]|0)+ -4|0]|0)<<24|(d[(c[h>>2]|0)+ -4+1|0]|0)<<16|(d[(c[h>>2]|0)+ -4+2|0]|0)<<8|(d[(c[h>>2]|0)+ -4+3|0]|0)<<0;c[h>>2]=(c[f>>2]|0)+12;c[h>>2]=(c[h>>2]|0)+4;c[k>>2]=(d[(c[h>>2]|0)+ -4|0]|0)<<24|(d[(c[h>>2]|0)+ -4+1|0]|0)<<16|(d[(c[h>>2]|0)+ -4+2|0]|0)<<8|(d[(c[h>>2]|0)+ -4+3|0]|0)<<0;if(!(!((c[j>>2]|0)>>>0>((c[(c[g>>2]|0)+4>>2]|0)-(c[f>>2]|0)|0)>>>0)?!((c[j>>2]|0)>>>0<(16+((c[k>>2]|0)*12|0)|0)>>>0):0)){go(c[g>>2]|0,8)}c[p>>2]=0;c[l>>2]=0;while(1){if(!((c[l>>2]|0)>>>0<(c[k>>2]|0)>>>0)){break}c[h>>2]=(c[h>>2]|0)+4;c[m>>2]=(d[(c[h>>2]|0)+ -4|0]|0)<<24|(d[(c[h>>2]|0)+ -4+1|0]|0)<<16|(d[(c[h>>2]|0)+ -4+2|0]|0)<<8|(d[(c[h>>2]|0)+ -4+3|0]|0)<<0;c[h>>2]=(c[h>>2]|0)+4;c[n>>2]=(d[(c[h>>2]|0)+ -4|0]|0)<<24|(d[(c[h>>2]|0)+ -4+1|0]|0)<<16|(d[(c[h>>2]|0)+ -4+2|0]|0)<<8|(d[(c[h>>2]|0)+ -4+3|0]|0)<<0;c[h>>2]=(c[h>>2]|0)+4;c[o>>2]=(d[(c[h>>2]|0)+ -4|0]|0)<<24|(d[(c[h>>2]|0)+ -4+1|0]|0)<<16|(d[(c[h>>2]|0)+ -4+2|0]|0)<<8|(d[(c[h>>2]|0)+ -4+3|0]|0)<<0;if((c[m>>2]|0)>>>0>(c[n>>2]|0)>>>0){go(c[g>>2]|0,8)}if((c[l>>2]|0)>>>0>0?(c[m>>2]|0)>>>0<=(c[p>>2]|0)>>>0:0){go(c[g>>2]|0,8)}if((c[(c[g>>2]|0)+8>>2]|0)>>>0>=1?(c[o>>2]|0)>>>0>=(c[(c[g>>2]|0)+172>>2]|0)>>>0:0){go(c[g>>2]|0,16)}c[p>>2]=c[n>>2];c[l>>2]=(c[l>>2]|0)+1}i=e;return 0}function Ws(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=(c[(c[f>>2]|0)+16>>2]|0)+8;c[(c[g>>2]|0)+4>>2]=13;c[c[g>>2]>>2]=(d[c[h>>2]|0]|0)<<24|(d[(c[h>>2]|0)+1|0]|0)<<16|(d[(c[h>>2]|0)+2|0]|0)<<8|(d[(c[h>>2]|0)+3|0]|0)<<0;i=e;return 0}function Xs(a,b){a=a|0;b=b|0;var e=0,f=0,g=0;e=i;i=i+16|0;f=e+4|0;g=e;c[f>>2]=a;c[g>>2]=b;c[(c[f>>2]|0)+16>>2]=c[g>>2];c[g>>2]=(c[g>>2]|0)+6;c[(c[f>>2]|0)+24>>2]=(d[c[g>>2]|0]|0)<<24|(d[(c[g>>2]|0)+1|0]|0)<<16|(d[(c[g>>2]|0)+2|0]|0)<<8|(d[(c[g>>2]|0)+3|0]|0)<<0;c[(c[f>>2]|0)+28>>2]=0;c[(c[f>>2]|0)+32>>2]=0;i=e;return 0}function Ys(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b+4|0;e=b;c[d>>2]=a;c[e>>2]=c[(c[d>>2]|0)+36>>2];c[(c[d>>2]|0)+28>>2]=0;if((c[e>>2]|0)==0){i=b;return}if((c[(c[d>>2]|0)+32>>2]|0)==0){i=b;return}Vn(c[e>>2]|0,c[(c[d>>2]|0)+32>>2]|0);c[(c[d>>2]|0)+32>>2]=0;i=b;return}function Zs(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;c[e>>2]=c[e>>2];c[f>>2]=c[f>>2];i=d;return 0}function _s(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;c[e>>2]=c[e>>2];c[c[f>>2]>>2]=0;i=d;return 0}function $s(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+32|0;h=g+28|0;j=g;k=g+4|0;l=g+8|0;m=g+12|0;n=g+16|0;o=g+20|0;p=g+24|0;c[j>>2]=a;c[k>>2]=b;c[l>>2]=e;c[m>>2]=f;c[n>>2]=ru((c[(c[j>>2]|0)+16>>2]|0)+6|0,c[m>>2]|0)|0;if((c[n>>2]|0)==0){c[h>>2]=0;q=c[h>>2]|0;i=g;return q|0}c[n>>2]=(c[n>>2]|0)+4;c[o>>2]=(d[(c[n>>2]|0)+ -4|0]|0)<<24|(d[(c[n>>2]|0)+ -4+1|0]|0)<<16|(d[(c[n>>2]|0)+ -4+2|0]|0)<<8|(d[(c[n>>2]|0)+ -4+3|0]|0)<<0;c[p>>2]=(d[c[n>>2]|0]|0)<<24|(d[(c[n>>2]|0)+1|0]|0)<<16|(d[(c[n>>2]|0)+2|0]|0)<<8|(d[(c[n>>2]|0)+3|0]|0)<<0;if((c[o>>2]|0)!=0?(wu((c[(c[j>>2]|0)+16>>2]|0)+(c[o>>2]|0)|0,c[l>>2]|0)|0)!=0:0){c[h>>2]=Ad[c[(c[(c[k>>2]|0)+12>>2]|0)+12>>2]&127](c[k>>2]|0,c[l>>2]|0)|0;q=c[h>>2]|0;i=g;return q|0}if((c[p>>2]|0)!=0){c[h>>2]=xu((c[(c[j>>2]|0)+16>>2]|0)+(c[p>>2]|0)|0,c[l>>2]|0)|0;q=c[h>>2]|0;i=g;return q|0}else{c[h>>2]=0;q=c[h>>2]|0;i=g;return q|0}return 0}function at(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+32|0;g=f+24|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;m=f+16|0;n=f+20|0;c[h>>2]=a;c[j>>2]=b;c[k>>2]=e;c[l>>2]=ru((c[(c[h>>2]|0)+16>>2]|0)+6|0,c[k>>2]|0)|0;if((c[l>>2]|0)==0){c[g>>2]=-1;o=c[g>>2]|0;i=f;return o|0}c[l>>2]=(c[l>>2]|0)+4;c[m>>2]=(d[(c[l>>2]|0)+ -4|0]|0)<<24|(d[(c[l>>2]|0)+ -4+1|0]|0)<<16|(d[(c[l>>2]|0)+ -4+2|0]|0)<<8|(d[(c[l>>2]|0)+ -4+3|0]|0)<<0;c[l>>2]=(c[l>>2]|0)+4;c[n>>2]=(d[(c[l>>2]|0)+ -4|0]|0)<<24|(d[(c[l>>2]|0)+ -4+1|0]|0)<<16|(d[(c[l>>2]|0)+ -4+2|0]|0)<<8|(d[(c[l>>2]|0)+ -4+3|0]|0)<<0;if((c[m>>2]|0)!=0?(wu((c[(c[h>>2]|0)+16>>2]|0)+(c[m>>2]|0)|0,c[j>>2]|0)|0)!=0:0){c[g>>2]=1;o=c[g>>2]|0;i=f;return o|0}if((c[n>>2]|0)!=0?(xu((c[(c[h>>2]|0)+16>>2]|0)+(c[n>>2]|0)|0,c[j>>2]|0)|0)!=0:0){c[g>>2]=0;o=c[g>>2]|0;i=f;return o|0}c[g>>2]=-1;o=c[g>>2]|0;i=f;return o|0}function bt(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+32|0;f=e+28|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;m=e+20|0;n=e+24|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=c[g>>2];c[k>>2]=c[(c[j>>2]|0)+24>>2];c[l>>2]=(c[(c[g>>2]|0)+16>>2]|0)+10;if((vu(c[j>>2]|0,(c[k>>2]|0)+1|0,c[h>>2]|0)|0)!=0){c[f>>2]=0;o=c[f>>2]|0;i=e;return o|0}c[m>>2]=c[(c[j>>2]|0)+32>>2];c[n>>2]=0;while(1){if(!((c[n>>2]|0)>>>0<(c[k>>2]|0)>>>0)){break}c[l>>2]=(c[l>>2]|0)+3;c[(c[m>>2]|0)+(c[n>>2]<<2)>>2]=(d[(c[l>>2]|0)+ -3|0]|0)<<16|(d[(c[l>>2]|0)+ -3+1|0]|0)<<8|(d[(c[l>>2]|0)+ -3+2|0]|0)<<0;c[l>>2]=(c[l>>2]|0)+8;c[n>>2]=(c[n>>2]|0)+1}c[(c[m>>2]|0)+(c[n>>2]<<2)>>2]=0;c[f>>2]=c[m>>2];o=c[f>>2]|0;i=e;return o|0}function ct(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;f=i;i=i+48|0;g=f+40|0;h=f+36|0;j=f+32|0;k=f+28|0;l=f+24|0;m=f+20|0;n=f+12|0;o=f+8|0;p=f+4|0;q=f;r=f+16|0;c[h>>2]=a;c[j>>2]=b;c[k>>2]=e;c[l>>2]=c[h>>2];c[m>>2]=c[(c[l>>2]|0)+24>>2];c[n>>2]=(c[(c[h>>2]|0)+16>>2]|0)+10;if((vu(c[l>>2]|0,(c[m>>2]|0)+1|0,c[j>>2]|0)|0)!=0){c[g>>2]=0;s=c[g>>2]|0;i=f;return s|0}c[o>>2]=c[(c[l>>2]|0)+32>>2];while(1){if(!((c[m>>2]|0)>>>0>0)){break}c[n>>2]=(c[n>>2]|0)+3;c[p>>2]=(d[(c[n>>2]|0)+ -3|0]|0)<<16|(d[(c[n>>2]|0)+ -3+1|0]|0)<<8|(d[(c[n>>2]|0)+ -3+2|0]|0)<<0;c[n>>2]=(c[n>>2]|0)+4;c[q>>2]=(d[(c[n>>2]|0)+ -4|0]|0)<<24|(d[(c[n>>2]|0)+ -4+1|0]|0)<<16|(d[(c[n>>2]|0)+ -4+2|0]|0)<<8|(d[(c[n>>2]|0)+ -4+3|0]|0)<<0;c[n>>2]=(c[n>>2]|0)+4;c[r>>2]=(d[(c[n>>2]|0)+ -4|0]|0)<<24|(d[(c[n>>2]|0)+ -4+1|0]|0)<<16|(d[(c[n>>2]|0)+ -4+2|0]|0)<<8|(d[(c[n>>2]|0)+ -4+3|0]|0)<<0;if((c[q>>2]|0)!=0?(wu((c[(c[h>>2]|0)+16>>2]|0)+(c[q>>2]|0)|0,c[k>>2]|0)|0)!=0:0){t=9}else{t=7}if(((t|0)==7?(t=0,(c[r>>2]|0)!=0):0)?(xu((c[(c[h>>2]|0)+16>>2]|0)+(c[r>>2]|0)|0,c[k>>2]|0)|0)!=0:0){t=9}if((t|0)==9){t=0;c[c[o>>2]>>2]=c[p>>2];c[o>>2]=(c[o>>2]|0)+4}c[m>>2]=(c[m>>2]|0)+ -1}c[c[o>>2]>>2]=0;c[g>>2]=c[(c[l>>2]|0)+32>>2];s=c[g>>2]|0;i=f;return s|0}function dt(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;f=i;i=i+80|0;g=f+72|0;h=f+68|0;j=f+64|0;k=f+60|0;l=f+56|0;m=f+52|0;n=f+48|0;o=f+44|0;p=f+40|0;q=f+36|0;r=f+12|0;s=f;t=f+4|0;u=f+8|0;v=f+16|0;w=f+20|0;x=f+24|0;y=f+28|0;z=f+32|0;c[h>>2]=a;c[j>>2]=b;c[k>>2]=e;c[l>>2]=ru((c[(c[h>>2]|0)+16>>2]|0)+6|0,c[k>>2]|0)|0;if((c[l>>2]|0)==0){c[g>>2]=0;A=c[g>>2]|0;i=f;return A|0}c[l>>2]=(c[l>>2]|0)+4;c[n>>2]=(d[(c[l>>2]|0)+ -4|0]|0)<<24|(d[(c[l>>2]|0)+ -4+1|0]|0)<<16|(d[(c[l>>2]|0)+ -4+2|0]|0)<<8|(d[(c[l>>2]|0)+ -4+3|0]|0)<<0;c[l>>2]=(c[l>>2]|0)+4;c[o>>2]=(d[(c[l>>2]|0)+ -4|0]|0)<<24|(d[(c[l>>2]|0)+ -4+1|0]|0)<<16|(d[(c[l>>2]|0)+ -4+2|0]|0)<<8|(d[(c[l>>2]|0)+ -4+3|0]|0)<<0;if((c[n>>2]|0)==0?(c[o>>2]|0)==0:0){c[g>>2]=0;A=c[g>>2]|0;i=f;return A|0}if((c[n>>2]|0)==0){c[g>>2]=su(c[h>>2]|0,(c[(c[h>>2]|0)+16>>2]|0)+(c[o>>2]|0)|0,c[j>>2]|0)|0;A=c[g>>2]|0;i=f;return A|0}k=c[h>>2]|0;if((c[o>>2]|0)==0){c[g>>2]=tu(k,(c[(c[h>>2]|0)+16>>2]|0)+(c[n>>2]|0)|0,c[j>>2]|0)|0;A=c[g>>2]|0;i=f;return A|0}c[p>>2]=k;c[l>>2]=(c[(c[h>>2]|0)+16>>2]|0)+(c[o>>2]|0);c[v>>2]=(c[(c[h>>2]|0)+16>>2]|0)+(c[n>>2]|0);c[l>>2]=(c[l>>2]|0)+4;c[r>>2]=(d[(c[l>>2]|0)+ -4|0]|0)<<24|(d[(c[l>>2]|0)+ -4+1|0]|0)<<16|(d[(c[l>>2]|0)+ -4+2|0]|0)<<8|(d[(c[l>>2]|0)+ -4+3|0]|0)<<0;c[t>>2]=uu(c[v>>2]|0)|0;c[v>>2]=(c[v>>2]|0)+4;c[q>>2]=(d[(c[v>>2]|0)+ -4|0]|0)<<24|(d[(c[v>>2]|0)+ -4+1|0]|0)<<16|(d[(c[v>>2]|0)+ -4+2|0]|0)<<8|(d[(c[v>>2]|0)+ -4+3|0]|0)<<0;if((c[r>>2]|0)==0){c[g>>2]=tu(c[h>>2]|0,(c[(c[h>>2]|0)+16>>2]|0)+(c[n>>2]|0)|0,c[j>>2]|0)|0;A=c[g>>2]|0;i=f;return A|0}if((c[t>>2]|0)==0){c[g>>2]=su(c[h>>2]|0,(c[(c[h>>2]|0)+16>>2]|0)+(c[o>>2]|0)|0,c[j>>2]|0)|0;A=c[g>>2]|0;i=f;return A|0}if((vu(c[p>>2]|0,(c[t>>2]|0)+(c[r>>2]|0)+1|0,c[j>>2]|0)|0)!=0){c[g>>2]=0;A=c[g>>2]|0;i=f;return A|0}c[z>>2]=c[(c[p>>2]|0)+32>>2];c[v>>2]=(c[v>>2]|0)+3;c[s>>2]=(d[(c[v>>2]|0)+ -3|0]|0)<<16|(d[(c[v>>2]|0)+ -3+1|0]|0)<<8|(d[(c[v>>2]|0)+ -3+2|0]|0)<<0;p=c[v>>2]|0;c[v>>2]=p+1;c[t>>2]=d[p]|0;c[w>>2]=1;c[l>>2]=(c[l>>2]|0)+3;c[u>>2]=(d[(c[l>>2]|0)+ -3|0]|0)<<16|(d[(c[l>>2]|0)+ -3+1|0]|0)<<8|(d[(c[l>>2]|0)+ -3+2|0]|0)<<0;c[l>>2]=(c[l>>2]|0)+2;c[x>>2]=1;c[m>>2]=0;while(1){if(!((c[u>>2]|0)>>>0>((c[s>>2]|0)+(c[t>>2]|0)|0)>>>0)){if((c[u>>2]|0)>>>0<(c[s>>2]|0)>>>0){p=c[u>>2]|0;j=c[m>>2]|0;c[m>>2]=j+1;c[(c[z>>2]|0)+(j<<2)>>2]=p}c[x>>2]=(c[x>>2]|0)+1;if((c[x>>2]|0)>>>0>(c[r>>2]|0)>>>0){break}c[l>>2]=(c[l>>2]|0)+3;c[u>>2]=(d[(c[l>>2]|0)+ -3|0]|0)<<16|(d[(c[l>>2]|0)+ -3+1|0]|0)<<8|(d[(c[l>>2]|0)+ -3+2|0]|0)<<0;c[l>>2]=(c[l>>2]|0)+2;continue}c[y>>2]=0;while(1){if(!((c[y>>2]|0)>>>0<=(c[t>>2]|0)>>>0)){break}p=(c[s>>2]|0)+(c[y>>2]|0)|0;j=c[m>>2]|0;c[m>>2]=j+1;c[(c[z>>2]|0)+(j<<2)>>2]=p;c[y>>2]=(c[y>>2]|0)+1}c[w>>2]=(c[w>>2]|0)+1;if((c[w>>2]|0)>>>0>(c[q>>2]|0)>>>0){break}c[v>>2]=(c[v>>2]|0)+3;c[s>>2]=(d[(c[v>>2]|0)+ -3|0]|0)<<16|(d[(c[v>>2]|0)+ -3+1|0]|0)<<8|(d[(c[v>>2]|0)+ -3+2|0]|0)<<0;p=c[v>>2]|0;c[v>>2]=p+1;c[t>>2]=d[p]|0}a:do{if(!((c[x>>2]|0)>>>0<=(c[r>>2]|0)>>>0)){if((c[w>>2]|0)>>>0<=(c[q>>2]|0)>>>0){c[y>>2]=0;while(1){if(!((c[y>>2]|0)>>>0<=(c[t>>2]|0)>>>0)){break}p=(c[s>>2]|0)+(c[y>>2]|0)|0;j=c[m>>2]|0;c[m>>2]=j+1;c[(c[z>>2]|0)+(j<<2)>>2]=p;c[y>>2]=(c[y>>2]|0)+1}while(1){if(!((c[w>>2]|0)>>>0<(c[q>>2]|0)>>>0)){break a}c[v>>2]=(c[v>>2]|0)+3;c[s>>2]=(d[(c[v>>2]|0)+ -3|0]|0)<<16|(d[(c[v>>2]|0)+ -3+1|0]|0)<<8|(d[(c[v>>2]|0)+ -3+2|0]|0)<<0;p=c[v>>2]|0;c[v>>2]=p+1;c[t>>2]=d[p]|0;c[y>>2]=0;while(1){if(!((c[y>>2]|0)>>>0<=(c[t>>2]|0)>>>0)){break}p=(c[s>>2]|0)+(c[y>>2]|0)|0;j=c[m>>2]|0;c[m>>2]=j+1;c[(c[z>>2]|0)+(j<<2)>>2]=p;c[y>>2]=(c[y>>2]|0)+1}c[w>>2]=(c[w>>2]|0)+1}}}else{p=c[u>>2]|0;j=c[m>>2]|0;c[m>>2]=j+1;c[(c[z>>2]|0)+(j<<2)>>2]=p;while(1){if(!((c[x>>2]|0)>>>0<(c[r>>2]|0)>>>0)){break a}c[l>>2]=(c[l>>2]|0)+3;p=(d[(c[l>>2]|0)+ -3|0]|0)<<16|(d[(c[l>>2]|0)+ -3+1|0]|0)<<8|(d[(c[l>>2]|0)+ -3+2|0]|0)<<0;j=c[m>>2]|0;c[m>>2]=j+1;c[(c[z>>2]|0)+(j<<2)>>2]=p;c[l>>2]=(c[l>>2]|0)+2;c[x>>2]=(c[x>>2]|0)+1}}}while(0);c[(c[z>>2]|0)+(c[m>>2]<<2)>>2]=0;c[g>>2]=c[z>>2];A=c[g>>2]|0;i=f;return A|0}function et(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;f=i;i=i+96|0;g=f+84|0;h=f+80|0;j=f+76|0;k=f+72|0;l=f+68|0;m=f+64|0;n=f+60|0;o=f+56|0;p=f+52|0;q=f+48|0;r=f+44|0;s=f+40|0;t=f+12|0;u=f;v=f+4|0;w=f+8|0;x=f+16|0;y=f+20|0;z=f+24|0;A=f+28|0;B=f+32|0;C=f+36|0;c[g>>2]=b;c[h>>2]=e;if(((c[g>>2]|0)+10|0)>>>0>(c[(c[h>>2]|0)+4>>2]|0)>>>0){go(c[h>>2]|0,8)}c[j>>2]=(c[g>>2]|0)+2;c[j>>2]=(c[j>>2]|0)+4;c[k>>2]=(d[(c[j>>2]|0)+ -4|0]|0)<<24|(d[(c[j>>2]|0)+ -4+1|0]|0)<<16|(d[(c[j>>2]|0)+ -4+2|0]|0)<<8|(d[(c[j>>2]|0)+ -4+3|0]|0)<<0;c[j>>2]=(c[j>>2]|0)+4;c[l>>2]=(d[(c[j>>2]|0)+ -4|0]|0)<<24|(d[(c[j>>2]|0)+ -4+1|0]|0)<<16|(d[(c[j>>2]|0)+ -4+2|0]|0)<<8|(d[(c[j>>2]|0)+ -4+3|0]|0)<<0;if(!(!((c[k>>2]|0)>>>0>((c[(c[h>>2]|0)+4>>2]|0)-(c[g>>2]|0)|0)>>>0)?!((c[k>>2]|0)>>>0<(10+((c[l>>2]|0)*11|0)|0)>>>0):0)){go(c[h>>2]|0,8)}c[n>>2]=1;c[m>>2]=0;while(1){if(!((c[m>>2]|0)>>>0<(c[l>>2]|0)>>>0)){break}c[j>>2]=(c[j>>2]|0)+3;c[o>>2]=(d[(c[j>>2]|0)+ -3|0]|0)<<16|(d[(c[j>>2]|0)+ -3+1|0]|0)<<8|(d[(c[j>>2]|0)+ -3+2|0]|0)<<0;c[j>>2]=(c[j>>2]|0)+4;c[p>>2]=(d[(c[j>>2]|0)+ -4|0]|0)<<24|(d[(c[j>>2]|0)+ -4+1|0]|0)<<16|(d[(c[j>>2]|0)+ -4+2|0]|0)<<8|(d[(c[j>>2]|0)+ -4+3|0]|0)<<0;c[j>>2]=(c[j>>2]|0)+4;c[q>>2]=(d[(c[j>>2]|0)+ -4|0]|0)<<24|(d[(c[j>>2]|0)+ -4+1|0]|0)<<16|(d[(c[j>>2]|0)+ -4+2|0]|0)<<8|(d[(c[j>>2]|0)+ -4+3|0]|0)<<0;if(!(!((c[p>>2]|0)>>>0>=(c[k>>2]|0)>>>0)?!((c[q>>2]|0)>>>0>=(c[k>>2]|0)>>>0):0)){go(c[h>>2]|0,8)}if((c[o>>2]|0)>>>0<(c[n>>2]|0)>>>0){go(c[h>>2]|0,8)}c[n>>2]=(c[o>>2]|0)+1;a:do{if((c[p>>2]|0)!=0){c[r>>2]=(c[g>>2]|0)+(c[p>>2]|0);c[r>>2]=(c[r>>2]|0)+4;c[s>>2]=(d[(c[r>>2]|0)+ -4|0]|0)<<24|(d[(c[r>>2]|0)+ -4+1|0]|0)<<16|(d[(c[r>>2]|0)+ -4+2|0]|0)<<8|(d[(c[r>>2]|0)+ -4+3|0]|0)<<0;c[u>>2]=0;if(((c[r>>2]|0)+(c[s>>2]<<2)|0)>>>0>(c[(c[h>>2]|0)+4>>2]|0)>>>0){go(c[h>>2]|0,8)}c[t>>2]=0;while(1){if(!((c[t>>2]|0)>>>0<(c[s>>2]|0)>>>0)){break a}c[r>>2]=(c[r>>2]|0)+3;c[v>>2]=(d[(c[r>>2]|0)+ -3|0]|0)<<16|(d[(c[r>>2]|0)+ -3+1|0]|0)<<8|(d[(c[r>>2]|0)+ -3+2|0]|0)<<0;e=c[r>>2]|0;c[r>>2]=e+1;c[w>>2]=d[e]|0;if(((c[v>>2]|0)+(c[w>>2]|0)|0)>>>0>=1114112){go(c[h>>2]|0,8)}if((c[v>>2]|0)>>>0<(c[u>>2]|0)>>>0){go(c[h>>2]|0,8)}c[u>>2]=(c[v>>2]|0)+(c[w>>2]|0)+1;c[t>>2]=(c[t>>2]|0)+1}}}while(0);b:do{if((c[q>>2]|0)!=0){c[x>>2]=(c[g>>2]|0)+(c[q>>2]|0);c[x>>2]=(c[x>>2]|0)+4;c[y>>2]=(d[(c[x>>2]|0)+ -4|0]|0)<<24|(d[(c[x>>2]|0)+ -4+1|0]|0)<<16|(d[(c[x>>2]|0)+ -4+2|0]|0)<<8|(d[(c[x>>2]|0)+ -4+3|0]|0)<<0;c[A>>2]=0;if(c[y>>2]<<2>>>0>((c[(c[h>>2]|0)+4>>2]|0)-(c[x>>2]|0)|0)>>>0){go(c[h>>2]|0,8)}c[z>>2]=0;while(1){if(!((c[z>>2]|0)>>>0<(c[y>>2]|0)>>>0)){break b}c[x>>2]=(c[x>>2]|0)+3;c[B>>2]=(d[(c[x>>2]|0)+ -3|0]|0)<<16|(d[(c[x>>2]|0)+ -3+1|0]|0)<<8|(d[(c[x>>2]|0)+ -3+2|0]|0)<<0;c[x>>2]=(c[x>>2]|0)+2;c[C>>2]=((a[(c[x>>2]|0)+ -2|0]&255)<<8|(a[(c[x>>2]|0)+ -2+1|0]&255)<<0)&65535;if((c[B>>2]|0)>>>0>=1114112){go(c[h>>2]|0,8)}if((c[B>>2]|0)>>>0<(c[A>>2]|0)>>>0){go(c[h>>2]|0,8)}c[A>>2]=(c[B>>2]|0)+1;if((c[(c[h>>2]|0)+8>>2]|0)>>>0>=1?(c[C>>2]|0)>>>0>=(c[(c[h>>2]|0)+172>>2]|0)>>>0:0){go(c[h>>2]|0,16)}c[z>>2]=(c[z>>2]|0)+1}}}while(0);c[m>>2]=(c[m>>2]|0)+1}i=f;return 0}function ft(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;c[e>>2]=c[e>>2];c[(c[f>>2]|0)+4>>2]=14;c[c[f>>2]>>2]=-1;i=d;return 0}function gt(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;c[e>>2]=c[e>>2];e=eo(93560,c[f>>2]|0)|0;i=d;return e|0}function ht(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d+12|0;f=d;g=d+4|0;h=d+8|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=c[e>>2];c[h>>2]=c[(c[g>>2]|0)+12>>2];g=Ad[c[(c[h>>2]|0)+48>>2]&127](c[e>>2]|0,c[f>>2]|0)|0;i=d;return g|0}function it(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+32|0;f=e+28|0;g=e;h=e+4|0;j=e+8|0;k=e+16|0;l=e+24|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[l>>2]=jt(c[f>>2]|0,93736,k)|0;if((c[l>>2]|0)!=0){m=c[l>>2]|0;i=e;return m|0}c[l>>2]=jt(c[f>>2]|0,93760,j)|0;if((c[l>>2]|0)!=0){m=c[l>>2]|0;i=e;return m|0}if((c[k>>2]|0)==1?(c[j>>2]|0)==1:0){c[c[g>>2]>>2]=c[j+4>>2];c[c[h>>2]>>2]=c[k+4>>2];m=c[l>>2]|0;i=e;return m|0}c[l>>2]=6;m=c[l>>2]|0;i=e;return m|0}function jt(b,f,g){b=b|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;h=i;i=i+64|0;j=h+56|0;k=h+52|0;l=h+48|0;m=h+44|0;n=h+40|0;o=h+36|0;p=h+32|0;q=h+28|0;r=h+20|0;s=h+16|0;t=h+12|0;u=h+8|0;v=h+4|0;w=h;x=h+24|0;c[j>>2]=b;c[k>>2]=f;c[l>>2]=g;c[m>>2]=(c[j>>2]|0)+760;c[n>>2]=c[(c[j>>2]|0)+88>>2];c[o>>2]=0;c[c[l>>2]>>2]=0;if((d[(c[m>>2]|0)+20|0]|0|0)==0?(c[o>>2]=kt(c[j>>2]|0,c[(c[j>>2]|0)+104>>2]|0)|0,(c[o>>2]|0)!=0):0){y=c[o>>2]|0;i=h;return y|0}c[q>>2]=c[(c[m>>2]|0)+16>>2];c[p>>2]=(c[c[m>>2]>>2]|0)+8;c[r>>2]=(c[p>>2]|0)+(c[q>>2]<<2);c[o>>2]=6;if((c[n>>2]|0)==0){y=c[o>>2]|0;i=h;return y|0}if((c[k>>2]|0)==0){y=c[o>>2]|0;i=h;return y|0}c[s>>2]=gA(c[k>>2]|0)|0;if((c[s>>2]|0)==0){y=c[o>>2]|0;i=h;return y|0}while(1){if(!((c[q>>2]|0)>>>0>0)){z=22;break}c[p>>2]=(c[p>>2]|0)+2;c[t>>2]=((a[(c[p>>2]|0)+ -2|0]&255)<<8|(a[(c[p>>2]|0)+ -2+1|0]&255)<<0)&65535;c[p>>2]=(c[p>>2]|0)+2;c[u>>2]=((a[(c[p>>2]|0)+ -2|0]&255)<<8|(a[(c[p>>2]|0)+ -2+1|0]&255)<<0)&65535;A=c[u>>2]|0;if((c[t>>2]|0)==(e[(c[n>>2]|0)+14>>1]|0|0)){break}c[r>>2]=(c[r>>2]|0)+(A*10|0);c[q>>2]=(c[q>>2]|0)+ -1}if((z|0)==22){y=c[o>>2]|0;i=h;return y|0}c[q>>2]=A;c[p>>2]=c[r>>2];a:while(1){if(!((c[q>>2]|0)>>>0>0)){z=22;break}c[v>>2]=((a[(c[p>>2]|0)+4|0]&255)<<8|(a[(c[p>>2]|0)+5|0]&255)<<0)&65535;do{if((((c[v>>2]&16|0)!=0?(c[w>>2]=(d[c[p>>2]|0]|0)<<24|(d[(c[p>>2]|0)+1|0]|0)<<16|(d[(c[p>>2]|0)+2|0]|0)<<8|(d[(c[p>>2]|0)+3|0]|0)<<0,c[x>>2]=(d[(c[p>>2]|0)+6|0]|0)<<24|(d[(c[p>>2]|0)+7|0]|0)<<16|(d[(c[p>>2]|0)+8|0]|0)<<8|(d[(c[p>>2]|0)+9|0]|0)<<0,(c[w>>2]|0)>>>0<(c[(c[m>>2]|0)+12>>2]|0)>>>0):0)?(c[s>>2]|0)>>>0<((c[(c[m>>2]|0)+12>>2]|0)-(c[w>>2]|0)|0)>>>0:0)?(dA(c[k>>2]|0,(c[(c[m>>2]|0)+8>>2]|0)+(c[w>>2]|0)|0,(c[(c[m>>2]|0)+12>>2]|0)-(c[w>>2]|0)|0)|0)==0:0){r=c[v>>2]&15;if((r|0)==3){z=20;break a}else if((r|0)==2){z=19;break a}else if(!((r|0)==1|(r|0)==0)){break}if((c[x>>2]|0)>>>0<(c[(c[m>>2]|0)+12>>2]|0)>>>0?(Sz((c[(c[m>>2]|0)+8>>2]|0)+(c[x>>2]|0)|0,0,c[(c[m>>2]|0)+12>>2]|0)|0)!=0:0){z=18;break a}}}while(0);c[p>>2]=(c[p>>2]|0)+10;c[q>>2]=(c[q>>2]|0)+ -1}if((z|0)==18){c[c[l>>2]>>2]=1;c[(c[l>>2]|0)+4>>2]=(c[(c[m>>2]|0)+8>>2]|0)+(c[x>>2]|0);c[o>>2]=0;y=c[o>>2]|0;i=h;return y|0}else if((z|0)==19){c[c[l>>2]>>2]=2;c[(c[l>>2]|0)+4>>2]=c[x>>2];c[o>>2]=0;y=c[o>>2]|0;i=h;return y|0}else if((z|0)==20){c[c[l>>2]>>2]=3;c[(c[l>>2]|0)+4>>2]=c[x>>2];c[o>>2]=0;y=c[o>>2]|0;i=h;return y|0}else if((z|0)==22){y=c[o>>2]|0;i=h;return y|0}return 0}function kt(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;f=i;i=i+48|0;g=f+44|0;h=f+40|0;j=f+36|0;k=f+32|0;l=f+28|0;m=f+24|0;n=f+20|0;o=f+12|0;p=f+8|0;q=f+4|0;r=f;s=f+16|0;c[g>>2]=b;c[h>>2]=e;c[j>>2]=(c[g>>2]|0)+760;e=c[j>>2]|0;c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;c[e+16>>2]=0;c[e+20>>2]=0;c[l>>2]=lt(c[g>>2]|0,1111770656,c[h>>2]|0,k)|0;if(((c[l>>2]|0)==0?!((c[k>>2]|0)>>>0<8):0)?(g=xp(c[h>>2]|0,c[k>>2]|0,c[j>>2]|0)|0,c[l>>2]=g,(g|0)==0):0){c[(c[j>>2]|0)+4>>2]=(c[c[j>>2]>>2]|0)+(c[k>>2]|0);c[m>>2]=c[c[j>>2]>>2];c[m>>2]=(c[m>>2]|0)+2;c[n>>2]=((a[(c[m>>2]|0)+ -2|0]&255)<<8|(a[(c[m>>2]|0)+ -2+1|0]&255)<<0)&65535;c[m>>2]=(c[m>>2]|0)+2;c[o>>2]=((a[(c[m>>2]|0)+ -2|0]&255)<<8|(a[(c[m>>2]|0)+ -2+1|0]&255)<<0)&65535;c[m>>2]=(c[m>>2]|0)+4;c[p>>2]=(d[(c[m>>2]|0)+ -4|0]|0)<<24|(d[(c[m>>2]|0)+ -4+1|0]|0)<<16|(d[(c[m>>2]|0)+ -4+2|0]|0)<<8|(d[(c[m>>2]|0)+ -4+3|0]|0)<<0;if((((c[n>>2]|0)==1?!((c[p>>2]|0)>>>0<8):0)?!(((((c[p>>2]|0)-8|0)>>>0)/4|0)>>>0<(c[o>>2]|0)>>>0):0)?!(((c[p>>2]|0)+1|0)>>>0>(c[k>>2]|0)>>>0):0){c[(c[j>>2]|0)+16>>2]=c[o>>2];c[(c[j>>2]|0)+8>>2]=(c[c[j>>2]>>2]|0)+(c[p>>2]|0);c[(c[j>>2]|0)+12>>2]=(c[k>>2]|0)-(c[p>>2]|0);c[q>>2]=c[(c[j>>2]|0)+16>>2];c[m>>2]=(c[c[j>>2]>>2]|0)+8;c[r>>2]=(c[m>>2]|0)+(c[q>>2]<<2);while(1){if(!((c[q>>2]|0)>>>0>0)){break}c[s>>2]=((a[(c[m>>2]|0)+2|0]&255)<<8|(a[(c[m>>2]|0)+3|0]&255)<<0)&65535;c[r>>2]=(c[r>>2]|0)+((c[s>>2]|0)*10|0);c[m>>2]=(c[m>>2]|0)+4;c[q>>2]=(c[q>>2]|0)+ -1}if(!((c[r>>2]|0)>>>0>(c[(c[j>>2]|0)+8>>2]|0)>>>0)){a[(c[j>>2]|0)+20|0]=1;t=c[l>>2]|0;i=f;return t|0}}zp(c[h>>2]|0,c[j>>2]|0);h=c[j>>2]|0;c[h+0>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;c[h+16>>2]=0;c[h+20>>2]=0;c[l>>2]=8;t=c[l>>2]|0;i=f;return t|0}c[l>>2]=8;t=c[l>>2]|0;i=f;return t|0}function lt(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+32|0;g=f+20|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;m=f+16|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;c[l>>2]=mt(c[g>>2]|0,c[h>>2]|0)|0;if((c[l>>2]|0)==0){c[m>>2]=142;n=c[m>>2]|0;i=f;return n|0}if((c[k>>2]|0)!=0){c[c[k>>2]>>2]=c[(c[l>>2]|0)+12>>2]}c[m>>2]=qp(c[j>>2]|0,c[(c[l>>2]|0)+8>>2]|0)|0;n=c[m>>2]|0;i=f;return n|0}function mt(a,b){a=a|0;b=b|0;var d=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;i=i+32|0;f=d+16|0;g=d;h=d+4|0;j=d+8|0;k=d+12|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=c[(c[g>>2]|0)+156>>2];c[k>>2]=(c[j>>2]|0)+((e[(c[g>>2]|0)+152>>1]|0)<<4);while(1){if(!((c[j>>2]|0)>>>0<(c[k>>2]|0)>>>0)){l=7;break}if((c[c[j>>2]>>2]|0)==(c[h>>2]|0)?(c[(c[j>>2]|0)+12>>2]|0)!=0:0){l=5;break}c[j>>2]=(c[j>>2]|0)+16}if((l|0)==5){c[f>>2]=c[j>>2];m=c[f>>2]|0;i=d;return m|0}else if((l|0)==7){c[f>>2]=0;m=c[f>>2]|0;i=d;return m|0}return 0}function nt(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+32|0;g=f+20|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;m=f+16|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;c[m>>2]=pt(c[g>>2]|0,c[h>>2]|0,l)|0;if((c[m>>2]|0)!=0){n=c[m>>2]|0;i=f;return n|0}Tp(c[j>>2]|0,c[l>>2]|0,c[k>>2]|0)|0;n=c[m>>2]|0;i=f;return n|0}function ot(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;d=i;i=i+32|0;e=d+28|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;k=d+16|0;l=d+20|0;m=d+24|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=c[f>>2];c[k>>2]=-1;if((c[(c[h>>2]|0)+16>>2]|0)<0){c[e>>2]=0;n=c[e>>2]|0;i=d;return n|0}if((c[(c[h>>2]|0)+16>>2]|0)>>>0<4294967295){c[k>>2]=c[(c[h>>2]|0)+16>>2]}c[j>>2]=0;while(1){if(!((c[j>>2]|0)>>>0<(c[k>>2]|0)>>>0)){o=11;break}c[m>>2]=pt(c[f>>2]|0,c[j>>2]|0,l)|0;if((c[m>>2]|0)==0?(cA(c[g>>2]|0,c[l>>2]|0)|0)==0:0){o=9;break}c[j>>2]=(c[j>>2]|0)+1}if((o|0)==9){c[e>>2]=c[j>>2];n=c[e>>2]|0;i=d;return n|0}else if((o|0)==11){c[e>>2]=0;n=c[e>>2]|0;i=d;return n|0}return 0}function pt(d,f,g){d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;h=i;i=i+48|0;j=h+36|0;k=h+32|0;l=h+28|0;m=h+24|0;n=h+20|0;o=h+16|0;p=h+8|0;q=h+4|0;r=h;s=h+40|0;t=h+12|0;c[k>>2]=d;c[l>>2]=f;c[m>>2]=g;if((c[k>>2]|0)==0){c[j>>2]=35;u=c[j>>2]|0;i=h;return u|0}if((c[l>>2]|0)>>>0>=(e[(c[k>>2]|0)+264>>1]|0)>>>0){c[j>>2]=16;u=c[j>>2]|0;i=h;return u|0}c[q>>2]=c[(c[k>>2]|0)+536>>2];if((c[q>>2]|0)==0){c[j>>2]=7;u=c[j>>2]|0;i=h;return u|0}c[o>>2]=(c[k>>2]|0)+612;g=vd[c[(c[q>>2]|0)+16>>2]&63](0)|0;c[c[m>>2]>>2]=g;c[p>>2]=c[(c[k>>2]|0)+468>>2];do{if((c[p>>2]|0)==65536){if((c[l>>2]|0)>>>0<258){g=vd[c[(c[q>>2]|0)+16>>2]&63](c[l>>2]|0)|0;c[c[m>>2]>>2]=g}}else{if((c[p>>2]|0)!=131072){if((c[p>>2]|0)!=163840){break}c[t>>2]=(c[o>>2]|0)+4;if((a[c[o>>2]|0]|0)==0?(c[n>>2]=qt(c[k>>2]|0)|0,(c[n>>2]|0)!=0):0){break}if(!((c[l>>2]|0)>>>0<(e[c[t>>2]>>1]|0)>>>0)){break}c[l>>2]=(c[l>>2]|0)+(a[(c[(c[t>>2]|0)+4>>2]|0)+(c[l>>2]|0)|0]|0);g=vd[c[(c[q>>2]|0)+16>>2]&63](c[l>>2]|0)|0;c[c[m>>2]>>2]=g;break}c[r>>2]=(c[o>>2]|0)+4;if((a[c[o>>2]|0]|0)==0?(c[n>>2]=qt(c[k>>2]|0)|0,(c[n>>2]|0)!=0):0){break}if((c[l>>2]|0)>>>0<(e[c[r>>2]>>1]|0)>>>0){b[s>>1]=b[(c[(c[r>>2]|0)+4>>2]|0)+(c[l>>2]<<1)>>1]|0;if((e[s>>1]|0)<258){g=vd[c[(c[q>>2]|0)+16>>2]&63](e[s>>1]|0)|0;c[c[m>>2]>>2]=g;break}else{c[c[m>>2]>>2]=c[(c[(c[r>>2]|0)+8>>2]|0)+((e[s>>1]|0)-258<<2)>>2];break}}}}while(0);c[j>>2]=0;u=c[j>>2]|0;i=h;return u|0}function qt(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+32|0;e=d+20|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;k=d+16|0;c[e>>2]=b;c[f>>2]=c[(c[e>>2]|0)+104>>2];c[g>>2]=yd[c[(c[e>>2]|0)+508>>2]&31](c[e>>2]|0,1886352244,c[f>>2]|0,j)|0;if((c[g>>2]|0)!=0){l=c[g>>2]|0;i=d;return l|0}b=vp(c[f>>2]|0)|0;c[k>>2]=b+(c[j>>2]|0);c[h>>2]=c[(c[e>>2]|0)+468>>2];j=sp(c[f>>2]|0,32)|0;c[g>>2]=j;if((j|0)!=0){l=c[g>>2]|0;i=d;return l|0}do{if((c[h>>2]|0)!=131072){if((c[h>>2]|0)==163840){c[g>>2]=st(c[e>>2]|0,c[f>>2]|0,c[k>>2]|0)|0;break}else{c[g>>2]=3;break}}else{c[g>>2]=rt(c[e>>2]|0,c[f>>2]|0,c[k>>2]|0)|0}}while(0);a[(c[e>>2]|0)+612|0]=1;l=c[g>>2]|0;i=d;return l|0}function rt(d,f,g){d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;h=i;i=i+64|0;j=h+28|0;k=h+44|0;l=h+48|0;m=h+52|0;n=h+40|0;o=h+36|0;p=h+32|0;q=h+60|0;r=h+24|0;s=h+20|0;t=h+16|0;u=h+12|0;v=h+8|0;w=h+56|0;x=h+4|0;y=h;z=h+58|0;c[k>>2]=d;c[l>>2]=f;c[m>>2]=g;c[n>>2]=c[(c[l>>2]|0)+28>>2];c[r>>2]=0;c[s>>2]=0;c[p>>2]=(tp(c[l>>2]|0,o)|0)&65535;do{if((c[o>>2]|0)==0){if((c[p>>2]|0)>(e[(c[k>>2]|0)+264>>1]|0|0)){c[o>>2]=3;break}c[r>>2]=Yn(c[n>>2]|0,2,0,c[p>>2]|0,0,o)|0;a:do{if((c[o>>2]|0)==0?(g=yp(c[l>>2]|0,c[p>>2]<<1)|0,c[o>>2]=g,(g|0)==0):0){c[t>>2]=0;while(1){A=c[l>>2]|0;if((c[t>>2]|0)>=(c[p>>2]|0)){break}g=Dp(A)|0;b[(c[r>>2]|0)+(c[t>>2]<<1)>>1]=g;c[t>>2]=(c[t>>2]|0)+1}Bp(A);b[q>>1]=0;c[u>>2]=0;while(1){if((c[u>>2]|0)>=(c[p>>2]|0)){break}c[v>>2]=e[(c[r>>2]|0)+(c[u>>2]<<1)>>1]|0;if((c[v>>2]|0)>=258?(c[v>>2]=(c[v>>2]|0)-257,(c[v>>2]|0)>(e[q>>1]|0|0)):0){b[q>>1]=c[v>>2]}c[u>>2]=(c[u>>2]|0)+1}c[s>>2]=Yn(c[n>>2]|0,4,0,e[q>>1]|0,0,o)|0;if((c[o>>2]|0)==0){b[w>>1]=0;while(1){if((e[w>>1]|0|0)>=(e[q>>1]|0|0)){B=28;break}g=vp(c[l>>2]|0)|0;if((g|0)>=(c[m>>2]|0)){B=28;break}c[x>>2]=(Fp(c[l>>2]|0,o)|0)&255;if((c[o>>2]|0)!=0){break}if(!((c[x>>2]|0)<=(c[m>>2]|0)?(g=vp(c[l>>2]|0)|0,(g|0)<=((c[m>>2]|0)-(c[x>>2]|0)|0)):0)){g=c[m>>2]|0;if(0>(g-(vp(c[l>>2]|0)|0)|0)){C=0}else{g=c[m>>2]|0;C=g-(vp(c[l>>2]|0)|0)|0}c[x>>2]=C}g=Yn(c[n>>2]|0,1,0,(c[x>>2]|0)+1|0,0,o)|0;c[(c[s>>2]|0)+((e[w>>1]|0)<<2)>>2]=g;if((c[o>>2]|0)!=0){break}g=rp(c[l>>2]|0,c[(c[s>>2]|0)+((e[w>>1]|0)<<2)>>2]|0,c[x>>2]|0)|0;c[o>>2]=g;if((g|0)!=0){break}a[(c[(c[s>>2]|0)+((e[w>>1]|0)<<2)>>2]|0)+(c[x>>2]|0)|0]=0;b[w>>1]=(b[w>>1]|0)+1<<16>>16}b:do{if((B|0)==28){c:do{if((e[w>>1]|0|0)<(e[q>>1]|0|0)){while(1){if((e[w>>1]|0|0)>=(e[q>>1]|0|0)){break c}g=Yn(c[n>>2]|0,1,0,1,0,o)|0;c[(c[s>>2]|0)+((e[w>>1]|0)<<2)>>2]=g;if((c[o>>2]|0)!=0){break b}a[c[(c[s>>2]|0)+((e[w>>1]|0)<<2)>>2]|0]=0;b[w>>1]=(b[w>>1]|0)+1<<16>>16}}}while(0);c[y>>2]=(c[k>>2]|0)+616;b[c[y>>2]>>1]=c[p>>2];b[(c[y>>2]|0)+2>>1]=b[q>>1]|0;c[(c[y>>2]|0)+4>>2]=c[r>>2];c[(c[y>>2]|0)+8>>2]=c[s>>2];c[j>>2]=0;D=c[j>>2]|0;i=h;return D|0}}while(0);b[z>>1]=0;while(1){if((e[z>>1]|0|0)>=(e[q>>1]|0|0)){break a}Vn(c[n>>2]|0,c[(c[s>>2]|0)+((e[z>>1]|0)<<2)>>2]|0);c[(c[s>>2]|0)+((e[z>>1]|0)<<2)>>2]=0;b[z>>1]=(b[z>>1]|0)+1<<16>>16}}}}while(0);Vn(c[n>>2]|0,c[s>>2]|0);c[s>>2]=0;Vn(c[n>>2]|0,c[r>>2]|0);c[r>>2]=0}}while(0);c[j>>2]=c[o>>2];D=c[j>>2]|0;i=h;return D|0}function st(d,f,g){d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;h=i;i=i+48|0;j=h+40|0;k=h+36|0;l=h+32|0;m=h+28|0;n=h+24|0;o=h+20|0;p=h+12|0;q=h+8|0;r=h+4|0;s=h;t=h+16|0;c[k>>2]=d;c[l>>2]=f;c[m>>2]=g;c[n>>2]=c[(c[l>>2]|0)+28>>2];c[q>>2]=0;c[m>>2]=c[m>>2];c[p>>2]=(tp(c[l>>2]|0,o)|0)&65535;do{if((c[o>>2]|0)==0){if((c[p>>2]|0)>(e[(c[k>>2]|0)+264>>1]|0)|(c[p>>2]|0)>258){c[o>>2]=3;break}c[q>>2]=Yn(c[n>>2]|0,1,0,c[p>>2]|0,0,o)|0;do{if((c[o>>2]|0)==0?(m=rp(c[l>>2]|0,c[q>>2]|0,c[p>>2]|0)|0,c[o>>2]=m,(m|0)==0):0){c[r>>2]=0;while(1){if((c[r>>2]|0)>=(c[p>>2]|0)){break}c[s>>2]=(c[r>>2]|0)+(a[(c[q>>2]|0)+(c[r>>2]|0)|0]|0);if((c[s>>2]|0)<0){u=10;break}if((c[s>>2]|0)>(c[p>>2]|0)){u=10;break}c[r>>2]=(c[r>>2]|0)+1}if((u|0)==10){c[o>>2]=3;break}c[t>>2]=(c[k>>2]|0)+616;b[c[t>>2]>>1]=c[p>>2];c[(c[t>>2]|0)+4>>2]=c[q>>2];c[j>>2]=0;v=c[j>>2]|0;i=h;return v|0}}while(0);Vn(c[n>>2]|0,c[q>>2]|0);c[q>>2]=0}}while(0);c[j>>2]=c[o>>2];v=c[j>>2]|0;i=h;return v|0}function tt(f){f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;g=i;i=i+80|0;h=g+72|0;j=g+68|0;k=g+64|0;l=g+60|0;m=g+56|0;n=g+52|0;o=g+48|0;p=g+44|0;q=g+40|0;r=g+36|0;s=g+12|0;t=g;u=g+4|0;v=g+8|0;w=g+16|0;x=g+20|0;y=g+24|0;z=g+28|0;A=g+32|0;c[j>>2]=f;c[n>>2]=0;if((c[(c[j>>2]|0)+664>>2]|0)!=0){c[h>>2]=c[(c[j>>2]|0)+664>>2];B=c[h>>2]|0;i=g;return B|0}c[l>>2]=-1;c[m>>2]=-1;c[k>>2]=0;while(1){if((c[k>>2]|0)>=(e[(c[j>>2]|0)+340>>1]|0|0)){break}c[o>>2]=(c[(c[j>>2]|0)+356>>2]|0)+((c[k>>2]|0)*20|0);if((e[(c[o>>2]|0)+6>>1]|0|0)==6?(e[(c[o>>2]|0)+8>>1]|0|0)>0:0){if(((e[c[o>>2]>>1]|0|0)==3?(e[(c[o>>2]|0)+2>>1]|0|0)==1:0)?(e[(c[o>>2]|0)+4>>1]|0|0)==1033:0){c[l>>2]=c[k>>2]}if(((e[c[o>>2]>>1]|0|0)==1?(e[(c[o>>2]|0)+2>>1]|0|0)==0:0)?(e[(c[o>>2]|0)+4>>1]|0|0)==0:0){c[m>>2]=c[k>>2]}}c[k>>2]=(c[k>>2]|0)+1}do{if((c[l>>2]|0)!=-1){c[p>>2]=c[(c[j>>2]|0)+100>>2];c[q>>2]=(c[(c[j>>2]|0)+356>>2]|0)+((c[l>>2]|0)*20|0);c[r>>2]=(e[(c[q>>2]|0)+8>>1]|0|0)/2|0;c[s>>2]=0;c[s>>2]=c[s>>2];c[n>>2]=Sn(c[p>>2]|0,(e[(c[q>>2]|0)+8>>1]|0)+1|0,s)|0;if((c[s>>2]|0)==0){c[t>>2]=c[(c[j>>2]|0)+360>>2];c[u>>2]=c[n>>2];k=qp(c[t>>2]|0,c[(c[q>>2]|0)+12>>2]|0)|0;c[s>>2]=k;if((k|0)==0?(k=yp(c[t>>2]|0,e[(c[q>>2]|0)+8>>1]|0)|0,c[s>>2]=k,(k|0)==0):0){c[v>>2]=c[(c[t>>2]|0)+32>>2];while(1){if(!((c[r>>2]|0)>>>0>0)){break}if(((d[c[v>>2]|0]|0|0)==0?(d[(c[v>>2]|0)+1|0]|0|0)>=32:0)?(d[(c[v>>2]|0)+1|0]|0|0)<128:0){k=a[(c[v>>2]|0)+1|0]|0;o=c[u>>2]|0;c[u>>2]=o+1;a[o]=k}c[r>>2]=(c[r>>2]|0)+ -1;c[v>>2]=(c[v>>2]|0)+2}a[c[u>>2]|0]=0;Bp(c[t>>2]|0);break}Vn(c[p>>2]|0,c[n>>2]|0);c[n>>2]=0;b[(c[q>>2]|0)+8>>1]=0;c[(c[q>>2]|0)+12>>2]=0;Vn(c[p>>2]|0,c[(c[q>>2]|0)+16>>2]|0);c[(c[q>>2]|0)+16>>2]=0}}else{if((c[m>>2]|0)!=-1?(c[w>>2]=c[(c[j>>2]|0)+100>>2],c[x>>2]=(c[(c[j>>2]|0)+356>>2]|0)+((c[m>>2]|0)*20|0),c[y>>2]=e[(c[x>>2]|0)+8>>1]|0,c[z>>2]=0,c[z>>2]=c[z>>2],c[n>>2]=Sn(c[w>>2]|0,(c[y>>2]|0)+1|0,z)|0,(c[z>>2]|0)==0):0){c[A>>2]=c[(c[j>>2]|0)+360>>2];k=qp(c[A>>2]|0,c[(c[x>>2]|0)+12>>2]|0)|0;c[z>>2]=k;if((k|0)==0?(k=rp(c[A>>2]|0,c[n>>2]|0,c[y>>2]|0)|0,c[z>>2]=k,(k|0)==0):0){a[(c[n>>2]|0)+(c[y>>2]|0)|0]=0;break}c[(c[x>>2]|0)+12>>2]=0;b[(c[x>>2]|0)+8>>1]=0;Vn(c[w>>2]|0,c[(c[x>>2]|0)+16>>2]|0);c[(c[x>>2]|0)+16>>2]=0;Vn(c[w>>2]|0,c[n>>2]|0);c[n>>2]=0}}}while(0);c[(c[j>>2]|0)+664>>2]=c[n>>2];c[h>>2]=c[n>>2];B=c[h>>2]|0;i=g;return B|0}function ut(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=i;i=i+48|0;h=g+36|0;j=g+32|0;k=g+28|0;l=g+24|0;m=g+20|0;n=g+16|0;o=g+8|0;p=g+4|0;q=g;r=g+12|0;c[j>>2]=a;c[k>>2]=b;c[l>>2]=d;c[m>>2]=e;c[n>>2]=f;f=c[j>>2]|0;do{if((c[k>>2]|0)!=0){c[q>>2]=mt(f,c[k>>2]|0)|0;if((c[q>>2]|0)!=0){c[l>>2]=(c[l>>2]|0)+(c[(c[q>>2]|0)+8>>2]|0);c[r>>2]=c[(c[q>>2]|0)+12>>2];s=6;break}else{c[o>>2]=142;break}}else{c[r>>2]=c[(c[f+104>>2]|0)+4>>2];s=6}}while(0);if((s|0)==6){if((c[n>>2]|0)!=0?(c[c[n>>2]>>2]|0)==0:0){c[c[n>>2]>>2]=c[r>>2];c[h>>2]=0;t=c[h>>2]|0;i=g;return t|0}if((c[n>>2]|0)!=0){c[r>>2]=c[c[n>>2]>>2]}c[p>>2]=c[(c[j>>2]|0)+104>>2];c[o>>2]=wp(c[p>>2]|0,c[l>>2]|0,c[m>>2]|0,c[r>>2]|0)|0}c[h>>2]=c[o>>2];t=c[h>>2]|0;i=g;return t|0}function vt(a,b){a=a|0;b=b|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+16|0;g=f+8|0;h=f;j=f+4|0;c[g>>2]=a;c[h>>2]=b;switch(c[h>>2]|0){case 3:{c[j>>2]=(c[g>>2]|0)+216;break};case 5:{c[j>>2]=(c[g>>2]|0)+468;break};case 0:{c[j>>2]=(c[g>>2]|0)+160;break};case 1:{c[j>>2]=(c[g>>2]|0)+260;break};case 4:{if((d[(c[g>>2]|0)+292|0]|0|0)!=0){k=(c[g>>2]|0)+296|0}else{k=0}c[j>>2]=k;break};case 2:{if((e[(c[g>>2]|0)+364>>1]|0|0)==65535){l=0}else{l=(c[g>>2]|0)+364|0}c[j>>2]=l;break};case 6:{if((c[(c[g>>2]|0)+548>>2]|0)!=0){m=(c[g>>2]|0)+548|0}else{m=0}c[j>>2]=m;break};default:{c[j>>2]=0}}i=f;return c[j>>2]|0}function wt(a,b,d,f,g){a=a|0;b=b|0;d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=i;i=i+32|0;j=h+20|0;k=h;l=h+4|0;m=h+8|0;n=h+12|0;o=h+16|0;c[k>>2]=a;c[l>>2]=b;c[m>>2]=d;c[n>>2]=f;c[o>>2]=g;if((c[n>>2]|0)!=0?(c[o>>2]|0)!=0:0){do{if((c[m>>2]|0)!=0){if(!((c[l>>2]|0)>>>0>=(e[(c[k>>2]|0)+152>>1]|0)>>>0)){c[c[m>>2]>>2]=c[(c[(c[k>>2]|0)+156>>2]|0)+(c[l>>2]<<4)>>2];c[c[n>>2]>>2]=c[(c[(c[k>>2]|0)+156>>2]|0)+(c[l>>2]<<4)+8>>2];c[c[o>>2]>>2]=c[(c[(c[k>>2]|0)+156>>2]|0)+(c[l>>2]<<4)+12>>2];break}c[j>>2]=142;p=c[j>>2]|0;i=h;return p|0}else{c[c[o>>2]>>2]=e[(c[k>>2]|0)+152>>1]|0}}while(0);c[j>>2]=0;p=c[j>>2]|0;i=h;return p|0}c[j>>2]=6;p=c[j>>2]|0;i=h;return p|0}function xt(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=i;i=i+48|0;h=g+40|0;j=g+36|0;k=g+32|0;l=g+28|0;m=g+24|0;n=g+20|0;o=g+12|0;p=g+8|0;q=g+4|0;r=g;s=g+16|0;c[j>>2]=a;c[k>>2]=b;c[l>>2]=d;c[m>>2]=e;c[n>>2]=f;c[p>>2]=c[(c[(c[k>>2]|0)+96>>2]|0)+4>>2];c[m>>2]=c[m>>2];c[n>>2]=c[n>>2];c[q>>2]=c[(c[k>>2]|0)+532>>2];do{if((c[q>>2]|0)==0){c[q>>2]=ep(c[p>>2]|0,93392)|0;if((c[q>>2]|0)!=0){c[(c[k>>2]|0)+532>>2]=c[q>>2];c[(c[k>>2]|0)+508>>2]=c[c[q>>2]>>2];break}c[h>>2]=11;t=c[h>>2]|0;i=g;return t|0}}while(0);c[r>>2]=c[(c[k>>2]|0)+96>>2];c[s>>2]=fp(c[r>>2]|0,94672)|0;c[(c[k>>2]|0)+536>>2]=c[s>>2];c[o>>2]=nu(c[j>>2]|0,c[k>>2]|0)|0;if((c[o>>2]|0)!=0){c[h>>2]=c[o>>2];t=c[h>>2]|0;i=g;return t|0}c[j>>2]=c[(c[k>>2]|0)+104>>2];if((c[l>>2]|0)<0){c[l>>2]=0}if((c[l>>2]|0)>=(c[(c[k>>2]|0)+140>>2]|0)){c[h>>2]=6;t=c[h>>2]|0;i=g;return t|0}s=qp(c[j>>2]|0,c[(c[(c[k>>2]|0)+144>>2]|0)+(c[l>>2]<<2)>>2]|0)|0;c[o>>2]=s;if((s|0)!=0){c[h>>2]=c[o>>2];t=c[h>>2]|0;i=g;return t|0}c[o>>2]=Ad[c[(c[q>>2]|0)+88>>2]&127](c[k>>2]|0,c[j>>2]|0)|0;if((c[o>>2]|0)!=0){c[h>>2]=c[o>>2];t=c[h>>2]|0;i=g;return t|0}else{c[c[k>>2]>>2]=c[(c[k>>2]|0)+140>>2];c[(c[k>>2]|0)+4>>2]=c[l>>2];c[h>>2]=c[o>>2];t=c[h>>2]|0;i=g;return t|0}return 0}function yt(f,g,h,j,k){f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;l=i;i=i+112|0;m=l+92|0;n=l+68|0;o=l+72|0;p=l+76|0;q=l+80|0;r=l+88|0;s=l+84|0;t=l+104|0;u=l+101|0;v=l+100|0;w=l+102|0;x=l+103|0;y=l+64|0;z=l+12|0;A=l;B=l+4|0;C=l+8|0;D=l+16|0;E=l+20|0;F=l+24|0;G=l+28|0;H=l+96|0;I=l+98|0;J=l+32|0;K=l+60|0;c[m>>2]=f;c[n>>2]=g;c[o>>2]=h;c[p>>2]=j;c[q>>2]=k;a[w]=0;a[x]=0;c[y>>2]=c[(c[n>>2]|0)+532>>2];c[o>>2]=c[o>>2];c[z>>2]=0;while(1){if((c[z>>2]|0)>=(c[p>>2]|0)){break}if((c[(c[q>>2]|0)+(c[z>>2]<<3)>>2]|0)!=1768386662){if((c[(c[q>>2]|0)+(c[z>>2]<<3)>>2]|0)==1768386675){a[x]=1}}else{a[w]=1}c[z>>2]=(c[z>>2]|0)+1}if((c[(c[(c[n>>2]|0)+128>>2]|0)+48>>2]|0)==0?(mt(c[n>>2]|0,1735162214)|0)==0:0){L=(mt(c[n>>2]|0,1128678944)|0)!=0}else{L=1}a[t]=L&1;a[u]=0;a[v]=((yd[c[(c[n>>2]|0)+508>>2]&31](c[n>>2]|0,1935829368,c[m>>2]|0,0)|0)!=0^1)&1;if((a[v]|0)!=0){a[t]=0}if((a[t]|0)==0?(c[(c[y>>2]|0)+68>>2]|0)!=0:0){c[r>>2]=Ad[c[(c[y>>2]|0)+68>>2]&127](c[n>>2]|0,c[m>>2]|0)|0;a[u]=((c[r>>2]|0)!=0^1)&1}if(!((a[u]|0)!=0?(d[v]|0)==0:0)){M=18}if((M|0)==18?(c[r>>2]=Ad[c[(c[y>>2]|0)+24>>2]&127](c[n>>2]|0,c[m>>2]|0)|0,(c[r>>2]|0)!=0):0){N=c[r>>2]|0;i=l;return N|0}if((e[(c[n>>2]|0)+178>>1]|0)==0){c[r>>2]=8;N=c[r>>2]|0;i=l;return N|0}c[r>>2]=Ad[c[(c[y>>2]|0)+36>>2]&127](c[n>>2]|0,c[m>>2]|0)|0;c[r>>2]=Ad[c[(c[y>>2]|0)+32>>2]&127](c[n>>2]|0,c[m>>2]|0)|0;c[r>>2]=Ad[c[(c[y>>2]|0)+48>>2]&127](c[n>>2]|0,c[m>>2]|0)|0;c[r>>2]=Ad[c[(c[y>>2]|0)+44>>2]&127](c[n>>2]|0,c[m>>2]|0)|0;c[s>>2]=c[r>>2];if((a[u]|0)==0){c[r>>2]=md[c[(c[y>>2]|0)+28>>2]&63](c[n>>2]|0,c[m>>2]|0,0)|0;do{if((c[r>>2]|0)!=0){if((c[r>>2]&255|0)==142){if((c[(c[n>>2]|0)+148>>2]|0)==1953658213){a[t]=0;c[r>>2]=0;break}c[r>>2]=143;if((c[(c[(c[n>>2]|0)+128>>2]|0)+48>>2]|0)!=0?(c[(c[c[(c[(c[n>>2]|0)+128>>2]|0)+48>>2]>>2]|0)+8>>2]|0)!=0:0){b[(c[n>>2]|0)+250>>1]=0;c[r>>2]=0}}}else{c[r>>2]=md[c[(c[y>>2]|0)+92>>2]&63](c[n>>2]|0,c[m>>2]|0,0)|0;if(((c[r>>2]&255|0)==142?(c[r>>2]=147,(c[(c[(c[n>>2]|0)+128>>2]|0)+48>>2]|0)!=0):0)?(c[(c[c[(c[(c[n>>2]|0)+128>>2]|0)+48>>2]>>2]|0)+8>>2]|0)!=0:0){b[(c[n>>2]|0)+250>>1]=0;c[r>>2]=0}}}while(0);if((c[r>>2]|0)!=0){N=c[r>>2]|0;i=l;return N|0}c[r>>2]=md[c[(c[y>>2]|0)+28>>2]&63](c[n>>2]|0,c[m>>2]|0,1)|0;if((c[r>>2]|0)==0?(c[r>>2]=md[c[(c[y>>2]|0)+92>>2]&63](c[n>>2]|0,c[m>>2]|0,1)|0,(c[r>>2]|0)==0):0){a[(c[n>>2]|0)+292|0]=1}if((c[r>>2]|0)!=0?(c[r>>2]&255|0)!=142:0){N=c[r>>2]|0;i=l;return N|0}c[r>>2]=Ad[c[(c[y>>2]|0)+40>>2]&127](c[n>>2]|0,c[m>>2]|0)|0;if((c[r>>2]|0)!=0){b[(c[n>>2]|0)+364>>1]=-1}}do{if((c[(c[y>>2]|0)+96>>2]|0)!=0?(c[r>>2]=Ad[c[(c[y>>2]|0)+96>>2]&127](c[n>>2]|0,c[m>>2]|0)|0,(c[r>>2]|0)!=0):0){if((c[r>>2]&255|0)==142){c[r>>2]=0;break}else{N=c[r>>2]|0;i=l;return N|0}}}while(0);c[r>>2]=Ad[c[(c[y>>2]|0)+64>>2]&127](c[n>>2]|0,c[m>>2]|0)|0;do{if((c[r>>2]|0)!=0){if((c[r>>2]&255|0)!=142){N=c[r>>2]|0;i=l;return N|0}else{c[(c[n>>2]|0)+548>>2]=0;break}}}while(0);c[r>>2]=Ad[c[(c[y>>2]|0)+60>>2]&127](c[n>>2]|0,c[m>>2]|0)|0;c[r>>2]=Ad[c[(c[y>>2]|0)+56>>2]&127](c[n>>2]|0,c[m>>2]|0)|0;c[(c[n>>2]|0)+16>>2]=e[(c[n>>2]|0)+264>>1]|0;c[(c[n>>2]|0)+20>>2]=0;c[(c[n>>2]|0)+24>>2]=0;if((e[(c[n>>2]|0)+364>>1]|0)!=65535?(b[(c[n>>2]|0)+428>>1]&256|0)!=0:0){if((a[w]|0)==0?(c[r>>2]=iu(c[n>>2]|0,16,(c[n>>2]|0)+20|0)|0,(c[r>>2]|0)!=0):0){N=c[r>>2]|0;i=l;return N|0}if((c[(c[n>>2]|0)+20>>2]|0)==0?(c[r>>2]=iu(c[n>>2]|0,1,(c[n>>2]|0)+20|0)|0,(c[r>>2]|0)!=0):0){N=c[r>>2]|0;i=l;return N|0}if((a[x]|0)==0?(c[r>>2]=iu(c[n>>2]|0,17,(c[n>>2]|0)+24|0)|0,(c[r>>2]|0)!=0):0){N=c[r>>2]|0;i=l;return N|0}if((c[(c[n>>2]|0)+24>>2]|0)==0?(c[r>>2]=iu(c[n>>2]|0,2,(c[n>>2]|0)+24|0)|0,(c[r>>2]|0)!=0):0){N=c[r>>2]|0;i=l;return N|0}}else{c[r>>2]=iu(c[n>>2]|0,21,(c[n>>2]|0)+20|0)|0;if((c[r>>2]|0)!=0){N=c[r>>2]|0;i=l;return N|0}if(((c[(c[n>>2]|0)+20>>2]|0)==0?(a[w]|0)==0:0)?(c[r>>2]=iu(c[n>>2]|0,16,(c[n>>2]|0)+20|0)|0,(c[r>>2]|0)!=0):0){N=c[r>>2]|0;i=l;return N|0}if((c[(c[n>>2]|0)+20>>2]|0)==0?(c[r>>2]=iu(c[n>>2]|0,1,(c[n>>2]|0)+20|0)|0,(c[r>>2]|0)!=0):0){N=c[r>>2]|0;i=l;return N|0}c[r>>2]=iu(c[n>>2]|0,22,(c[n>>2]|0)+24|0)|0;if((c[r>>2]|0)!=0){N=c[r>>2]|0;i=l;return N|0}if(((c[(c[n>>2]|0)+24>>2]|0)==0?(a[x]|0)==0:0)?(c[r>>2]=iu(c[n>>2]|0,17,(c[n>>2]|0)+24|0)|0,(c[r>>2]|0)!=0):0){N=c[r>>2]|0;i=l;return N|0}if((c[(c[n>>2]|0)+24>>2]|0)==0?(c[r>>2]=iu(c[n>>2]|0,2,(c[n>>2]|0)+24|0)|0,(c[r>>2]|0)!=0):0){N=c[r>>2]|0;i=l;return N|0}}c[A>>2]=c[n>>2];c[B>>2]=c[(c[A>>2]|0)+8>>2];if(!((c[(c[n>>2]|0)+732>>2]|0)!=2?(c[(c[n>>2]|0)+732>>2]|0)!=3:0)){c[B>>2]=c[B>>2]|16384}if((d[t]|0)==1){c[B>>2]=c[B>>2]|1}c[B>>2]=c[B>>2]|24;if((c[s>>2]|0)==0?(c[(c[n>>2]|0)+468>>2]|0)!=196608:0){c[B>>2]=c[B>>2]|512}if((c[(c[n>>2]|0)+480>>2]|0)!=0){c[B>>2]=c[B>>2]|4}if((a[(c[n>>2]|0)+292|0]|0)!=0){c[B>>2]=c[B>>2]|32}if((c[(c[n>>2]|0)+752>>2]|0)!=0){c[B>>2]=c[B>>2]|64}if(((mt(c[n>>2]|0,1735162214)|0)!=0?(mt(c[n>>2]|0,1719034226)|0)!=0:0)?(mt(c[n>>2]|0,1735811442)|0)!=0:0){c[B>>2]=c[B>>2]|256}c[(c[A>>2]|0)+8>>2]=c[B>>2];c[B>>2]=0;if((d[t]|0)==1?(e[(c[n>>2]|0)+364>>1]|0)!=65535:0){if(!((b[(c[n>>2]|0)+428>>1]&512|0)==0?(b[(c[n>>2]|0)+428>>1]&1|0)==0:0)){c[B>>2]=c[B>>2]|1}if((b[(c[n>>2]|0)+428>>1]&32|0)!=0){c[B>>2]=c[B>>2]|2}}else{if((b[(c[n>>2]|0)+204>>1]&1|0)!=0){c[B>>2]=c[B>>2]|2}if((b[(c[n>>2]|0)+204>>1]&2|0)!=0){c[B>>2]=c[B>>2]|1}}c[(c[A>>2]|0)+12>>2]=c[B>>2];ju(c[n>>2]|0)|0;c[C>>2]=0;while(1){if((c[C>>2]|0)>=(c[(c[A>>2]|0)+36>>2]|0)){break}c[D>>2]=c[(c[(c[A>>2]|0)+40>>2]|0)+(c[C>>2]<<2)>>2];B=ku(e[(c[D>>2]|0)+8>>1]|0,e[(c[D>>2]|0)+10>>1]|0)|0;c[(c[D>>2]|0)+4>>2]=B;c[C>>2]=(c[C>>2]|0)+1}c[F>>2]=c[(c[n>>2]|0)+736>>2];do{if((c[F>>2]|0)>>>0>0){c[G>>2]=c[(c[(c[n>>2]|0)+104>>2]|0)+28>>2];b[H>>1]=b[(c[n>>2]|0)+178>>1]|0;b[I>>1]=b[(c[n>>2]|0)+366>>1]|0;if(!((e[H>>1]|0)!=0?(e[(c[n>>2]|0)+364>>1]|0)!=65535:0)){b[I>>1]=1;b[H>>1]=1}C=Yn(c[G>>2]|0,16,0,c[F>>2]|0,0,r)|0;c[(c[A>>2]|0)+32>>2]=C;if((c[r>>2]|0)!=0){N=c[r>>2]|0;i=l;return N|0}c[E>>2]=0;while(1){O=c[A>>2]|0;if(!((c[E>>2]|0)>>>0<(c[F>>2]|0)>>>0)){M=112;break}c[K>>2]=(c[O+32>>2]|0)+(c[E>>2]<<4);c[r>>2]=md[c[(c[y>>2]|0)+108>>2]&63](c[n>>2]|0,c[E>>2]|0,J)|0;if((c[r>>2]|0)!=0){M=128;break}b[c[K>>2]>>1]=c[J+20>>2]>>6;C=aa(b[I>>1]|0,e[J>>1]|0)|0;b[(c[K>>2]|0)+2>>1]=(C+((e[H>>1]|0)/2|0)|0)/(e[H>>1]|0)|0;c[(c[K>>2]|0)+8>>2]=e[J>>1]<<6;c[(c[K>>2]|0)+12>>2]=e[J+2>>1]<<6;c[(c[K>>2]|0)+4>>2]=e[J+2>>1]<<6;c[E>>2]=(c[E>>2]|0)+1}if((M|0)==112){C=O+8|0;c[C>>2]=c[C>>2]|2;c[(c[A>>2]|0)+28>>2]=c[F>>2];break}else if((M|0)==128){N=c[r>>2]|0;i=l;return N|0}}}while(0);if((c[(c[A>>2]|0)+8>>2]&2|0)==0?(c[(c[A>>2]|0)+8>>2]&1|0)==0:0){M=(c[A>>2]|0)+8|0;c[M>>2]=c[M>>2]|1}if((c[(c[A>>2]|0)+8>>2]&1|0)==0){N=c[r>>2]|0;i=l;return N|0}c[(c[A>>2]|0)+52>>2]=b[(c[n>>2]|0)+196>>1]|0;c[(c[A>>2]|0)+56>>2]=b[(c[n>>2]|0)+198>>1]|0;c[(c[A>>2]|0)+60>>2]=b[(c[n>>2]|0)+200>>1]|0;c[(c[A>>2]|0)+64>>2]=b[(c[n>>2]|0)+202>>1]|0;b[(c[A>>2]|0)+68>>1]=b[(c[n>>2]|0)+178>>1]|0;b[(c[A>>2]|0)+70>>1]=b[(c[n>>2]|0)+220>>1]|0;b[(c[A>>2]|0)+72>>1]=b[(c[n>>2]|0)+222>>1]|0;b[(c[A>>2]|0)+74>>1]=(b[(c[A>>2]|0)+70>>1]|0)-(b[(c[A>>2]|0)+72>>1]|0)+(b[(c[n>>2]|0)+224>>1]|0);do{if(((b[(c[A>>2]|0)+70>>1]|0)==0?(b[(c[A>>2]|0)+72>>1]|0)==0:0)?(e[(c[n>>2]|0)+364>>1]|0)!=65535:0){if((b[(c[n>>2]|0)+434>>1]|0)==0?(b[(c[n>>2]|0)+436>>1]|0)==0:0){b[(c[A>>2]|0)+70>>1]=b[(c[n>>2]|0)+440>>1]|0;b[(c[A>>2]|0)+72>>1]=0-(b[(c[n>>2]|0)+442>>1]|0);b[(c[A>>2]|0)+74>>1]=(b[(c[A>>2]|0)+70>>1]|0)-(b[(c[A>>2]|0)+72>>1]|0);break}b[(c[A>>2]|0)+70>>1]=b[(c[n>>2]|0)+434>>1]|0;b[(c[A>>2]|0)+72>>1]=b[(c[n>>2]|0)+436>>1]|0;b[(c[A>>2]|0)+74>>1]=(b[(c[A>>2]|0)+70>>1]|0)-(b[(c[A>>2]|0)+72>>1]|0)+(b[(c[n>>2]|0)+438>>1]|0)}}while(0);b[(c[A>>2]|0)+76>>1]=b[(c[n>>2]|0)+226>>1]|0;if((d[(c[n>>2]|0)+292|0]|0)!=0){P=e[(c[n>>2]|0)+306>>1]|0}else{P=b[(c[A>>2]|0)+74>>1]|0}b[(c[A>>2]|0)+78>>1]=P;b[(c[A>>2]|0)+80>>1]=(b[(c[n>>2]|0)+476>>1]|0)-((b[(c[n>>2]|0)+478>>1]|0)/2|0);b[(c[A>>2]|0)+82>>1]=b[(c[n>>2]|0)+478>>1]|0;N=c[r>>2]|0;i=l;return N|0}function zt(d){d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+32|0;f=e+16|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;c[f>>2]=d;if((c[f>>2]|0)==0){i=e;return}c[g>>2]=c[(c[f>>2]|0)+100>>2];c[h>>2]=c[(c[f>>2]|0)+532>>2];if((c[h>>2]|0)!=0){if((c[(c[h>>2]|0)+80>>2]|0)!=0){rd[c[(c[h>>2]|0)+80>>2]&127](c[f>>2]|0)}if((c[(c[h>>2]|0)+100>>2]|0)!=0){rd[c[(c[h>>2]|0)+100>>2]&127](c[f>>2]|0)}}gu(c[f>>2]|0);hu(c[f>>2]|0);Vn(c[g>>2]|0,c[(c[f>>2]|0)+144>>2]|0);c[(c[f>>2]|0)+144>>2]=0;c[(c[f>>2]|0)+140>>2]=0;Vn(c[g>>2]|0,c[(c[f>>2]|0)+156>>2]|0);c[(c[f>>2]|0)+156>>2]=0;b[(c[f>>2]|0)+152>>1]=0;c[j>>2]=c[(c[f>>2]|0)+104>>2];zp(c[j>>2]|0,(c[f>>2]|0)+500|0);c[(c[f>>2]|0)+504>>2]=0;c[k>>2]=c[(c[f>>2]|0)+104>>2];zp(c[k>>2]|0,(c[f>>2]|0)+680|0);zp(c[k>>2]|0,(c[f>>2]|0)+688|0);c[(c[f>>2]|0)+684>>2]=0;c[(c[f>>2]|0)+692>>2]=0;if((a[(c[f>>2]|0)+292|0]|0)!=0){Vn(c[g>>2]|0,c[(c[f>>2]|0)+332>>2]|0);c[(c[f>>2]|0)+332>>2]=0;Vn(c[g>>2]|0,c[(c[f>>2]|0)+336>>2]|0);c[(c[f>>2]|0)+336>>2]=0;a[(c[f>>2]|0)+292|0]=0}Vn(c[g>>2]|0,c[(c[f>>2]|0)+544>>2]|0);c[(c[f>>2]|0)+544>>2]=0;b[(c[f>>2]|0)+542>>1]=0;if((c[h>>2]|0)!=0){rd[c[(c[h>>2]|0)+52>>2]&127](c[f>>2]|0)}Vn(c[g>>2]|0,c[(c[f>>2]|0)+20>>2]|0);c[(c[f>>2]|0)+20>>2]=0;Vn(c[g>>2]|0,c[(c[f>>2]|0)+24>>2]|0);c[(c[f>>2]|0)+24>>2]=0;Vn(c[g>>2]|0,c[(c[f>>2]|0)+32>>2]|0);c[(c[f>>2]|0)+32>>2]=0;c[(c[f>>2]|0)+28>>2]=0;Vn(c[g>>2]|0,c[(c[f>>2]|0)+664>>2]|0);c[(c[f>>2]|0)+664>>2]=0;c[(c[f>>2]|0)+532>>2]=0;i=e;return}function At(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;b=fu(c[e>>2]|0,c[f>>2]|0,1751474532)|0;i=d;return b|0}function Bt(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+32|0;g=f+16|0;h=f;j=f+20|0;k=f+8|0;l=f+12|0;m=f+4|0;c[g>>2]=b;c[h>>2]=d;a[j]=e;e=c[g>>2]|0;do{if((a[j]|0)!=0){c[m>>2]=e+296;c[k>>2]=yd[c[(c[g>>2]|0)+508>>2]&31](c[g>>2]|0,1986553185,c[h>>2]|0,0)|0;if((c[k>>2]|0)!=0){n=c[k>>2]|0;i=f;return n|0}else{c[l>>2]=c[m>>2];break}}else{c[k>>2]=yd[c[e+508>>2]&31](c[g>>2]|0,1751672161,c[h>>2]|0,0)|0;if((c[k>>2]|0)!=0){n=c[k>>2]|0;i=f;return n|0}else{c[l>>2]=(c[g>>2]|0)+216;break}}}while(0);g=Gp(c[h>>2]|0,94416,c[l>>2]|0)|0;c[k>>2]=g;if((g|0)!=0){n=c[k>>2]|0;i=f;return n|0}c[(c[l>>2]|0)+36>>2]=0;c[(c[l>>2]|0)+40>>2]=0;n=c[k>>2]|0;i=f;return n|0}function Ct(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d+8|0;f=d;g=d+4|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=yd[c[(c[e>>2]|0)+508>>2]&31](c[e>>2]|0,1668112752,c[f>>2]|0,(c[e>>2]|0)+504|0)|0;if((c[g>>2]|0)!=0){h=c[g>>2]|0;i=d;return h|0}b=xp(c[f>>2]|0,c[(c[e>>2]|0)+504>>2]|0,(c[e>>2]|0)+500|0)|0;c[g>>2]=b;if((b|0)==0){h=c[g>>2]|0;i=d;return h|0}c[(c[e>>2]|0)+504>>2]=0;h=c[g>>2]|0;i=d;return h|0}function Dt(a,d){a=a|0;d=d|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+16|0;g=f+12|0;h=f;j=f+4|0;k=f+8|0;c[g>>2]=a;c[h>>2]=d;c[k>>2]=(c[g>>2]|0)+260;c[j>>2]=yd[c[(c[g>>2]|0)+508>>2]&31](c[g>>2]|0,1835104368,c[h>>2]|0,0)|0;if((c[j>>2]|0)!=0){l=c[j>>2]|0;i=f;return l|0}g=Gp(c[h>>2]|0,94336,c[k>>2]|0)|0;c[j>>2]=g;if((g|0)!=0){l=c[j>>2]|0;i=f;return l|0}b[(c[k>>2]|0)+6>>1]=0;b[(c[k>>2]|0)+8>>1]=0;b[(c[k>>2]|0)+10>>1]=0;b[(c[k>>2]|0)+12>>1]=0;b[(c[k>>2]|0)+14>>1]=0;b[(c[k>>2]|0)+16>>1]=0;b[(c[k>>2]|0)+18>>1]=0;b[(c[k>>2]|0)+20>>1]=0;b[(c[k>>2]|0)+22>>1]=0;b[(c[k>>2]|0)+24>>1]=0;b[(c[k>>2]|0)+26>>1]=0;b[(c[k>>2]|0)+28>>1]=0;b[(c[k>>2]|0)+30>>1]=0;if((c[c[k>>2]>>2]|0)<65536){l=c[j>>2]|0;i=f;return l|0}g=Gp(c[h>>2]|0,94352,c[k>>2]|0)|0;c[j>>2]=g;if((g|0)!=0){l=c[j>>2]|0;i=f;return l|0}if((e[(c[k>>2]|0)+20>>1]|0|0)<64){b[(c[k>>2]|0)+20>>1]=64}if((e[(c[k>>2]|0)+16>>1]|0)>>>0>65531){b[(c[k>>2]|0)+16>>1]=-5}if((e[(c[k>>2]|0)+30>>1]|0|0)<=100){l=c[j>>2]|0;i=f;return l|0}b[(c[k>>2]|0)+30>>1]=100;l=c[j>>2]|0;i=f;return l|0}function Et(a,d){a=a|0;d=d|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;g=f+12|0;h=f;j=f+4|0;k=f+8|0;c[g>>2]=a;c[h>>2]=d;c[j>>2]=yd[c[(c[g>>2]|0)+508>>2]&31](c[g>>2]|0,1330851634,c[h>>2]|0,0)|0;if(((((((c[j>>2]|0)==0?(c[k>>2]=(c[g>>2]|0)+364,g=Gp(c[h>>2]|0,94096,c[k>>2]|0)|0,c[j>>2]=g,(g|0)==0):0)?(c[(c[k>>2]|0)+80>>2]=0,c[(c[k>>2]|0)+84>>2]=0,b[(c[k>>2]|0)+88>>1]=0,b[(c[k>>2]|0)+90>>1]=0,b[(c[k>>2]|0)+92>>1]=0,b[(c[k>>2]|0)+94>>1]=0,b[(c[k>>2]|0)+96>>1]=0,b[(c[k>>2]|0)+98>>1]=0,b[(c[k>>2]|0)+100>>1]=-1,(e[c[k>>2]>>1]|0|0)>=1):0)?(g=Gp(c[h>>2]|0,94272,c[k>>2]|0)|0,c[j>>2]=g,(g|0)==0):0)?(e[c[k>>2]>>1]|0|0)>=2:0)?(g=Gp(c[h>>2]|0,94288,c[k>>2]|0)|0,c[j>>2]=g,(g|0)==0):0)?(e[c[k>>2]>>1]|0|0)>=5:0){c[j>>2]=Gp(c[h>>2]|0,94320,c[k>>2]|0)|0}i=f;return c[j>>2]|0}function Ft(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+32|0;e=d+16|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;c[f>>2]=a;c[g>>2]=b;c[j>>2]=(c[f>>2]|0)+468;c[h>>2]=yd[c[(c[f>>2]|0)+508>>2]&31](c[f>>2]|0,1886352244,c[g>>2]|0,0)|0;if((c[h>>2]|0)!=0){c[e>>2]=c[h>>2];k=c[e>>2]|0;i=d;return k|0}f=Gp(c[g>>2]|0,94048,c[j>>2]|0)|0;c[h>>2]=f;if((f|0)!=0){c[e>>2]=c[h>>2];k=c[e>>2]|0;i=d;return k|0}else{c[e>>2]=0;k=c[e>>2]|0;i=d;return k|0}return 0}function Gt(a,d){a=a|0;d=d|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;f=i;i=i+48|0;g=f+40|0;h=f+36|0;j=f+32|0;k=f+28|0;l=f+24|0;m=f+20|0;n=f+12|0;o=f+8|0;p=f+4|0;q=f;r=f+16|0;c[g>>2]=a;c[h>>2]=d;c[k>>2]=c[(c[h>>2]|0)+28>>2];c[q>>2]=(c[g>>2]|0)+344;c[(c[q>>2]|0)+16>>2]=c[h>>2];c[j>>2]=yd[c[(c[g>>2]|0)+508>>2]&31](c[g>>2]|0,1851878757,c[h>>2]|0,m)|0;if((c[j>>2]|0)!=0){s=c[j>>2]|0;i=f;return s|0}c[l>>2]=vp(c[h>>2]|0)|0;d=Gp(c[h>>2]|0,93992,c[q>>2]|0)|0;c[j>>2]=d;if((d|0)!=0){s=c[j>>2]|0;i=f;return s|0}c[n>>2]=(c[l>>2]|0)+6+((c[(c[q>>2]|0)+4>>2]|0)*12|0);c[o>>2]=(c[l>>2]|0)+(c[m>>2]|0);if((c[n>>2]|0)>>>0>(c[o>>2]|0)>>>0){c[j>>2]=145;s=c[j>>2]|0;i=f;return s|0}c[p>>2]=c[(c[q>>2]|0)+4>>2];c[(c[q>>2]|0)+4>>2]=0;m=Yn(c[k>>2]|0,20,0,c[p>>2]|0,0,j)|0;c[(c[q>>2]|0)+12>>2]=m;if((c[j>>2]|0)!=0){s=c[j>>2]|0;i=f;return s|0}m=yp(c[h>>2]|0,(c[p>>2]|0)*12|0)|0;c[j>>2]=m;if((m|0)!=0){s=c[j>>2]|0;i=f;return s|0}c[r>>2]=c[(c[q>>2]|0)+12>>2];while(1){if(!((c[p>>2]|0)>>>0>0)){break}m=Gp(c[h>>2]|0,94016,c[r>>2]|0)|0;c[j>>2]=m;do{if((m|0)==0?(e[(c[r>>2]|0)+8>>1]|0|0)!=0:0){k=(c[r>>2]|0)+12|0;c[k>>2]=(c[k>>2]|0)+((c[l>>2]|0)+(c[(c[q>>2]|0)+8>>2]|0));if(!((c[(c[r>>2]|0)+12>>2]|0)>>>0<(c[n>>2]|0)>>>0)?!(((c[(c[r>>2]|0)+12>>2]|0)+(e[(c[r>>2]|0)+8>>1]|0)|0)>>>0>(c[o>>2]|0)>>>0):0){c[r>>2]=(c[r>>2]|0)+20;break}c[(c[r>>2]|0)+12>>2]=0;b[(c[r>>2]|0)+8>>1]=0}}while(0);c[p>>2]=(c[p>>2]|0)+ -1}c[(c[q>>2]|0)+4>>2]=((c[r>>2]|0)-(c[(c[q>>2]|0)+12>>2]|0)|0)/20|0;Bp(c[h>>2]|0);b[(c[g>>2]|0)+340>>1]=c[(c[q>>2]|0)+4>>2];s=c[j>>2]|0;i=f;return s|0}function Ht(a){a=a|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=i;i=i+32|0;e=d+16|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;c[e>>2]=a;c[f>>2]=c[(c[(c[e>>2]|0)+96>>2]|0)+8>>2];c[g>>2]=(c[e>>2]|0)+344;c[h>>2]=c[(c[g>>2]|0)+12>>2];c[j>>2]=c[(c[g>>2]|0)+4>>2];if((c[(c[g>>2]|0)+12>>2]|0)==0){k=c[g>>2]|0;l=k+4|0;c[l>>2]=0;m=c[g>>2]|0;b[m>>1]=0;n=c[g>>2]|0;o=n+8|0;c[o>>2]=0;i=d;return}while(1){p=c[f>>2]|0;if(!((c[j>>2]|0)>>>0>0)){break}Vn(p,c[(c[h>>2]|0)+16>>2]|0);c[(c[h>>2]|0)+16>>2]=0;b[(c[h>>2]|0)+8>>1]=0;c[j>>2]=(c[j>>2]|0)+ -1;c[h>>2]=(c[h>>2]|0)+20}Vn(p,c[(c[g>>2]|0)+12>>2]|0);c[(c[g>>2]|0)+12>>2]=0;k=c[g>>2]|0;l=k+4|0;c[l>>2]=0;m=c[g>>2]|0;b[m>>1]=0;n=c[g>>2]|0;o=n+8|0;c[o>>2]=0;i=d;return}function It(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;f=i;i=i+80|0;g=f+68|0;h=f+64|0;j=f+60|0;k=f+56|0;l=f+52|0;m=f+48|0;n=f+44|0;o=f+40|0;p=f+36|0;q=f+32|0;r=f+24|0;s=f+20|0;t=f+16|0;u=f+12|0;v=f+8|0;w=f+4|0;x=f;y=f+28|0;c[g>>2]=b;c[h>>2]=e;c[p>>2]=0;c[q>>2]=0;c[j>>2]=yd[c[(c[g>>2]|0)+508>>2]&31](c[g>>2]|0,1801810542,c[h>>2]|0,k)|0;if((c[j>>2]|0)!=0){z=c[j>>2]|0;i=f;return z|0}if((c[k>>2]|0)>>>0<4){c[j>>2]=142;z=c[j>>2]|0;i=f;return z|0}e=xp(c[h>>2]|0,c[k>>2]|0,(c[g>>2]|0)+740|0)|0;c[j>>2]=e;if((e|0)!=0){z=c[j>>2]|0;i=f;return z|0}c[(c[g>>2]|0)+744>>2]=c[k>>2];c[l>>2]=c[(c[g>>2]|0)+740>>2];c[m>>2]=(c[l>>2]|0)+(c[k>>2]|0);c[l>>2]=(c[l>>2]|0)+2;c[l>>2]=(c[l>>2]|0)+2;k=((a[(c[l>>2]|0)+ -2|0]&255)<<8|(a[(c[l>>2]|0)+ -2+1|0]&255)<<0)&65535;c[o>>2]=k;c[o>>2]=(c[o>>2]|0)>>>0>32?32:k;c[n>>2]=0;while(1){if(!((c[n>>2]|0)>>>0<(c[o>>2]|0)>>>0)){break}c[v>>2]=1<<c[n>>2];if(((c[l>>2]|0)+6|0)>>>0>(c[m>>2]|0)>>>0){break}c[u>>2]=c[l>>2];c[l>>2]=(c[l>>2]|0)+2;c[l>>2]=(c[l>>2]|0)+2;c[s>>2]=((a[(c[l>>2]|0)+ -2|0]&255)<<8|(a[(c[l>>2]|0)+ -2+1|0]&255)<<0)&65535;c[l>>2]=(c[l>>2]|0)+2;c[t>>2]=((a[(c[l>>2]|0)+ -2|0]&255)<<8|(a[(c[l>>2]|0)+ -2+1|0]&255)<<0)&65535;if((c[s>>2]|0)>>>0<=6){break}c[u>>2]=(c[u>>2]|0)+(c[s>>2]|0);if((c[u>>2]|0)>>>0>(c[m>>2]|0)>>>0){c[u>>2]=c[m>>2]}if((c[t>>2]&-9|0)==1?!(((c[l>>2]|0)+8|0)>>>0>(c[m>>2]|0)>>>0):0){c[l>>2]=(c[l>>2]|0)+2;c[r>>2]=((a[(c[l>>2]|0)+ -2|0]&255)<<8|(a[(c[l>>2]|0)+ -2+1|0]&255)<<0)&65535;c[l>>2]=(c[l>>2]|0)+6;if(((c[u>>2]|0)-(c[l>>2]|0)|0)<((c[r>>2]|0)*6|0)){c[r>>2]=((c[u>>2]|0)-(c[l>>2]|0)|0)/6|0}c[p>>2]=c[p>>2]|c[v>>2];if((c[r>>2]|0)>>>0>0){c[l>>2]=(c[l>>2]|0)+4;c[x>>2]=(d[(c[l>>2]|0)+ -4|0]|0)<<24|(d[(c[l>>2]|0)+ -4+1|0]|0)<<16|(d[(c[l>>2]|0)+ -4+2|0]|0)<<8|(d[(c[l>>2]|0)+ -4+3|0]|0)<<0;c[l>>2]=(c[l>>2]|0)+2;c[w>>2]=(c[r>>2]|0)-1;while(1){if(!((c[w>>2]|0)>>>0>0)){break}c[l>>2]=(c[l>>2]|0)+4;c[y>>2]=(d[(c[l>>2]|0)+ -4|0]|0)<<24|(d[(c[l>>2]|0)+ -4+1|0]|0)<<16|(d[(c[l>>2]|0)+ -4+2|0]|0)<<8|(d[(c[l>>2]|0)+ -4+3|0]|0)<<0;if((c[y>>2]|0)>>>0<=(c[x>>2]|0)>>>0){break}c[l>>2]=(c[l>>2]|0)+2;c[x>>2]=c[y>>2];c[w>>2]=(c[w>>2]|0)+ -1}if((c[w>>2]|0)==0){c[q>>2]=c[q>>2]|c[v>>2]}}}c[l>>2]=c[u>>2];c[n>>2]=(c[n>>2]|0)+1}c[(c[g>>2]|0)+748>>2]=c[n>>2];c[(c[g>>2]|0)+752>>2]=c[p>>2];c[(c[g>>2]|0)+756>>2]=c[q>>2];z=c[j>>2]|0;i=f;return z|0}function Jt(a,d){a=a|0;d=d|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+32|0;g=f+24|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;m=f+16|0;n=f+20|0;c[g>>2]=a;c[h>>2]=d;c[k>>2]=c[(c[h>>2]|0)+28>>2];c[n>>2]=0;c[j>>2]=yd[c[(c[g>>2]|0)+508>>2]&31](c[g>>2]|0,1734439792,c[h>>2]|0,0)|0;if((c[j>>2]|0)!=0){o=c[j>>2]|0;i=f;return o|0}d=yp(c[h>>2]|0,4)|0;c[j>>2]=d;if((d|0)!=0){o=c[j>>2]|0;i=f;return o|0}d=Dp(c[h>>2]|0)|0;b[(c[g>>2]|0)+540>>1]=d;d=Dp(c[h>>2]|0)|0;b[(c[g>>2]|0)+542>>1]=d;Bp(c[h>>2]|0);d=(c[g>>2]|0)+542|0;if((e[(c[g>>2]|0)+540>>1]|0|0)>=2){b[d>>1]=0;c[j>>2]=8;o=c[j>>2]|0;i=f;return o|0}c[m>>2]=e[d>>1]|0;d=Yn(c[k>>2]|0,4,0,c[m>>2]|0,0,j)|0;c[(c[g>>2]|0)+544>>2]=d;if((c[j>>2]|0)!=0){o=c[j>>2]|0;i=f;return o|0}d=yp(c[h>>2]|0,c[m>>2]<<2)|0;c[j>>2]=d;if((d|0)!=0){o=c[j>>2]|0;i=f;return o|0}c[n>>2]=c[(c[g>>2]|0)+544>>2];c[l>>2]=0;while(1){p=c[h>>2]|0;if(!((c[l>>2]|0)>>>0<(c[m>>2]|0)>>>0)){break}g=Dp(p)|0;b[(c[n>>2]|0)+(c[l>>2]<<2)>>1]=g;g=Dp(c[h>>2]|0)|0;b[(c[n>>2]|0)+(c[l>>2]<<2)+2>>1]=g;c[l>>2]=(c[l>>2]|0)+1}Bp(p);o=c[j>>2]|0;i=f;return o|0}function Kt(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;e=d+12|0;f=d;g=d+4|0;h=d+8|0;c[e>>2]=a;c[f>>2]=b;c[h>>2]=(c[e>>2]|0)+548;c[g>>2]=yd[c[(c[e>>2]|0)+508>>2]&31](c[e>>2]|0,1346587732,c[f>>2]|0,0)|0;if((c[g>>2]|0)!=0){j=c[g>>2]|0;i=d;return j|0}c[g>>2]=Gp(c[f>>2]|0,93920,c[h>>2]|0)|0;j=c[g>>2]|0;i=d;return j|0}function Lt(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;b=fu(c[e>>2]|0,c[f>>2]|0,1651008868)|0;i=d;return b|0}function Mt(d,e,f,g,h,j,k){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;l=i;i=i+112|0;m=l+100|0;n=l+96|0;o=l+92|0;p=l+88|0;q=l+84|0;r=l+80|0;s=l+72|0;t=l+68|0;u=l+24|0;v=l;w=l+76|0;c[m>>2]=d;c[n>>2]=e;c[o>>2]=f;c[p>>2]=g;c[q>>2]=h;c[r>>2]=j;c[s>>2]=k;c[t>>2]=0;k=c[(c[m>>2]|0)+732>>2]|0;if((k|0)==3){c[t>>2]=_t(c[m>>2]|0,c[n>>2]|0,c[o>>2]|0,c[q>>2]|0,c[r>>2]|0,c[s>>2]|0)|0}else if((k|0)==2|(k|0)==1){c[t>>2]=Xt(u,c[m>>2]|0,c[n>>2]|0,c[s>>2]|0)|0;if((c[t>>2]|0)==0){c[t>>2]=Yt(u,c[o>>2]|0,0,0)|0;Zt(u)}}else{c[t>>2]=2}if((c[t>>2]|0)!=0){x=c[t>>2]|0;i=l;return x|0}if((c[p>>2]&1048576|0)!=0){x=c[t>>2]|0;i=l;return x|0}if((a[(c[r>>2]|0)+18|0]|0)!=7){x=c[t>>2]|0;i=l;return x|0}c[w>>2]=c[c[(c[m>>2]|0)+84>>2]>>2];Zp(v);c[t>>2]=$p(c[w>>2]|0,c[r>>2]|0,v,1)|0;if((c[t>>2]|0)!=0){aq(c[w>>2]|0,v)|0;x=c[t>>2]|0;i=l;return x|0}else{a[(c[r>>2]|0)+18|0]=a[v+18|0]|0;c[(c[r>>2]|0)+8>>2]=c[v+8>>2];b[(c[r>>2]|0)+16>>1]=b[v+16>>1]|0;mo(c[(c[m>>2]|0)+84>>2]|0,c[v+12>>2]|0);v=(c[(c[(c[m>>2]|0)+84>>2]|0)+156>>2]|0)+4|0;c[v>>2]=c[v>>2]|1;x=c[t>>2]|0;i=l;return x|0}return 0}function Nt(d){d=d|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+32|0;g=f+20|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;m=f+24|0;n=f+16|0;c[g>>2]=d;c[h>>2]=c[(c[g>>2]|0)+100>>2];c[j>>2]=(c[g>>2]|0)+612;if((a[c[j>>2]|0]|0)==0){o=c[j>>2]|0;a[o]=0;i=f;return}c[k>>2]=c[(c[g>>2]|0)+468>>2];if((c[k>>2]|0)!=131072){if((c[k>>2]|0)!=163840){o=c[j>>2]|0;a[o]=0;i=f;return}c[n>>2]=(c[j>>2]|0)+4;Vn(c[h>>2]|0,c[(c[n>>2]|0)+4>>2]|0);c[(c[n>>2]|0)+4>>2]=0;b[c[n>>2]>>1]=0;o=c[j>>2]|0;a[o]=0;i=f;return}c[l>>2]=(c[j>>2]|0)+4;Vn(c[h>>2]|0,c[(c[l>>2]|0)+4>>2]|0);c[(c[l>>2]|0)+4>>2]=0;b[c[l>>2]>>1]=0;b[m>>1]=0;while(1){p=c[h>>2]|0;if((e[m>>1]|0)>=(e[(c[l>>2]|0)+2>>1]|0)){break}Vn(p,c[(c[(c[l>>2]|0)+8>>2]|0)+(e[m>>1]<<2)>>2]|0);c[(c[(c[l>>2]|0)+8>>2]|0)+(e[m>>1]<<2)>>2]=0;b[m>>1]=(b[m>>1]|0)+1<<16>>16}Vn(p,c[(c[l>>2]|0)+8>>2]|0);c[(c[l>>2]|0)+8>>2]=0;b[(c[l>>2]|0)+2>>1]=0;o=c[j>>2]|0;a[o]=0;i=f;return}function Ot(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;g=i;i=i+96|0;h=g+88|0;j=g+84|0;k=g+80|0;l=g+76|0;m=g+72|0;n=g+68|0;o=g+64|0;p=g+60|0;q=g+56|0;r=g+52|0;s=g+48|0;t=g+44|0;u=g+16|0;v=g;w=g+4|0;x=g+8|0;y=g+12|0;z=g+20|0;A=g+24|0;B=g+28|0;C=g+32|0;D=g+36|0;E=g+40|0;c[h>>2]=b;c[j>>2]=e;c[k>>2]=f;c[l>>2]=0;c[o>>2]=c[(c[h>>2]|0)+740>>2];c[p>>2]=(c[o>>2]|0)+(c[(c[h>>2]|0)+744>>2]|0);c[o>>2]=(c[o>>2]|0)+4;c[n>>2]=1;c[m>>2]=c[(c[h>>2]|0)+748>>2];while(1){if(!((c[m>>2]|0)>>>0>0)){F=28;break}if(!(((c[o>>2]|0)+6|0)>>>0<=(c[p>>2]|0)>>>0)){F=28;break}c[q>>2]=c[o>>2];c[o>>2]=(c[o>>2]|0)+2;c[s>>2]=((a[(c[o>>2]|0)+ -2|0]&255)<<8|(a[(c[o>>2]|0)+ -2+1|0]&255)<<0)&65535;c[o>>2]=(c[o>>2]|0)+2;c[t>>2]=((a[(c[o>>2]|0)+ -2|0]&255)<<8|(a[(c[o>>2]|0)+ -2+1|0]&255)<<0)&65535;c[o>>2]=(c[o>>2]|0)+2;c[u>>2]=((a[(c[o>>2]|0)+ -2|0]&255)<<8|(a[(c[o>>2]|0)+ -2+1|0]&255)<<0)&65535;c[w>>2]=0;c[s>>2]=c[s>>2];c[r>>2]=(c[q>>2]|0)+(c[t>>2]|0);if((c[r>>2]|0)>>>0>(c[p>>2]|0)>>>0){c[r>>2]=c[p>>2]}a:do{if((c[(c[h>>2]|0)+752>>2]&c[n>>2]|0)!=0?!(((c[o>>2]|0)+8|0)>>>0>(c[r>>2]|0)>>>0):0){c[o>>2]=(c[o>>2]|0)+2;c[v>>2]=((a[(c[o>>2]|0)+ -2|0]&255)<<8|(a[(c[o>>2]|0)+ -2+1|0]&255)<<0)&65535;c[o>>2]=(c[o>>2]|0)+6;if(((c[r>>2]|0)-(c[o>>2]|0)|0)<((c[v>>2]|0)*6|0)){c[v>>2]=((c[r>>2]|0)-(c[o>>2]|0)|0)/6|0}if(((c[u>>2]|0)>>>8|0)==0){c[x>>2]=c[j>>2]<<16|c[k>>2];if((c[(c[h>>2]|0)+756>>2]&c[n>>2]|0)!=0){c[y>>2]=0;c[z>>2]=c[v>>2];while(1){if(!((c[y>>2]|0)>>>0<(c[z>>2]|0)>>>0)){break a}c[A>>2]=((c[y>>2]|0)+(c[z>>2]|0)|0)>>>1;c[B>>2]=(c[o>>2]|0)+((c[A>>2]|0)*6|0);c[B>>2]=(c[B>>2]|0)+4;c[C>>2]=(d[(c[B>>2]|0)+ -4|0]|0)<<24|(d[(c[B>>2]|0)+ -4+1|0]|0)<<16|(d[(c[B>>2]|0)+ -4+2|0]|0)<<8|(d[(c[B>>2]|0)+ -4+3|0]|0)<<0;if((c[C>>2]|0)==(c[x>>2]|0)){break}f=c[A>>2]|0;if((c[C>>2]|0)>>>0<(c[x>>2]|0)>>>0){c[y>>2]=f+1;continue}else{c[z>>2]=f;continue}}c[w>>2]=(((a[c[B>>2]|0]&255)<<8|(a[(c[B>>2]|0)+1|0]&255)<<0)&65535)<<16>>16}else{c[D>>2]=c[v>>2];while(1){if(!((c[D>>2]|0)>>>0>0)){break a}c[o>>2]=(c[o>>2]|0)+4;c[E>>2]=(d[(c[o>>2]|0)+ -4|0]|0)<<24|(d[(c[o>>2]|0)+ -4+1|0]|0)<<16|(d[(c[o>>2]|0)+ -4+2|0]|0)<<8|(d[(c[o>>2]|0)+ -4+3|0]|0)<<0;G=c[o>>2]|0;if((c[E>>2]|0)==(c[x>>2]|0)){break}c[o>>2]=G+2;c[D>>2]=(c[D>>2]|0)+ -1}c[w>>2]=(((a[G]&255)<<8|(a[(c[o>>2]|0)+1|0]&255)<<0)&65535)<<16>>16}f=c[w>>2]|0;if((c[u>>2]&8|0)!=0){c[l>>2]=f;break}else{c[l>>2]=(c[l>>2]|0)+f;break}}}}while(0);c[o>>2]=c[r>>2];c[m>>2]=(c[m>>2]|0)+ -1;c[n>>2]=c[n>>2]<<1}if((F|0)==28){i=g;return c[l>>2]|0}return 0}function Pt(a,d){a=a|0;d=d|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+48|0;g=f+40|0;h=f;j=f+8|0;k=f+24|0;l=f+28|0;m=f+32|0;n=f+36|0;c[g>>2]=a;c[h>>2]=d;c[l>>2]=c[(c[h>>2]|0)+28>>2];c[j+12>>2]=vp(c[h>>2]|0)|0;c[j>>2]=up(c[h>>2]|0,k)|0;if((c[k>>2]|0)!=0){o=c[k>>2]|0;i=f;return o|0}d=Gp(c[h>>2]|0,93784,j)|0;c[k>>2]=d;if((d|0)!=0){o=c[k>>2]|0;i=f;return o|0}if((c[j>>2]|0)!=1330926671?(c[k>>2]=Wt(j,c[h>>2]|0)|0,(c[k>>2]|0)!=0):0){o=c[k>>2]|0;i=f;return o|0}b[(c[g>>2]|0)+152>>1]=b[j+4>>1]|0;c[(c[g>>2]|0)+148>>2]=c[j>>2];d=Yn(c[l>>2]|0,16,0,e[(c[g>>2]|0)+152>>1]|0,0,k)|0;c[(c[g>>2]|0)+156>>2]=d;if((c[k>>2]|0)!=0){o=c[k>>2]|0;i=f;return o|0}d=qp(c[h>>2]|0,(c[j+12>>2]|0)+12|0)|0;c[k>>2]=d;if((d|0)!=0){o=c[k>>2]|0;i=f;return o|0}d=yp(c[h>>2]|0,(e[(c[g>>2]|0)+152>>1]|0)<<4)|0;c[k>>2]=d;if((d|0)!=0){o=c[k>>2]|0;i=f;return o|0}c[m>>2]=c[(c[g>>2]|0)+156>>2];c[n>>2]=0;while(1){p=c[h>>2]|0;if((c[n>>2]|0)>=(e[j+4>>1]|0|0)){break}g=Ep(p)|0;c[c[m>>2]>>2]=g;g=Ep(c[h>>2]|0)|0;c[(c[m>>2]|0)+4>>2]=g;g=Ep(c[h>>2]|0)|0;c[(c[m>>2]|0)+8>>2]=g;g=Ep(c[h>>2]|0)|0;c[(c[m>>2]|0)+12>>2]=g;if(!(((c[(c[m>>2]|0)+8>>2]|0)+(c[(c[m>>2]|0)+12>>2]|0)|0)>>>0>(c[(c[h>>2]|0)+4>>2]|0)>>>0)){c[m>>2]=(c[m>>2]|0)+16}c[n>>2]=(c[n>>2]|0)+1}Bp(p);o=c[k>>2]|0;i=f;return o|0}function Qt(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+32|0;g=f+24|0;h=f;j=f+28|0;k=f+8|0;l=f+12|0;m=f+16|0;n=f+20|0;o=f+4|0;c[g>>2]=b;c[h>>2]=d;a[j]=e;if((a[j]|0)!=0){c[l>>2]=1986884728;c[n>>2]=(c[g>>2]|0)+788;c[o>>2]=(c[g>>2]|0)+692}else{c[l>>2]=1752003704;c[n>>2]=(c[g>>2]|0)+784;c[o>>2]=(c[g>>2]|0)+684}c[k>>2]=yd[c[(c[g>>2]|0)+508>>2]&31](c[g>>2]|0,c[l>>2]|0,c[h>>2]|0,m)|0;if((c[k>>2]|0)!=0){p=c[k>>2]|0;i=f;return p|0}c[c[o>>2]>>2]=c[m>>2];m=vp(c[h>>2]|0)|0;c[c[n>>2]>>2]=m;p=c[k>>2]|0;i=f;return p|0}function Rt(a,f){a=a|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;g=i;i=i+48|0;h=g+40|0;j=g+36|0;k=g+32|0;l=g+28|0;m=g+24|0;n=g+16|0;o=g+12|0;p=g+8|0;q=g+4|0;r=g+46|0;s=g+44|0;t=g;u=g+20|0;c[j>>2]=a;c[k>>2]=f;c[(c[j>>2]|0)+724>>2]=0;c[(c[j>>2]|0)+728>>2]=0;c[(c[j>>2]|0)+732>>2]=0;c[(c[j>>2]|0)+736>>2]=0;c[l>>2]=yd[c[(c[j>>2]|0)+508>>2]&31](c[j>>2]|0,1128418371,c[k>>2]|0,m)|0;f=c[j>>2]|0;if((c[l>>2]|0)!=0){c[l>>2]=yd[c[f+508>>2]&31](c[j>>2]|0,1161972803,c[k>>2]|0,m)|0;if((c[l>>2]|0)!=0){c[l>>2]=yd[c[(c[j>>2]|0)+508>>2]&31](c[j>>2]|0,1651273571,c[k>>2]|0,m)|0}if((c[l>>2]|0)==0){c[(c[j>>2]|0)+732>>2]=1}}else{c[f+732>>2]=2}if((c[l>>2]|0)!=0?(c[l>>2]=yd[c[(c[j>>2]|0)+508>>2]&31](c[j>>2]|0,1935829368,c[k>>2]|0,m)|0,(c[l>>2]|0)==0):0){c[(c[j>>2]|0)+732>>2]=3}a:do{if((c[l>>2]|0)==0){if((c[m>>2]|0)>>>0<8){c[l>>2]=3;break}f=c[(c[j>>2]|0)+732>>2]|0;do{if((f|0)==3){a=yp(c[k>>2]|0,8)|0;c[l>>2]=a;if((a|0)!=0){break a}b[r>>1]=Dp(c[k>>2]|0)|0;b[s>>1]=Dp(c[k>>2]|0)|0;c[t>>2]=Ep(c[k>>2]|0)|0;Bp(c[k>>2]|0);if((e[r>>1]|0|0)<1){c[l>>2]=2;break a}if((e[s>>1]|0|0)==1?!((c[t>>2]|0)>>>0>=65536):0){c[u>>2]=c[t>>2];if((8+(c[u>>2]<<2)|0)>>>0>(c[m>>2]|0)>>>0){c[u>>2]=(((c[m>>2]|0)-8|0)>>>0)/4|0}a=c[k>>2]|0;v=qp(a,(vp(c[k>>2]|0)|0)-8|0)|0;c[l>>2]=v;if((v|0)!=0){break a}c[(c[j>>2]|0)+728>>2]=8+(c[u>>2]<<2);v=xp(c[k>>2]|0,c[(c[j>>2]|0)+728>>2]|0,(c[j>>2]|0)+724|0)|0;c[l>>2]=v;if((v|0)!=0){break a}c[(c[j>>2]|0)+736>>2]=c[u>>2];break}c[l>>2]=3;break a}else if((f|0)==2|(f|0)==1){v=xp(c[k>>2]|0,c[m>>2]|0,(c[j>>2]|0)+724|0)|0;c[l>>2]=v;if((v|0)!=0){break a}c[(c[j>>2]|0)+728>>2]=c[m>>2];c[n>>2]=c[(c[j>>2]|0)+724>>2];c[n>>2]=(c[n>>2]|0)+4;c[o>>2]=(d[(c[n>>2]|0)+ -4|0]|0)<<24|(d[(c[n>>2]|0)+ -4+1|0]|0)<<16|(d[(c[n>>2]|0)+ -4+2|0]|0)<<8|(d[(c[n>>2]|0)+ -4+3|0]|0)<<0;c[n>>2]=(c[n>>2]|0)+4;c[p>>2]=(d[(c[n>>2]|0)+ -4|0]|0)<<24|(d[(c[n>>2]|0)+ -4+1|0]|0)<<16|(d[(c[n>>2]|0)+ -4+2|0]|0)<<8|(d[(c[n>>2]|0)+ -4+3|0]|0)<<0;if((c[o>>2]&-65536|0)!=131072){c[l>>2]=2;break a}if((c[p>>2]|0)>>>0>=65536){c[l>>2]=3;break a}c[q>>2]=c[p>>2];if((8+((c[q>>2]|0)*48|0)|0)>>>0>(c[m>>2]|0)>>>0){c[q>>2]=(((c[m>>2]|0)-8|0)>>>0)/48|0}c[(c[j>>2]|0)+736>>2]=c[q>>2]}else{c[l>>2]=2}}while(0);c[h>>2]=0;w=c[h>>2]|0;i=g;return w|0}}while(0);if((c[l>>2]|0)!=0){if((c[(c[j>>2]|0)+724>>2]|0)!=0){zp(c[k>>2]|0,(c[j>>2]|0)+724|0)}c[(c[j>>2]|0)+728>>2]=0;c[(c[j>>2]|0)+732>>2]=0}c[h>>2]=c[l>>2];w=c[h>>2]|0;i=g;return w|0}function St(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b+4|0;e=b;c[d>>2]=a;c[e>>2]=c[(c[d>>2]|0)+104>>2];zp(c[e>>2]|0,(c[d>>2]|0)+724|0);c[(c[d>>2]|0)+728>>2]=0;c[(c[d>>2]|0)+732>>2]=0;c[(c[d>>2]|0)+736>>2]=0;i=b;return}function Tt(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;d=Mo(c[f>>2]|0,c[g>>2]|0,0,c[h>>2]|0)|0;i=e;return d|0}function Ut(f,g,h){f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;j=i;i=i+64|0;k=j+52|0;l=j+48|0;m=j+44|0;n=j+40|0;o=j+36|0;p=j+32|0;q=j+28|0;r=j+24|0;s=j+16|0;t=j+12|0;u=j+8|0;v=j+4|0;w=j;x=j+20|0;c[l>>2]=f;c[m>>2]=g;c[n>>2]=h;if((c[m>>2]|0)>>>0>=(c[(c[l>>2]|0)+736>>2]|0)>>>0){c[k>>2]=6;y=c[k>>2]|0;i=j;return y|0}h=c[(c[l>>2]|0)+732>>2]|0;if((h|0)==3){c[p>>2]=c[(c[l>>2]|0)+104>>2];c[x>>2]=(c[(c[l>>2]|0)+724>>2]|0)+8+(c[m>>2]<<2);c[x>>2]=(c[x>>2]|0)+4;c[q>>2]=d[(c[x>>2]|0)+ -4|0]<<24|d[(c[x>>2]|0)+ -4+1|0]<<16|d[(c[x>>2]|0)+ -4+2|0]<<8|d[(c[x>>2]|0)+ -4+3|0]<<0;c[w>>2]=yd[c[(c[l>>2]|0)+508>>2]&31](c[l>>2]|0,1935829368,c[p>>2]|0,v)|0;if((c[w>>2]|0)!=0){c[k>>2]=c[w>>2];y=c[k>>2]|0;i=j;return y|0}if(((c[q>>2]|0)+4|0)>>>0>(c[v>>2]|0)>>>0){c[k>>2]=3;y=c[k>>2]|0;i=j;return y|0}v=c[p>>2]|0;x=vp(c[p>>2]|0)|0;g=qp(v,x+(c[q>>2]|0)|0)|0;c[w>>2]=g;if((g|0)==0?(g=yp(c[p>>2]|0,4)|0,c[w>>2]=g,(g|0)==0):0){c[r>>2]=(Dp(c[p>>2]|0)|0)&65535;c[s>>2]=(Dp(c[p>>2]|0)|0)&65535;c[s>>2]=c[s>>2];Bp(c[p>>2]|0);c[t>>2]=e[(c[l>>2]|0)+178>>1]|0;c[u>>2]=(c[l>>2]|0)+216;b[c[n>>2]>>1]=c[r>>2];b[(c[n>>2]|0)+2>>1]=c[r>>2];p=(aa(c[r>>2]|0,b[(c[u>>2]|0)+4>>1]|0)|0)<<6;c[(c[n>>2]|0)+12>>2]=(p>>>0)/((c[t>>2]|0)>>>0)|0;p=(aa(c[r>>2]|0,b[(c[u>>2]|0)+6>>1]|0)|0)<<6;c[(c[n>>2]|0)+16>>2]=(p>>>0)/((c[t>>2]|0)>>>0)|0;p=(aa(c[r>>2]|0,(b[(c[u>>2]|0)+4>>1]|0)-(b[(c[u>>2]|0)+6>>1]|0)+(b[(c[u>>2]|0)+8>>1]|0)|0)|0)<<6;c[(c[n>>2]|0)+20>>2]=(p>>>0)/((c[t>>2]|0)>>>0)|0;p=(aa(c[r>>2]|0,e[(c[u>>2]|0)+10>>1]|0)|0)<<6;c[(c[n>>2]|0)+24>>2]=(p>>>0)/((c[t>>2]|0)>>>0)|0;c[k>>2]=c[w>>2];y=c[k>>2]|0;i=j;return y|0}c[k>>2]=c[w>>2];y=c[k>>2]|0;i=j;return y|0}else if((h|0)==2|(h|0)==1){c[o>>2]=(c[(c[l>>2]|0)+724>>2]|0)+8+((c[m>>2]|0)*48|0);b[c[n>>2]>>1]=d[(c[o>>2]|0)+44|0]|0;b[(c[n>>2]|0)+2>>1]=d[(c[o>>2]|0)+45|0]|0;c[(c[n>>2]|0)+12>>2]=a[(c[o>>2]|0)+16|0]<<6;c[(c[n>>2]|0)+16>>2]=a[(c[o>>2]|0)+17|0]<<6;c[(c[n>>2]|0)+20>>2]=(c[(c[n>>2]|0)+12>>2]|0)-(c[(c[n>>2]|0)+16>>2]|0);c[(c[n>>2]|0)+24>>2]=(a[(c[o>>2]|0)+22|0]|0)+(d[(c[o>>2]|0)+18|0]|0)+(a[(c[o>>2]|0)+23|0]|0)<<6;c[k>>2]=0;y=c[k>>2]|0;i=j;return y|0}else{c[k>>2]=2;y=c[k>>2]|0;i=j;return y|0}return 0}function Vt(d,f,g,h,j){d=d|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;k=i;i=i+48|0;l=k+40|0;m=k+46|0;n=k+36|0;o=k+32|0;p=k+28|0;q=k+24|0;r=k+20|0;s=k+12|0;t=k+8|0;u=k+4|0;v=k;w=k+44|0;x=k+16|0;c[l>>2]=d;a[m]=f;c[n>>2]=g;c[o>>2]=h;c[p>>2]=j;c[r>>2]=c[(c[l>>2]|0)+104>>2];j=c[l>>2]|0;if((a[m]|0)!=0){c[x>>2]=j+296;c[s>>2]=c[x>>2];c[t>>2]=c[(c[l>>2]|0)+788>>2];c[u>>2]=c[(c[l>>2]|0)+692>>2]}else{c[s>>2]=j+216;c[t>>2]=c[(c[l>>2]|0)+784>>2];c[u>>2]=c[(c[l>>2]|0)+684>>2]}c[v>>2]=(c[t>>2]|0)+(c[u>>2]|0);b[w>>1]=b[(c[s>>2]|0)+34>>1]|0;do{if((e[w>>1]|0)>0){if((c[n>>2]|0)>>>0<(e[w>>1]|0)>>>0){c[t>>2]=(c[t>>2]|0)+(c[n>>2]<<2);if(((c[t>>2]|0)+4|0)>>>0>(c[v>>2]|0)>>>0){break}s=qp(c[r>>2]|0,c[t>>2]|0)|0;c[q>>2]=s;if((s|0)!=0){break}s=tp(c[r>>2]|0,q)|0;b[c[p>>2]>>1]=s;if((c[q>>2]|0)!=0){break}s=tp(c[r>>2]|0,q)|0;b[c[o>>2]>>1]=s;if((c[q>>2]|0)!=0){break}i=k;return 0}c[t>>2]=(c[t>>2]|0)+((e[w>>1]|0)-1<<2);if((!(((c[t>>2]|0)+4|0)>>>0>(c[v>>2]|0)>>>0)?(s=qp(c[r>>2]|0,c[t>>2]|0)|0,c[q>>2]=s,(s|0)==0):0)?(s=tp(c[r>>2]|0,q)|0,b[c[p>>2]>>1]=s,(c[q>>2]|0)==0):0){c[t>>2]=(c[t>>2]|0)+(4+((c[n>>2]|0)-(e[w>>1]|0)<<1));if(((c[t>>2]|0)+2|0)>>>0>(c[v>>2]|0)>>>0){b[c[o>>2]>>1]=0;i=k;return 0}s=qp(c[r>>2]|0,c[t>>2]|0)|0;c[q>>2]=s;if((s|0)!=0){i=k;return 0}s=tp(c[r>>2]|0,q)|0;b[c[o>>2]>>1]=s;i=k;return 0}}}while(0);b[c[o>>2]>>1]=0;b[c[p>>2]>>1]=0;i=k;return 0}function Wt(a,d){a=a|0;d=d|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;f=i;i=i+64|0;g=f+44|0;h=f+36|0;j=f+40|0;k=f+48|0;l=f+50|0;m=f+32|0;n=f+24|0;o=f+20|0;p=f+16|0;q=f;r=f+28|0;c[g>>2]=a;c[h>>2]=d;b[l>>1]=0;c[m>>2]=0;c[n>>2]=0;c[o>>2]=0;c[p>>2]=(c[(c[g>>2]|0)+12>>2]|0)+12;d=qp(c[h>>2]|0,c[p>>2]|0)|0;c[j>>2]=d;if((d|0)!=0){s=c[j>>2]|0;i=f;return s|0}b[k>>1]=0;a:while(1){if((e[k>>1]|0|0)>=(e[(c[g>>2]|0)+4>>1]|0|0)){break}d=Gp(c[h>>2]|0,93808,q)|0;c[j>>2]=d;if((d|0)!=0){t=5;break}do{if(!(((c[q+8>>2]|0)+(c[q+12>>2]|0)|0)>>>0>(c[(c[h>>2]|0)+4>>2]|0)>>>0)){b[l>>1]=(b[l>>1]|0)+1<<16>>16;if((c[q>>2]|0)!=1751474532?(c[q>>2]|0)!=1651008868:0){if((c[q>>2]|0)==1397313095){c[n>>2]=1;break}if((c[q>>2]|0)!=1296389185){break}c[o>>2]=1;break}c[m>>2]=1;if((c[q+12>>2]|0)>>>0<54){t=10;break a}d=qp(c[h>>2]|0,(c[q+8>>2]|0)+12|0)|0;c[j>>2]=d;if((d|0)!=0){t=26;break a}c[r>>2]=up(c[h>>2]|0,j)|0;if((c[j>>2]|0)!=0){t=26;break a}d=qp(c[h>>2]|0,(c[p>>2]|0)+((e[k>>1]|0)+1<<4)|0)|0;c[j>>2]=d;if((d|0)!=0){t=26;break a}}}while(0);b[k>>1]=(b[k>>1]|0)+1<<16>>16}if((t|0)==5){b[k>>1]=(b[k>>1]|0)+ -1<<16>>16;b[(c[g>>2]|0)+4>>1]=b[k>>1]|0}else if((t|0)==10){c[j>>2]=142;s=c[j>>2]|0;i=f;return s|0}else if((t|0)==26){s=c[j>>2]|0;i=f;return s|0}b[(c[g>>2]|0)+4>>1]=b[l>>1]|0;if((e[(c[g>>2]|0)+4>>1]|0|0)==0){c[j>>2]=2;s=c[j>>2]|0;i=f;return s|0}do{if((c[m>>2]|0)==0){if((c[n>>2]|0)!=0?(c[o>>2]|0)!=0:0){break}c[j>>2]=142;s=c[j>>2]|0;i=f;return s|0}}while(0);c[j>>2]=0;s=c[j>>2]|0;i=f;return s|0}function Xt(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;h=i;i=i+32|0;j=h+28|0;k=h;l=h+4|0;m=h+8|0;n=h+12|0;o=h+16|0;p=h+20|0;q=h+24|0;c[j>>2]=b;c[k>>2]=e;c[l>>2]=f;c[m>>2]=g;c[o>>2]=c[(c[k>>2]|0)+104>>2];c[n>>2]=yd[c[(c[k>>2]|0)+508>>2]&31](c[k>>2]|0,1128416340,c[o>>2]|0,p)|0;if((c[n>>2]|0)!=0){c[n>>2]=yd[c[(c[k>>2]|0)+508>>2]&31](c[k>>2]|0,1161970772,c[o>>2]|0,p)|0}if((c[n>>2]|0)!=0){c[n>>2]=yd[c[(c[k>>2]|0)+508>>2]&31](c[k>>2]|0,1650745716,c[o>>2]|0,p)|0}if((c[n>>2]|0)!=0){r=c[n>>2]|0;i=h;return r|0}c[c[j>>2]>>2]=c[k>>2];c[(c[j>>2]|0)+4>>2]=c[o>>2];c[(c[j>>2]|0)+8>>2]=(c[(c[k>>2]|0)+84>>2]|0)+76;c[(c[j>>2]|0)+12>>2]=c[m>>2];a[(c[j>>2]|0)+16|0]=0;a[(c[j>>2]|0)+17|0]=0;m=vp(c[o>>2]|0)|0;c[(c[j>>2]|0)+20>>2]=m;c[(c[j>>2]|0)+24>>2]=c[p>>2];c[(c[j>>2]|0)+36>>2]=c[(c[k>>2]|0)+724>>2];c[(c[j>>2]|0)+40>>2]=(c[(c[k>>2]|0)+724>>2]|0)+(c[(c[k>>2]|0)+728>>2]|0);if((55+((c[l>>2]|0)*48|0)|0)>>>0>(c[(c[k>>2]|0)+728>>2]|0)>>>0){c[n>>2]=3;r=c[n>>2]|0;i=h;return r|0}c[q>>2]=(c[(c[j>>2]|0)+36>>2]|0)+8+((c[l>>2]|0)*48|0);c[q>>2]=(c[q>>2]|0)+4;c[(c[j>>2]|0)+28>>2]=(d[(c[q>>2]|0)+ -4|0]|0)<<24|(d[(c[q>>2]|0)+ -4+1|0]|0)<<16|(d[(c[q>>2]|0)+ -4+2|0]|0)<<8|(d[(c[q>>2]|0)+ -4+3|0]|0)<<0;c[q>>2]=(c[q>>2]|0)+4;c[q>>2]=(c[q>>2]|0)+4;c[(c[j>>2]|0)+32>>2]=(d[(c[q>>2]|0)+ -4|0]|0)<<24|(d[(c[q>>2]|0)+ -4+1|0]|0)<<16|(d[(c[q>>2]|0)+ -4+2|0]|0)<<8|(d[(c[q>>2]|0)+ -4+3|0]|0)<<0;c[q>>2]=(c[q>>2]|0)+34;a[(c[j>>2]|0)+18|0]=a[c[q>>2]|0]|0;if(!((c[(c[j>>2]|0)+28>>2]|0)>>>0>(c[(c[k>>2]|0)+728>>2]|0)>>>0)?!(((c[(c[j>>2]|0)+28>>2]|0)+(c[(c[j>>2]|0)+32>>2]<<3)|0)>>>0>(c[(c[k>>2]|0)+728>>2]|0)>>>0):0){r=c[n>>2]|0;i=h;return r|0}c[n>>2]=3;r=c[n>>2]|0;i=h;return r|0}function Yt(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;h=i;i=i+96|0;j=h+88|0;k=h+84|0;l=h+80|0;m=h+76|0;n=h+72|0;o=h+68|0;p=h+64|0;q=h+60|0;r=h+56|0;s=h+52|0;t=h+48|0;u=h+44|0;v=h+16|0;w=h;x=h+4|0;y=h+8|0;z=h+12|0;A=h+20|0;B=h+24|0;C=h+28|0;D=h+32|0;E=h+36|0;F=h+40|0;c[k>>2]=b;c[l>>2]=e;c[m>>2]=f;c[n>>2]=g;c[o>>2]=(c[(c[k>>2]|0)+36>>2]|0)+(c[(c[k>>2]|0)+28>>2]|0);c[p>>2]=c[(c[k>>2]|0)+40>>2];c[q>>2]=c[(c[k>>2]|0)+32>>2];c[v>>2]=0;c[w>>2]=0;while(1){if(!((c[q>>2]|0)>>>0>0)){break}c[o>>2]=(c[o>>2]|0)+2;c[r>>2]=((a[(c[o>>2]|0)+ -2|0]&255)<<8|(a[(c[o>>2]|0)+ -2+1|0]&255)<<0)&65535;c[o>>2]=(c[o>>2]|0)+2;c[s>>2]=((a[(c[o>>2]|0)+ -2|0]&255)<<8|(a[(c[o>>2]|0)+ -2+1|0]&255)<<0)&65535;if((c[l>>2]|0)>>>0>=(c[r>>2]|0)>>>0?(c[l>>2]|0)>>>0<=(c[s>>2]|0)>>>0:0){G=6;break}c[o>>2]=(c[o>>2]|0)+4;c[q>>2]=(c[q>>2]|0)+ -1}a:do{if((G|0)==6){c[o>>2]=(c[o>>2]|0)+4;c[x>>2]=(d[(c[o>>2]|0)+ -4|0]|0)<<24|(d[(c[o>>2]|0)+ -4+1|0]|0)<<16|(d[(c[o>>2]|0)+ -4+2|0]|0)<<8|(d[(c[o>>2]|0)+ -4+3|0]|0)<<0;c[o>>2]=(c[(c[k>>2]|0)+36>>2]|0)+(c[(c[k>>2]|0)+28>>2]|0);if((c[x>>2]|0)>>>0>((c[p>>2]|0)-(c[o>>2]|0)|0)>>>0){c[j>>2]=8;H=c[j>>2]|0;i=h;return H|0}c[o>>2]=(c[o>>2]|0)+(c[x>>2]|0);if(!(((c[o>>2]|0)+8|0)>>>0>(c[p>>2]|0)>>>0)){c[o>>2]=(c[o>>2]|0)+2;c[t>>2]=((a[(c[o>>2]|0)+ -2|0]&255)<<8|(a[(c[o>>2]|0)+ -2+1|0]&255)<<0)&65535;c[o>>2]=(c[o>>2]|0)+2;c[u>>2]=((a[(c[o>>2]|0)+ -2|0]&255)<<8|(a[(c[o>>2]|0)+ -2+1|0]&255)<<0)&65535;c[o>>2]=(c[o>>2]|0)+4;c[x>>2]=(d[(c[o>>2]|0)+ -4|0]|0)<<24|(d[(c[o>>2]|0)+ -4+1|0]|0)<<16|(d[(c[o>>2]|0)+ -4+2|0]|0)<<8|(d[(c[o>>2]|0)+ -4+3|0]|0)<<0;switch(c[t>>2]|0){case 3:{c[o>>2]=(c[o>>2]|0)+((c[l>>2]|0)-(c[r>>2]|0)<<1);if(((c[o>>2]|0)+4|0)>>>0>(c[p>>2]|0)>>>0){break a}c[o>>2]=(c[o>>2]|0)+2;c[v>>2]=((a[(c[o>>2]|0)+ -2|0]&255)<<8|(a[(c[o>>2]|0)+ -2+1|0]&255)<<0)&65535;c[o>>2]=(c[o>>2]|0)+2;c[w>>2]=((a[(c[o>>2]|0)+ -2|0]&255)<<8|(a[(c[o>>2]|0)+ -2+1|0]&255)<<0)&65535;if((c[v>>2]|0)==(c[w>>2]|0)){break a}break};case 2:{if(((c[o>>2]|0)+12|0)>>>0>(c[p>>2]|0)>>>0){break a}c[o>>2]=(c[o>>2]|0)+4;c[y>>2]=(d[(c[o>>2]|0)+ -4|0]|0)<<24|(d[(c[o>>2]|0)+ -4+1|0]|0)<<16|(d[(c[o>>2]|0)+ -4+2|0]|0)<<8|(d[(c[o>>2]|0)+ -4+3|0]|0)<<0;if(($t(c[k>>2]|0,o,c[p>>2]|0,1)|0)!=0){break a}c[v>>2]=aa(c[y>>2]|0,(c[l>>2]|0)-(c[r>>2]|0)|0)|0;c[w>>2]=(c[v>>2]|0)+(c[y>>2]|0);break};case 4:{if(((c[o>>2]|0)+4|0)>>>0>(c[p>>2]|0)>>>0){break a}c[o>>2]=(c[o>>2]|0)+4;c[A>>2]=(d[(c[o>>2]|0)+ -4|0]|0)<<24|(d[(c[o>>2]|0)+ -4+1|0]|0)<<16|(d[(c[o>>2]|0)+ -4+2|0]|0)<<8|(d[(c[o>>2]|0)+ -4+3|0]|0)<<0;if((c[A>>2]|0)>>>0>(((c[p>>2]|0)-(c[o>>2]|0)>>2)-1|0)>>>0){break a}c[z>>2]=0;while(1){if(!((c[z>>2]|0)>>>0<(c[A>>2]|0)>>>0)){break}c[o>>2]=(c[o>>2]|0)+2;c[B>>2]=((a[(c[o>>2]|0)+ -2|0]&255)<<8|(a[(c[o>>2]|0)+ -2+1|0]&255)<<0)&65535;q=(c[B>>2]|0)==(c[l>>2]|0);c[o>>2]=(c[o>>2]|0)+2;if(q){G=21;break}c[z>>2]=(c[z>>2]|0)+1}if((G|0)==21){c[v>>2]=((a[(c[o>>2]|0)+ -2|0]&255)<<8|(a[(c[o>>2]|0)+ -2+1|0]&255)<<0)&65535;c[o>>2]=(c[o>>2]|0)+2;c[w>>2]=((a[c[o>>2]|0]&255)<<8|(a[(c[o>>2]|0)+1|0]&255)<<0)&65535}if((c[z>>2]|0)>>>0>=(c[A>>2]|0)>>>0){break a}break};case 1:{c[o>>2]=(c[o>>2]|0)+((c[l>>2]|0)-(c[r>>2]|0)<<2);if(((c[o>>2]|0)+8|0)>>>0>(c[p>>2]|0)>>>0){break a}c[o>>2]=(c[o>>2]|0)+4;c[v>>2]=(d[(c[o>>2]|0)+ -4|0]|0)<<24|(d[(c[o>>2]|0)+ -4+1|0]|0)<<16|(d[(c[o>>2]|0)+ -4+2|0]|0)<<8|(d[(c[o>>2]|0)+ -4+3|0]|0)<<0;c[o>>2]=(c[o>>2]|0)+4;c[w>>2]=(d[(c[o>>2]|0)+ -4|0]|0)<<24|(d[(c[o>>2]|0)+ -4+1|0]|0)<<16|(d[(c[o>>2]|0)+ -4+2|0]|0)<<8|(d[(c[o>>2]|0)+ -4+3|0]|0)<<0;if((c[v>>2]|0)==(c[w>>2]|0)){break a}break};case 19:case 5:{if(((c[o>>2]|0)+16|0)>>>0>(c[p>>2]|0)>>>0){break a}c[o>>2]=(c[o>>2]|0)+4;c[C>>2]=(d[(c[o>>2]|0)+ -4|0]|0)<<24|(d[(c[o>>2]|0)+ -4+1|0]|0)<<16|(d[(c[o>>2]|0)+ -4+2|0]|0)<<8|(d[(c[o>>2]|0)+ -4+3|0]|0)<<0;if(($t(c[k>>2]|0,o,c[p>>2]|0,1)|0)!=0){break a}c[o>>2]=(c[o>>2]|0)+4;c[E>>2]=(d[(c[o>>2]|0)+ -4|0]|0)<<24|(d[(c[o>>2]|0)+ -4+1|0]|0)<<16|(d[(c[o>>2]|0)+ -4+2|0]|0)<<8|(d[(c[o>>2]|0)+ -4+3|0]|0)<<0;if((c[E>>2]|0)>>>0>(c[p>>2]|0)-(c[o>>2]|0)>>1>>>0){break a}c[D>>2]=0;while(1){if(!((c[D>>2]|0)>>>0<(c[E>>2]|0)>>>0)){break}c[o>>2]=(c[o>>2]|0)+2;c[F>>2]=((a[(c[o>>2]|0)+ -2|0]&255)<<8|(a[(c[o>>2]|0)+ -2+1|0]&255)<<0)&65535;if((c[F>>2]|0)==(c[l>>2]|0)){break}c[D>>2]=(c[D>>2]|0)+1}if((c[D>>2]|0)>>>0>=(c[E>>2]|0)>>>0){break a}c[v>>2]=aa(c[C>>2]|0,c[D>>2]|0)|0;c[w>>2]=(c[v>>2]|0)+(c[C>>2]|0);break};default:{break a}}if(!((c[v>>2]|0)>>>0>(c[w>>2]|0)>>>0)){c[w>>2]=(c[w>>2]|0)-(c[v>>2]|0);c[v>>2]=(c[x>>2]|0)+(c[v>>2]|0);c[j>>2]=au(c[k>>2]|0,c[u>>2]|0,c[v>>2]|0,c[w>>2]|0,c[m>>2]|0,c[n>>2]|0)|0;H=c[j>>2]|0;i=h;return H|0}}}}while(0);c[j>>2]=6;H=c[j>>2]|0;i=h;return H|0}function Zt(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;c[d>>2]=c[d>>2];i=b;return}function _t(a,f,g,h,j,k){a=a|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;l=i;i=i+80|0;m=l;n=l+68|0;o=l+64|0;p=l+60|0;q=l+56|0;r=l+52|0;s=l+48|0;t=l+44|0;u=l+40|0;v=l+12|0;w=l+36|0;x=l+4|0;y=l+8|0;z=l+16|0;A=l+20|0;B=l+24|0;C=l+28|0;D=l+32|0;E=l+74|0;F=l+72|0;c[n>>2]=a;c[o>>2]=f;c[p>>2]=g;c[q>>2]=h;c[r>>2]=j;c[s>>2]=k;c[B>>2]=0;c[r>>2]=c[r>>2];b[(c[s>>2]|0)+2>>1]=0;b[c[s>>2]>>1]=0;c[D>>2]=(c[(c[n>>2]|0)+724>>2]|0)+8+(c[o>>2]<<2);c[D>>2]=(c[D>>2]|0)+4;c[u>>2]=(d[(c[D>>2]|0)+ -4|0]|0)<<24|(d[(c[D>>2]|0)+ -4+1|0]|0)<<16|(d[(c[D>>2]|0)+ -4+2|0]|0)<<8|(d[(c[D>>2]|0)+ -4+3|0]|0)<<0;c[C>>2]=yd[c[(c[n>>2]|0)+508>>2]&31](c[n>>2]|0,1935829368,c[q>>2]|0,x)|0;if((c[C>>2]|0)!=0){c[m>>2]=c[C>>2];G=c[m>>2]|0;i=l;return G|0}c[t>>2]=vp(c[q>>2]|0)|0;while(1){if((c[p>>2]|0)>>>0>(c[(c[n>>2]|0)+16>>2]|0)>>>0){H=5;break}if((c[u>>2]|0)>>>0>=(c[x>>2]|0)>>>0){H=8;break}if(((c[x>>2]|0)-(c[u>>2]|0)|0)>>>0<(12+(c[p>>2]<<2)|0)>>>0){H=8;break}D=qp(c[q>>2]|0,(c[t>>2]|0)+(c[u>>2]|0)+4+(c[p>>2]<<2)|0)|0;c[C>>2]=D;if((D|0)!=0){H=11;break}D=yp(c[q>>2]|0,8)|0;c[C>>2]=D;if((D|0)!=0){H=11;break}c[v>>2]=Ep(c[q>>2]|0)|0;c[w>>2]=Ep(c[q>>2]|0)|0;Bp(c[q>>2]|0);if((c[v>>2]|0)==(c[w>>2]|0)){H=13;break}if((c[v>>2]|0)>>>0>(c[w>>2]|0)>>>0){H=17;break}if(((c[w>>2]|0)-(c[v>>2]|0)|0)>>>0<8){H=17;break}if(((c[x>>2]|0)-(c[u>>2]|0)|0)>>>0<(c[w>>2]|0)>>>0){H=17;break}D=qp(c[q>>2]|0,(c[t>>2]|0)+(c[u>>2]|0)+(c[v>>2]|0)|0)|0;c[C>>2]=D;if((D|0)!=0){H=20;break}D=yp(c[q>>2]|0,(c[w>>2]|0)-(c[v>>2]|0)|0)|0;c[C>>2]=D;if((D|0)!=0){H=20;break}c[y>>2]=(Dp(c[q>>2]|0)|0)<<16>>16;c[z>>2]=(Dp(c[q>>2]|0)|0)<<16>>16;c[A>>2]=Ep(c[q>>2]|0)|0;D=c[A>>2]|0;if((D|0)==1953064550|(D|0)==1785751328){H=26;break}else if((D|0)==1886283552){H=25;break}else if((D|0)!=1685418085){H=27;break}if((c[B>>2]|0)>=4){H=24;break}c[p>>2]=(Dp(c[q>>2]|0)|0)&65535;Bp(c[q>>2]|0);c[B>>2]=(c[B>>2]|0)+1}if((H|0)==5){c[m>>2]=6;G=c[m>>2]|0;i=l;return G|0}else if((H|0)==8){c[m>>2]=3;G=c[m>>2]|0;i=l;return G|0}else if((H|0)==11){c[m>>2]=c[C>>2];G=c[m>>2]|0;i=l;return G|0}else if((H|0)==13){c[m>>2]=6;G=c[m>>2]|0;i=l;return G|0}else if((H|0)==17){c[m>>2]=3;G=c[m>>2]|0;i=l;return G|0}else if((H|0)==20){c[m>>2]=c[C>>2];G=c[m>>2]|0;i=l;return G|0}else if((H|0)==24){c[C>>2]=3}else if((H|0)==25){c[C>>2]=7}else if((H|0)==26){c[C>>2]=2}else if((H|0)==27){c[C>>2]=7}Bp(c[q>>2]|0);if((c[C>>2]|0)==0){Vt(c[n>>2]|0,0,c[p>>2]|0,E,F)|0;b[(c[s>>2]|0)+4>>1]=c[y>>2];b[(c[s>>2]|0)+6>>1]=0-(c[z>>2]|0)+(e[c[s>>2]>>1]|0);z=aa(e[F>>1]|0,e[(c[(c[n>>2]|0)+88>>2]|0)+12>>1]|0)|0;b[(c[s>>2]|0)+8>>1]=(z|0)/(e[(c[n>>2]|0)+178>>1]|0|0)|0}c[m>>2]=c[C>>2];G=c[m>>2]|0;i=l;return G|0}function $t(e,f,g,h){e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;j=i;i=i+32|0;k=j+20|0;l=j;m=j+4|0;n=j+8|0;o=j+24|0;p=j+16|0;q=j+12|0;c[l>>2]=e;c[m>>2]=f;c[n>>2]=g;a[o]=h;c[p>>2]=c[c[m>>2]>>2];c[q>>2]=c[(c[l>>2]|0)+12>>2];do{if(!(((c[p>>2]|0)+5|0)>>>0>(c[n>>2]|0)>>>0)){b[c[q>>2]>>1]=d[c[p>>2]|0]|0;b[(c[q>>2]|0)+2>>1]=d[(c[p>>2]|0)+1|0]|0;b[(c[q>>2]|0)+4>>1]=a[(c[p>>2]|0)+2|0]|0;b[(c[q>>2]|0)+6>>1]=a[(c[p>>2]|0)+3|0]|0;b[(c[q>>2]|0)+8>>1]=d[(c[p>>2]|0)+4|0]|0;c[p>>2]=(c[p>>2]|0)+5;if((a[o]|0)!=0){if(((c[p>>2]|0)+3|0)>>>0>(c[n>>2]|0)>>>0){break}b[(c[q>>2]|0)+10>>1]=a[c[p>>2]|0]|0;b[(c[q>>2]|0)+12>>1]=a[(c[p>>2]|0)+1|0]|0;b[(c[q>>2]|0)+14>>1]=d[(c[p>>2]|0)+2|0]|0;c[p>>2]=(c[p>>2]|0)+3}a[(c[l>>2]|0)+16|0]=1;c[c[m>>2]>>2]=c[p>>2];c[k>>2]=0;r=c[k>>2]|0;i=j;return r|0}}while(0);c[k>>2]=6;r=c[k>>2]|0;i=j;return r|0}function au(b,d,f,g,h,j){b=b|0;d=d|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;k=i;i=i+64|0;l=k+60|0;m=k+56|0;n=k+52|0;o=k+48|0;p=k+44|0;q=k+40|0;r=k+36|0;s=k+32|0;t=k+28|0;u=k+20|0;v=k+16|0;w=k+12|0;x=k+8|0;y=k+4|0;z=k;A=k+24|0;c[l>>2]=b;c[m>>2]=d;c[n>>2]=f;c[o>>2]=g;c[p>>2]=h;c[q>>2]=j;c[s>>2]=c[(c[l>>2]|0)+4>>2];if(((c[n>>2]|0)+(c[o>>2]|0)|0)>>>0>(c[(c[l>>2]|0)+24>>2]|0)>>>0){c[r>>2]=6;B=c[r>>2]|0;i=k;return B|0}j=qp(c[s>>2]|0,(c[(c[l>>2]|0)+20>>2]|0)+(c[n>>2]|0)|0)|0;c[r>>2]=j;if((j|0)!=0){B=c[r>>2]|0;i=k;return B|0}j=xp(c[s>>2]|0,c[o>>2]|0,v)|0;c[r>>2]=j;if((j|0)!=0){B=c[r>>2]|0;i=k;return B|0}c[t>>2]=c[v>>2];c[u>>2]=(c[t>>2]|0)+(c[o>>2]|0);switch(c[m>>2]|0){case 18:case 9:case 7:case 6:{c[r>>2]=$t(c[l>>2]|0,t,c[u>>2]|0,1)|0;break};case 17:case 8:case 2:case 1:{c[r>>2]=$t(c[l>>2]|0,t,c[u>>2]|0,0)|0;break};default:{c[r>>2]=0}}a:do{if((c[r>>2]|0)==0){b:do{switch(c[m>>2]|0){case 7:case 2:{c[x>>2]=e[(c[(c[l>>2]|0)+12>>2]|0)+2>>1]|0;c[y>>2]=e[c[(c[l>>2]|0)+12>>2]>>1]|0;c[z>>2]=((aa(c[x>>2]|0,c[y>>2]|0)|0)+7|0)>>>3;c[A>>2]=aa(c[y>>2]|0,((c[x>>2]|0)+7|0)>>>3)|0;if((c[z>>2]|0)>>>0<(c[A>>2]|0)>>>0?(c[A>>2]|0)==((c[u>>2]|0)-(c[t>>2]|0)|0):0){c[w>>2]=10;break b}c[w>>2]=11;break};case 9:{C=19;break};case 6:case 1:{c[w>>2]=10;break};case 5:{c[w>>2]=11;break};case 8:{if(((c[t>>2]|0)+1|0)>>>0>(c[u>>2]|0)>>>0){break a}c[t>>2]=(c[t>>2]|0)+1;C=19;break};case 19:case 18:case 17:{c[r>>2]=7;break a;break};default:{c[r>>2]=8;break a}}}while(0);if((C|0)==19){c[w>>2]=12}if((a[(c[l>>2]|0)+17|0]|0)==0?(c[r>>2]=eu(c[l>>2]|0)|0,(c[r>>2]|0)!=0):0){break}c[r>>2]=Bd[c[w>>2]&15](c[l>>2]|0,c[t>>2]|0,c[u>>2]|0,c[p>>2]|0,c[q>>2]|0)|0}}while(0);zp(c[s>>2]|0,v);B=c[r>>2]|0;i=k;return B|0}function bu(b,f,g,h,j){b=b|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;k=i;i=i+80|0;l=k+76|0;m=k+72|0;n=k+68|0;o=k+64|0;p=k+60|0;q=k+56|0;r=k+52|0;s=k+48|0;t=k+44|0;u=k+40|0;v=k+36|0;w=k+12|0;x=k;y=k+4|0;z=k+8|0;A=k+16|0;B=k+20|0;C=k+24|0;D=k+28|0;E=k+32|0;c[l>>2]=b;c[m>>2]=f;c[n>>2]=g;c[o>>2]=h;c[p>>2]=j;c[q>>2]=0;c[z>>2]=c[(c[l>>2]|0)+8>>2];c[t>>2]=c[(c[z>>2]|0)+4>>2];c[s>>2]=c[c[z>>2]>>2];c[u>>2]=c[(c[z>>2]|0)+8>>2];c[r>>2]=c[(c[z>>2]|0)+12>>2];c[v>>2]=e[(c[(c[l>>2]|0)+12>>2]|0)+2>>1]|0;c[w>>2]=e[c[(c[l>>2]|0)+12>>2]>>1]|0;c[x>>2]=aa(c[v>>2]|0,d[(c[l>>2]|0)+18|0]|0)|0;if((((c[o>>2]|0)>=0?((c[o>>2]|0)+(c[v>>2]|0)|0)<=(c[t>>2]|0):0)?(c[p>>2]|0)>=0:0)?((c[p>>2]|0)+(c[w>>2]|0)|0)<=(c[s>>2]|0):0){s=(c[m>>2]|0)+(aa((c[x>>2]|0)+7>>3,c[w>>2]|0)|0)|0;if(s>>>0>(c[n>>2]|0)>>>0){c[q>>2]=3;F=c[q>>2]|0;i=k;return F|0}n=aa(c[p>>2]|0,c[u>>2]|0)|0;c[r>>2]=(c[r>>2]|0)+(n+(c[o>>2]>>3));c[o>>2]=c[o>>2]&7;n=(c[o>>2]|0)==0;c[y>>2]=c[w>>2];if(n){while(1){if((c[y>>2]|0)<=0){break}c[A>>2]=c[r>>2];c[B>>2]=c[x>>2];while(1){if((c[B>>2]|0)<8){break}n=d[c[A>>2]|0]|0;w=c[m>>2]|0;c[m>>2]=w+1;a[c[A>>2]|0]=n|(d[w]|0);c[A>>2]=(c[A>>2]|0)+1;c[B>>2]=(c[B>>2]|0)-8}if((c[B>>2]|0)>0){w=d[c[A>>2]|0]|0;n=c[m>>2]|0;c[m>>2]=n+1;a[c[A>>2]|0]=w|(d[n]|0)&65280>>>(c[B>>2]|0)}c[y>>2]=(c[y>>2]|0)+ -1;c[r>>2]=(c[r>>2]|0)+(c[u>>2]|0)}F=c[q>>2]|0;i=k;return F|0}while(1){if((c[y>>2]|0)<=0){break}c[C>>2]=c[r>>2];c[E>>2]=0;c[D>>2]=c[x>>2];while(1){if((c[D>>2]|0)<8){break}B=c[E>>2]|0;A=c[m>>2]|0;c[m>>2]=A+1;c[E>>2]=B|(d[A]|0);a[c[C>>2]|0]=d[c[C>>2]|0]|0|(c[E>>2]|0)>>>(c[o>>2]|0);c[C>>2]=(c[C>>2]|0)+1;c[E>>2]=c[E>>2]<<8;c[D>>2]=(c[D>>2]|0)-8}if((c[D>>2]|0)>0){A=c[E>>2]|0;B=c[m>>2]|0;c[m>>2]=B+1;c[E>>2]=A|(d[B]|0)&65280>>>(c[D>>2]|0)}a[c[C>>2]|0]=d[c[C>>2]|0]|0|(c[E>>2]|0)>>>(c[o>>2]|0);if(((c[o>>2]|0)+(c[D>>2]|0)|0)>8){c[C>>2]=(c[C>>2]|0)+1;c[E>>2]=c[E>>2]<<8;a[c[C>>2]|0]=d[c[C>>2]|0]|0|(c[E>>2]|0)>>>(c[o>>2]|0)}c[y>>2]=(c[y>>2]|0)+ -1;c[r>>2]=(c[r>>2]|0)+(c[u>>2]|0)}F=c[q>>2]|0;i=k;return F|0}c[q>>2]=3;F=c[q>>2]|0;i=k;return F|0}function cu(f,g,h,j,k){f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;l=i;i=i+80|0;m=l+68|0;n=l+64|0;o=l+60|0;p=l+56|0;q=l+52|0;r=l+48|0;s=l+44|0;t=l+40|0;u=l+36|0;v=l+32|0;w=l+24|0;x=l+20|0;y=l+16|0;z=l+12|0;A=l+8|0;B=l+4|0;C=l+72|0;D=l;E=l+28|0;c[m>>2]=f;c[n>>2]=g;c[o>>2]=h;c[p>>2]=j;c[q>>2]=k;c[r>>2]=0;c[B>>2]=c[(c[m>>2]|0)+8>>2];c[u>>2]=c[(c[B>>2]|0)+4>>2];c[t>>2]=c[c[B>>2]>>2];c[v>>2]=c[(c[B>>2]|0)+8>>2];c[s>>2]=c[(c[B>>2]|0)+12>>2];c[w>>2]=e[(c[(c[m>>2]|0)+12>>2]|0)+2>>1]|0;c[x>>2]=e[c[(c[m>>2]|0)+12>>2]>>1]|0;c[y>>2]=aa(c[w>>2]|0,d[(c[m>>2]|0)+18|0]|0)|0;if((((c[p>>2]|0)>=0?((c[p>>2]|0)+(c[w>>2]|0)|0)<=(c[u>>2]|0):0)?(c[q>>2]|0)>=0:0)?((c[q>>2]|0)+(c[x>>2]|0)|0)<=(c[t>>2]|0):0){t=(c[n>>2]|0)+((aa(c[y>>2]|0,c[x>>2]|0)|0)+7>>3)|0;if(t>>>0>(c[o>>2]|0)>>>0){c[r>>2]=3;F=c[r>>2]|0;i=l;return F|0}t=aa(c[q>>2]|0,c[v>>2]|0)|0;c[s>>2]=(c[s>>2]|0)+(t+(c[p>>2]>>3));c[p>>2]=c[p>>2]&7;b[C>>1]=0;c[A>>2]=0;c[z>>2]=c[x>>2];while(1){if((c[z>>2]|0)<=0){break}c[D>>2]=c[s>>2];c[E>>2]=c[y>>2];if((c[p>>2]|0)!=0){if((c[y>>2]|0)<(8-(c[p>>2]|0)|0)){G=c[y>>2]|0}else{G=8-(c[p>>2]|0)|0}c[E>>2]=G;do{if((c[z>>2]|0)==(c[x>>2]|0)){t=c[n>>2]|0;c[n>>2]=t+1;b[C>>1]=d[t]|0;c[A>>2]=c[p>>2]}else{if((c[A>>2]|0)>=(c[E>>2]|0)){b[C>>1]=(e[C>>1]|0)>>8;c[A>>2]=(c[A>>2]|0)-(c[E>>2]|0);break}if((c[n>>2]|0)>>>0<(c[o>>2]|0)>>>0){t=c[n>>2]|0;c[n>>2]=t+1;b[C>>1]=e[C>>1]|0|(d[t]|0)}c[A>>2]=(c[A>>2]|0)+(8-(c[E>>2]|0))}}while(0);t=(e[C>>1]|0)>>c[A>>2]&255&~(255<<c[E>>2])<<8-(c[E>>2]|0)-(c[p>>2]|0);q=c[D>>2]|0;c[D>>2]=q+1;a[q]=d[q]|0|t;b[C>>1]=(e[C>>1]|0)<<8;c[E>>2]=(c[y>>2]|0)-(c[E>>2]|0)}while(1){if((c[E>>2]|0)<8){break}t=c[n>>2]|0;c[n>>2]=t+1;b[C>>1]=e[C>>1]|0|(d[t]|0);t=(e[C>>1]|0)>>c[A>>2]&255;q=c[D>>2]|0;c[D>>2]=q+1;a[q]=d[q]|0|t;b[C>>1]=(e[C>>1]|0)<<8;c[E>>2]=(c[E>>2]|0)-8}do{if((c[E>>2]|0)>0){if((c[A>>2]|0)>=(c[E>>2]|0)){t=c[D>>2]|0;a[t]=d[t]|0|(e[C>>1]|0)>>c[A>>2]&255&65280>>>(c[E>>2]|0);c[A>>2]=(c[A>>2]|0)-(c[E>>2]|0);break}if((c[n>>2]|0)>>>0<(c[o>>2]|0)>>>0){t=c[n>>2]|0;c[n>>2]=t+1;b[C>>1]=e[C>>1]|0|(d[t]|0)}t=c[D>>2]|0;a[t]=d[t]|0|(e[C>>1]|0)>>c[A>>2]&255&65280>>>(c[E>>2]|0);c[A>>2]=(c[A>>2]|0)+(8-(c[E>>2]|0));b[C>>1]=(e[C>>1]|0)<<8}}while(0);c[z>>2]=(c[z>>2]|0)+ -1;c[s>>2]=(c[s>>2]|0)+(c[v>>2]|0)}F=c[r>>2]|0;i=l;return F|0}c[r>>2]=3;F=c[r>>2]|0;i=l;return F|0}function du(e,f,g,h,j){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;k=i;i=i+48|0;l=k+32|0;m=k+28|0;n=k+4|0;o=k+8|0;p=k+12|0;q=k+16|0;r=k+20|0;s=k;t=k+43|0;u=k+40|0;v=k+36|0;w=k+37|0;x=k+38|0;y=k+39|0;z=k+24|0;A=k+41|0;B=k+42|0;c[l>>2]=e;c[m>>2]=f;c[n>>2]=g;c[o>>2]=h;c[p>>2]=j;c[q>>2]=0;a[t]=b[(c[(c[l>>2]|0)+12>>2]|0)+4>>1];a[u]=b[(c[(c[l>>2]|0)+12>>2]|0)+6>>1];a[v]=b[(c[(c[l>>2]|0)+12>>2]|0)+8>>1];a[w]=b[(c[(c[l>>2]|0)+12>>2]|0)+10>>1];a[x]=b[(c[(c[l>>2]|0)+12>>2]|0)+12>>1];a[y]=b[(c[(c[l>>2]|0)+12>>2]|0)+14>>1];if(!(((c[m>>2]|0)+2|0)>>>0>(c[n>>2]|0)>>>0)?(c[m>>2]=(c[m>>2]|0)+2,c[r>>2]=((a[(c[m>>2]|0)+ -2|0]&255)<<8|(a[(c[m>>2]|0)+ -2+1|0]&255)<<0)&65535,!(((c[m>>2]|0)+(c[r>>2]<<2)|0)>>>0>(c[n>>2]|0)>>>0)):0){c[s>>2]=0;while(1){if(!((c[s>>2]|0)>>>0<(c[r>>2]|0)>>>0)){break}c[m>>2]=(c[m>>2]|0)+2;c[z>>2]=((a[(c[m>>2]|0)+ -2|0]&255)<<8|(a[(c[m>>2]|0)+ -2+1|0]&255)<<0)&65535;n=c[m>>2]|0;c[m>>2]=n+1;a[A]=a[n]|0;n=c[m>>2]|0;c[m>>2]=n+1;a[B]=a[n]|0;c[q>>2]=Yt(c[l>>2]|0,c[z>>2]|0,(c[o>>2]|0)+(d[A]|0)|0,(c[p>>2]|0)+(d[B]|0)|0)|0;if((c[q>>2]|0)!=0){break}c[s>>2]=(c[s>>2]|0)+1}b[(c[(c[l>>2]|0)+12>>2]|0)+4>>1]=a[t]|0;b[(c[(c[l>>2]|0)+12>>2]|0)+6>>1]=a[u]|0;b[(c[(c[l>>2]|0)+12>>2]|0)+8>>1]=d[v]|0;b[(c[(c[l>>2]|0)+12>>2]|0)+10>>1]=a[w]|0;b[(c[(c[l>>2]|0)+12>>2]|0)+12>>1]=a[x]|0;b[(c[(c[l>>2]|0)+12>>2]|0)+14>>1]=d[y]|0;b[(c[(c[l>>2]|0)+12>>2]|0)+2>>1]=c[(c[(c[l>>2]|0)+8>>2]|0)+4>>2]&255;b[c[(c[l>>2]|0)+12>>2]>>1]=c[c[(c[l>>2]|0)+8>>2]>>2]&255;C=c[q>>2]|0;i=k;return C|0}c[q>>2]=3;C=c[q>>2]|0;i=k;return C|0}function eu(f){f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;i=i+32|0;h=g+20|0;j=g;k=g+4|0;l=g+8|0;m=g+12|0;n=g+16|0;c[h>>2]=f;c[j>>2]=0;c[m>>2]=c[(c[h>>2]|0)+8>>2];if((a[(c[h>>2]|0)+16|0]|0)==0){c[j>>2]=6;o=c[j>>2]|0;i=g;return o|0}c[k>>2]=e[(c[(c[h>>2]|0)+12>>2]|0)+2>>1]|0;c[l>>2]=e[c[(c[h>>2]|0)+12>>2]>>1]|0;c[(c[m>>2]|0)+4>>2]=c[k>>2];c[c[m>>2]>>2]=c[l>>2];switch(d[(c[h>>2]|0)+18|0]|0){case 2:{a[(c[m>>2]|0)+18|0]=3;c[(c[m>>2]|0)+8>>2]=(c[(c[m>>2]|0)+4>>2]|0)+3>>2;b[(c[m>>2]|0)+16>>1]=4;break};case 8:{a[(c[m>>2]|0)+18|0]=2;c[(c[m>>2]|0)+8>>2]=c[(c[m>>2]|0)+4>>2];b[(c[m>>2]|0)+16>>1]=256;break};case 32:{a[(c[m>>2]|0)+18|0]=7;c[(c[m>>2]|0)+8>>2]=c[(c[m>>2]|0)+4>>2]<<2;b[(c[m>>2]|0)+16>>1]=256;break};case 1:{a[(c[m>>2]|0)+18|0]=1;c[(c[m>>2]|0)+8>>2]=(c[(c[m>>2]|0)+4>>2]|0)+7>>3;b[(c[m>>2]|0)+16>>1]=2;break};case 4:{a[(c[m>>2]|0)+18|0]=4;c[(c[m>>2]|0)+8>>2]=(c[(c[m>>2]|0)+4>>2]|0)+1>>1;b[(c[m>>2]|0)+16>>1]=16;break};default:{c[j>>2]=3;o=c[j>>2]|0;i=g;return o|0}}c[n>>2]=aa(c[c[m>>2]>>2]|0,c[(c[m>>2]|0)+8>>2]|0)|0;if((c[n>>2]|0)==0){o=c[j>>2]|0;i=g;return o|0}c[j>>2]=no(c[(c[c[h>>2]>>2]|0)+84>>2]|0,c[n>>2]|0)|0;if((c[j>>2]|0)!=0){o=c[j>>2]|0;i=g;return o|0}a[(c[h>>2]|0)+17|0]=1;o=c[j>>2]|0;i=g;return o|0}function fu(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+32|0;f=e+16|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[j>>2]=yd[c[(c[f>>2]|0)+508>>2]&31](c[f>>2]|0,c[h>>2]|0,c[g>>2]|0,0)|0;if((c[j>>2]|0)!=0){l=c[j>>2]|0;i=e;return l|0}c[k>>2]=(c[f>>2]|0)+160;c[j>>2]=Gp(c[g>>2]|0,93832,c[k>>2]|0)|0;l=c[j>>2]|0;i=e;return l|0}function gu(b){b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d+8|0;f=d;g=d+4|0;c[e>>2]=b;c[f>>2]=(c[e>>2]|0)+760;if((a[(c[f>>2]|0)+20|0]|0)==0){i=d;return}c[g>>2]=c[(c[e>>2]|0)+104>>2];if((c[c[f>>2]>>2]|0)!=0){zp(c[g>>2]|0,c[f>>2]|0)}c[(c[f>>2]|0)+4>>2]=0;c[(c[f>>2]|0)+8>>2]=0;c[(c[f>>2]|0)+12>>2]=0;i=d;return}function hu(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b+4|0;e=b;c[d>>2]=a;c[e>>2]=c[(c[d>>2]|0)+104>>2];zp(c[e>>2]|0,(c[d>>2]|0)+740|0);c[(c[d>>2]|0)+744>>2]=0;c[(c[d>>2]|0)+748>>2]=0;c[(c[d>>2]|0)+752>>2]=0;c[(c[d>>2]|0)+756>>2]=0;i=b;return}function iu(d,f,g){d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;h=i;i=i+64|0;j=h+48|0;k=h+52|0;l=h+44|0;m=h+40|0;n=h+36|0;o=h+32|0;p=h+54|0;q=h+24|0;r=h+20|0;s=h+16|0;t=h+12|0;u=h+8|0;v=h+4|0;w=h+56|0;x=h;y=h+28|0;c[j>>2]=d;b[k>>1]=f;c[l>>2]=g;c[m>>2]=c[(c[j>>2]|0)+100>>2];c[n>>2]=0;c[o>>2]=0;c[r>>2]=-1;c[s>>2]=-1;c[t>>2]=-1;c[u>>2]=-1;c[v>>2]=-1;a[w]=0;c[q>>2]=c[(c[j>>2]|0)+356>>2];b[p>>1]=0;while(1){if((e[p>>1]|0)>=(e[(c[j>>2]|0)+340>>1]|0)){break}do{if((e[(c[q>>2]|0)+6>>1]|0)==(e[k>>1]|0)?(e[(c[q>>2]|0)+8>>1]|0)>0:0){g=e[c[q>>2]>>1]|0;if((g|0)==3){if(!((c[u>>2]|0)==-1)?(b[(c[q>>2]|0)+4>>1]&1023|0)!=9:0){break}f=e[(c[q>>2]|0)+2>>1]|0;if(!((f|0)==10|(f|0)==1|(f|0)==0)){break}a[w]=(b[(c[q>>2]|0)+4>>1]&1023|0)==9;c[u>>2]=e[p>>1]|0;break}else if((g|0)==1){if((e[(c[q>>2]|0)+4>>1]|0)==0){c[t>>2]=e[p>>1]|0;break}if((e[(c[q>>2]|0)+2>>1]|0)!=0){break}c[s>>2]=e[p>>1]|0;break}else if((g|0)==2|(g|0)==0){c[v>>2]=e[p>>1]|0;break}else{break}}}while(0);b[p>>1]=(b[p>>1]|0)+1<<16>>16;c[q>>2]=(c[q>>2]|0)+20}c[r>>2]=c[s>>2];if((c[t>>2]|0)>=0){c[r>>2]=c[t>>2]}c[x>>2]=0;do{if((c[u>>2]|0)>=0){if((c[r>>2]|0)>=0?(a[w]|0)==0:0){z=24;break}c[q>>2]=(c[(c[j>>2]|0)+356>>2]|0)+((c[u>>2]|0)*20|0);t=e[(c[q>>2]|0)+2>>1]|0;if((t|0)==10){c[x>>2]=104;break}else if((t|0)==0|(t|0)==1){c[x>>2]=104;break}else{break}}else{z=24}}while(0);do{if((z|0)==24){if((c[r>>2]|0)>=0){c[q>>2]=(c[(c[j>>2]|0)+356>>2]|0)+((c[r>>2]|0)*20|0);c[x>>2]=105;break}if((c[v>>2]|0)>=0){c[q>>2]=(c[(c[j>>2]|0)+356>>2]|0)+((c[v>>2]|0)*20|0);c[x>>2]=104}}}while(0);if((c[q>>2]|0)==0){A=c[o>>2]|0;B=c[l>>2]|0;c[B>>2]=A;C=c[n>>2]|0;i=h;return C|0}if((c[x>>2]|0)==0){A=c[o>>2]|0;B=c[l>>2]|0;c[B>>2]=A;C=c[n>>2]|0;i=h;return C|0}do{if((c[(c[q>>2]|0)+16>>2]|0)==0){c[y>>2]=c[(c[j>>2]|0)+360>>2];v=Yn(c[m>>2]|0,1,0,e[(c[q>>2]|0)+8>>1]|0,0,n)|0;c[(c[q>>2]|0)+16>>2]=v;if(((c[n>>2]|0)==0?(v=qp(c[y>>2]|0,c[(c[q>>2]|0)+12>>2]|0)|0,c[n>>2]=v,(v|0)==0):0)?(v=rp(c[y>>2]|0,c[(c[q>>2]|0)+16>>2]|0,e[(c[q>>2]|0)+8>>1]|0)|0,c[n>>2]=v,(v|0)==0):0){break}Vn(c[m>>2]|0,c[(c[q>>2]|0)+16>>2]|0);c[(c[q>>2]|0)+16>>2]=0;b[(c[q>>2]|0)+8>>1]=0;c[o>>2]=0;A=c[o>>2]|0;B=c[l>>2]|0;c[B>>2]=A;C=c[n>>2]|0;i=h;return C|0}}while(0);c[o>>2]=Ad[c[x>>2]&127](c[q>>2]|0,c[m>>2]|0)|0;A=c[o>>2]|0;B=c[l>>2]|0;c[B>>2]=A;C=c[n>>2]|0;i=h;return C|0}function ju(f){f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0;g=i;i=i+224|0;h=i;i=i+168|0;c[h>>2]=0;j=g+220|0;k=g+216|0;l=g+204|0;m=g+200|0;n=g+196|0;o=g+192|0;r=g+184|0;s=g+8|0;t=g;u=g+188|0;v=c[f+500>>2]|0;w=v+(c[f+504>>2]|0)|0;c[k>>2]=v;if((c[k>>2]|0)!=0?!(((c[k>>2]|0)+4|0)>>>0>w>>>0):0){c[k>>2]=(c[k>>2]|0)+2;x=c[k>>2]|0;if((((a[(c[k>>2]|0)+ -2|0]&255)<<8|(a[(c[k>>2]|0)+ -2+1|0]&255)<<0)&65535|0)!=0){c[k>>2]=x+ -2;y=8;i=g;return y|0}c[k>>2]=x+2;c[j>>2]=((a[(c[k>>2]|0)+ -2|0]&255)<<8|(a[(c[k>>2]|0)+ -2+1|0]&255)<<0)&65535;while(1){if(!((c[j>>2]|0)>>>0>0)){break}if(!(((c[k>>2]|0)+8|0)>>>0<=w>>>0)){break}c[k>>2]=(c[k>>2]|0)+2;b[l+8>>1]=(a[(c[k>>2]|0)+ -2|0]&255)<<8|(a[(c[k>>2]|0)+ -2+1|0]&255)<<0;c[k>>2]=(c[k>>2]|0)+2;b[l+10>>1]=(a[(c[k>>2]|0)+ -2|0]&255)<<8|(a[(c[k>>2]|0)+ -2+1|0]&255)<<0;c[l>>2]=f;c[l+4>>2]=0;c[k>>2]=(c[k>>2]|0)+4;x=(d[(c[k>>2]|0)+ -4|0]|0)<<24|(d[(c[k>>2]|0)+ -4+1|0]|0)<<16|(d[(c[k>>2]|0)+ -4+2|0]|0)<<8|(d[(c[k>>2]|0)+ -4+3|0]|0)<<0;if((x|0)!=0?x>>>0<=((c[f+504>>2]|0)-2|0)>>>0:0){c[m>>2]=v+x;c[n>>2]=((a[c[m>>2]|0]&255)<<8|(a[(c[m>>2]|0)+1|0]&255)<<0)&65535;c[o>>2]=94632;while(1){if((c[c[o>>2]>>2]|0)==0){break}c[r>>2]=c[c[o>>2]>>2];if((c[(c[r>>2]|0)+40>>2]|0)==(c[n>>2]|0)){z=14;break}c[o>>2]=(c[o>>2]|0)+4}a:do{if((z|0)==14){z=0;c[t>>2]=0;p=0;xa(21,s|0,c[m>>2]|0,w|0,0);x=p;p=0;if((x|0)!=0&(q|0)!=0){A=kA(c[x>>2]|0,h)|0;if((A|0)==0){Ea(x|0,q|0)}E=q}else{A=-1}if((A|0)!=1){c[s+172>>2]=e[f+264>>1]|0;jA(s+16|0,1,h|0)|0;p=0;x=p;p=0;if((x|0)!=0&(q|0)!=0){B=kA(c[x>>2]|0,h)|0;if((B|0)==0){Ea(x|0,q|0)}E=q}else{B=-1}if((B|0)!=1){C=0}else{C=E}}else{C=E}while(1){if((C|0)==0){p=0;x=va(c[(c[r>>2]|0)+44>>2]|0,c[m>>2]|0,s|0)|0;D=p;p=0;if((D|0)!=0&(q|0)!=0){F=kA(c[D>>2]|0,h)|0;if((F|0)==0){Ea(D|0,q|0)}E=q}else{F=-1}if((F|0)==1){C=E;continue}c[t>>2]=x}if((c[s+12>>2]|0)!=0){break a}p=0;G=ta(18,c[r>>2]|0,c[m>>2]|0,l|0,u|0)|0;x=p;p=0;if((x|0)!=0&(q|0)!=0){H=kA(c[x>>2]|0,h)|0;if((H|0)==0){Ea(x|0,q|0)}E=q}else{H=-1}if((H|0)==1){C=E}else{break}}if((G|0)==0){c[(c[u>>2]|0)+20>>2]=c[t>>2]}}}while(0)}c[j>>2]=(c[j>>2]|0)+ -1}y=0;i=g;return y|0}y=8;i=g;return y|0}function ku(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+32|0;e=d+16|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=94496;c[j>>2]=(c[h>>2]|0)+132;while(1){if(!((c[h>>2]|0)>>>0<(c[j>>2]|0)>>>0)){k=8;break}if((c[c[h>>2]>>2]|0)==(c[f>>2]|0)){if((c[(c[h>>2]|0)+4>>2]|0)==(c[g>>2]|0)){k=6;break}if((c[(c[h>>2]|0)+4>>2]|0)==-1){k=6;break}}c[h>>2]=(c[h>>2]|0)+12}if((k|0)==6){c[e>>2]=c[(c[h>>2]|0)+8>>2];l=c[e>>2]|0;i=d;return l|0}else if((k|0)==8){c[e>>2]=0;l=c[e>>2]|0;i=d;return l|0}return 0}function lu(b,d){b=b|0;d=d|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=i;i=i+48|0;g=f+32|0;h=f+28|0;j=f+24|0;k=f+20|0;l=f+16|0;m=f+8|0;n=f+4|0;o=f;p=f+12|0;c[h>>2]=b;c[j>>2]=d;c[k>>2]=0;c[o>>2]=c[(c[h>>2]|0)+16>>2];c[l>>2]=((e[(c[h>>2]|0)+8>>1]|0)>>>0)/2|0;c[k>>2]=Yn(c[j>>2]|0,1,0,(c[l>>2]|0)+1|0,0,p)|0;if((c[p>>2]|0)!=0){c[g>>2]=0;q=c[g>>2]|0;i=f;return q|0}c[n>>2]=0;while(1){if(!((c[n>>2]|0)>>>0<(c[l>>2]|0)>>>0)){break}c[o>>2]=(c[o>>2]|0)+2;c[m>>2]=((a[(c[o>>2]|0)+ -2|0]&255)<<8|(a[(c[o>>2]|0)+ -2+1|0]&255)<<0)&65535;if((c[m>>2]|0)==0){break}if((c[m>>2]|0)>>>0<32|(c[m>>2]|0)>>>0>127){c[m>>2]=63}a[(c[k>>2]|0)+(c[n>>2]|0)|0]=c[m>>2];c[n>>2]=(c[n>>2]|0)+1}a[(c[k>>2]|0)+(c[n>>2]|0)|0]=0;c[g>>2]=c[k>>2];q=c[g>>2]|0;i=f;return q|0}function mu(b,f){b=b|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=i;i=i+48|0;h=g+32|0;j=g+28|0;k=g+24|0;l=g+20|0;m=g+16|0;n=g+8|0;o=g+4|0;p=g;q=g+12|0;c[j>>2]=b;c[k>>2]=f;c[l>>2]=0;c[p>>2]=c[(c[j>>2]|0)+16>>2];c[m>>2]=e[(c[j>>2]|0)+8>>1]|0;c[l>>2]=Yn(c[k>>2]|0,1,0,(c[m>>2]|0)+1|0,0,q)|0;if((c[q>>2]|0)!=0){c[h>>2]=0;r=c[h>>2]|0;i=g;return r|0}c[o>>2]=0;while(1){if(!((c[o>>2]|0)>>>0<(c[m>>2]|0)>>>0)){break}q=c[p>>2]|0;c[p>>2]=q+1;c[n>>2]=d[q]|0;if((c[n>>2]|0)==0){break}if((c[n>>2]|0)>>>0<32|(c[n>>2]|0)>>>0>127){c[n>>2]=63}a[(c[l>>2]|0)+(c[o>>2]|0)|0]=c[n>>2];c[o>>2]=(c[o>>2]|0)+1}a[(c[l>>2]|0)+(c[o>>2]|0)|0]=0;c[h>>2]=c[l>>2];r=c[h>>2]|0;i=g;return r|0}function nu(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=i;i=i+32|0;e=d+28|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;k=d+16|0;l=d+20|0;m=d+24|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=c[(c[f>>2]|0)+28>>2];c[(c[g>>2]|0)+132>>2]=0;c[(c[g>>2]|0)+136>>2]=0;c[(c[g>>2]|0)+140>>2]=0;while(1){c[l>>2]=vp(c[f>>2]|0)|0;c[k>>2]=up(c[f>>2]|0,j)|0;if((c[j>>2]|0)!=0){n=3;break}if((c[k>>2]|0)!=2001684038){n=10;break}b=qp(c[f>>2]|0,c[l>>2]|0)|0;c[j>>2]=b;if((b|0)!=0){n=6;break}c[j>>2]=ou(c[f>>2]|0,c[g>>2]|0)|0;if((c[j>>2]|0)!=0){n=8;break}c[f>>2]=c[(c[g>>2]|0)+104>>2]}if((n|0)==3){c[e>>2]=c[j>>2];o=c[e>>2]|0;i=d;return o|0}else if((n|0)==6){c[e>>2]=c[j>>2];o=c[e>>2]|0;i=d;return o|0}else if((n|0)==8){c[e>>2]=c[j>>2];o=c[e>>2]|0;i=d;return o|0}else if((n|0)==10){if((c[k>>2]|0)!=65536&(c[k>>2]|0)!=1953784678&(c[k>>2]|0)!=1330926671&(c[k>>2]|0)!=1953658213&(c[k>>2]|0)!=1954115633&(c[k>>2]|0)!=131072){c[e>>2]=2;o=c[e>>2]|0;i=d;return o|0}c[(c[g>>2]|0)+132>>2]=1953784678;do{if((c[k>>2]|0)==1953784678){n=Gp(c[f>>2]|0,94696,(c[g>>2]|0)+132|0)|0;c[j>>2]=n;if((n|0)!=0){c[e>>2]=c[j>>2];o=c[e>>2]|0;i=d;return o|0}if((c[(c[g>>2]|0)+140>>2]|0)==0){c[e>>2]=8;o=c[e>>2]|0;i=d;return o|0}if((c[(c[g>>2]|0)+140>>2]|0)>>>0>(((c[(c[f>>2]|0)+4>>2]|0)>>>0)/32|0)>>>0){c[e>>2]=10;o=c[e>>2]|0;i=d;return o|0}n=Yn(c[h>>2]|0,4,0,c[(c[g>>2]|0)+140>>2]|0,0,j)|0;c[(c[g>>2]|0)+144>>2]=n;if((c[j>>2]|0)!=0){c[e>>2]=c[j>>2];o=c[e>>2]|0;i=d;return o|0}n=yp(c[f>>2]|0,c[(c[g>>2]|0)+140>>2]<<2)|0;c[j>>2]=n;if((n|0)!=0){c[e>>2]=c[j>>2];o=c[e>>2]|0;i=d;return o|0}c[m>>2]=0;while(1){p=c[f>>2]|0;if((c[m>>2]|0)>=(c[(c[g>>2]|0)+140>>2]|0)){break}n=Ep(p)|0;c[(c[(c[g>>2]|0)+144>>2]|0)+(c[m>>2]<<2)>>2]=n;c[m>>2]=(c[m>>2]|0)+1}Bp(p)}else{c[(c[g>>2]|0)+136>>2]=65536;c[(c[g>>2]|0)+140>>2]=1;n=Sn(c[h>>2]|0,4,j)|0;c[(c[g>>2]|0)+144>>2]=n;if((c[j>>2]|0)==0){c[c[(c[g>>2]|0)+144>>2]>>2]=c[l>>2];break}c[e>>2]=c[j>>2];o=c[e>>2]|0;i=d;return o|0}}while(0);c[e>>2]=c[j>>2];o=c[e>>2]|0;i=d;return o|0}return 0}function ou(b,d){b=b|0;d=d|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;f=i;i=i+144|0;g=f+128|0;h=f+124|0;j=f+120|0;k=f+116|0;l=f+112|0;m=f+68|0;n=f+64|0;o=f+60|0;p=f+56|0;q=f+52|0;r=f+48|0;s=f+44|0;t=f+16|0;u=f;v=f+4|0;w=f+8|0;x=f+12|0;y=f+20|0;z=f+24|0;A=f+28|0;B=f+32|0;C=f+36|0;D=f+40|0;c[h>>2]=b;c[j>>2]=d;c[k>>2]=c[(c[h>>2]|0)+28>>2];c[l>>2]=0;c[n>>2]=0;c[o>>2]=0;c[q>>2]=0;c[r>>2]=0;c[v>>2]=0;d=Gp(c[h>>2]|0,94712,m)|0;c[l>>2]=d;if((d|0)!=0){c[g>>2]=c[l>>2];E=c[g>>2]|0;i=f;return E|0}if((c[m+4>>2]|0)!=2001684038?(c[m+4>>2]|0)!=1953784678:0){do{if(((((c[m+8>>2]|0)==(c[(c[h>>2]|0)+4>>2]|0)?(e[m+12>>1]|0|0)!=0:0)?!((44+((e[m+12>>1]|0)*20|0)|0)>>>0>=(c[m+8>>2]|0)>>>0):0)?!((12+((e[m+12>>1]|0)<<4)|0)>>>0>=(c[m+16>>2]|0)>>>0):0)?(c[m+16>>2]&3|0)==0:0){if((c[m+24>>2]|0)==0){if((c[m+28>>2]|0)!=0){break}if((c[m+32>>2]|0)!=0){break}}if((c[m+28>>2]|0)!=0?(c[m+32>>2]|0)==0:0){break}if((c[m+36>>2]|0)==0?(c[m+40>>2]|0)!=0:0){break}c[q>>2]=Sn(c[k>>2]|0,c[m+16>>2]|0,l)|0;a:do{if((c[l>>2]|0)==0?(c[r>>2]=Sn(c[k>>2]|0,40,l)|0,(c[l>>2]|0)==0):0){c[s>>2]=c[q>>2];c[z>>2]=e[m+12>>1]|0;c[x>>2]=0;while(1){if((c[z>>2]|0)==0){break}c[z>>2]=(c[z>>2]|0)>>>1;c[x>>2]=(c[x>>2]|0)+1}c[x>>2]=(c[x>>2]|0)+ -1;c[w>>2]=1<<c[x>>2]<<4;c[y>>2]=((e[m+12>>1]|0)<<4)-(c[w>>2]|0);d=(c[m+4>>2]|0)>>>24&255;b=c[s>>2]|0;c[s>>2]=b+1;a[b]=d;d=(c[m+4>>2]|0)>>>16&255;b=c[s>>2]|0;c[s>>2]=b+1;a[b]=d;d=(c[m+4>>2]|0)>>>8&255;b=c[s>>2]|0;c[s>>2]=b+1;a[b]=d;d=(c[m+4>>2]|0)>>>0&255;b=c[s>>2]|0;c[s>>2]=b+1;a[b]=d;d=(e[m+12>>1]|0)>>8&255;b=c[s>>2]|0;c[s>>2]=b+1;a[b]=d;d=(e[m+12>>1]|0)>>0&255;b=c[s>>2]|0;c[s>>2]=b+1;a[b]=d;d=(c[w>>2]|0)>>>8&255;b=c[s>>2]|0;c[s>>2]=b+1;a[b]=d;d=(c[w>>2]|0)>>>0&255;b=c[s>>2]|0;c[s>>2]=b+1;a[b]=d;d=(c[x>>2]|0)>>>8&255;b=c[s>>2]|0;c[s>>2]=b+1;a[b]=d;d=(c[x>>2]|0)>>>0&255;b=c[s>>2]|0;c[s>>2]=b+1;a[b]=d;d=(c[y>>2]|0)>>>8&255;b=c[s>>2]|0;c[s>>2]=b+1;a[b]=d;d=(c[y>>2]|0)>>>0&255;b=c[s>>2]|0;c[s>>2]=b+1;a[b]=d;c[n>>2]=Yn(c[k>>2]|0,24,0,e[m+12>>1]|0,0,l)|0;if(((c[l>>2]|0)==0?(c[o>>2]=Yn(c[k>>2]|0,4,0,e[m+12>>1]|0,0,l)|0,(c[l>>2]|0)==0):0)?(d=yp(c[h>>2]|0,(e[m+12>>1]|0)*20|0)|0,c[l>>2]=d,(d|0)==0):0){c[u>>2]=0;while(1){if((c[u>>2]|0)>=(e[m+12>>1]|0|0)){break}c[A>>2]=(c[n>>2]|0)+((c[u>>2]|0)*24|0);d=Ep(c[h>>2]|0)|0;c[c[A>>2]>>2]=d;d=Ep(c[h>>2]|0)|0;c[(c[A>>2]|0)+4>>2]=d;d=Ep(c[h>>2]|0)|0;c[(c[A>>2]|0)+8>>2]=d;d=Ep(c[h>>2]|0)|0;c[(c[A>>2]|0)+12>>2]=d;d=Ep(c[h>>2]|0)|0;c[(c[A>>2]|0)+16>>2]=d;if((c[c[A>>2]>>2]|0)>>>0<=(c[v>>2]|0)>>>0){F=30;break}c[v>>2]=c[c[A>>2]>>2];c[(c[o>>2]|0)+(c[u>>2]<<2)>>2]=c[A>>2];c[u>>2]=(c[u>>2]|0)+1}if((F|0)==30){Bp(c[h>>2]|0);c[l>>2]=8;break}Bp(c[h>>2]|0);Qz(c[o>>2]|0,e[m+12>>1]|0,4,106);c[p>>2]=44+((e[m+12>>1]|0)*20|0);c[t>>2]=12+((e[m+12>>1]|0)<<4);c[u>>2]=0;while(1){if((c[u>>2]|0)>=(e[m+12>>1]|0|0)){break}c[B>>2]=c[(c[o>>2]|0)+(c[u>>2]<<2)>>2];if((c[(c[B>>2]|0)+4>>2]|0)!=(c[p>>2]|0)){F=38;break}if(((c[(c[B>>2]|0)+4>>2]|0)+(c[(c[B>>2]|0)+8>>2]|0)|0)>>>0>(c[m+8>>2]|0)>>>0){F=38;break}if(((c[t>>2]|0)+(c[(c[B>>2]|0)+12>>2]|0)|0)>>>0>(c[m+16>>2]|0)>>>0){F=38;break}if((c[(c[B>>2]|0)+8>>2]|0)>>>0>(c[(c[B>>2]|0)+12>>2]|0)>>>0){F=38;break}c[(c[B>>2]|0)+20>>2]=c[t>>2];c[p>>2]=(c[p>>2]|0)+((c[(c[B>>2]|0)+8>>2]|0)+3&-4);c[t>>2]=(c[t>>2]|0)+((c[(c[B>>2]|0)+12>>2]|0)+3&-4);c[u>>2]=(c[u>>2]|0)+1}if((F|0)==38){c[l>>2]=8;break}do{if((c[m+24>>2]|0)!=0){if((c[m+24>>2]|0)==(c[p>>2]|0)?!(((c[m+24>>2]|0)+(c[m+28>>2]|0)|0)>>>0>(c[m+8>>2]|0)>>>0):0){c[p>>2]=(c[p>>2]|0)+(c[m+28>>2]|0);break}c[l>>2]=8;break a}}while(0);do{if((c[m+36>>2]|0)!=0){c[p>>2]=(c[p>>2]|0)+3&-4;if((c[m+36>>2]|0)==(c[p>>2]|0)?!(((c[m+36>>2]|0)+(c[m+40>>2]|0)|0)>>>0>(c[m+8>>2]|0)>>>0):0){c[p>>2]=(c[p>>2]|0)+(c[m+40>>2]|0);break}c[l>>2]=8;break a}}while(0);if((c[t>>2]|0)==(c[m+16>>2]|0)?(c[p>>2]|0)==(c[m+8>>2]|0):0){c[u>>2]=0;while(1){if((c[u>>2]|0)>=(e[m+12>>1]|0|0)){F=66;break}c[C>>2]=(c[n>>2]|0)+((c[u>>2]|0)*24|0);d=(c[c[C>>2]>>2]|0)>>>24&255;b=c[s>>2]|0;c[s>>2]=b+1;a[b]=d;d=(c[c[C>>2]>>2]|0)>>>16&255;b=c[s>>2]|0;c[s>>2]=b+1;a[b]=d;d=(c[c[C>>2]>>2]|0)>>>8&255;b=c[s>>2]|0;c[s>>2]=b+1;a[b]=d;d=(c[c[C>>2]>>2]|0)>>>0&255;b=c[s>>2]|0;c[s>>2]=b+1;a[b]=d;d=(c[(c[C>>2]|0)+16>>2]|0)>>>24&255;b=c[s>>2]|0;c[s>>2]=b+1;a[b]=d;d=(c[(c[C>>2]|0)+16>>2]|0)>>>16&255;b=c[s>>2]|0;c[s>>2]=b+1;a[b]=d;d=(c[(c[C>>2]|0)+16>>2]|0)>>>8&255;b=c[s>>2]|0;c[s>>2]=b+1;a[b]=d;d=(c[(c[C>>2]|0)+16>>2]|0)>>>0&255;b=c[s>>2]|0;c[s>>2]=b+1;a[b]=d;d=(c[(c[C>>2]|0)+20>>2]|0)>>>24&255;b=c[s>>2]|0;c[s>>2]=b+1;a[b]=d;d=(c[(c[C>>2]|0)+20>>2]|0)>>>16&255;b=c[s>>2]|0;c[s>>2]=b+1;a[b]=d;d=(c[(c[C>>2]|0)+20>>2]|0)>>>8&255;b=c[s>>2]|0;c[s>>2]=b+1;a[b]=d;d=(c[(c[C>>2]|0)+20>>2]|0)>>>0&255;b=c[s>>2]|0;c[s>>2]=b+1;a[b]=d;d=(c[(c[C>>2]|0)+12>>2]|0)>>>24&255;b=c[s>>2]|0;c[s>>2]=b+1;a[b]=d;d=(c[(c[C>>2]|0)+12>>2]|0)>>>16&255;b=c[s>>2]|0;c[s>>2]=b+1;a[b]=d;d=(c[(c[C>>2]|0)+12>>2]|0)>>>8&255;b=c[s>>2]|0;c[s>>2]=b+1;a[b]=d;d=(c[(c[C>>2]|0)+12>>2]|0)>>>0&255;b=c[s>>2]|0;c[s>>2]=b+1;a[b]=d;d=qp(c[h>>2]|0,c[(c[C>>2]|0)+4>>2]|0)|0;c[l>>2]=d;if((d|0)!=0){break a}d=yp(c[h>>2]|0,c[(c[C>>2]|0)+8>>2]|0)|0;c[l>>2]=d;if((d|0)!=0){break a}if((c[(c[C>>2]|0)+8>>2]|0)!=(c[(c[C>>2]|0)+12>>2]|0)){c[D>>2]=c[(c[C>>2]|0)+12>>2];c[l>>2]=gd(c[k>>2]|0,(c[q>>2]|0)+(c[(c[C>>2]|0)+20>>2]|0)|0,D|0,c[(c[h>>2]|0)+32>>2]|0,c[(c[C>>2]|0)+8>>2]|0)|0;if((c[l>>2]|0)!=0){break a}if((c[D>>2]|0)!=(c[(c[C>>2]|0)+12>>2]|0)){F=61;break}}else{lA((c[q>>2]|0)+(c[(c[C>>2]|0)+20>>2]|0)|0,c[(c[h>>2]|0)+32>>2]|0,c[(c[C>>2]|0)+12>>2]|0)|0}Bp(c[h>>2]|0);c[t>>2]=(c[(c[C>>2]|0)+20>>2]|0)+(c[(c[C>>2]|0)+12>>2]|0);while(1){if((c[t>>2]&3|0)==0){break}a[(c[q>>2]|0)+(c[t>>2]|0)|0]=0;c[t>>2]=(c[t>>2]|0)+1}c[u>>2]=(c[u>>2]|0)+1}if((F|0)==61){c[l>>2]=8;break}else if((F|0)==66){io(c[r>>2]|0,c[q>>2]|0,c[m+16>>2]|0);c[(c[r>>2]|0)+28>>2]=c[(c[h>>2]|0)+28>>2];c[(c[r>>2]|0)+24>>2]=63;jo(c[(c[j>>2]|0)+104>>2]|0,(c[(c[j>>2]|0)+8>>2]&1024|0)!=0|0);c[(c[j>>2]|0)+104>>2]=c[r>>2];d=(c[j>>2]|0)+8|0;c[d>>2]=c[d>>2]&-1025;break}}c[l>>2]=8}}}while(0);Vn(c[k>>2]|0,c[n>>2]|0);c[n>>2]=0;Vn(c[k>>2]|0,c[o>>2]|0);c[o>>2]=0;if((c[l>>2]|0)!=0){Vn(c[k>>2]|0,c[q>>2]|0);c[q>>2]=0;ko(c[r>>2]|0);Vn(c[k>>2]|0,c[r>>2]|0);c[r>>2]=0}c[g>>2]=c[l>>2];E=c[g>>2]|0;i=f;return E|0}}while(0);c[g>>2]=8;E=c[g>>2]|0;i=f;return E|0}c[g>>2]=8;E=c[g>>2]|0;i=f;return E|0}function pu(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;i=i+32|0;e=d+24|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;k=d+16|0;l=d+20|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=c[c[f>>2]>>2];c[j>>2]=c[c[g>>2]>>2];c[k>>2]=c[(c[h>>2]|0)+4>>2];c[l>>2]=c[(c[j>>2]|0)+4>>2];if((c[k>>2]|0)>>>0>(c[l>>2]|0)>>>0){c[e>>2]=1;m=c[e>>2]|0;i=d;return m|0}if((c[k>>2]|0)>>>0<(c[l>>2]|0)>>>0){c[e>>2]=-1;m=c[e>>2]|0;i=d;return m|0}else{c[e>>2]=0;m=c[e>>2]|0;i=d;return m|0}return 0}function qu(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b+4|0;e=b;c[d>>2]=a;c[e>>2]=c[(c[d>>2]|0)+28>>2];Vn(c[e>>2]|0,c[c[d>>2]>>2]|0);c[c[d>>2]>>2]=0;c[(c[d>>2]|0)+4>>2]=0;c[c[d>>2]>>2]=0;c[(c[d>>2]|0)+24>>2]=0;i=b;return}function ru(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+48|0;f=e+32|0;g=e+28|0;h=e+24|0;j=e+20|0;k=e+16|0;l=e+8|0;m=e+4|0;n=e;o=e+12|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=(d[c[g>>2]|0]|0)<<24|(d[(c[g>>2]|0)+1|0]|0)<<16|(d[(c[g>>2]|0)+2|0]|0)<<8|(d[(c[g>>2]|0)+3|0]|0)<<0;c[l>>2]=0;c[k>>2]=c[j>>2];c[g>>2]=(c[g>>2]|0)+4;while(1){if(!((c[l>>2]|0)>>>0<(c[k>>2]|0)>>>0)){p=8;break}c[m>>2]=((c[l>>2]|0)+(c[k>>2]|0)|0)>>>1;c[n>>2]=(c[g>>2]|0)+((c[m>>2]|0)*11|0);c[n>>2]=(c[n>>2]|0)+3;c[o>>2]=(d[(c[n>>2]|0)+ -3|0]|0)<<16|(d[(c[n>>2]|0)+ -3+1|0]|0)<<8|(d[(c[n>>2]|0)+ -3+2|0]|0)<<0;if((c[h>>2]|0)>>>0<(c[o>>2]|0)>>>0){c[k>>2]=c[m>>2];continue}if(!((c[h>>2]|0)>>>0>(c[o>>2]|0)>>>0)){p=7;break}c[l>>2]=(c[m>>2]|0)+1}if((p|0)==7){c[f>>2]=c[n>>2];q=c[f>>2]|0;i=e;return q|0}else if((p|0)==8){c[f>>2]=0;q=c[f>>2]|0;i=e;return q|0}return 0}function su(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+32|0;g=f+28|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;m=f+16|0;n=f+20|0;o=f+24|0;c[h>>2]=a;c[j>>2]=b;c[k>>2]=e;c[l>>2]=c[h>>2];c[j>>2]=(c[j>>2]|0)+4;c[m>>2]=(d[(c[j>>2]|0)+ -4|0]|0)<<24|(d[(c[j>>2]|0)+ -4+1|0]|0)<<16|(d[(c[j>>2]|0)+ -4+2|0]|0)<<8|(d[(c[j>>2]|0)+ -4+3|0]|0)<<0;if((vu(c[l>>2]|0,(c[m>>2]|0)+1|0,c[k>>2]|0)|0)!=0){c[g>>2]=0;p=c[g>>2]|0;i=f;return p|0}c[o>>2]=c[(c[l>>2]|0)+32>>2];c[n>>2]=0;while(1){if(!((c[n>>2]|0)>>>0<(c[m>>2]|0)>>>0)){break}c[j>>2]=(c[j>>2]|0)+3;c[(c[o>>2]|0)+(c[n>>2]<<2)>>2]=(d[(c[j>>2]|0)+ -3|0]|0)<<16|(d[(c[j>>2]|0)+ -3+1|0]|0)<<8|(d[(c[j>>2]|0)+ -3+2|0]|0)<<0;c[j>>2]=(c[j>>2]|0)+2;c[n>>2]=(c[n>>2]|0)+1}c[(c[o>>2]|0)+(c[n>>2]<<2)>>2]=0;c[g>>2]=c[o>>2];p=c[g>>2]|0;i=f;return p|0}function tu(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=i;i=i+48|0;g=f+32|0;h=f+28|0;j=f+24|0;k=f+20|0;l=f+16|0;m=f+8|0;n=f+4|0;o=f;p=f+12|0;c[h>>2]=a;c[j>>2]=b;c[k>>2]=e;c[l>>2]=c[h>>2];c[n>>2]=uu(c[j>>2]|0)|0;c[j>>2]=(c[j>>2]|0)+4;c[m>>2]=(d[(c[j>>2]|0)+ -4|0]|0)<<24|(d[(c[j>>2]|0)+ -4+1|0]|0)<<16|(d[(c[j>>2]|0)+ -4+2|0]|0)<<8|(d[(c[j>>2]|0)+ -4+3|0]|0)<<0;if((vu(c[l>>2]|0,(c[n>>2]|0)+1|0,c[k>>2]|0)|0)!=0){c[g>>2]=0;q=c[g>>2]|0;i=f;return q|0}c[o>>2]=c[(c[l>>2]|0)+32>>2];while(1){if(!((c[m>>2]|0)>>>0>0)){break}c[j>>2]=(c[j>>2]|0)+3;c[p>>2]=(d[(c[j>>2]|0)+ -3|0]|0)<<16|(d[(c[j>>2]|0)+ -3+1|0]|0)<<8|(d[(c[j>>2]|0)+ -3+2|0]|0)<<0;k=c[j>>2]|0;c[j>>2]=k+1;c[n>>2]=(d[k]|0)+1;do{c[c[o>>2]>>2]=c[p>>2];c[p>>2]=(c[p>>2]|0)+1;c[o>>2]=(c[o>>2]|0)+4;k=(c[n>>2]|0)+ -1|0;c[n>>2]=k}while((k|0)!=0);c[m>>2]=(c[m>>2]|0)+ -1}c[c[o>>2]>>2]=0;c[g>>2]=c[(c[l>>2]|0)+32>>2];q=c[g>>2]|0;i=f;return q|0}function uu(a){a=a|0;var b=0,e=0,f=0,g=0;b=i;i=i+16|0;e=b+8|0;f=b;g=b+4|0;c[e>>2]=a;c[e>>2]=(c[e>>2]|0)+4;c[f>>2]=(d[(c[e>>2]|0)+ -4|0]|0)<<24|(d[(c[e>>2]|0)+ -4+1|0]|0)<<16|(d[(c[e>>2]|0)+ -4+2|0]|0)<<8|(d[(c[e>>2]|0)+ -4+3|0]|0)<<0;c[g>>2]=0;c[e>>2]=(c[e>>2]|0)+3;while(1){if(!((c[f>>2]|0)>>>0>0)){break}c[g>>2]=(c[g>>2]|0)+(1+(d[c[e>>2]|0]|0));c[e>>2]=(c[e>>2]|0)+4;c[f>>2]=(c[f>>2]|0)+ -1}i=b;return c[g>>2]|0}function vu(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+32|0;f=e+20|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[k>>2]=c[(c[g>>2]|0)+28>>2];c[l>>2]=0;do{if((c[h>>2]|0)>>>0>(c[(c[g>>2]|0)+28>>2]|0)>>>0){c[(c[g>>2]|0)+36>>2]=c[j>>2];d=Yn(c[j>>2]|0,4,c[k>>2]|0,c[h>>2]|0,c[(c[g>>2]|0)+32>>2]|0,l)|0;c[(c[g>>2]|0)+32>>2]=d;if((c[l>>2]|0)==0){c[(c[g>>2]|0)+28>>2]=c[h>>2];break}c[f>>2]=c[l>>2];m=c[f>>2]|0;i=e;return m|0}}while(0);c[f>>2]=c[l>>2];m=c[f>>2]|0;i=e;return m|0}function wu(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+48|0;f=e+36|0;g=e+32|0;h=e+28|0;j=e+24|0;k=e+20|0;l=e+16|0;m=e+8|0;n=e+4|0;o=e;p=e+12|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=(d[c[g>>2]|0]|0)<<24|(d[(c[g>>2]|0)+1|0]|0)<<16|(d[(c[g>>2]|0)+2|0]|0)<<8|(d[(c[g>>2]|0)+3|0]|0)<<0;c[l>>2]=0;c[k>>2]=c[j>>2];c[g>>2]=(c[g>>2]|0)+4;while(1){if(!((c[l>>2]|0)>>>0<(c[k>>2]|0)>>>0)){q=8;break}c[m>>2]=((c[l>>2]|0)+(c[k>>2]|0)|0)>>>1;c[n>>2]=(c[g>>2]|0)+(c[m>>2]<<2);c[n>>2]=(c[n>>2]|0)+3;c[o>>2]=(d[(c[n>>2]|0)+ -3|0]|0)<<16|(d[(c[n>>2]|0)+ -3+1|0]|0)<<8|(d[(c[n>>2]|0)+ -3+2|0]|0)<<0;j=c[n>>2]|0;c[n>>2]=j+1;c[p>>2]=d[j]|0;if((c[h>>2]|0)>>>0<(c[o>>2]|0)>>>0){c[k>>2]=c[m>>2];continue}if(!((c[h>>2]|0)>>>0>((c[o>>2]|0)+(c[p>>2]|0)|0)>>>0)){q=7;break}c[l>>2]=(c[m>>2]|0)+1}if((q|0)==7){c[f>>2]=1;r=c[f>>2]|0;i=e;return r|0}else if((q|0)==8){c[f>>2]=0;r=c[f>>2]|0;i=e;return r|0}return 0}function xu(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;i=i+48|0;g=f+32|0;h=f+28|0;j=f+24|0;k=f+20|0;l=f+16|0;m=f+8|0;n=f+4|0;o=f;p=f+12|0;c[h>>2]=b;c[j>>2]=e;c[k>>2]=(d[c[h>>2]|0]|0)<<24|(d[(c[h>>2]|0)+1|0]|0)<<16|(d[(c[h>>2]|0)+2|0]|0)<<8|(d[(c[h>>2]|0)+3|0]|0)<<0;c[m>>2]=0;c[l>>2]=c[k>>2];c[h>>2]=(c[h>>2]|0)+4;while(1){if(!((c[m>>2]|0)>>>0<(c[l>>2]|0)>>>0)){q=8;break}c[n>>2]=((c[m>>2]|0)+(c[l>>2]|0)|0)>>>1;c[o>>2]=(c[h>>2]|0)+((c[n>>2]|0)*5|0);c[o>>2]=(c[o>>2]|0)+3;c[p>>2]=(d[(c[o>>2]|0)+ -3|0]|0)<<16|(d[(c[o>>2]|0)+ -3+1|0]|0)<<8|(d[(c[o>>2]|0)+ -3+2|0]|0)<<0;if((c[j>>2]|0)>>>0<(c[p>>2]|0)>>>0){c[l>>2]=c[n>>2];continue}if(!((c[j>>2]|0)>>>0>(c[p>>2]|0)>>>0)){q=7;break}c[m>>2]=(c[n>>2]|0)+1}if((q|0)==7){c[g>>2]=((a[c[o>>2]|0]&255)<<8|(a[(c[o>>2]|0)+1|0]&255)<<0)&65535;r=c[g>>2]|0;i=f;return r|0}else if((q|0)==8){c[g>>2]=0;r=c[g>>2]|0;i=f;return r|0}return 0}function yu(b){b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+32|0;f=e+28|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;m=e+20|0;n=e+24|0;c[f>>2]=b;a:do{if(!((c[(c[f>>2]|0)+28>>2]|0)>>>0>=4294967295)){c[l>>2]=(c[(c[f>>2]|0)+28>>2]|0)+1;c[m>>2]=c[(c[f>>2]|0)+36>>2];while(1){if(!((c[m>>2]|0)>>>0<(c[(c[f>>2]|0)+40>>2]|0)>>>0)){break a}c[g>>2]=(c[(c[f>>2]|0)+16>>2]|0)+16+((c[m>>2]|0)*12|0);c[g>>2]=(c[g>>2]|0)+4;c[h>>2]=(d[(c[g>>2]|0)+ -4|0]|0)<<24|(d[(c[g>>2]|0)+ -4+1|0]|0)<<16|(d[(c[g>>2]|0)+ -4+2|0]|0)<<8|(d[(c[g>>2]|0)+ -4+3|0]|0)<<0;c[g>>2]=(c[g>>2]|0)+4;c[j>>2]=(d[(c[g>>2]|0)+ -4|0]|0)<<24|(d[(c[g>>2]|0)+ -4+1|0]|0)<<16|(d[(c[g>>2]|0)+ -4+2|0]|0)<<8|(d[(c[g>>2]|0)+ -4+3|0]|0)<<0;c[k>>2]=(d[c[g>>2]|0]|0)<<24|(d[(c[g>>2]|0)+1|0]|0)<<16|(d[(c[g>>2]|0)+2|0]|0)<<8|(d[(c[g>>2]|0)+3|0]|0)<<0;if((c[l>>2]|0)>>>0<(c[h>>2]|0)>>>0){c[l>>2]=c[h>>2]}if((c[l>>2]|0)>>>0<=(c[j>>2]|0)>>>0?(c[n>>2]=c[k>>2],(c[n>>2]|0)!=0):0){break}c[m>>2]=(c[m>>2]|0)+1}c[(c[f>>2]|0)+28>>2]=c[l>>2];c[(c[f>>2]|0)+32>>2]=c[n>>2];c[(c[f>>2]|0)+36>>2]=c[m>>2];i=e;return}}while(0);a[(c[f>>2]|0)+24|0]=0;i=e;return}function zu(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;g=i;i=i+64|0;h=g+48|0;j=g+44|0;k=g+40|0;l=g+52|0;m=g+36|0;n=g+32|0;o=g+28|0;p=g+24|0;q=g+16|0;r=g+12|0;s=g+8|0;t=g+4|0;u=g;v=g+20|0;c[j>>2]=b;c[k>>2]=e;a[l]=f;c[m>>2]=0;c[n>>2]=(c[(c[j>>2]|0)+16>>2]|0)+12;c[o>>2]=d[c[n>>2]|0]<<24|d[(c[n>>2]|0)+1|0]<<16|d[(c[n>>2]|0)+2|0]<<8|d[(c[n>>2]|0)+3|0]<<0;c[p>>2]=c[c[k>>2]>>2];if((c[o>>2]|0)==0){c[h>>2]=0;w=c[h>>2]|0;i=g;return w|0}c[u>>2]=c[o>>2];c[r>>2]=-1;if((a[l]|0)!=0){c[p>>2]=(c[p>>2]|0)+1}c[t>>2]=0;c[s>>2]=c[o>>2];while(1){if(!((c[t>>2]|0)>>>0<(c[s>>2]|0)>>>0)){break}c[u>>2]=((c[t>>2]|0)+(c[s>>2]|0)|0)>>>1;c[n>>2]=(c[(c[j>>2]|0)+16>>2]|0)+16+((c[u>>2]|0)*12|0);c[n>>2]=(c[n>>2]|0)+4;c[q>>2]=d[(c[n>>2]|0)+ -4|0]<<24|d[(c[n>>2]|0)+ -4+1|0]<<16|d[(c[n>>2]|0)+ -4+2|0]<<8|d[(c[n>>2]|0)+ -4+3|0]<<0;c[n>>2]=(c[n>>2]|0)+4;c[r>>2]=d[(c[n>>2]|0)+ -4|0]<<24|d[(c[n>>2]|0)+ -4+1|0]<<16|d[(c[n>>2]|0)+ -4+2|0]<<8|d[(c[n>>2]|0)+ -4+3|0]<<0;if((c[p>>2]|0)>>>0<(c[q>>2]|0)>>>0){c[s>>2]=c[u>>2];continue}if(!((c[p>>2]|0)>>>0>(c[r>>2]|0)>>>0)){x=11;break}c[t>>2]=(c[u>>2]|0)+1}if((x|0)==11){c[m>>2]=d[c[n>>2]|0]<<24|d[(c[n>>2]|0)+1|0]<<16|d[(c[n>>2]|0)+2|0]<<8|d[(c[n>>2]|0)+3|0]<<0}if((a[l]|0)!=0){c[v>>2]=c[j>>2];if((c[p>>2]|0)>>>0>(c[r>>2]|0)>>>0?(c[u>>2]=(c[u>>2]|0)+1,(c[u>>2]|0)==(c[o>>2]|0)):0){c[h>>2]=0;w=c[h>>2]|0;i=g;return w|0}a[(c[v>>2]|0)+24|0]=1;c[(c[v>>2]|0)+28>>2]=c[p>>2];c[(c[v>>2]|0)+36>>2]=c[u>>2];if((c[m>>2]|0)==0){yu(c[v>>2]|0);if((a[(c[v>>2]|0)+24|0]|0)!=0){c[m>>2]=c[(c[v>>2]|0)+32>>2]}}else{c[(c[v>>2]|0)+32>>2]=c[m>>2]}if((c[m>>2]|0)!=0){c[c[k>>2]>>2]=c[(c[v>>2]|0)+28>>2]}}c[h>>2]=c[m>>2];w=c[h>>2]|0;i=g;return w|0}function Au(b){b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+32|0;f=e+28|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;m=e+20|0;n=e+24|0;c[f>>2]=b;a:do{if(!((c[(c[f>>2]|0)+28>>2]|0)>>>0>=4294967295)){c[l>>2]=(c[(c[f>>2]|0)+28>>2]|0)+1;c[m>>2]=c[(c[f>>2]|0)+36>>2];b:while(1){if(!((c[m>>2]|0)>>>0<(c[(c[f>>2]|0)+40>>2]|0)>>>0)){break a}c[g>>2]=(c[(c[f>>2]|0)+16>>2]|0)+16+((c[m>>2]|0)*12|0);c[g>>2]=(c[g>>2]|0)+4;c[h>>2]=(d[(c[g>>2]|0)+ -4|0]|0)<<24|(d[(c[g>>2]|0)+ -4+1|0]|0)<<16|(d[(c[g>>2]|0)+ -4+2|0]|0)<<8|(d[(c[g>>2]|0)+ -4+3|0]|0)<<0;c[g>>2]=(c[g>>2]|0)+4;c[j>>2]=(d[(c[g>>2]|0)+ -4|0]|0)<<24|(d[(c[g>>2]|0)+ -4+1|0]|0)<<16|(d[(c[g>>2]|0)+ -4+2|0]|0)<<8|(d[(c[g>>2]|0)+ -4+3|0]|0)<<0;c[k>>2]=(d[c[g>>2]|0]|0)<<24|(d[(c[g>>2]|0)+1|0]|0)<<16|(d[(c[g>>2]|0)+2|0]|0)<<8|(d[(c[g>>2]|0)+3|0]|0)<<0;if((c[l>>2]|0)>>>0<(c[h>>2]|0)>>>0){c[l>>2]=c[h>>2]}while(1){if(!((c[l>>2]|0)>>>0<=(c[j>>2]|0)>>>0)){break}c[n>>2]=(c[k>>2]|0)+(c[l>>2]|0)-(c[h>>2]|0);o=c[l>>2]|0;if((c[n>>2]|0)!=0){break b}c[l>>2]=o+1}c[m>>2]=(c[m>>2]|0)+1}c[(c[f>>2]|0)+28>>2]=o;c[(c[f>>2]|0)+32>>2]=c[n>>2];c[(c[f>>2]|0)+36>>2]=c[m>>2];i=e;return}}while(0);a[(c[f>>2]|0)+24|0]=0;i=e;return}function Bu(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;g=i;i=i+64|0;h=g+52|0;j=g+48|0;k=g+44|0;l=g+56|0;m=g+40|0;n=g+36|0;o=g+32|0;p=g+28|0;q=g+20|0;r=g+16|0;s=g+12|0;t=g+8|0;u=g+4|0;v=g;w=g+24|0;c[j>>2]=b;c[k>>2]=e;a[l]=f;c[m>>2]=0;c[n>>2]=(c[(c[j>>2]|0)+16>>2]|0)+12;c[o>>2]=d[c[n>>2]|0]<<24|d[(c[n>>2]|0)+1|0]<<16|d[(c[n>>2]|0)+2|0]<<8|d[(c[n>>2]|0)+3|0]<<0;c[p>>2]=c[c[k>>2]>>2];if((c[o>>2]|0)==0){c[h>>2]=0;x=c[h>>2]|0;i=g;return x|0}c[v>>2]=c[o>>2];c[r>>2]=-1;if((a[l]|0)!=0){c[p>>2]=(c[p>>2]|0)+1}c[u>>2]=0;c[t>>2]=c[o>>2];while(1){if(!((c[u>>2]|0)>>>0<(c[t>>2]|0)>>>0)){break}c[v>>2]=((c[u>>2]|0)+(c[t>>2]|0)|0)>>>1;c[n>>2]=(c[(c[j>>2]|0)+16>>2]|0)+16+((c[v>>2]|0)*12|0);c[n>>2]=(c[n>>2]|0)+4;c[q>>2]=d[(c[n>>2]|0)+ -4|0]<<24|d[(c[n>>2]|0)+ -4+1|0]<<16|d[(c[n>>2]|0)+ -4+2|0]<<8|d[(c[n>>2]|0)+ -4+3|0]<<0;c[n>>2]=(c[n>>2]|0)+4;c[r>>2]=d[(c[n>>2]|0)+ -4|0]<<24|d[(c[n>>2]|0)+ -4+1|0]<<16|d[(c[n>>2]|0)+ -4+2|0]<<8|d[(c[n>>2]|0)+ -4+3|0]<<0;if((c[p>>2]|0)>>>0<(c[q>>2]|0)>>>0){c[t>>2]=c[v>>2];continue}if(!((c[p>>2]|0)>>>0>(c[r>>2]|0)>>>0)){y=11;break}c[u>>2]=(c[v>>2]|0)+1}if((y|0)==11){c[s>>2]=d[c[n>>2]|0]<<24|d[(c[n>>2]|0)+1|0]<<16|d[(c[n>>2]|0)+2|0]<<8|d[(c[n>>2]|0)+3|0]<<0;c[m>>2]=(c[s>>2]|0)+(c[p>>2]|0)-(c[q>>2]|0)}if((a[l]|0)!=0){c[w>>2]=c[j>>2];if((c[p>>2]|0)>>>0>(c[r>>2]|0)>>>0?(c[v>>2]=(c[v>>2]|0)+1,(c[v>>2]|0)==(c[o>>2]|0)):0){c[h>>2]=0;x=c[h>>2]|0;i=g;return x|0}a[(c[w>>2]|0)+24|0]=1;c[(c[w>>2]|0)+28>>2]=c[p>>2];c[(c[w>>2]|0)+36>>2]=c[v>>2];if((c[m>>2]|0)==0){Au(c[w>>2]|0);if((a[(c[w>>2]|0)+24|0]|0)!=0){c[m>>2]=c[(c[w>>2]|0)+32>>2]}}else{c[(c[w>>2]|0)+32>>2]=c[m>>2]}if((c[m>>2]|0)!=0){c[c[k>>2]>>2]=c[(c[w>>2]|0)+28>>2]}}c[h>>2]=c[m>>2];x=c[h>>2]|0;i=g;return x|0}function Cu(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;g=i;i=i+80|0;h=g+60|0;j=g+56|0;k=g+52|0;l=g+64|0;m=g+48|0;n=g+44|0;o=g+40|0;p=g+36|0;q=g+32|0;r=g+24|0;s=g+20|0;t=g+16|0;u=g+12|0;v=g+8|0;w=g+4|0;x=g;y=g+28|0;c[j>>2]=b;c[k>>2]=e;a[l]=f;c[t>>2]=c[c[k>>2]>>2];c[u>>2]=0;c[v>>2]=(c[(c[j>>2]|0)+16>>2]|0)+6;c[m>>2]=((a[c[v>>2]|0]&255)<<8|(a[(c[v>>2]|0)+1|0]&255)<<0)&65535&-2;c[s>>2]=(c[m>>2]|0)>>>1;if((c[s>>2]|0)==0){c[h>>2]=0;z=c[h>>2]|0;i=g;return z|0}if((a[l]|0)!=0){c[t>>2]=(c[t>>2]|0)+1}while(1){if(!((c[t>>2]|0)>>>0<=65535)){break}c[v>>2]=(c[(c[j>>2]|0)+16>>2]|0)+14;c[w>>2]=(c[(c[j>>2]|0)+16>>2]|0)+16+(c[m>>2]|0);c[r>>2]=0;while(1){if(!((c[r>>2]|0)>>>0<(c[s>>2]|0)>>>0)){break}c[v>>2]=(c[v>>2]|0)+2;c[o>>2]=((a[(c[v>>2]|0)+ -2|0]&255)<<8|(a[(c[v>>2]|0)+ -2+1|0]&255)<<0)&65535;c[w>>2]=(c[w>>2]|0)+2;c[n>>2]=((a[(c[w>>2]|0)+ -2|0]&255)<<8|(a[(c[w>>2]|0)+ -2+1|0]&255)<<0)&65535;if((c[t>>2]|0)>>>0>=(c[n>>2]|0)>>>0?(c[t>>2]|0)>>>0<=(c[o>>2]|0)>>>0:0){c[v>>2]=(c[w>>2]|0)+ -2+(c[m>>2]|0);c[q>>2]=(((a[c[v>>2]|0]&255)<<8|(a[(c[v>>2]|0)+1|0]&255)<<0)&65535)<<16>>16;c[v>>2]=(c[v>>2]|0)+(c[m>>2]|0);c[p>>2]=((a[c[v>>2]|0]&255)<<8|(a[(c[v>>2]|0)+1|0]&255)<<0)&65535;if(((((c[r>>2]|0)>>>0>=((c[s>>2]|0)-1|0)>>>0?(c[n>>2]|0)==65535:0)?(c[o>>2]|0)==65535:0)?(c[x>>2]=c[c[j>>2]>>2],c[y>>2]=(c[(c[x>>2]|0)+500>>2]|0)+(c[(c[x>>2]|0)+504>>2]|0),(c[p>>2]|0)!=0):0)?((c[v>>2]|0)+(c[p>>2]|0)+2|0)>>>0>(c[y>>2]|0)>>>0:0){c[q>>2]=1;c[p>>2]=0}if((c[p>>2]|0)!=65535){A=17;break}}c[r>>2]=(c[r>>2]|0)+1}do{if((A|0)==17){A=0;if((c[p>>2]|0)==0){c[u>>2]=(c[t>>2]|0)+(c[q>>2]|0)&65535;break}c[v>>2]=(c[v>>2]|0)+((c[p>>2]|0)+((c[t>>2]|0)-(c[n>>2]|0)<<1));c[u>>2]=((a[c[v>>2]|0]&255)<<8|(a[(c[v>>2]|0)+1|0]&255)<<0)&65535;if((c[u>>2]|0)!=0){c[u>>2]=(c[u>>2]|0)+(c[q>>2]|0)&65535}}}while(0);if((a[l]|0)==0){break}if((c[u>>2]|0)!=0){break}c[t>>2]=(c[t>>2]|0)+1}if((d[l]|0)!=0?(c[u>>2]|0)!=0:0){c[c[k>>2]>>2]=c[t>>2]}c[h>>2]=c[u>>2];z=c[h>>2]|0;i=g;return z|0}function Du(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;d=i;i=i+32|0;e=d+28|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;k=d+16|0;l=d+20|0;m=d+24|0;c[e>>2]=b;a:do{if(!((c[(c[e>>2]|0)+24>>2]|0)>>>0>=65535)){c[f>>2]=(c[(c[e>>2]|0)+24>>2]|0)+1;if((c[f>>2]|0)>>>0<(c[(c[e>>2]|0)+40>>2]|0)>>>0){c[f>>2]=c[(c[e>>2]|0)+40>>2]}b:while(1){c[g>>2]=c[(c[e>>2]|0)+52>>2];c[h>>2]=c[(c[e>>2]|0)+44>>2];c[j>>2]=c[(c[e>>2]|0)+48>>2];c:do{if((c[f>>2]|0)>>>0<=(c[h>>2]|0)>>>0){if((c[g>>2]|0)==0){while(1){c[m>>2]=(c[f>>2]|0)+(c[j>>2]|0)&65535;n=c[f>>2]|0;if((c[m>>2]|0)!=0){o=12;break b}b=n+1|0;c[f>>2]=b;if(!(b>>>0<=(c[h>>2]|0)>>>0)){break c}}}c[k>>2]=(c[g>>2]|0)+((c[f>>2]|0)-(c[(c[e>>2]|0)+40>>2]|0)<<1);do{c[k>>2]=(c[k>>2]|0)+2;c[l>>2]=((a[(c[k>>2]|0)+ -2|0]&255)<<8|(a[(c[k>>2]|0)+ -2+1|0]&255)<<0)&65535;if((c[l>>2]|0)!=0?(c[l>>2]=(c[l>>2]|0)+(c[j>>2]|0)&65535,(c[l>>2]|0)!=0):0){o=9;break b}b=(c[f>>2]|0)+1|0;c[f>>2]=b}while(b>>>0<=(c[h>>2]|0)>>>0)}}while(0);if((Fu(c[e>>2]|0,(c[(c[e>>2]|0)+36>>2]|0)+1|0)|0)<0){break a}if(!((c[f>>2]|0)>>>0<(c[(c[e>>2]|0)+40>>2]|0)>>>0)){continue}c[f>>2]=c[(c[e>>2]|0)+40>>2]}if((o|0)==9){c[(c[e>>2]|0)+24>>2]=c[f>>2];c[(c[e>>2]|0)+28>>2]=c[l>>2];i=d;return}else if((o|0)==12){c[(c[e>>2]|0)+24>>2]=n;c[(c[e>>2]|0)+28>>2]=c[m>>2];i=d;return}}}while(0);c[(c[e>>2]|0)+24>>2]=-1;c[(c[e>>2]|0)+28>>2]=0;i=d;return}



function gi(a,e){a=a|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0;f=i;i=i+48|0;g=f+20|0;h=f;j=c[a+468>>2]|0;k=a+280|0;if((c[k>>2]|0)!=0?(l=j+44|0,(c[l>>2]|0)==0):0){m=j+16|0;n=c[a+464>>2]|0;o=n+24|0;c[o>>2]=(c[o>>2]|0)+((c[m>>2]|0)/8|0);c[m>>2]=0;if((vd[c[n+8>>2]&63](a)|0)==0){p=0;i=f;return p|0}n=a+340|0;m=j+20|0;if((c[n>>2]|0)>0){o=m+4|0;q=0;do{c[o+(q<<2)>>2]=0;q=q+1|0}while((q|0)<(c[n>>2]|0))}c[m>>2]=0;c[l>>2]=c[k>>2];if((c[a+440>>2]|0)==0){c[j+40>>2]=0}}if((c[j+40>>2]|0)==0){c[g+16>>2]=a;k=a+24|0;l=c[k>>2]|0;m=c[l>>2]|0;c[g>>2]=m;n=c[l+4>>2]|0;q=g+4|0;c[q>>2]=n;o=j+12|0;r=c[o>>2]|0;s=j+16|0;t=c[s>>2]|0;u=j+20|0;c[h+0>>2]=c[u+0>>2];c[h+4>>2]=c[u+4>>2];c[h+8>>2]=c[u+8>>2];c[h+12>>2]=c[u+12>>2];c[h+16>>2]=c[u+16>>2];v=a+368|0;do{if((c[v>>2]|0)>0){w=j+100|0;x=g+8|0;y=g+12|0;z=j+140|0;A=j+180|0;B=t;C=0;D=r;a:while(1){E=c[e+(C<<2)>>2]|0;F=c[w+(C<<2)>>2]|0;if((B|0)<8){if((hi(g,D,B,0)|0)==0){p=0;G=65;break}H=c[x>>2]|0;I=c[y>>2]|0;if((I|0)<8){J=I;K=H;L=1;G=17}else{M=I;N=H;G=15}}else{M=B;N=D;G=15}if((G|0)==15){G=0;H=N>>M+ -8&255;I=c[F+(H<<2)+144>>2]|0;if((I|0)==0){J=M;K=N;L=9;G=17}else{O=M-I|0;P=N;Q=d[F+H+1168|0]|0}}if((G|0)==17){G=0;H=ii(g,K,J,F,L)|0;if((H|0)<0){p=0;G=65;break}O=c[y>>2]|0;P=c[x>>2]|0;Q=H}H=c[z+(C<<2)>>2]|0;F=c[A+(C<<2)>>2]|0;I=(Q|0)!=0;b:do{if((F|0)==0){if(I){if((O|0)<(Q|0)){if((hi(g,P,O,Q)|0)==0){p=0;G=65;break a}R=c[y>>2]|0;S=c[x>>2]|0}else{R=O;S=P}T=R-Q|0;U=S;V=1;G=47}else{T=O;U=P;V=1;G=47}}else{if(I){if((O|0)<(Q|0)){if((hi(g,P,O,Q)|0)==0){p=0;G=65;break a}W=c[y>>2]|0;X=c[x>>2]|0}else{W=O;X=P}Y=W-Q|0;Z=c[4648+(Q<<2)>>2]|0;_=X>>Y&Z;$=Y;aa=X;ba=_-((_|0)>(c[4648+(Q+ -1<<2)>>2]|0)?0:Z)|0}else{$=O;aa=P;ba=0}Z=h+(c[a+(C<<2)+372>>2]<<2)+4|0;_=(c[Z>>2]|0)+ba|0;c[Z>>2]=_;b[E>>1]=_;if((F|0)>1){_=$;Z=aa;Y=1;while(1){if((_|0)<8){if((hi(g,Z,_,0)|0)==0){p=0;G=65;break a}ca=c[x>>2]|0;da=c[y>>2]|0;if((da|0)<8){ea=da;fa=ca;ga=1;G=31}else{ha=da;ia=ca;G=29}}else{ha=_;ia=Z;G=29}if((G|0)==29){G=0;ca=ia>>ha+ -8&255;da=c[H+(ca<<2)+144>>2]|0;if((da|0)==0){ea=ha;fa=ia;ga=9;G=31}else{ja=ha-da|0;ka=ia;la=d[H+ca+1168|0]|0}}if((G|0)==31){G=0;ca=ii(g,fa,ea,H,ga)|0;if((ca|0)<0){p=0;G=65;break a}ja=c[y>>2]|0;ka=c[x>>2]|0;la=ca}ca=la>>4;da=la&15;if((da|0)==0){if((ca|0)!=15){ma=ja;na=ka;break b}oa=ja;pa=ka;qa=Y+15|0}else{ra=ca+Y|0;if((ja|0)<(da|0)){if((hi(g,ka,ja,da)|0)==0){p=0;G=65;break a}sa=c[y>>2]|0;ta=c[x>>2]|0}else{sa=ja;ta=ka}ca=sa-da|0;ua=c[4648+(da<<2)>>2]|0;va=ta>>ca&ua;b[E+(c[10624+(ra<<2)>>2]<<1)>>1]=va-((va|0)>(c[4648+(da+ -1<<2)>>2]|0)?0:ua);oa=ca;pa=ta;qa=ra}Y=qa+1|0;if((Y|0)>=(F|0)){break}else{_=oa;Z=pa}}if((Y|0)<64){T=oa;U=pa;V=Y;G=47}else{ma=oa;na=pa}}else{T=$;U=aa;V=1;G=47}}}while(0);c:do{if((G|0)==47){while(1){G=0;if((T|0)<8){if((hi(g,U,T,0)|0)==0){p=0;G=65;break a}F=c[x>>2]|0;E=c[y>>2]|0;if((E|0)<8){wa=E;xa=F;ya=1;G=52}else{za=E;Aa=F;G=50}}else{za=T;Aa=U;G=50}if((G|0)==50){G=0;F=Aa>>za+ -8&255;E=c[H+(F<<2)+144>>2]|0;if((E|0)==0){wa=za;xa=Aa;ya=9;G=52}else{Ba=za-E|0;Ca=Aa;Da=d[H+F+1168|0]|0}}if((G|0)==52){G=0;F=ii(g,xa,wa,H,ya)|0;if((F|0)<0){p=0;G=65;break a}Ba=c[y>>2]|0;Ca=c[x>>2]|0;Da=F}F=Da>>4;E=Da&15;if((E|0)==0){if((F|0)==15){Ea=15;Fa=Ba;Ga=Ca}else{ma=Ba;na=Ca;break c}}else{if((Ba|0)<(E|0)){if((hi(g,Ca,Ba,E)|0)==0){p=0;G=65;break a}Ha=c[y>>2]|0;Ia=c[x>>2]|0}else{Ha=Ba;Ia=Ca}Ea=F;Fa=Ha-E|0;Ga=Ia}E=V+1+Ea|0;if((E|0)<64){T=Fa;U=Ga;V=E;G=47}else{ma=Fa;na=Ga;break}}}}while(0);H=C+1|0;if((H|0)<(c[v>>2]|0)){B=ma;C=H;D=na}else{G=62;break}}if((G|0)==62){Ja=c[g>>2]|0;Ka=c[k>>2]|0;La=c[q>>2]|0;Ma=ma;Na=na;break}else if((G|0)==65){i=f;return p|0}}else{Ja=m;Ka=l;La=n;Ma=t;Na=r}}while(0);c[Ka>>2]=Ja;c[(c[k>>2]|0)+4>>2]=La;c[o>>2]=Na;c[s>>2]=Ma;c[u+0>>2]=c[h+0>>2];c[u+4>>2]=c[h+4>>2];c[u+8>>2]=c[h+8>>2];c[u+12>>2]=c[h+12>>2];c[u+16>>2]=c[h+16>>2]}h=j+44|0;c[h>>2]=(c[h>>2]|0)+ -1;p=1;i=f;return p|0}function hi(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;g=i;h=c[b>>2]|0;j=b+4|0;k=c[j>>2]|0;l=c[b+16>>2]|0;m=l+440|0;a:do{if((c[m>>2]|0)==0){if((e|0)<25){n=l+24|0;o=d;p=e;q=k;r=h;b:while(1){if((q|0)==0){if((vd[c[(c[n>>2]|0)+12>>2]&63](l)|0)==0){s=0;t=19;break}u=c[n>>2]|0;v=c[u+4>>2]|0;w=c[u>>2]|0}else{v=q;w=r}u=v+ -1|0;x=w+1|0;y=a[w]|0;z=y&255;if(y<<24>>24==-1){y=u;A=x;while(1){if((y|0)==0){if((vd[c[(c[n>>2]|0)+12>>2]&63](l)|0)==0){s=0;t=19;break b}B=c[n>>2]|0;C=c[B+4>>2]|0;D=c[B>>2]|0}else{C=y;D=A}E=C+ -1|0;F=D+1|0;G=a[D]|0;if(G<<24>>24==-1){y=E;A=F}else if(G<<24>>24==0){H=E;I=255;J=F;break}else{t=12;break b}}}else{H=u;I=z;J=x}A=I|o<<8;y=p+8|0;if((y|0)<25){o=A;p=y;q=H;r=J}else{K=A;L=y;M=H;N=J;break a}}if((t|0)==12){c[m>>2]=G&255;O=o;P=p;Q=E;R=F;t=14;break}else if((t|0)==19){i=g;return s|0}}else{K=d;L=e;M=k;N=h}}else{O=d;P=e;Q=k;R=h;t=14}}while(0);if((t|0)==14){if((P|0)<(f|0)){f=l+468|0;if((c[(c[f>>2]|0)+40>>2]|0)==0){t=c[l>>2]|0;c[t+20>>2]=120;td[c[t+4>>2]&31](l,-1);c[(c[f>>2]|0)+40>>2]=1}K=O<<25-P;L=25;M=Q;N=R}else{K=O;L=P;M=Q;N=R}}c[b>>2]=N;c[j>>2]=M;c[b+8>>2]=K;c[b+12>>2]=L;s=1;i=g;return s|0}function ii(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;h=i;do{if((e|0)<(g|0)){if((hi(a,b,e,g)|0)==0){j=-1;i=h;return j|0}else{k=c[a+8>>2]|0;l=c[a+12>>2]|0;break}}else{k=b;l=e}}while(0);e=l-g|0;l=k>>e&c[4648+(g<<2)>>2];b=a+8|0;m=a+12|0;a:do{if((l|0)>(c[f+(g<<2)>>2]|0)){n=k;o=e;p=l;q=g;while(1){r=p<<1;if((o|0)<1){if((hi(a,n,o,1)|0)==0){j=-1;break}s=c[b>>2]|0;t=c[m>>2]|0}else{s=n;t=o}u=t+ -1|0;v=s>>>u&1|r;r=q+1|0;if((v|0)>(c[f+(r<<2)>>2]|0)){n=s;o=u;p=v;q=r}else{w=s;x=u;y=v;z=r;break a}}i=h;return j|0}else{w=k;x=e;y=l;z=g}}while(0);c[b>>2]=w;c[m>>2]=x;if((z|0)>16){x=c[a+16>>2]|0;a=c[x>>2]|0;c[a+20>>2]=121;td[c[a+4>>2]&31](x,-1);j=0;i=h;return j|0}else{j=d[(c[f+140>>2]|0)+((c[f+(z<<2)+72>>2]|0)+y)+17|0]|0;i=h;return j|0}return 0}function ji(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;d=a+428|0;e=c[d>>2]|0;f=aa(e,c[a+48>>2]|0)|0;g=c[a+52>>2]|0;do{if(f>>>0>g>>>0){if(!(f>>>0>g<<1>>>0)){c[a+112>>2]=hk(c[a+28>>2]<<1,e)|0;c[a+116>>2]=hk(c[a+32>>2]<<1,c[d>>2]|0)|0;c[a+324>>2]=2;c[a+328>>2]=2;h=2;break}if(!(f>>>0>(g*3|0)>>>0)){c[a+112>>2]=hk((c[a+28>>2]|0)*3|0,e)|0;c[a+116>>2]=hk((c[a+32>>2]|0)*3|0,c[d>>2]|0)|0;c[a+324>>2]=3;c[a+328>>2]=3;h=3;break}if(!(f>>>0>g<<2>>>0)){c[a+112>>2]=hk(c[a+28>>2]<<2,e)|0;c[a+116>>2]=hk(c[a+32>>2]<<2,c[d>>2]|0)|0;c[a+324>>2]=4;c[a+328>>2]=4;h=4;break}if(!(f>>>0>(g*5|0)>>>0)){c[a+112>>2]=hk((c[a+28>>2]|0)*5|0,e)|0;c[a+116>>2]=hk((c[a+32>>2]|0)*5|0,c[d>>2]|0)|0;c[a+324>>2]=5;c[a+328>>2]=5;h=5;break}if(!(f>>>0>(g*6|0)>>>0)){c[a+112>>2]=hk((c[a+28>>2]|0)*6|0,e)|0;c[a+116>>2]=hk((c[a+32>>2]|0)*6|0,c[d>>2]|0)|0;c[a+324>>2]=6;c[a+328>>2]=6;h=6;break}if(!(f>>>0>(g*7|0)>>>0)){c[a+112>>2]=hk((c[a+28>>2]|0)*7|0,e)|0;c[a+116>>2]=hk((c[a+32>>2]|0)*7|0,c[d>>2]|0)|0;c[a+324>>2]=7;c[a+328>>2]=7;h=7;break}if(!(f>>>0>g<<3>>>0)){c[a+112>>2]=hk(c[a+28>>2]<<3,e)|0;c[a+116>>2]=hk(c[a+32>>2]<<3,c[d>>2]|0)|0;c[a+324>>2]=8;c[a+328>>2]=8;h=8;break}if(!(f>>>0>(g*9|0)>>>0)){c[a+112>>2]=hk((c[a+28>>2]|0)*9|0,e)|0;c[a+116>>2]=hk((c[a+32>>2]|0)*9|0,c[d>>2]|0)|0;c[a+324>>2]=9;c[a+328>>2]=9;h=9;break}if(!(f>>>0>(g*10|0)>>>0)){c[a+112>>2]=hk((c[a+28>>2]|0)*10|0,e)|0;c[a+116>>2]=hk((c[a+32>>2]|0)*10|0,c[d>>2]|0)|0;c[a+324>>2]=10;c[a+328>>2]=10;h=10;break}if(!(f>>>0>(g*11|0)>>>0)){c[a+112>>2]=hk((c[a+28>>2]|0)*11|0,e)|0;c[a+116>>2]=hk((c[a+32>>2]|0)*11|0,c[d>>2]|0)|0;c[a+324>>2]=11;c[a+328>>2]=11;h=11;break}if(!(f>>>0>(g*12|0)>>>0)){c[a+112>>2]=hk((c[a+28>>2]|0)*12|0,e)|0;c[a+116>>2]=hk((c[a+32>>2]|0)*12|0,c[d>>2]|0)|0;c[a+324>>2]=12;c[a+328>>2]=12;h=12;break}if(!(f>>>0>(g*13|0)>>>0)){c[a+112>>2]=hk((c[a+28>>2]|0)*13|0,e)|0;c[a+116>>2]=hk((c[a+32>>2]|0)*13|0,c[d>>2]|0)|0;c[a+324>>2]=13;c[a+328>>2]=13;h=13;break}if(!(f>>>0>(g*14|0)>>>0)){c[a+112>>2]=hk((c[a+28>>2]|0)*14|0,e)|0;c[a+116>>2]=hk((c[a+32>>2]|0)*14|0,c[d>>2]|0)|0;c[a+324>>2]=14;c[a+328>>2]=14;h=14;break}j=c[a+28>>2]|0;if(f>>>0>(g*15|0)>>>0){c[a+112>>2]=hk(j<<4,e)|0;c[a+116>>2]=hk(c[a+32>>2]<<4,c[d>>2]|0)|0;c[a+324>>2]=16;c[a+328>>2]=16;h=16;break}else{c[a+112>>2]=hk(j*15|0,e)|0;c[a+116>>2]=hk((c[a+32>>2]|0)*15|0,c[d>>2]|0)|0;c[a+324>>2]=15;c[a+328>>2]=15;h=15;break}}else{c[a+112>>2]=hk(c[a+28>>2]|0,e)|0;c[a+116>>2]=hk(c[a+32>>2]|0,c[d>>2]|0)|0;c[a+324>>2]=1;c[a+328>>2]=1;h=1}}while(0);d=a+36|0;if((c[d>>2]|0)<=0){i=b;return}e=a+324|0;g=a+328|0;f=h;h=1;j=c[a+216>>2]|0;while(1){c[j+36>>2]=f;c[j+40>>2]=c[g>>2];if((h|0)>=(c[d>>2]|0)){break}f=c[e>>2]|0;h=h+1|0;j=j+88|0}i=b;return}function ki(a){a=a|0;var b=0,d=0;b=i;d=md[c[c[a+4>>2]>>2]&63](a,0,28)|0;c[a+460>>2]=d;c[d>>2]=32;c[d+4>>2]=40;c[d+8>>2]=41;c[d+12>>2]=42;c[d+16>>2]=0;c[d+20>>2]=0;c[d+24>>2]=1;i=b;return}function li(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;b=i;d=a+460|0;e=c[d>>2]|0;f=e+20|0;if((c[f>>2]|0)!=0){g=2;i=b;return g|0}h=a+464|0;j=e+24|0;k=a+340|0;l=e+16|0;e=a+32|0;m=a+212|0;n=a+36|0;o=a+316|0;p=a+320|0;q=a+216|0;r=a+220|0;s=a+224|0;t=a+416|0;u=a+412|0;v=a+420|0;w=a+424|0;x=a+428|0;y=a+432|0;z=a+436|0;A=a+324|0;B=a+328|0;C=a+28|0;D=a+332|0;while(1){E=vd[c[(c[h>>2]|0)+4>>2]&63](a)|0;if((E|0)==2){F=56;break}else if((E|0)!=1){g=E;F=61;break}E=c[j>>2]|0;if((E|0)==1){F=5}else if((E|0)==0){if((c[l>>2]|0)==0){E=c[a>>2]|0;c[E+20>>2]=36;rd[c[E>>2]&127](a)}if((c[k>>2]|0)==0){continue}else{F=55;break}}do{if((F|0)==5){F=0;if(!((c[e>>2]|0)<=65500?(c[C>>2]|0)<=65500:0)){E=c[a>>2]|0;c[E+20>>2]=42;c[E+24>>2]=65500;rd[c[E>>2]&127](a)}if(((c[m>>2]|0)+ -8|0)>>>0>4){E=c[a>>2]|0;c[E+20>>2]=16;c[E+24>>2]=c[m>>2];rd[c[E>>2]&127](a)}E=c[n>>2]|0;if((E|0)>10){G=c[a>>2]|0;c[G+20>>2]=27;c[G+24>>2]=c[n>>2];c[G+28>>2]=10;rd[c[G>>2]&127](a);H=c[n>>2]|0}else{H=E}c[o>>2]=1;c[p>>2]=1;if((H|0)>0){E=H;G=1;I=1;J=0;K=c[q>>2]|0;while(1){L=K+8|0;M=c[L>>2]|0;N=K+12|0;if(!((M+ -1|0)>>>0>3)?!(((c[N>>2]|0)+ -1|0)>>>0>3):0){O=I;P=M;Q=G;R=E}else{M=c[a>>2]|0;c[M+20>>2]=19;rd[c[M>>2]&127](a);O=c[o>>2]|0;P=c[L>>2]|0;Q=c[p>>2]|0;R=c[n>>2]|0}L=(O|0)>(P|0)?O:P;c[o>>2]=L;M=c[N>>2]|0;N=(Q|0)>(M|0)?Q:M;c[p>>2]=N;M=J+1|0;if((M|0)<(R|0)){E=R;G=N;I=L;J=M;K=K+88|0}else{S=R;break}}}else{S=H}a:do{if((c[r>>2]|0)==0){if((c[s>>2]|0)!=0?(c[k>>2]|0)!=0:0){F=21;break}switch(c[t>>2]|0){case 8:{c[x>>2]=3;c[y>>2]=11712;c[z>>2]=8;T=3;U=S;break a;break};case 143:{c[x>>2]=12;c[y>>2]=10624;c[z>>2]=63;T=12;U=S;break a;break};case 168:{c[x>>2]=13;c[y>>2]=10624;c[z>>2]=63;T=13;U=S;break a;break};case 224:{c[x>>2]=15;c[y>>2]=10624;c[z>>2]=63;T=15;U=S;break a;break};case 255:{c[x>>2]=16;c[y>>2]=10624;c[z>>2]=63;T=16;U=S;break a;break};case 80:{c[x>>2]=9;c[y>>2]=10624;c[z>>2]=63;T=9;U=S;break a;break};case 3:{c[x>>2]=2;c[y>>2]=11816;c[z>>2]=3;T=2;U=S;break a;break};case 120:{c[x>>2]=11;c[y>>2]=10624;c[z>>2]=63;T=11;U=S;break a;break};case 48:{c[x>>2]=7;c[y>>2]=10944;c[z>>2]=48;T=7;U=S;break a;break};case 15:{c[x>>2]=4;c[y>>2]=11584;c[z>>2]=15;T=4;U=S;break a;break};case 63:{c[x>>2]=8;c[y>>2]=10624;c[z>>2]=63;T=8;U=S;break a;break};case 195:{c[x>>2]=14;c[y>>2]=10624;c[z>>2]=63;T=14;U=S;break a;break};case 0:{c[x>>2]=1;c[y>>2]=10624;c[z>>2]=0;T=1;U=S;break a;break};case 35:{c[x>>2]=6;c[y>>2]=11208;c[z>>2]=35;T=6;U=S;break a;break};case 24:{c[x>>2]=5;c[y>>2]=11416;c[z>>2]=24;T=5;U=S;break a;break};case 99:{c[x>>2]=10;c[y>>2]=10624;c[z>>2]=63;T=10;U=S;break a;break};default:{K=c[a>>2]|0;c[K+20>>2]=17;c[K+24>>2]=c[u>>2];c[K+28>>2]=c[t>>2];c[K+32>>2]=c[v>>2];c[K+36>>2]=c[w>>2];rd[c[K>>2]&127](a);T=c[x>>2]|0;U=c[n>>2]|0;break a}}}else{F=21}}while(0);if((F|0)==21){F=0;c[x>>2]=8;c[y>>2]=10624;c[z>>2]=63;T=8;U=S}c[A>>2]=T;c[B>>2]=T;if((U|0)>0){K=T;J=1;I=c[q>>2]|0;while(1){c[I+36>>2]=K;c[I+40>>2]=c[x>>2];G=I+8|0;E=aa(c[G>>2]|0,c[C>>2]|0)|0;c[I+28>>2]=hk(E,aa(c[x>>2]|0,c[o>>2]|0)|0)|0;E=I+12|0;M=aa(c[E>>2]|0,c[e>>2]|0)|0;c[I+32>>2]=hk(M,aa(c[x>>2]|0,c[p>>2]|0)|0)|0;M=aa(c[G>>2]|0,c[C>>2]|0)|0;c[I+44>>2]=hk(M,c[o>>2]|0)|0;M=aa(c[E>>2]|0,c[e>>2]|0)|0;c[I+48>>2]=hk(M,c[p>>2]|0)|0;c[I+52>>2]=1;c[I+80>>2]=0;if((J|0)>=(c[n>>2]|0)){break}K=c[x>>2]|0;J=J+1|0;I=I+88|0}V=c[x>>2]|0}else{V=T}c[D>>2]=hk(c[e>>2]|0,aa(V,c[p>>2]|0)|0)|0;if((c[k>>2]|0)>=(c[n>>2]|0)?(c[s>>2]|0)==0:0){c[(c[d>>2]|0)+16>>2]=0;break}c[(c[d>>2]|0)+16>>2]=1}}while(0);if((c[k>>2]|0)!=0){F=51;break}c[j>>2]=2}if((F|0)==51){c[j>>2]=0;g=1;i=b;return g|0}else if((F|0)==55){ni(a);g=1;i=b;return g|0}else if((F|0)==56){c[f>>2]=1;if((c[j>>2]|0)==0){j=a+152|0;f=c[a+144>>2]|0;if((c[j>>2]|0)<=(f|0)){g=2;i=b;return g|0}c[j>>2]=f;g=2;i=b;return g|0}else{if((c[(c[h>>2]|0)+16>>2]|0)==0){g=2;i=b;return g|0}h=c[a>>2]|0;c[h+20>>2]=62;rd[c[h>>2]&127](a);g=2;i=b;return g|0}}else if((F|0)==61){i=b;return g|0}return 0}function mi(a){a=a|0;var b=0,d=0;b=i;d=c[a+460>>2]|0;c[d>>2]=32;c[d+16>>2]=0;c[d+20>>2]=0;c[d+24>>2]=1;rd[c[(c[a>>2]|0)+16>>2]&127](a);rd[c[c[a+464>>2]>>2]&127](a);c[a+160>>2]=0;i=b;return}function ni(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;b=i;d=a+340|0;e=c[d>>2]|0;if((e|0)==1){f=c[a+344>>2]|0;c[a+360>>2]=c[f+28>>2];g=f+32|0;c[a+364>>2]=c[g>>2];c[f+56>>2]=1;c[f+60>>2]=1;c[f+64>>2]=1;c[f+68>>2]=c[f+36>>2];c[f+72>>2]=1;h=c[f+12>>2]|0;j=((c[g>>2]|0)>>>0)%(h>>>0)|0;c[f+76>>2]=(j|0)==0?h:j;c[a+368>>2]=1;c[a+372>>2]=0;k=c[d>>2]|0}else{if((e+ -1|0)>>>0>3){e=c[a>>2]|0;c[e+20>>2]=27;c[e+24>>2]=c[d>>2];c[e+28>>2]=4;rd[c[e>>2]&127](a)}e=a+428|0;c[a+360>>2]=hk(c[a+28>>2]|0,aa(c[e>>2]|0,c[a+316>>2]|0)|0)|0;c[a+364>>2]=hk(c[a+32>>2]|0,aa(c[e>>2]|0,c[a+320>>2]|0)|0)|0;e=a+368|0;c[e>>2]=0;if((c[d>>2]|0)<=0){l=a+468|0;m=c[l>>2]|0;n=c[m>>2]|0;rd[n&127](a);o=a+452|0;p=c[o>>2]|0;q=c[p>>2]|0;rd[q&127](a);r=c[o>>2]|0;s=r+4|0;t=c[s>>2]|0;u=a+460|0;v=c[u>>2]|0;c[v>>2]=t;i=b;return}j=0;while(1){h=c[a+(j<<2)+344>>2]|0;f=c[h+8>>2]|0;c[h+56>>2]=f;g=c[h+12>>2]|0;c[h+60>>2]=g;w=aa(g,f)|0;c[h+64>>2]=w;c[h+68>>2]=aa(c[h+36>>2]|0,f)|0;x=((c[h+28>>2]|0)>>>0)%(f>>>0)|0;c[h+72>>2]=(x|0)==0?f:x;x=((c[h+32>>2]|0)>>>0)%(g>>>0)|0;c[h+76>>2]=(x|0)==0?g:x;if(((c[e>>2]|0)+w|0)>10){x=c[a>>2]|0;c[x+20>>2]=14;rd[c[x>>2]&127](a)}if((w|0)>0){x=w;do{x=x+ -1|0;w=c[e>>2]|0;c[e>>2]=w+1;c[a+(w<<2)+372>>2]=j}while((x|0)>0)}x=j+1|0;w=c[d>>2]|0;if((x|0)<(w|0)){j=x}else{k=w;break}}}if((k|0)<=0){l=a+468|0;m=c[l>>2]|0;n=c[m>>2]|0;rd[n&127](a);o=a+452|0;p=c[o>>2]|0;q=c[p>>2]|0;rd[q&127](a);r=c[o>>2]|0;s=r+4|0;t=c[s>>2]|0;u=a+460|0;v=c[u>>2]|0;c[v>>2]=t;i=b;return}j=a+4|0;e=k;k=0;while(1){w=c[a+(k<<2)+344>>2]|0;x=w+80|0;if((c[x>>2]|0)==0){g=c[w+16>>2]|0;w=a+(g<<2)+164|0;if(!(!(g>>>0>3)?(c[w>>2]|0)!=0:0)){h=c[a>>2]|0;c[h+20>>2]=54;c[h+24>>2]=g;rd[c[h>>2]&127](a)}h=md[c[c[j>>2]>>2]&63](a,1,132)|0;lA(h|0,c[w>>2]|0,132)|0;c[x>>2]=h;y=c[d>>2]|0}else{y=e}k=k+1|0;if((k|0)>=(y|0)){break}else{e=y}}l=a+468|0;m=c[l>>2]|0;n=c[m>>2]|0;rd[n&127](a);o=a+452|0;p=c[o>>2]|0;q=c[p>>2]|0;rd[q&127](a);r=c[o>>2]|0;s=r+4|0;t=c[s>>2]|0;u=a+460|0;v=c[u>>2]|0;c[v>>2]=t;i=b;return}function oi(a){a=a|0;var b=0;b=i;rd[c[(c[a+468>>2]|0)+8>>2]&127](a);c[c[a+460>>2]>>2]=32;i=b;return}function pi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;d=i;e=a+4|0;f=md[c[c[e>>2]>>2]&63](a,1,80)|0;g=a+448|0;c[g>>2]=f;c[f>>2]=15;if((b|0)!=0){b=c[a>>2]|0;c[b+20>>2]=3;rd[c[b>>2]&127](a)}b=a+328|0;h=c[b>>2]|0;if((c[(c[a+476>>2]|0)+8>>2]|0)==0){j=c[a+36>>2]|0;k=h;l=h}else{if((h|0)<2){m=c[a>>2]|0;c[m+20>>2]=48;rd[c[m>>2]&127](a);n=c[b>>2]|0}else{n=h}h=c[g>>2]|0;g=a+36|0;m=md[c[c[e>>2]>>2]&63](a,1,c[g>>2]<<3)|0;o=h+56|0;c[o>>2]=m;p=c[g>>2]|0;q=h+60|0;c[q>>2]=m+(p<<2);if((p|0)>0){m=n+4|0;n=0;h=c[a+216>>2]|0;while(1){r=aa(c[h+40>>2]|0,c[h+12>>2]|0)|0;s=(r|0)/(c[b>>2]|0)|0;r=aa(s,m)|0;t=md[c[c[e>>2]>>2]&63](a,1,r<<3)|0;c[(c[o>>2]|0)+(n<<2)>>2]=t+(s<<2);c[(c[q>>2]|0)+(n<<2)>>2]=t+(r+s<<2);s=n+1|0;r=c[g>>2]|0;if((s|0)<(r|0)){n=s;h=h+88|0}else{u=r;break}}}else{u=p}p=c[b>>2]|0;j=u;k=p;l=p+2|0}p=a+36|0;if((j|0)<=0){i=d;return}j=f+8|0;f=k;k=0;u=c[a+216>>2]|0;while(1){h=(aa(c[u+40>>2]|0,c[u+12>>2]|0)|0)/(f|0)|0;n=aa(c[u+36>>2]|0,c[u+28>>2]|0)|0;g=aa(h,l)|0;c[j+(k<<2)>>2]=yd[c[(c[e>>2]|0)+8>>2]&31](a,1,n,g)|0;g=k+1|0;if((g|0)>=(c[p>>2]|0)){break}f=c[b>>2]|0;k=g;u=u+88|0}i=d;return}function qi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;d=i;e=a+448|0;f=c[e>>2]|0;if((b|0)==2){c[f+4>>2]=3;i=d;return}else if((b|0)==0){b=f+4|0;if((c[(c[a+476>>2]|0)+8>>2]|0)==0){c[b>>2]=2}else{c[b>>2]=1;b=c[e>>2]|0;e=c[a+328>>2]|0;g=c[a+36>>2]|0;a:do{if((g|0)>0){h=b+56|0;j=b+60|0;k=b+8|0;l=e+2|0;m=e+ -2|0;n=0;o=c[a+216>>2]|0;while(1){p=(aa(c[o+40>>2]|0,c[o+12>>2]|0)|0)/(e|0)|0;q=c[(c[h>>2]|0)+(n<<2)>>2]|0;r=c[(c[j>>2]|0)+(n<<2)>>2]|0;s=c[k+(n<<2)>>2]|0;t=aa(p,l)|0;if((t|0)>0){u=0;do{v=c[s+(u<<2)>>2]|0;c[r+(u<<2)>>2]=v;c[q+(u<<2)>>2]=v;u=u+1|0}while((u|0)!=(t|0))}t=p<<1;if((p|0)>0){u=aa(p,e)|0;v=aa(p,m)|0;w=0;while(1){x=w+u|0;y=w+v|0;c[r+(y<<2)>>2]=c[s+(x<<2)>>2];c[r+(x<<2)>>2]=c[s+(y<<2)>>2];y=w+1|0;if((y|0)<(t|0)){w=y}else{z=0;break}}do{c[q+(z-p<<2)>>2]=c[q>>2];z=z+1|0}while((z|0)!=(p|0))}p=n+1|0;if((p|0)==(g|0)){break a}n=p;o=o+88|0}}}while(0);c[f+64>>2]=0;c[f+68>>2]=0;c[f+76>>2]=0}c[f+48>>2]=0;c[f+52>>2]=0;i=d;return}else{f=c[a>>2]|0;c[f+20>>2]=3;rd[c[f>>2]&127](a);i=d;return}}function ri(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;f=i;g=a+448|0;h=c[g>>2]|0;j=h+48|0;do{if((c[j>>2]|0)==0){if((Ad[c[(c[a+452>>2]|0)+12>>2]&127](a,c[h+56+(c[h+64>>2]<<2)>>2]|0)|0)==0){i=f;return}else{c[j>>2]=1;k=h+76|0;c[k>>2]=(c[k>>2]|0)+1;break}}}while(0);k=h+68|0;l=c[k>>2]|0;if((l|0)==1){m=h+52|0}else if((l|0)==0){n=h+52|0;o=9}else if((l|0)==2){l=h+52|0;p=h+72|0;sd[c[(c[a+456>>2]|0)+4>>2]&7](a,c[h+56+(c[h+64>>2]<<2)>>2]|0,l,c[p>>2]|0,b,d,e);if((c[l>>2]|0)>>>0<(c[p>>2]|0)>>>0){i=f;return}c[k>>2]=0;if((c[d>>2]|0)>>>0<e>>>0){n=l;o=9}else{i=f;return}}else{i=f;return}if((o|0)==9){c[n>>2]=0;o=a+328|0;c[h+72>>2]=(c[o>>2]|0)+ -1;a:do{if((c[h+76>>2]|0)==(c[a+332>>2]|0)?(l=c[g>>2]|0,p=a+36|0,(c[p>>2]|0)>0):0){q=l+72|0;r=l+64|0;s=l+56|0;l=0;t=c[a+216>>2]|0;while(1){u=aa(c[t+40>>2]|0,c[t+12>>2]|0)|0;v=(u|0)/(c[o>>2]|0)|0;w=((c[t+48>>2]|0)>>>0)%(u>>>0)|0;x=(w|0)==0?u:w;if((l|0)==0){c[q>>2]=((x+ -1|0)/(v|0)|0)+1}w=c[(c[s+(c[r>>2]<<2)>>2]|0)+(l<<2)>>2]|0;u=v<<1;if((v|0)>0){v=w+(x+ -1<<2)|0;y=0;do{c[w+(y+x<<2)>>2]=c[v>>2];y=y+1|0}while((y|0)<(u|0))}u=l+1|0;if((u|0)>=(c[p>>2]|0)){break a}l=u;t=t+88|0}}}while(0);c[k>>2]=1;m=n}n=h+64|0;o=h+72|0;sd[c[(c[a+456>>2]|0)+4>>2]&7](a,c[h+56+(c[n>>2]<<2)>>2]|0,m,c[o>>2]|0,b,d,e);if((c[m>>2]|0)>>>0<(c[o>>2]|0)>>>0){i=f;return}b:do{if((c[h+76>>2]|0)==1){e=c[g>>2]|0;d=a+328|0;b=c[d>>2]|0;t=c[a+36>>2]|0;if((t|0)>0){l=e+56|0;p=e+60|0;e=b+1|0;r=b+2|0;s=0;q=c[a+216>>2]|0;while(1){u=(aa(c[q+40>>2]|0,c[q+12>>2]|0)|0)/(b|0)|0;y=c[(c[l>>2]|0)+(s<<2)>>2]|0;v=c[(c[p>>2]|0)+(s<<2)>>2]|0;if((u|0)>0){x=aa(u,e)|0;w=aa(u,r)|0;z=0;do{A=z+x|0;B=z-u|0;c[y+(B<<2)>>2]=c[y+(A<<2)>>2];c[v+(B<<2)>>2]=c[v+(A<<2)>>2];A=z+w|0;c[y+(A<<2)>>2]=c[y+(z<<2)>>2];c[v+(A<<2)>>2]=c[v+(z<<2)>>2];z=z+1|0}while((z|0)!=(u|0))}u=s+1|0;if((u|0)==(t|0)){C=d;break b}s=u;q=q+88|0}}else{C=d}}else{C=a+328|0}}while(0);c[n>>2]=c[n>>2]^1;c[j>>2]=0;c[m>>2]=(c[C>>2]|0)+1;c[o>>2]=(c[C>>2]|0)+2;c[k>>2]=2;i=f;return}function si(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;g=c[a+448>>2]|0;h=g+48|0;do{if((c[h>>2]|0)==0){j=g+8|0;if((Ad[c[(c[a+452>>2]|0)+12>>2]&127](a,j)|0)==0){i=f;return}else{c[h>>2]=1;k=j;break}}else{k=g+8|0}}while(0);j=c[a+328>>2]|0;l=g+52|0;sd[c[(c[a+456>>2]|0)+4>>2]&7](a,k,l,j,b,d,e);if((c[l>>2]|0)>>>0<j>>>0){i=f;return}c[h>>2]=0;c[l>>2]=0;i=f;return}function ti(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;sd[c[(c[a+456>>2]|0)+4>>2]&7](a,0,0,0,b,d,e);i=f;return}function ui(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;d=i;e=a+440|0;f=c[e>>2]|0;g=c[a>>2]|0;c[g+20>>2]=124;c[g+24>>2]=f;c[g+28>>2]=b;td[c[g+4>>2]&31](a,-1);g=b+1&7|208;h=b+2&7|208;j=b+7&7|208;k=b+6&7|208;b=f;a:while(1){f=(b+ -208|0)>>>0>7;l=(b|0)==(g|0);m=(b|0)==(h|0);n=(b|0)==(j|0);o=(b|0)==(k|0)?2:1;do{if((b|0)<192){p=c[a>>2]|0;c[p+20>>2]=99;q=p+24|0;if(f){c[q>>2]=b;c[p+28>>2]=2;td[c[p+4>>2]&31](a,4);break}if(l){c[q>>2]=g;c[p+28>>2]=2;td[c[p+4>>2]&31](a,4);break}else{c[q>>2]=b;c[p+28>>2]=2;td[c[p+4>>2]&31](a,4);break}}else{if(f){r=10;break a}if(l){r=11;break a}while(1){if(m){s=3}else{s=n?2:o}p=c[a>>2]|0;c[p+20>>2]=99;c[p+24>>2]=b;c[p+28>>2]=s;td[c[p+4>>2]&31](a,4);if((s|0)==2){break}else if((s|0)==1){r=15;break a}else if((s|0)==3){t=1;r=18;break a}}}}while(0);if((vi(a)|0)==0){t=0;r=18;break}b=c[e>>2]|0}if((r|0)==10){s=c[a>>2]|0;c[s+20>>2]=99;c[s+24>>2]=b;c[s+28>>2]=3;td[c[s+4>>2]&31](a,4);t=1;i=d;return t|0}else if((r|0)==11){s=c[a>>2]|0;c[s+20>>2]=99;c[s+24>>2]=g;c[s+28>>2]=3;td[c[s+4>>2]&31](a,4);t=1;i=d;return t|0}else if((r|0)==15){c[e>>2]=0;t=1;i=d;return t|0}else if((r|0)==18){i=d;return t|0}return 0}function vi(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;d=i;e=c[b+24>>2]|0;f=e+4|0;g=e+12|0;h=b+464|0;j=c[f>>2]|0;k=c[e>>2]|0;a:while(1){if((j|0)==0){if((vd[c[g>>2]&63](b)|0)==0){l=0;m=19;break}n=c[e>>2]|0;o=c[f>>2]|0}else{n=k;o=j}p=o+ -1|0;q=n+1|0;if((a[n]|0)==-1){r=p;s=q}else{t=p;p=q;while(1){q=(c[h>>2]|0)+24|0;c[q>>2]=(c[q>>2]|0)+1;c[e>>2]=p;c[f>>2]=t;if((t|0)==0){if((vd[c[g>>2]&63](b)|0)==0){l=0;m=19;break a}u=c[e>>2]|0;v=c[f>>2]|0}else{u=p;v=t}q=v+ -1|0;w=u+1|0;if((a[u]|0)==-1){r=q;s=w;break}else{t=q;p=w}}}do{if((r|0)==0){if((vd[c[g>>2]&63](b)|0)==0){l=0;m=19;break a}x=c[f>>2]|0;y=c[e>>2]|0}else{x=r;y=s}r=x+ -1|0;s=y+1|0;z=a[y]|0}while(z<<24>>24==-1);A=z&255;B=(c[h>>2]|0)+24|0;C=c[B>>2]|0;if(!(z<<24>>24==0)){m=16;break}c[B>>2]=C+2;c[e>>2]=s;c[f>>2]=r;j=r;k=s}if((m|0)==16){if((C|0)!=0){C=c[b>>2]|0;c[C+20>>2]=119;c[C+24>>2]=c[B>>2];c[C+28>>2]=A;td[c[C+4>>2]&31](b,-1);c[(c[h>>2]|0)+24>>2]=0}c[b+440>>2]=A;c[e>>2]=s;c[f>>2]=r;l=1;i=d;return l|0}else if((m|0)==19){i=d;return l|0}return 0}function wi(a){a=a|0;var b=0,d=0,e=0;b=i;d=md[c[c[a+4>>2]>>2]&63](a,0,172)|0;e=a+464|0;c[e>>2]=d;c[d>>2]=43;c[d+4>>2]=33;c[d+8>>2]=34;c[d+28>>2]=35;c[d+96>>2]=0;c[d+100>>2]=0;c[d+36>>2]=35;c[d+104>>2]=0;c[d+40>>2]=35;c[d+108>>2]=0;c[d+44>>2]=35;c[d+112>>2]=0;c[d+48>>2]=35;c[d+116>>2]=0;c[d+52>>2]=35;c[d+120>>2]=0;c[d+56>>2]=35;c[d+124>>2]=0;c[d+60>>2]=35;c[d+128>>2]=0;c[d+64>>2]=35;c[d+132>>2]=0;c[d+68>>2]=35;c[d+136>>2]=0;c[d+72>>2]=35;c[d+140>>2]=0;c[d+76>>2]=35;c[d+144>>2]=0;c[d+80>>2]=35;c[d+148>>2]=0;c[d+84>>2]=35;c[d+152>>2]=0;c[d+156>>2]=0;c[d+92>>2]=35;c[d+160>>2]=0;c[d+32>>2]=36;c[d+88>>2]=36;d=c[e>>2]|0;c[a+216>>2]=0;c[a+144>>2]=0;c[a+440>>2]=0;c[d+12>>2]=0;c[d+16>>2]=0;c[d+24>>2]=0;c[d+164>>2]=0;i=b;return}function xi(a){a=a|0;var b=0;b=c[a+464>>2]|0;c[a+216>>2]=0;c[a+144>>2]=0;c[a+440>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;c[b+24>>2]=0;c[b+164>>2]=0;return}function yi(f){f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0,Uc=0,Vc=0,Wc=0,Xc=0,Yc=0,Zc=0,_c=0,$c=0,ad=0,bd=0,cd=0,dd=0,ed=0,fd=0,gd=0,hd=0,id=0,jd=0,kd=0,ld=0,md=0,nd=0,od=0,pd=0,qd=0,sd=0,ud=0,wd=0,xd=0,yd=0,zd=0,Ad=0,Bd=0,Cd=0,Dd=0,Ed=0,Fd=0,Gd=0,Hd=0,Id=0,Jd=0,Kd=0,Ld=0,Md=0,Nd=0,Od=0,Pd=0,Qd=0,Rd=0,Sd=0,Td=0,Ud=0,Vd=0,Wd=0,Xd=0,Yd=0,Zd=0,_d=0,$d=0,ae=0,be=0,ce=0,de=0,ee=0,fe=0,ge=0,he=0,ie=0,je=0,ke=0,le=0,me=0,ne=0,oe=0,pe=0,qe=0,re=0,se=0,te=0;g=i;i=i+288|0;h=g+256|0;j=g;k=f+440|0;l=f+464|0;m=f+24|0;n=f+232|0;o=f+248|0;p=f+264|0;q=f+233|0;r=f+249|0;s=f+265|0;t=f+234|0;u=f+250|0;v=f+266|0;w=f+235|0;x=f+251|0;y=f+267|0;z=f+236|0;A=f+252|0;B=f+268|0;C=f+237|0;D=f+253|0;E=f+269|0;F=f+238|0;G=f+254|0;H=f+270|0;I=f+239|0;J=f+255|0;K=f+271|0;L=f+240|0;M=f+256|0;N=f+272|0;O=f+241|0;P=f+257|0;Q=f+273|0;R=f+242|0;S=f+258|0;T=f+274|0;U=f+243|0;V=f+259|0;W=f+275|0;X=f+244|0;Y=f+260|0;Z=f+276|0;_=f+245|0;$=f+261|0;aa=f+277|0;ba=f+246|0;ca=f+262|0;da=f+278|0;ea=f+247|0;fa=f+263|0;ga=f+279|0;ha=f+280|0;ia=f+40|0;ja=f+304|0;ka=f+308|0;la=f+284|0;ma=f+288|0;na=f+289|0;oa=f+290|0;pa=f+292|0;qa=f+294|0;ra=f+296|0;sa=f+300|0;ta=h+1|0;ua=h+2|0;va=h+3|0;wa=h+4|0;xa=h+5|0;ya=h+6|0;za=h+7|0;Aa=h+8|0;Ba=h+9|0;Ca=h+10|0;Da=h+11|0;Ea=h+12|0;Fa=h+13|0;Ga=h+14|0;Ha=h+15|0;Ia=h+16|0;Ja=f+36|0;Ka=f+216|0;La=c[k>>2]|0;a:while(1){if((La|0)==0){if((c[(c[l>>2]|0)+12>>2]|0)!=0){if((vi(f)|0)==0){Ma=0;Na=306;break}}else{Oa=c[m>>2]|0;Pa=Oa+4|0;Qa=c[Pa>>2]|0;if((Qa|0)==0){if((vd[c[Oa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break}Ra=c[Pa>>2]|0}else{Ra=Qa}Qa=c[Oa>>2]|0;Sa=Ra+ -1|0;Ta=Qa+1|0;Ua=a[Qa]|0;Qa=Ua&255;if((Sa|0)==0){if((vd[c[Oa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break}Va=c[Pa>>2]|0;Wa=c[Oa>>2]|0}else{Va=Sa;Wa=Ta}Ta=a[Wa]|0;Sa=Ta&255;if(!(Ua<<24>>24==-1&Ta<<24>>24==-40)){Ta=c[f>>2]|0;c[Ta+20>>2]=55;c[Ta+24>>2]=Qa;c[Ta+28>>2]=Sa;rd[c[Ta>>2]&127](f)}c[k>>2]=Sa;c[Oa>>2]=Wa+1;c[Pa>>2]=Va+ -1}Xa=c[k>>2]|0}else{Xa=La}switch(Xa|0){case 192:{if((Di(f,1,0,0)|0)==0){Ma=0;Na=306;break a}break};case 207:case 206:case 205:case 203:case 200:case 199:case 198:case 197:case 195:{Pa=c[f>>2]|0;c[Pa+20>>2]=63;c[Pa+24>>2]=c[k>>2];rd[c[Pa>>2]&127](f);break};case 193:{if((Di(f,0,0,0)|0)==0){Ma=0;Na=306;break a}break};case 218:{Na=25;break a;break};case 204:{Pa=c[m>>2]|0;Oa=Pa+4|0;Sa=c[Oa>>2]|0;if((Sa|0)==0){if((vd[c[Pa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}Ya=c[Oa>>2]|0}else{Ya=Sa}Sa=c[Pa>>2]|0;Ta=Ya+ -1|0;Qa=Sa+1|0;Ua=d[Sa]<<8;if((Ta|0)==0){if((vd[c[Pa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}Za=c[Oa>>2]|0;_a=c[Pa>>2]|0}else{Za=Ta;_a=Qa}Qa=Za+ -1|0;Ta=_a+1|0;Sa=(d[_a]|Ua)+ -2|0;if((Sa|0)>0){Ua=Pa+12|0;$a=Qa;ab=Sa;bb=Ta;while(1){if(($a|0)==0){if((vd[c[Ua>>2]&63](f)|0)==0){Ma=0;Na=306;break a}cb=c[Oa>>2]|0;db=c[Pa>>2]|0}else{cb=$a;db=bb}eb=cb+ -1|0;fb=db+1|0;gb=a[db]|0;hb=gb&255;if((eb|0)==0){if((vd[c[Ua>>2]&63](f)|0)==0){Ma=0;Na=306;break a}ib=c[Oa>>2]|0;jb=c[Pa>>2]|0}else{ib=eb;jb=fb}fb=ib+ -1|0;eb=jb+1|0;kb=a[jb]|0;lb=kb&255;mb=ab+ -2|0;nb=c[f>>2]|0;c[nb+20>>2]=81;c[nb+24>>2]=hb;c[nb+28>>2]=lb;td[c[nb+4>>2]&31](f,1);if(!((gb&255)>31)){if(!((gb&255)>15)){gb=lb&15;a[f+hb+232|0]=gb;nb=(kb&255)>>>4;a[f+hb+248|0]=nb;if((gb&255)>(nb&255)){nb=c[f>>2]|0;c[nb+20>>2]=30;c[nb+24>>2]=lb;rd[c[nb>>2]&127](f)}}else{Na=91}}else{nb=c[f>>2]|0;c[nb+20>>2]=29;c[nb+24>>2]=hb;rd[c[nb>>2]&127](f);Na=91}if((Na|0)==91){Na=0;a[f+(hb+ -16)+264|0]=kb}if((mb|0)>0){$a=fb;ab=mb;bb=eb}else{ob=fb;pb=mb;qb=eb;break}}}else{ob=Qa;pb=Sa;qb=Ta}if((pb|0)!=0){bb=c[f>>2]|0;c[bb+20>>2]=12;rd[c[bb>>2]&127](f)}c[Pa>>2]=qb;c[Oa>>2]=ob;break};case 202:{if((Di(f,0,1,1)|0)==0){Ma=0;Na=306;break a}break};case 217:{Na=73;break a;break};case 194:{if((Di(f,0,1,0)|0)==0){Ma=0;Na=306;break a}break};case 201:{if((Di(f,0,0,1)|0)==0){Ma=0;Na=306;break a}break};case 216:{bb=c[f>>2]|0;c[bb+20>>2]=104;td[c[bb+4>>2]&31](f,1);bb=c[l>>2]|0;if((c[bb+12>>2]|0)==0){rb=bb}else{bb=c[f>>2]|0;c[bb+20>>2]=64;rd[c[bb>>2]&127](f);rb=c[l>>2]|0}a[n]=0;a[o]=1;a[p]=5;a[q]=0;a[r]=1;a[s]=5;a[t]=0;a[u]=1;a[v]=5;a[w]=0;a[x]=1;a[y]=5;a[z]=0;a[A]=1;a[B]=5;a[C]=0;a[D]=1;a[E]=5;a[F]=0;a[G]=1;a[H]=5;a[I]=0;a[J]=1;a[K]=5;a[L]=0;a[M]=1;a[N]=5;a[O]=0;a[P]=1;a[Q]=5;a[R]=0;a[S]=1;a[T]=5;a[U]=0;a[V]=1;a[W]=5;a[X]=0;a[Y]=1;a[Z]=5;a[_]=0;a[$]=1;a[aa]=5;a[ba]=0;a[ca]=1;a[da]=5;a[ea]=0;a[fa]=1;a[ga]=5;c[ha>>2]=0;c[ia>>2]=0;c[ja>>2]=0;c[ka>>2]=0;c[la>>2]=0;a[ma]=1;a[na]=1;a[oa]=0;b[pa>>1]=1;b[qa>>1]=1;c[ra>>2]=0;a[sa]=0;c[rb+12>>2]=1;break};case 196:{bb=c[m>>2]|0;ab=bb+4|0;$a=c[ab>>2]|0;if(($a|0)==0){if((vd[c[bb+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}sb=c[ab>>2]|0}else{sb=$a}$a=c[bb>>2]|0;Ua=sb+ -1|0;eb=$a+1|0;mb=d[$a]<<8;if((Ua|0)==0){if((vd[c[bb+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}tb=c[ab>>2]|0;ub=c[bb>>2]|0}else{tb=Ua;ub=eb}eb=tb+ -1|0;Ua=ub+1|0;$a=(d[ub]|mb)+ -2|0;if(($a|0)>16){mb=bb+12|0;fb=eb;kb=$a;hb=Ua;while(1){if((fb|0)==0){if((vd[c[mb>>2]&63](f)|0)==0){Ma=0;Na=306;break a}vb=c[ab>>2]|0;wb=c[bb>>2]|0}else{vb=fb;wb=hb}nb=d[wb]|0;lb=c[f>>2]|0;c[lb+20>>2]=82;c[lb+24>>2]=nb;td[c[lb+4>>2]&31](f,1);a[h]=0;lb=vb+ -1|0;gb=0;xb=1;yb=wb+1|0;do{if((lb|0)==0){if((vd[c[mb>>2]&63](f)|0)==0){Ma=0;Na=306;break a}zb=c[ab>>2]|0;Ab=c[bb>>2]|0}else{zb=lb;Ab=yb}Bb=a[Ab]|0;a[h+xb|0]=Bb;gb=(Bb&255)+gb|0;xb=xb+1|0;lb=zb+ -1|0;yb=Ab+1|0}while((xb|0)<17);xb=kb+ -17|0;Bb=c[f>>2]|0;c[Bb+24>>2]=d[ta]|0;c[Bb+28>>2]=d[ua]|0;c[Bb+32>>2]=d[va]|0;c[Bb+36>>2]=d[wa]|0;c[Bb+40>>2]=d[xa]|0;c[Bb+44>>2]=d[ya]|0;c[Bb+48>>2]=d[za]|0;c[Bb+52>>2]=d[Aa]|0;c[Bb+20>>2]=88;td[c[Bb+4>>2]&31](f,2);Bb=c[f>>2]|0;c[Bb+24>>2]=d[Ba]|0;c[Bb+28>>2]=d[Ca]|0;c[Bb+32>>2]=d[Da]|0;c[Bb+36>>2]=d[Ea]|0;c[Bb+40>>2]=d[Fa]|0;c[Bb+44>>2]=d[Ga]|0;c[Bb+48>>2]=d[Ha]|0;c[Bb+52>>2]=d[Ia]|0;c[Bb+20>>2]=88;td[c[Bb+4>>2]&31](f,2);if((gb|0)>256|(gb|0)>(xb|0)){Bb=c[f>>2]|0;c[Bb+20>>2]=9;rd[c[Bb>>2]&127](f)}nA(j|0,0,256)|0;if((gb|0)>0){Bb=lb;Cb=0;Db=yb;while(1){if((Bb|0)==0){if((vd[c[mb>>2]&63](f)|0)==0){Ma=0;Na=306;break a}Eb=c[ab>>2]|0;Fb=c[bb>>2]|0}else{Eb=Bb;Fb=Db}Gb=Eb+ -1|0;Hb=Fb+1|0;a[j+Cb|0]=a[Fb]|0;Ib=Cb+1|0;if((Ib|0)<(gb|0)){Bb=Gb;Cb=Ib;Db=Hb}else{Jb=Gb;Kb=Hb;break}}}else{Jb=lb;Kb=yb}Db=xb-gb|0;if((nb&16|0)==0){Lb=f+(nb<<2)+180|0;Mb=nb}else{Cb=nb+ -16|0;Lb=f+(Cb<<2)+196|0;Mb=Cb}if(Mb>>>0>3){Cb=c[f>>2]|0;c[Cb+20>>2]=31;c[Cb+24>>2]=Mb;rd[c[Cb>>2]&127](f)}Cb=c[Lb>>2]|0;if((Cb|0)==0){Bb=hh(f)|0;c[Lb>>2]=Bb;Nb=Bb}else{Nb=Cb}Cb=Nb+0|0;Bb=h+0|0;Hb=Cb+17|0;do{a[Cb]=a[Bb]|0;Cb=Cb+1|0;Bb=Bb+1|0}while((Cb|0)<(Hb|0));lA((c[Lb>>2]|0)+17|0,j|0,256)|0;if((Db|0)>16){fb=Jb;kb=Db;hb=Kb}else{Ob=Jb;Pb=Db;Qb=Kb;break}}}else{Ob=eb;Pb=$a;Qb=Ua}if((Pb|0)!=0){hb=c[f>>2]|0;c[hb+20>>2]=12;rd[c[hb>>2]&127](f)}c[bb>>2]=Qb;c[ab>>2]=Ob;break};case 219:{hb=c[m>>2]|0;kb=hb+4|0;fb=c[kb>>2]|0;if((fb|0)==0){if((vd[c[hb+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}Rb=c[kb>>2]|0}else{Rb=fb}fb=c[hb>>2]|0;mb=Rb+ -1|0;Oa=fb+1|0;Pa=d[fb]<<8;if((mb|0)==0){if((vd[c[hb+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}Sb=c[kb>>2]|0;Tb=c[hb>>2]|0}else{Sb=mb;Tb=Oa}Oa=Sb+ -1|0;mb=Tb+1|0;fb=(d[Tb]|Pa)+ -2|0;if((fb|0)>0){Pa=hb+12|0;Ta=Oa;Sa=fb;Qa=mb;while(1){Bb=Sa+ -1|0;if((Ta|0)==0){if((vd[c[Pa>>2]&63](f)|0)==0){Ma=0;Na=306;break a}Ub=c[kb>>2]|0;Vb=c[hb>>2]|0}else{Ub=Ta;Vb=Qa}Cb=d[Vb]|0;Hb=Cb>>>4;nb=Cb&15;Cb=c[f>>2]|0;c[Cb+20>>2]=83;c[Cb+24>>2]=nb;c[Cb+28>>2]=Hb;td[c[Cb+4>>2]&31](f,1);if(nb>>>0>3){Cb=c[f>>2]|0;c[Cb+20>>2]=32;c[Cb+24>>2]=nb;rd[c[Cb>>2]&127](f)}Cb=f+(nb<<2)+164|0;nb=c[Cb>>2]|0;if((nb|0)==0){gb=gh(f)|0;c[Cb>>2]=gb;Wb=gb}else{Wb=nb}nb=(Hb|0)!=0;if(nb){if((Sa|0)<129){Hb=0;do{b[Wb+(Hb<<1)>>1]=1;Hb=Hb+1|0}while((Hb|0)!=64);Xb=Bb>>1;Na=153}else{Na=160}}else{if((Sa|0)<65){Hb=0;while(1){b[Wb+(Hb<<1)>>1]=1;Db=Hb+1|0;if((Db|0)==64){Xb=Bb;Na=153;break}else{Hb=Db}}}else{Na=160}}b:do{if((Na|0)==153){Na=0;switch(Xb|0){case 9:{Yb=Xb;Zb=11712;break};case 16:{Yb=Xb;Zb=11584;break};case 25:{Yb=Xb;Zb=11416;break};case 36:{Yb=Xb;Zb=11208;break};case 49:{Yb=Xb;Zb=10944;break};case 4:{Yb=4;Zb=11816;break};default:{Hb=Ub+ -1|0;Db=Vb+1|0;if((Xb|0)>0){_b=Hb;$b=Xb;ac=10624;bc=Db;Na=162;break b}else{cc=Hb;dc=Xb;ec=Db;break b}}}_b=Ub+ -1|0;$b=Yb;ac=Zb;bc=Vb+1|0;Na=162}else if((Na|0)==160){Na=0;_b=Ub+ -1|0;$b=64;ac=10624;bc=Vb+1|0;Na=162}}while(0);if((Na|0)==162){Na=0;Db=_b;Hb=0;gb=bc;while(1){Cb=(Db|0)==0;if(nb){if(Cb){if((vd[c[Pa>>2]&63](f)|0)==0){Ma=0;Na=306;break a}fc=c[kb>>2]|0;gc=c[hb>>2]|0}else{fc=Db;gc=gb}xb=fc+ -1|0;yb=gc+1|0;lb=d[gc]<<8;if((xb|0)==0){if((vd[c[Pa>>2]&63](f)|0)==0){Ma=0;Na=306;break a}hc=c[kb>>2]|0;ic=c[hb>>2]|0}else{hc=xb;ic=yb}jc=hc;kc=ic;lc=d[ic]|lb}else{if(Cb){if((vd[c[Pa>>2]&63](f)|0)==0){Ma=0;Na=306;break a}mc=c[kb>>2]|0;nc=c[hb>>2]|0}else{mc=Db;nc=gb}jc=mc;kc=nc;lc=d[nc]|0}b[Wb+(c[ac+(Hb<<2)>>2]<<1)>>1]=lc;Cb=Hb+1|0;lb=jc+ -1|0;yb=kc+1|0;if((Cb|0)<($b|0)){Db=lb;Hb=Cb;gb=yb}else{cc=lb;dc=$b;ec=yb;break}}}gb=c[f>>2]|0;c:do{if((c[gb+104>>2]|0)>1){Hb=gb;Db=0;while(1){c[Hb+24>>2]=e[Wb+(Db<<1)>>1]|0;c[Hb+28>>2]=e[Wb+((Db|1)<<1)>>1]|0;c[Hb+32>>2]=e[Wb+((Db|2)<<1)>>1]|0;c[Hb+36>>2]=e[Wb+((Db|3)<<1)>>1]|0;c[Hb+40>>2]=e[Wb+((Db|4)<<1)>>1]|0;c[Hb+44>>2]=e[Wb+((Db|5)<<1)>>1]|0;c[Hb+48>>2]=e[Wb+((Db|6)<<1)>>1]|0;c[Hb+52>>2]=e[Wb+((Db|7)<<1)>>1]|0;c[Hb+20>>2]=95;td[c[Hb+4>>2]&31](f,2);yb=Db+8|0;if((yb|0)>=64){break c}Hb=c[f>>2]|0;Db=yb}}}while(0);gb=Bb-dc+(nb?0-dc|0:0)|0;if((gb|0)>0){Ta=cc;Sa=gb;Qa=ec}else{oc=cc;pc=gb;qc=ec;break}}}else{oc=Oa;pc=fb;qc=mb}if((pc|0)!=0){Qa=c[f>>2]|0;c[Qa+20>>2]=12;rd[c[Qa>>2]&127](f)}c[hb>>2]=qc;c[kb>>2]=oc;break};case 221:{Qa=c[m>>2]|0;Sa=Qa+4|0;Ta=c[Sa>>2]|0;if((Ta|0)==0){if((vd[c[Qa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}rc=c[Sa>>2]|0}else{rc=Ta}Ta=c[Qa>>2]|0;Pa=rc+ -1|0;ab=Ta+1|0;bb=d[Ta]<<8;if((Pa|0)==0){if((vd[c[Qa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}sc=c[Sa>>2]|0;tc=c[Qa>>2]|0}else{sc=Pa;tc=ab}ab=sc+ -1|0;Pa=tc+1|0;if((d[tc]|bb|0)!=4){bb=c[f>>2]|0;c[bb+20>>2]=12;rd[c[bb>>2]&127](f)}if((ab|0)==0){if((vd[c[Qa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}uc=c[Sa>>2]|0;vc=c[Qa>>2]|0}else{uc=ab;vc=Pa}Pa=uc+ -1|0;ab=vc+1|0;bb=d[vc]<<8;if((Pa|0)==0){if((vd[c[Qa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}wc=c[Sa>>2]|0;xc=c[Qa>>2]|0}else{wc=Pa;xc=ab}ab=d[xc]|bb;bb=c[f>>2]|0;c[bb+20>>2]=84;c[bb+24>>2]=ab;td[c[bb+4>>2]&31](f,1);c[ha>>2]=ab;c[Qa>>2]=xc+1;c[Sa>>2]=wc+ -1;break};case 248:{Sa=c[m>>2]|0;Qa=c[Sa>>2]|0;ab=Sa+4|0;bb=c[ab>>2]|0;if((c[(c[l>>2]|0)+16>>2]|0)==0){Pa=c[f>>2]|0;c[Pa+20>>2]=60;iA(Pa+24|0,4712,80)|0;rd[c[c[f>>2]>>2]&127](f)}if((c[Ja>>2]|0)>=3){if((bb|0)==0){if((vd[c[Sa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}yc=c[ab>>2]|0;zc=c[Sa>>2]|0}else{yc=bb;zc=Qa}Pa=yc+ -1|0;Ta=zc+1|0;Ua=d[zc]<<8;if((Pa|0)==0){if((vd[c[Sa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}Ac=c[ab>>2]|0;Bc=c[Sa>>2]|0}else{Ac=Pa;Bc=Ta}Ta=Ac+ -1|0;Pa=Bc+1|0;if((d[Bc]|Ua|0)!=24){Ua=c[f>>2]|0;c[Ua+20>>2]=12;rd[c[Ua>>2]&127](f)}if((Ta|0)==0){if((vd[c[Sa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}Cc=c[ab>>2]|0;Dc=c[Sa>>2]|0}else{Cc=Ta;Dc=Pa}Pa=Cc+ -1|0;Ta=Dc+1|0;if((a[Dc]|0)!=13){Ua=c[f>>2]|0;c[Ua+20>>2]=70;c[Ua+24>>2]=c[k>>2];rd[c[Ua>>2]&127](f)}if((Pa|0)==0){if((vd[c[Sa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}Ec=c[ab>>2]|0;Fc=c[Sa>>2]|0}else{Ec=Pa;Fc=Ta}Ta=Ec+ -1|0;Pa=Fc+1|0;Ua=d[Fc]<<8;if((Ta|0)==0){if((vd[c[Sa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}Gc=c[ab>>2]|0;Hc=c[Sa>>2]|0}else{Gc=Ta;Hc=Pa}Pa=Gc+ -1|0;Ta=Hc+1|0;if((d[Hc]|Ua|0)==255){if((Pa|0)==0){if((vd[c[Sa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}Ic=c[ab>>2]|0;Jc=c[Sa>>2]|0}else{Ic=Pa;Jc=Ta}Ua=Ic+ -1|0;$a=Jc+1|0;if((a[Jc]|0)==3){if((Ua|0)==0){if((vd[c[Sa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}Kc=c[ab>>2]|0;Lc=c[Sa>>2]|0}else{Kc=Ua;Lc=$a}eb=Kc+ -1|0;gb=Lc+1|0;Db=c[Ka>>2]|0;if((d[Lc]|0)==(c[Db+88>>2]|0)){if((eb|0)==0){if((vd[c[Sa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}Mc=c[Ka>>2]|0;Nc=c[ab>>2]|0;Oc=c[Sa>>2]|0}else{Mc=Db;Nc=eb;Oc=gb}Db=Nc+ -1|0;Hb=Oc+1|0;if((d[Oc]|0)==(c[Mc>>2]|0)){if((Db|0)==0){if((vd[c[Sa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}Pc=c[Ka>>2]|0;Qc=c[ab>>2]|0;Rc=c[Sa>>2]|0}else{Pc=Mc;Qc=Db;Rc=Hb}yb=Qc+ -1|0;lb=Rc+1|0;if((d[Rc]|0)==(c[Pc+176>>2]|0)){if((yb|0)==0){if((vd[c[Sa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}Sc=c[ab>>2]|0;Tc=c[Sa>>2]|0}else{Sc=yb;Tc=lb}Cb=Sc+ -1|0;xb=Tc+1|0;if((a[Tc]|0)==-128){if((Cb|0)==0){if((vd[c[Sa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}Uc=c[ab>>2]|0;Vc=c[Sa>>2]|0}else{Uc=Cb;Vc=xb}Gb=Uc+ -1|0;Ib=Vc+1|0;Wc=d[Vc]<<8;if((Gb|0)==0){if((vd[c[Sa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}Xc=c[ab>>2]|0;Yc=c[Sa>>2]|0}else{Xc=Gb;Yc=Ib}Ib=Xc+ -1|0;Gb=Yc+1|0;if((d[Yc]|Wc|0)==0){if((Ib|0)==0){if((vd[c[Sa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}Zc=c[ab>>2]|0;_c=c[Sa>>2]|0}else{Zc=Ib;_c=Gb}Wc=Zc+ -1|0;$c=_c+1|0;ad=d[_c]<<8;if((Wc|0)==0){if((vd[c[Sa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}bd=c[ab>>2]|0;cd=c[Sa>>2]|0}else{bd=Wc;cd=$c}$c=bd+ -1|0;Wc=cd+1|0;if((d[cd]|ad|0)==0){if(($c|0)==0){if((vd[c[Sa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}dd=c[ab>>2]|0;ed=c[Sa>>2]|0}else{dd=$c;ed=Wc}ad=dd+ -1|0;fd=ed+1|0;if((a[ed]|0)==0){if((ad|0)==0){if((vd[c[Sa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}gd=c[ab>>2]|0;hd=c[Sa>>2]|0}else{gd=ad;hd=fd}id=gd+ -1|0;jd=hd+1|0;kd=d[hd]<<8;if((id|0)==0){if((vd[c[Sa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}ld=c[ab>>2]|0;md=c[Sa>>2]|0}else{ld=id;md=jd}jd=ld+ -1|0;id=md+1|0;if((d[md]|kd|0)==1){if((jd|0)==0){if((vd[c[Sa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}nd=c[ab>>2]|0;od=c[Sa>>2]|0}else{nd=jd;od=id}kd=nd+ -1|0;pd=od+1|0;qd=d[od]<<8;if((kd|0)==0){if((vd[c[Sa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}sd=c[ab>>2]|0;ud=c[Sa>>2]|0}else{sd=kd;ud=pd}pd=sd+ -1|0;kd=ud+1|0;if((d[ud]|qd|0)==0){if((pd|0)==0){if((vd[c[Sa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}wd=c[ab>>2]|0;xd=c[Sa>>2]|0}else{wd=pd;xd=kd}qd=wd+ -1|0;yd=xd+1|0;if((a[xd]|0)==0){if((qd|0)==0){if((vd[c[Sa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}zd=c[ab>>2]|0;Ad=c[Sa>>2]|0}else{zd=qd;Ad=yd}Bd=zd+ -1|0;Cd=Ad+1|0;Dd=d[Ad]<<8;if((Bd|0)==0){if((vd[c[Sa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}Ed=c[ab>>2]|0;Fd=c[Sa>>2]|0}else{Ed=Bd;Fd=Cd}Cd=Ed+ -1|0;Bd=Fd+1|0;if((d[Fd]|Dd|0)==1){if((Cd|0)==0){if((vd[c[Sa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}Gd=c[ab>>2]|0;Hd=c[Sa>>2]|0}else{Gd=Cd;Hd=Bd}Dd=Gd+ -1|0;Id=Hd+1|0;Jd=d[Hd]<<8;if((Dd|0)==0){if((vd[c[Sa+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}Kd=c[ab>>2]|0;Ld=c[Sa>>2]|0}else{Kd=Dd;Ld=Id}Id=Kd+ -1|0;Dd=Ld+1|0;if((d[Ld]|Jd|0)==0){Md=Id;Nd=Dd}else{Od=Id;Pd=Dd;Na=291}}else{Od=Cd;Pd=Bd;Na=291}}else{Od=qd;Pd=yd;Na=291}}else{Od=pd;Pd=kd;Na=291}}else{Od=jd;Pd=id;Na=291}}else{Od=ad;Pd=fd;Na=291}}else{Od=$c;Pd=Wc;Na=291}}else{Od=Ib;Pd=Gb;Na=291}}else{Od=Cb;Pd=xb;Na=291}}else{Od=yb;Pd=lb;Na=291}}else{Od=Db;Pd=Hb;Na=291}}else{Od=eb;Pd=gb;Na=291}}else{Od=Ua;Pd=$a;Na=291}}else{Od=Pa;Pd=Ta;Na=291}}else{Od=bb;Pd=Qa;Na=291}if((Na|0)==291){Na=0;Qa=c[f>>2]|0;c[Qa+20>>2]=28;rd[c[Qa>>2]&127](f);Md=Od;Nd=Pd}c[ja>>2]=1;c[Sa>>2]=Nd;c[ab>>2]=Md;break};case 239:case 238:case 237:case 236:case 235:case 234:case 233:case 232:case 231:case 230:case 229:case 228:case 227:case 226:case 225:case 224:{if((vd[c[(c[l>>2]|0)+32+(Xa+ -224<<2)>>2]&63](f)|0)==0){Ma=0;Na=306;break a}break};case 1:case 215:case 214:case 213:case 212:case 211:case 210:case 209:case 208:{ab=c[f>>2]|0;c[ab+20>>2]=94;c[ab+24>>2]=c[k>>2];td[c[ab+4>>2]&31](f,1);break};case 254:{if((vd[c[(c[l>>2]|0)+28>>2]&63](f)|0)==0){Ma=0;Na=306;break a}break};case 220:{ab=c[m>>2]|0;Sa=ab+4|0;Qa=c[Sa>>2]|0;if((Qa|0)==0){if((vd[c[ab+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}Qd=c[Sa>>2]|0}else{Qd=Qa}Qa=c[ab>>2]|0;bb=Qd+ -1|0;Ta=Qa+1|0;Pa=d[Qa]<<8;if((bb|0)==0){if((vd[c[ab+12>>2]&63](f)|0)==0){Ma=0;Na=306;break a}Rd=c[Sa>>2]|0;Sd=c[ab>>2]|0}else{Rd=bb;Sd=Ta}Ta=(d[Sd]|Pa)+ -2|0;Pa=c[f>>2]|0;c[Pa+20>>2]=93;c[Pa+24>>2]=c[k>>2];c[Pa+28>>2]=Ta;td[c[Pa+4>>2]&31](f,1);c[ab>>2]=Sd+1;c[Sa>>2]=Rd+ -1;if((Ta|0)>0){td[c[(c[m>>2]|0)+16>>2]&31](f,Ta)}break};default:{Ta=c[f>>2]|0;c[Ta+20>>2]=70;c[Ta+24>>2]=c[k>>2];rd[c[Ta>>2]&127](f)}}c[k>>2]=0;La=0}if((Na|0)==25){La=c[m>>2]|0;m=c[La>>2]|0;Rd=La+4|0;Sd=c[Rd>>2]|0;if((c[(c[l>>2]|0)+16>>2]|0)==0){Qd=c[f>>2]|0;c[Qd+20>>2]=60;iA(Qd+24|0,4720,80)|0;rd[c[c[f>>2]>>2]&127](f)}do{if((Sd|0)==0){if((vd[c[La+12>>2]&63](f)|0)==0){Ma=0;i=g;return Ma|0}else{Td=c[Rd>>2]|0;Ud=c[La>>2]|0;break}}else{Td=Sd;Ud=m}}while(0);m=Td+ -1|0;Td=Ud+1|0;Sd=d[Ud]<<8;do{if((m|0)==0){if((vd[c[La+12>>2]&63](f)|0)==0){Ma=0;i=g;return Ma|0}else{Vd=c[Rd>>2]|0;Wd=c[La>>2]|0;break}}else{Vd=m;Wd=Td}}while(0);Td=Vd+ -1|0;Vd=Wd+1|0;m=d[Wd]|Sd;do{if((Td|0)==0){if((vd[c[La+12>>2]&63](f)|0)==0){Ma=0;i=g;return Ma|0}else{Xd=c[Rd>>2]|0;Yd=c[La>>2]|0;break}}else{Xd=Td;Yd=Vd}}while(0);Vd=a[Yd]|0;Td=Vd&255;Sd=c[f>>2]|0;c[Sd+20>>2]=105;c[Sd+24>>2]=Td;td[c[Sd+4>>2]&31](f,1);do{if(!((m|0)!=((Td<<1)+6|0)|(Vd&255)>4)){if(!(Vd<<24>>24==0)){c[f+340>>2]=Td;Sd=Xd+ -1|0;Zd=(Sd|0)==0;_d=Sd;$d=Yd+1|0;Na=42;break}if((c[f+224>>2]|0)!=0){c[f+340>>2]=Td;Sd=Xd+ -1|0;if((Sd|0)==0){ae=1;Na=61}else{be=1;ce=Sd;de=Yd+1|0}}else{Na=41}}else{Na=41}}while(0);if((Na|0)==41){m=c[f>>2]|0;c[m+20>>2]=12;rd[c[m>>2]&127](f);c[f+340>>2]=Td;m=Xd+ -1|0;Xd=Yd+1|0;Yd=(m|0)==0;if(Vd<<24>>24==0){ee=Yd;fe=1;ge=m;he=Xd;Na=60}else{Zd=Yd;_d=m;$d=Xd;Na=42}}d:do{if((Na|0)==42){Xd=La+12|0;m=f+344|0;Yd=Zd;Vd=_d;Sd=0;Wd=$d;while(1){if(Yd){if((vd[c[Xd>>2]&63](f)|0)==0){Ma=0;Na=306;break}ie=c[Rd>>2]|0;je=c[La>>2]|0}else{ie=Vd;je=Wd}Ud=ie+ -1|0;Qd=je+1|0;Xa=d[je]|0;e:do{if((Sd|0)>0){Md=0;while(1){Nd=Md+1|0;if((Xa|0)==(c[c[f+(Md<<2)+344>>2]>>2]|0)){break}if((Nd|0)<(Sd|0)){Md=Nd}else{ke=Xa;break e}}Md=c[c[m>>2]>>2]|0;if((Sd|0)>1){Nd=Md;ja=1;while(1){Pd=c[c[f+(ja<<2)+344>>2]>>2]|0;Od=(Pd|0)>(Nd|0)?Pd:Nd;Pd=ja+1|0;if((Pd|0)==(Sd|0)){le=Od;break}else{Nd=Od;ja=Pd}}}else{le=Md}ke=le+1|0}else{ke=Xa}}while(0);Xa=c[Ka>>2]|0;nb=c[Ja>>2]|0;f:do{if((nb|0)>0){Bb=0;ja=Xa;while(1){if((ke|0)==(c[ja>>2]|0)){me=ja;break f}Nd=Bb+1|0;Pd=ja+88|0;if((Nd|0)<(nb|0)){Bb=Nd;ja=Pd}else{ne=Pd;Na=55;break}}}else{ne=Xa;Na=55}}while(0);if((Na|0)==55){Na=0;Xa=c[f>>2]|0;c[Xa+20>>2]=4;c[Xa+24>>2]=ke;rd[c[Xa>>2]&127](f);me=ne}c[f+(Sd<<2)+344>>2]=me;if((Ud|0)==0){if((vd[c[Xd>>2]&63](f)|0)==0){Ma=0;Na=306;break}oe=c[Rd>>2]|0;pe=c[La>>2]|0}else{oe=Ud;pe=Qd}Xa=d[pe]|0;nb=me+20|0;c[nb>>2]=Xa>>>4;ja=me+24|0;c[ja>>2]=Xa&15;Xa=c[f>>2]|0;c[Xa+24>>2]=c[me>>2];c[Xa+28>>2]=c[nb>>2];c[Xa+32>>2]=c[ja>>2];c[Xa+20>>2]=106;td[c[Xa+4>>2]&31](f,1);Xa=Sd+1|0;ja=oe+ -1|0;nb=pe+1|0;Bb=(ja|0)==0;if((Xa|0)<(Td|0)){Yd=Bb;Vd=ja;Sd=Xa;Wd=nb}else{ee=Bb;fe=0;ge=ja;he=nb;Na=60;break d}}if((Na|0)==306){i=g;return Ma|0}}}while(0);if((Na|0)==60){if(ee){ae=fe;Na=61}else{be=fe;ce=ge;de=he}}do{if((Na|0)==61){if((vd[c[La+12>>2]&63](f)|0)==0){Ma=0;i=g;return Ma|0}else{be=ae;ce=c[Rd>>2]|0;de=c[La>>2]|0;break}}}while(0);ae=ce+ -1|0;ce=de+1|0;he=f+412|0;c[he>>2]=d[de]|0;do{if((ae|0)==0){if((vd[c[La+12>>2]&63](f)|0)==0){Ma=0;i=g;return Ma|0}else{qe=c[Rd>>2]|0;re=c[La>>2]|0;break}}else{qe=ae;re=ce}}while(0);ce=qe+ -1|0;qe=f+416|0;c[qe>>2]=d[re]|0;do{if((ce|0)==0){if((vd[c[La+12>>2]&63](f)|0)==0){Ma=0;i=g;return Ma|0}else{se=c[Rd>>2]|0;te=c[La>>2]|0;break}}else{se=ce;te=re+1|0}}while(0);re=d[te]|0;ce=f+420|0;c[ce>>2]=re>>>4;ae=f+424|0;c[ae>>2]=re&15;re=c[f>>2]|0;c[re+24>>2]=c[he>>2];c[re+28>>2]=c[qe>>2];c[re+32>>2]=c[ce>>2];c[re+36>>2]=c[ae>>2];c[re+20>>2]=107;td[c[re+4>>2]&31](f,1);c[(c[l>>2]|0)+20>>2]=0;if(!be){be=f+144|0;c[be>>2]=(c[be>>2]|0)+1}c[La>>2]=te+1;c[Rd>>2]=se+ -1;c[k>>2]=0;Ma=1;i=g;return Ma|0}else if((Na|0)==73){se=c[f>>2]|0;c[se+20>>2]=87;td[c[se+4>>2]&31](f,1);c[k>>2]=0;Ma=2;i=g;return Ma|0}else if((Na|0)==306){i=g;return Ma|0}return 0}function zi(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;d=a+440|0;e=c[d>>2]|0;do{if((e|0)==0){if((vi(a)|0)==0){f=0;i=b;return f|0}else{g=c[d>>2]|0;break}}else{g=e}}while(0);e=a+464|0;h=(c[e>>2]|0)+20|0;j=c[h>>2]|0;if((g|0)!=(j+208|0)){if((Ad[c[(c[a+24>>2]|0)+20>>2]&127](a,j)|0)==0){f=0;i=b;return f|0}}else{j=c[a>>2]|0;c[j+20>>2]=100;c[j+24>>2]=c[h>>2];td[c[j+4>>2]&31](a,3);c[d>>2]=0}d=(c[e>>2]|0)+20|0;c[d>>2]=(c[d>>2]|0)+1&7;f=1;i=b;return f|0}function Ai(a){a=a|0;var b=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;b=i;e=a+24|0;f=c[e>>2]|0;g=f+4|0;h=c[g>>2]|0;do{if((h|0)==0){if((vd[c[f+12>>2]&63](a)|0)==0){j=0;i=b;return j|0}else{k=c[g>>2]|0;break}}else{k=h}}while(0);h=c[f>>2]|0;l=k+ -1|0;k=h+1|0;m=(d[h]|0)<<8;do{if((l|0)==0){if((vd[c[f+12>>2]&63](a)|0)==0){j=0;i=b;return j|0}else{n=c[g>>2]|0;o=c[f>>2]|0;break}}else{n=l;o=k}}while(0);k=(d[o]|0|m)+ -2|0;m=c[a>>2]|0;c[m+20>>2]=93;c[m+24>>2]=c[a+440>>2];c[m+28>>2]=k;td[c[m+4>>2]&31](a,1);c[f>>2]=o+1;c[g>>2]=n+ -1;if((k|0)<=0){j=1;i=b;return j|0}td[c[(c[e>>2]|0)+16>>2]&31](a,k);j=1;i=b;return j|0}function Bi(b){b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;e=i;i=i+16|0;f=e;g=b+24|0;h=c[g>>2]|0;j=h+4|0;k=c[j>>2]|0;do{if((k|0)==0){if((vd[c[h+12>>2]&63](b)|0)==0){l=0;i=e;return l|0}else{m=c[j>>2]|0;break}}else{m=k}}while(0);k=c[h>>2]|0;n=m+ -1|0;m=k+1|0;o=d[k]<<8;do{if((n|0)==0){if((vd[c[h+12>>2]&63](b)|0)==0){l=0;i=e;return l|0}else{p=c[j>>2]|0;q=c[h>>2]|0;break}}else{p=n;q=m}}while(0);m=(d[q]|o)+ -2|0;o=p+ -1|0;p=q+1|0;if((m|0)<=13){if((m|0)<1){r=o;s=p;t=0}else{u=o;v=p;w=m;x=9}}else{u=o;v=p;w=14;x=9}a:do{if((x|0)==9){p=h+12|0;o=u;q=0;n=v;while(1){if((o|0)==0){if((vd[c[p>>2]&63](b)|0)==0){l=0;break}y=c[j>>2]|0;z=c[h>>2]|0}else{y=o;z=n}a[f+q|0]=a[z]|0;k=q+1|0;A=y+ -1|0;B=z+1|0;if(k>>>0<w>>>0){o=A;q=k;n=B}else{r=A;s=B;t=w;break a}}i=e;return l|0}}while(0);w=m-t|0;z=b+440|0;y=c[z>>2]|0;do{if((y|0)==238){if(((((t>>>0>11?(a[f]|0)==65:0)?(a[f+1|0]|0)==100:0)?(a[f+2|0]|0)==111:0)?(a[f+3|0]|0)==98:0)?(a[f+4|0]|0)==101:0){v=d[f+7|0]<<8|d[f+8|0];u=d[f+9|0]<<8|d[f+10|0];x=a[f+11|0]|0;n=c[b>>2]|0;c[n+24>>2]=d[f+5|0]<<8|d[f+6|0];c[n+28>>2]=v;c[n+32>>2]=u;c[n+36>>2]=x&255;c[n+20>>2]=78;td[c[n+4>>2]&31](b,1);c[b+296>>2]=1;a[b+300|0]=x;break}x=c[b>>2]|0;c[x+20>>2]=80;c[x+24>>2]=m;td[c[x+4>>2]&31](b,1)}else if((y|0)==224){Ci(b,f,t,w)}else{x=c[b>>2]|0;c[x+20>>2]=70;c[x+24>>2]=c[z>>2];rd[c[x>>2]&127](b)}}while(0);c[h>>2]=s;c[j>>2]=r;if((w|0)<=0){l=1;i=e;return l|0}td[c[(c[g>>2]|0)+16>>2]&31](b,w);l=1;i=e;return l|0}function Ci(e,f,g,h){e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;j=i;k=h+g|0;if(((((g>>>0>13?(a[f]|0)==74:0)?(a[f+1|0]|0)==70:0)?(a[f+2|0]|0)==73:0)?(a[f+3|0]|0)==70:0)?(a[f+4|0]|0)==0:0){c[e+284>>2]=1;h=a[f+5|0]|0;l=e+288|0;a[l]=h;m=e+289|0;a[m]=a[f+6|0]|0;n=e+290|0;a[n]=a[f+7|0]|0;o=(d[f+8|0]<<8|d[f+9|0])&65535;p=e+292|0;b[p>>1]=o;q=(d[f+10|0]<<8|d[f+11|0])&65535;r=e+294|0;b[r>>1]=q;if((h+ -1<<24>>24&255)<2){s=e;t=h;u=o;v=q}else{q=c[e>>2]|0;c[q+20>>2]=122;c[q+24>>2]=d[l]|0;c[q+28>>2]=d[m]|0;td[c[q+4>>2]&31](e,-1);s=e;t=a[l]|0;u=b[p>>1]|0;v=b[r>>1]|0}r=c[e>>2]|0;c[r+24>>2]=t&255;c[r+28>>2]=d[m]|0;c[r+32>>2]=u&65535;c[r+36>>2]=v&65535;c[r+40>>2]=d[n]|0;c[r+20>>2]=89;td[c[r+4>>2]&31](s,1);r=f+12|0;n=a[r]|0;v=f+13|0;u=a[v]|0;if((u|n)<<24>>24==0){w=n;x=u}else{u=c[e>>2]|0;c[u+20>>2]=92;c[u+24>>2]=d[r]|0;c[u+28>>2]=d[v]|0;td[c[u+4>>2]&31](s,1);w=a[r]|0;x=a[v]|0}v=k+ -14|0;if((v|0)==(aa((w&255)*3|0,x&255)|0)){i=j;return}x=c[e>>2]|0;c[x+20>>2]=90;c[x+24>>2]=v;td[c[x+4>>2]&31](s,1);i=j;return}if(((((g>>>0>5?(a[f]|0)==74:0)?(a[f+1|0]|0)==70:0)?(a[f+2|0]|0)==88:0)?(a[f+3|0]|0)==88:0)?(a[f+4|0]|0)==0:0){g=f+5|0;f=d[g]|0;if((f|0)==16){s=c[e>>2]|0;c[s+20>>2]=110;c[s+24>>2]=k;td[c[s+4>>2]&31](e,1);i=j;return}else if((f|0)==17){s=c[e>>2]|0;c[s+20>>2]=111;c[s+24>>2]=k;td[c[s+4>>2]&31](e,1);i=j;return}else if((f|0)==19){f=c[e>>2]|0;c[f+20>>2]=112;c[f+24>>2]=k;td[c[f+4>>2]&31](e,1);i=j;return}else{f=c[e>>2]|0;c[f+20>>2]=91;c[f+24>>2]=d[g]|0;c[f+28>>2]=k;td[c[f+4>>2]&31](e,1);i=j;return}}f=c[e>>2]|0;c[f+20>>2]=79;c[f+24>>2]=k;td[c[f+4>>2]&31](e,1);i=j;return}function Di(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;g=i;h=c[a+24>>2]|0;j=c[h>>2]|0;k=h+4|0;l=c[k>>2]|0;c[a+220>>2]=b;c[a+224>>2]=e;c[a+228>>2]=f;do{if((l|0)==0){if((vd[c[h+12>>2]&63](a)|0)==0){m=0;i=g;return m|0}else{n=c[k>>2]|0;o=c[h>>2]|0;break}}else{n=l;o=j}}while(0);j=n+ -1|0;n=o+1|0;l=(d[o]|0)<<8;do{if((j|0)==0){if((vd[c[h+12>>2]&63](a)|0)==0){m=0;i=g;return m|0}else{p=c[k>>2]|0;q=c[h>>2]|0;break}}else{p=j;q=n}}while(0);n=p+ -1|0;p=q+1|0;j=d[q]|0|l;do{if((n|0)==0){if((vd[c[h+12>>2]&63](a)|0)==0){m=0;i=g;return m|0}else{r=c[k>>2]|0;s=c[h>>2]|0;break}}else{r=n;s=p}}while(0);p=r+ -1|0;r=s+1|0;c[a+212>>2]=d[s]|0;do{if((p|0)==0){if((vd[c[h+12>>2]&63](a)|0)==0){m=0;i=g;return m|0}else{t=c[k>>2]|0;u=c[h>>2]|0;break}}else{t=p;u=r}}while(0);r=t+ -1|0;t=u+1|0;p=(d[u]|0)<<8;u=a+32|0;c[u>>2]=p;do{if((r|0)==0){if((vd[c[h+12>>2]&63](a)|0)==0){m=0;i=g;return m|0}else{v=c[u>>2]|0;w=c[k>>2]|0;x=c[h>>2]|0;break}}else{v=p;w=r;x=t}}while(0);t=w+ -1|0;w=x+1|0;c[u>>2]=v+(d[x]|0);do{if((t|0)==0){if((vd[c[h+12>>2]&63](a)|0)==0){m=0;i=g;return m|0}else{y=c[k>>2]|0;z=c[h>>2]|0;break}}else{y=t;z=w}}while(0);w=y+ -1|0;y=z+1|0;t=(d[z]|0)<<8;z=a+28|0;c[z>>2]=t;do{if((w|0)==0){if((vd[c[h+12>>2]&63](a)|0)==0){m=0;i=g;return m|0}else{A=c[z>>2]|0;B=c[k>>2]|0;C=c[h>>2]|0;break}}else{A=t;B=w;C=y}}while(0);y=B+ -1|0;B=C+1|0;c[z>>2]=A+(d[C]|0);do{if((y|0)==0){if((vd[c[h+12>>2]&63](a)|0)==0){m=0;i=g;return m|0}else{D=c[k>>2]|0;E=c[h>>2]|0;break}}else{D=y;E=B}}while(0);B=a+36|0;c[B>>2]=d[E]|0;y=j+ -8|0;j=c[a>>2]|0;c[j+24>>2]=c[a+440>>2];c[j+28>>2]=c[z>>2];c[j+32>>2]=c[u>>2];c[j+36>>2]=c[B>>2];c[j+20>>2]=102;td[c[j+4>>2]&31](a,1);j=a+464|0;if((c[(c[j>>2]|0)+16>>2]|0)!=0){C=c[a>>2]|0;c[C+20>>2]=61;rd[c[C>>2]&127](a)}if(((c[u>>2]|0)!=0?(c[z>>2]|0)!=0:0)?(z=c[B>>2]|0,(z|0)>=1):0){F=z}else{z=c[a>>2]|0;c[z+20>>2]=33;rd[c[z>>2]&127](a);F=c[B>>2]|0}if((y|0)!=(F*3|0)){F=c[a>>2]|0;c[F+20>>2]=12;rd[c[F>>2]&127](a)}F=a+216|0;if((c[F>>2]|0)==0){c[F>>2]=md[c[c[a+4>>2]>>2]&63](a,1,(c[B>>2]|0)*88|0)|0}y=D+ -1|0;D=E+1|0;a:do{if((c[B>>2]|0)>0){E=h+12|0;z=y;u=0;C=D;while(1){if((z|0)==0){if((vd[c[E>>2]&63](a)|0)==0){m=0;G=56;break}H=c[k>>2]|0;I=c[h>>2]|0}else{H=z;I=C}A=H+ -1|0;w=I+1|0;t=d[I]|0;x=c[F>>2]|0;b:do{if((u|0)>0){v=x;r=0;while(1){if((t|0)==(c[v>>2]|0)){break}p=r+1|0;s=v+88|0;if((p|0)<(u|0)){v=s;r=p}else{J=t;K=s;break b}}r=c[x>>2]|0;v=x+88|0;if((u|0)>1){s=r;p=v;n=1;while(1){l=c[p>>2]|0;s=(l|0)>(s|0)?l:s;n=n+1|0;if((n|0)==(u|0)){break}else{p=p+88|0}}L=s;M=x+(u*88|0)|0}else{L=r;M=v}J=L+1|0;K=M}else{J=t;K=x}}while(0);c[K>>2]=J;c[K+4>>2]=u;if((A|0)==0){if((vd[c[E>>2]&63](a)|0)==0){m=0;G=56;break}N=c[k>>2]|0;O=c[h>>2]|0}else{N=A;O=w}x=N+ -1|0;t=d[O]|0;p=K+8|0;c[p>>2]=t>>>4;n=K+12|0;c[n>>2]=t&15;if((x|0)==0){if((vd[c[E>>2]&63](a)|0)==0){m=0;G=56;break}P=c[k>>2]|0;Q=c[h>>2]|0}else{P=x;Q=O+1|0}x=K+16|0;c[x>>2]=d[Q]|0;t=c[a>>2]|0;c[t+24>>2]=c[K>>2];c[t+28>>2]=c[p>>2];c[t+32>>2]=c[n>>2];c[t+36>>2]=c[x>>2];c[t+20>>2]=103;td[c[t+4>>2]&31](a,1);t=u+1|0;x=P+ -1|0;n=Q+1|0;if((t|0)<(c[B>>2]|0)){z=x;u=t;C=n}else{R=x;S=n;break a}}if((G|0)==56){i=g;return m|0}}else{R=y;S=D}}while(0);c[(c[j>>2]|0)+16>>2]=1;c[h>>2]=S;c[k>>2]=R;m=1;i=g;return m|0}function Ei(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;b=i;d=a+20|0;if((c[d>>2]|0)!=202){e=c[a>>2]|0;c[e+20>>2]=21;c[e+24>>2]=c[d>>2];rd[c[e>>2]&127](a)}ji(a);e=a+216|0;d=a+36|0;f=c[d>>2]|0;if((f|0)>0){g=a+316|0;h=a+324|0;j=a+76|0;k=a+320|0;l=a+328|0;m=0;n=c[e>>2]|0;while(1){o=c[h>>2]|0;p=(c[j>>2]|0)!=0?8:4;a:do{if((o|0)>(p|0)){q=1}else{r=c[g>>2]|0;s=c[n+8>>2]|0;t=1;while(1){u=t<<1;if(((r|0)%(aa(u,s)|0)|0|0)!=0){q=t;break a}if((aa(o,u)|0)>(p|0)){q=u;break}else{t=u}}}}while(0);p=aa(o,q)|0;t=n+36|0;c[t>>2]=p;s=c[l>>2]|0;r=(c[j>>2]|0)!=0?8:4;b:do{if((s|0)>(r|0)){v=1}else{u=c[k>>2]|0;w=c[n+12>>2]|0;x=1;while(1){y=x<<1;if(((u|0)%(aa(y,w)|0)|0|0)!=0){v=x;break b}if((aa(s,y)|0)>(r|0)){v=y;break}else{x=y}}}}while(0);r=aa(s,v)|0;o=n+40|0;c[o>>2]=r;x=r<<1;if((p|0)<=(x|0)){w=p<<1;if((r|0)>(w|0)){c[o>>2]=w}}else{c[t>>2]=x}m=m+1|0;z=c[d>>2]|0;if((m|0)>=(z|0)){break}else{n=n+88|0}}if((z|0)>0){n=a+28|0;m=a+316|0;v=a+428|0;k=a+32|0;j=a+320|0;l=0;q=c[e>>2]|0;while(1){e=aa(aa(c[q+8>>2]|0,c[n>>2]|0)|0,c[q+36>>2]|0)|0;c[q+44>>2]=hk(e,aa(c[v>>2]|0,c[m>>2]|0)|0)|0;e=aa(aa(c[q+12>>2]|0,c[k>>2]|0)|0,c[q+40>>2]|0)|0;c[q+48>>2]=hk(e,aa(c[v>>2]|0,c[j>>2]|0)|0)|0;e=l+1|0;g=c[d>>2]|0;if((e|0)<(g|0)){l=e;q=q+88|0}else{A=g;break}}}else{A=z}}else{A=f}switch(c[a+44>>2]|0){case 1:{c[a+120>>2]=1;B=1;break};case 6:case 2:{c[a+120>>2]=3;B=3;break};case 7:case 3:{c[a+120>>2]=3;B=3;break};case 5:case 4:{c[a+120>>2]=4;B=4;break};default:{c[a+120>>2]=A;B=A}}c[a+124>>2]=(c[a+84>>2]|0)==0?B:1;if((Fi(a)|0)==0){c[a+128>>2]=1;i=b;return}else{c[a+128>>2]=c[a+320>>2];i=b;return}}function Fi(a){a=a|0;var b=0,d=0,e=0;b=i;if((((((((((((((((((c[a+76>>2]|0)==0?(c[a+308>>2]|0)==0:0)?(c[a+40>>2]|0)==3:0)?(c[a+36>>2]|0)==3:0)?(c[a+44>>2]|0)==2:0)?(c[a+120>>2]|0)==3:0)?(c[a+304>>2]|0)==0:0)?(d=c[a+216>>2]|0,(c[d+8>>2]|0)==2):0)?(c[d+96>>2]|0)==1:0)?(c[d+184>>2]|0)==1:0)?(c[d+12>>2]|0)<=2:0)?(c[d+100>>2]|0)==1:0)?(c[d+188>>2]|0)==1:0)?(e=c[d+36>>2]|0,(e|0)==(c[a+324>>2]|0)):0)?(c[d+124>>2]|0)==(e|0):0)?(c[d+212>>2]|0)==(e|0):0)?(e=c[d+40>>2]|0,(e|0)==(c[a+328>>2]|0)):0)?(c[d+128>>2]|0)==(e|0):0){i=b;return(c[d+216>>2]|0)==(e|0)|0}i=b;return 0}function Gi(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=i;e=b+4|0;f=md[c[c[e>>2]>>2]&63](b,1,28)|0;g=b+444|0;c[g>>2]=f;c[f>>2]=44;c[f+4>>2]=45;c[f+8>>2]=0;f=c[g>>2]|0;g=b+212|0;if((c[g>>2]|0)!=8){h=c[b>>2]|0;c[h+20>>2]=16;c[h+24>>2]=c[g>>2];rd[c[h>>2]&127](b)}Ei(b);h=md[c[c[e>>2]>>2]&63](b,1,1408)|0;g=b+336|0;c[g>>2]=h+256;nA(h|0,0,256)|0;j=0;do{a[h+(j+256)|0]=j;j=j+1|0}while((j|0)!=256);nA(h+512|0,-1,384)|0;nA(h+896|0,0,384)|0;j=h+1280|0;h=(c[g>>2]|0)+0|0;g=j+128|0;do{a[j]=a[h]|0;j=j+1|0;h=h+1|0}while((j|0)<(g|0));if(((c[b+116>>2]|0)!=0?(c[b+112>>2]|0)!=0:0)?(h=b+120|0,(c[h>>2]|0)>=1):0){k=h}else{h=c[b>>2]|0;c[h+20>>2]=33;rd[c[h>>2]&127](b);k=b+120|0}h=f+12|0;c[h>>2]=0;j=f+16|0;c[j>>2]=Fi(b)|0;g=f+20|0;c[g>>2]=0;l=f+24|0;c[l>>2]=0;do{if((c[b+84>>2]|0)==0){c[b+100>>2]=0;c[b+104>>2]=0;c[b+108>>2]=0;m=b+68|0}else{if((c[b+64>>2]|0)==0){c[b+100>>2]=0;c[b+104>>2]=0;c[b+108>>2]=0}f=b+68|0;if((c[f>>2]|0)!=0){n=c[b>>2]|0;c[n+20>>2]=48;rd[c[n>>2]&127](b)}do{if((c[k>>2]|0)==3){if((c[b+136>>2]|0)!=0){c[b+104>>2]=1;break}if((c[b+92>>2]|0)==0){c[b+100>>2]=1;break}else{c[b+108>>2]=1;break}}else{c[b+100>>2]=1;c[b+104>>2]=0;c[b+108>>2]=0;c[b+136>>2]=0}}while(0);if((c[b+100>>2]|0)!=0){Oj(b);c[g>>2]=c[b+484>>2]}if((c[b+108>>2]|0)==0?(c[b+104>>2]|0)==0:0){m=f;break}Yj(b);c[l>>2]=c[b+484>>2];m=f}}while(0);if((c[m>>2]|0)==0){if((c[j>>2]|0)==0){Lh(b);Ui(b)}else{Ji(b)}Pi(b,c[b+108>>2]|0)}Xh(b);if((c[b+228>>2]|0)==0){Zh(b)}else{oh(b)}j=b+460|0;if((c[(c[j>>2]|0)+16>>2]|0)==0){o=(c[b+64>>2]|0)!=0}else{o=1}Dh(b,o&1);if((c[m>>2]|0)==0){pi(b,0)}rd[c[(c[e>>2]|0)+24>>2]&127](b);rd[c[(c[j>>2]|0)+8>>2]&127](b);e=c[b+8>>2]|0;if((e|0)==0){i=d;return}if((c[b+64>>2]|0)!=0){i=d;return}if((c[(c[j>>2]|0)+16>>2]|0)==0){i=d;return}j=c[b+36>>2]|0;if((c[b+224>>2]|0)==0){p=j}else{p=(j*3|0)+2|0}c[e+4>>2]=0;c[e+8>>2]=aa(c[b+332>>2]|0,p)|0;c[e+12>>2]=0;c[e+16>>2]=(c[b+108>>2]|0)!=0?3:2;c[h>>2]=(c[h>>2]|0)+1;i=d;return}function Hi(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;d=c[a+444>>2]|0;e=d+8|0;if((c[e>>2]|0)==0){f=a+84|0;do{if((c[f>>2]|0)!=0?(c[a+136>>2]|0)==0:0){if((c[a+92>>2]|0)!=0?(c[a+108>>2]|0)!=0:0){c[a+484>>2]=c[d+24>>2];c[e>>2]=1;break}if((c[a+100>>2]|0)==0){g=c[a>>2]|0;c[g+20>>2]=47;rd[c[g>>2]&127](a);break}else{c[a+484>>2]=c[d+20>>2];break}}}while(0);rd[c[c[a+472>>2]>>2]&127](a);rd[c[(c[a+452>>2]|0)+8>>2]&127](a);if((c[a+68>>2]|0)==0){if((c[d+16>>2]|0)==0){rd[c[c[a+480>>2]>>2]&127](a)}rd[c[c[a+476>>2]>>2]&127](a);if((c[f>>2]|0)!=0){td[c[c[a+484>>2]>>2]&31](a,c[e>>2]|0)}td[c[c[a+456>>2]>>2]&31](a,(c[e>>2]|0)!=0?3:0);td[c[c[a+448>>2]>>2]&31](a,0)}}else{c[e>>2]=0;td[c[c[a+484>>2]>>2]&31](a,0);td[c[c[a+456>>2]>>2]&31](a,2);td[c[c[a+448>>2]>>2]&31](a,2)}f=c[a+8>>2]|0;if((f|0)==0){i=b;return}g=d+12|0;c[f+12>>2]=c[g>>2];d=((c[e>>2]|0)!=0?2:1)+(c[g>>2]|0)|0;g=f+16|0;c[g>>2]=d;if((c[a+64>>2]|0)==0){i=b;return}if((c[(c[a+460>>2]|0)+20>>2]|0)!=0){i=b;return}c[g>>2]=d+((c[a+108>>2]|0)!=0?2:1);i=b;return}function Ii(a){a=a|0;var b=0,d=0;b=i;d=c[a+444>>2]|0;if((c[a+84>>2]|0)!=0){rd[c[(c[a+484>>2]|0)+8>>2]&127](a)}a=d+12|0;c[a>>2]=(c[a>>2]|0)+1;i=b;return}function Ji(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;d=a+4|0;e=md[c[c[d>>2]>>2]&63](a,1,48)|0;f=a+476|0;c[f>>2]=e;c[e>>2]=46;c[e+8>>2]=0;g=aa(c[a+120>>2]|0,c[a+112>>2]|0)|0;c[e+40>>2]=g;h=e+4|0;if((c[a+320>>2]|0)==2){c[h>>2]=1;c[e+12>>2]=4;c[e+32>>2]=md[c[(c[d>>2]|0)+4>>2]&63](a,1,g)|0}else{c[h>>2]=2;c[e+12>>2]=5;c[e+32>>2]=0}e=c[f>>2]|0;f=e+16|0;c[f>>2]=md[c[c[d>>2]>>2]&63](a,1,1024)|0;h=e+20|0;c[h>>2]=md[c[c[d>>2]>>2]&63](a,1,1024)|0;g=e+24|0;c[g>>2]=md[c[c[d>>2]>>2]&63](a,1,1024)|0;j=e+28|0;c[j>>2]=md[c[c[d>>2]>>2]&63](a,1,1024)|0;a=c[h>>2]|0;h=c[g>>2]|0;g=0;d=-128;while(1){c[(c[f>>2]|0)+(g<<2)>>2]=(d*91881|0)+32768>>16;c[a+(g<<2)>>2]=(d*116130|0)+32768>>16;c[h+(g<<2)>>2]=aa(d,-46802)|0;e=(aa(d,-22553)|0)+32768|0;c[(c[j>>2]|0)+(g<<2)>>2]=e;g=g+1|0;if((g|0)==256){break}else{d=d+1|0}}i=b;return}function Ki(a){a=a|0;var b=0;b=c[a+476>>2]|0;c[b+36>>2]=0;c[b+44>>2]=c[a+116>>2];return}function Li(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+16|0;j=e;k=c[a+476>>2]|0;l=k+36|0;if((c[l>>2]|0)==0){m=k+44|0;n=c[m>>2]|0;o=n>>>0<2?n:2;n=c[g>>2]|0;p=h-n|0;h=o>>>0>p>>>0?p:o;c[j>>2]=c[f+(n<<2)>>2];if(h>>>0>1){c[j+4>>2]=c[f+(n+1<<2)>>2]}else{c[j+4>>2]=c[k+32>>2];c[l>>2]=1}Cd[c[k+12>>2]&31](a,b,c[d>>2]|0,j);q=m;r=h}else{jk(k+32|0,0,f+(c[g>>2]<<2)|0,0,1,c[k+40>>2]|0);c[l>>2]=0;q=k+44|0;r=1}c[g>>2]=(c[g>>2]|0)+r;c[q>>2]=(c[q>>2]|0)-r;if((c[l>>2]|0)!=0){i=e;return}c[d>>2]=(c[d>>2]|0)+1;i=e;return}function Mi(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;h=i;j=c[b+476>>2]|0;k=c[b+336>>2]|0;l=c[j+16>>2]|0;m=c[j+20>>2]|0;n=c[j+24>>2]|0;o=c[j+28>>2]|0;j=f<<1;p=c[e>>2]|0;q=c[p+(j<<2)>>2]|0;r=c[p+((j|1)<<2)>>2]|0;j=c[(c[e+4>>2]|0)+(f<<2)>>2]|0;p=c[(c[e+8>>2]|0)+(f<<2)>>2]|0;f=c[g>>2]|0;e=c[g+4>>2]|0;g=b+112|0;b=c[g>>2]|0;s=b>>>1;if((s|0)==0){t=b;u=q;v=r;w=j;x=p;y=f;z=e}else{b=s*6|0;A=s<<1;B=f+b|0;C=p+s|0;D=s;E=q;F=r;G=j;H=p;p=f;f=e;while(1){I=d[G]|0;J=d[H]|0;K=c[l+(J<<2)>>2]|0;L=(c[n+(J<<2)>>2]|0)+(c[o+(I<<2)>>2]|0)>>16;J=c[m+(I<<2)>>2]|0;I=d[E]|0;a[p]=a[k+(I+K)|0]|0;a[p+1|0]=a[k+(I+L)|0]|0;a[p+2|0]=a[k+(I+J)|0]|0;I=d[E+1|0]|0;a[p+3|0]=a[k+(I+K)|0]|0;a[p+4|0]=a[k+(I+L)|0]|0;a[p+5|0]=a[k+(I+J)|0]|0;I=d[F]|0;a[f]=a[k+(I+K)|0]|0;a[f+1|0]=a[k+(I+L)|0]|0;a[f+2|0]=a[k+(I+J)|0]|0;I=d[F+1|0]|0;a[f+3|0]=a[k+(I+K)|0]|0;a[f+4|0]=a[k+(I+L)|0]|0;a[f+5|0]=a[k+(I+J)|0]|0;D=D+ -1|0;if((D|0)==0){break}else{E=E+2|0;F=F+2|0;G=G+1|0;H=H+1|0;p=p+6|0;f=f+6|0}}t=c[g>>2]|0;u=q+A|0;v=r+A|0;w=j+s|0;x=C;y=B;z=e+b|0}if((t&1|0)==0){i=h;return}t=d[w]|0;w=d[x]|0;x=c[l+(w<<2)>>2]|0;l=(c[n+(w<<2)>>2]|0)+(c[o+(t<<2)>>2]|0)>>16;o=c[m+(t<<2)>>2]|0;t=d[u]|0;a[y]=a[k+(t+x)|0]|0;a[y+1|0]=a[k+(t+l)|0]|0;a[y+2|0]=a[k+(t+o)|0]|0;t=d[v]|0;a[z]=a[k+(t+x)|0]|0;a[z+1|0]=a[k+(t+l)|0]|0;a[z+2|0]=a[k+(t+o)|0]|0;i=h;return}function Ni(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;h=i;Cd[c[(c[a+476>>2]|0)+12>>2]&31](a,b,c[d>>2]|0,f+(c[g>>2]<<2)|0);c[g>>2]=(c[g>>2]|0)+1;c[d>>2]=(c[d>>2]|0)+1;i=h;return}function Oi(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;h=i;j=c[b+476>>2]|0;k=c[b+336>>2]|0;l=c[j+16>>2]|0;m=c[j+20>>2]|0;n=c[j+24>>2]|0;o=c[j+28>>2]|0;j=c[(c[e>>2]|0)+(f<<2)>>2]|0;p=c[(c[e+4>>2]|0)+(f<<2)>>2]|0;q=c[(c[e+8>>2]|0)+(f<<2)>>2]|0;f=c[g>>2]|0;g=b+112|0;b=c[g>>2]|0;e=b>>>1;if((e|0)==0){r=b;s=j;t=p;u=q;v=f}else{b=e*6|0;w=e<<1;x=q+e|0;y=e;z=j;A=p;B=q;q=f;while(1){C=d[A]|0;D=d[B]|0;E=c[l+(D<<2)>>2]|0;F=(c[n+(D<<2)>>2]|0)+(c[o+(C<<2)>>2]|0)>>16;D=c[m+(C<<2)>>2]|0;C=d[z]|0;a[q]=a[k+(C+E)|0]|0;a[q+1|0]=a[k+(C+F)|0]|0;a[q+2|0]=a[k+(C+D)|0]|0;C=d[z+1|0]|0;a[q+3|0]=a[k+(C+E)|0]|0;a[q+4|0]=a[k+(C+F)|0]|0;a[q+5|0]=a[k+(C+D)|0]|0;y=y+ -1|0;if((y|0)==0){break}else{z=z+2|0;A=A+1|0;B=B+1|0;q=q+6|0}}r=c[g>>2]|0;s=j+w|0;t=p+e|0;u=x;v=f+b|0}if((r&1|0)==0){i=h;return}r=d[t]|0;t=d[u]|0;u=(c[n+(t<<2)>>2]|0)+(c[o+(r<<2)>>2]|0)>>16;o=c[m+(r<<2)>>2]|0;r=d[s]|0;a[v]=a[k+(r+(c[l+(t<<2)>>2]|0))|0]|0;a[v+1|0]=a[k+(r+u)|0]|0;a[v+2|0]=a[k+(r+o)|0]|0;i=h;return}function Pi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;e=a+4|0;f=md[c[c[e>>2]>>2]&63](a,1,28)|0;c[a+456>>2]=f;c[f>>2]=16;g=f+8|0;c[g>>2]=0;h=f+12|0;c[h>>2]=0;if((c[a+84>>2]|0)==0){i=d;return}j=c[a+320>>2]|0;k=f+16|0;c[k>>2]=j;f=c[e>>2]|0;if((b|0)==0){b=aa(c[a+120>>2]|0,c[a+112>>2]|0)|0;c[h>>2]=yd[c[f+8>>2]&31](a,1,b,j)|0;i=d;return}else{b=c[f+16>>2]|0;f=aa(c[a+120>>2]|0,c[a+112>>2]|0)|0;h=ik(c[a+116>>2]|0,j)|0;c[g>>2]=ud[b&3](a,1,0,f,h,c[k>>2]|0)|0;i=d;return}}function Qi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;e=c[a+456>>2]|0;do{if((b|0)==0){if((c[a+84>>2]|0)==0){c[e+4>>2]=c[(c[a+476>>2]|0)+4>>2];break}c[e+4>>2]=3;f=e+12|0;if((c[f>>2]|0)==0){c[f>>2]=Bd[c[(c[a+4>>2]|0)+28>>2]&15](a,c[e+8>>2]|0,0,c[e+16>>2]|0,1)|0}}else if((b|0)==3){if((c[e+8>>2]|0)==0){f=c[a>>2]|0;c[f+20>>2]=3;rd[c[f>>2]&127](a)}c[e+4>>2]=4}else if((b|0)==2){if((c[e+8>>2]|0)==0){f=c[a>>2]|0;c[f+20>>2]=3;rd[c[f>>2]&127](a)}c[e+4>>2]=5}else{f=c[a>>2]|0;c[f+20>>2]=3;rd[c[f>>2]&127](a)}}while(0);c[e+24>>2]=0;c[e+20>>2]=0;i=d;return}function Ri(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+16|0;k=j;l=c[a+456>>2]|0;m=h-(c[g>>2]|0)|0;h=c[l+16>>2]|0;c[k>>2]=0;n=l+12|0;sd[c[(c[a+476>>2]|0)+4>>2]&7](a,b,d,e,c[n>>2]|0,k,m>>>0>h>>>0?h:m);Cd[c[(c[a+484>>2]|0)+4>>2]&31](a,c[n>>2]|0,f+(c[g>>2]<<2)|0,c[k>>2]|0);c[g>>2]=(c[g>>2]|0)+(c[k>>2]|0);i=j;return}function Si(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;h=i;f=c[a+456>>2]|0;j=f+24|0;k=c[j>>2]|0;if((k|0)==0){l=f+16|0;m=Bd[c[(c[a+4>>2]|0)+28>>2]&15](a,c[f+8>>2]|0,c[f+20>>2]|0,c[l>>2]|0,1)|0;c[f+12>>2]=m;n=l;o=m;p=c[j>>2]|0}else{n=f+16|0;o=c[f+12>>2]|0;p=k}sd[c[(c[a+476>>2]|0)+4>>2]&7](a,b,d,e,o,j,c[n>>2]|0);o=c[j>>2]|0;if(o>>>0>p>>>0){e=o-p|0;Cd[c[(c[a+484>>2]|0)+4>>2]&31](a,(c[f+12>>2]|0)+(p<<2)|0,0,e);c[g>>2]=(c[g>>2]|0)+e;q=c[j>>2]|0}else{q=o}o=c[n>>2]|0;if(q>>>0<o>>>0){i=h;return}q=f+20|0;c[q>>2]=(c[q>>2]|0)+o;c[j>>2]=0;i=h;return}function Ti(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;d=c[a+456>>2]|0;b=d+24|0;j=c[b>>2]|0;if((j|0)==0){k=d+20|0;l=d+16|0;m=Bd[c[(c[a+4>>2]|0)+28>>2]&15](a,c[d+8>>2]|0,c[k>>2]|0,c[l>>2]|0,0)|0;c[d+12>>2]=m;n=k;o=l;p=k;q=c[b>>2]|0;r=m}else{m=d+20|0;n=m;o=d+16|0;p=m;q=j;r=c[d+12>>2]|0}d=(c[o>>2]|0)-q|0;j=c[g>>2]|0;m=h-j|0;h=d>>>0>m>>>0?m:d;d=(c[a+116>>2]|0)-(c[n>>2]|0)|0;m=h>>>0>d>>>0?d:h;Cd[c[(c[a+484>>2]|0)+4>>2]&31](a,r+(q<<2)|0,f+(j<<2)|0,m);c[g>>2]=(c[g>>2]|0)+m;g=(c[b>>2]|0)+m|0;c[b>>2]=g;m=c[o>>2]|0;if(g>>>0<m>>>0){i=e;return}c[p>>2]=(c[n>>2]|0)+m;c[b>>2]=0;i=e;return}function Ui(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;d=i;e=b+4|0;f=md[c[c[e>>2]>>2]&63](b,1,160)|0;c[b+476>>2]=f;c[f>>2]=47;c[f+4>>2]=6;c[f+8>>2]=0;if((c[b+308>>2]|0)!=0){g=c[b>>2]|0;c[g+20>>2]=26;rd[c[g>>2]&127](b)}g=b+36|0;if((c[g>>2]|0)<=0){i=d;return}h=b+324|0;j=b+328|0;k=b+316|0;l=b+320|0;m=f+100|0;n=f+52|0;o=b+112|0;p=f+12|0;q=0;r=c[b+216>>2]|0;while(1){s=aa(c[r+36>>2]|0,c[r+8>>2]|0)|0;t=(s|0)/(c[h>>2]|0)|0;s=aa(c[r+40>>2]|0,c[r+12>>2]|0)|0;u=(s|0)/(c[j>>2]|0)|0;s=c[k>>2]|0;v=c[l>>2]|0;c[m+(q<<2)>>2]=u;do{if((c[r+52>>2]|0)==0){c[n+(q<<2)>>2]=6}else{w=(u|0)==(v|0);if((t|0)==(s|0)&w){c[n+(q<<2)>>2]=7;break}x=(t<<1|0)==(s|0);do{if(x&w){c[n+(q<<2)>>2]=8}else{if(x?(u<<1|0)==(v|0):0){c[n+(q<<2)>>2]=9;break}if(((s|0)%(t|0)|0|0)==0?((v|0)%(u|0)|0|0)==0:0){c[n+(q<<2)>>2]=10;a[f+(q+140)|0]=(s|0)/(t|0)|0;a[f+(q+150)|0]=(v|0)/(u|0)|0;break}y=c[b>>2]|0;c[y+20>>2]=39;rd[c[y>>2]&127](b)}}while(0);x=c[(c[e>>2]|0)+8>>2]|0;w=ik(c[o>>2]|0,c[k>>2]|0)|0;c[p+(q<<2)>>2]=yd[x&31](b,1,w,c[l>>2]|0)|0}}while(0);q=q+1|0;if((q|0)>=(c[g>>2]|0)){break}else{r=r+88|0}}i=d;return}function Vi(a){a=a|0;var b=0;b=c[a+476>>2]|0;c[b+92>>2]=c[a+320>>2];c[b+96>>2]=c[a+116>>2];return}function Wi(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;e=i;j=c[a+476>>2]|0;k=j+92|0;l=c[k>>2]|0;m=a+320|0;n=c[m>>2]|0;if((l|0)<(n|0)){o=n;p=l}else{l=a+36|0;if((c[l>>2]|0)>0){n=j+52|0;q=j+100|0;r=j+12|0;s=0;t=c[a+216>>2]|0;while(1){u=(c[b+(s<<2)>>2]|0)+((aa(c[q+(s<<2)>>2]|0,c[d>>2]|0)|0)<<2)|0;Cd[c[n+(s<<2)>>2]&31](a,t,u,r+(s<<2)|0);s=s+1|0;if((s|0)>=(c[l>>2]|0)){break}else{t=t+88|0}}}c[k>>2]=0;o=c[m>>2]|0;p=0}t=o-p|0;o=j+96|0;l=c[o>>2]|0;s=t>>>0>l>>>0?l:t;t=c[g>>2]|0;l=h-t|0;h=s>>>0>l>>>0?l:s;nd[c[(c[a+480>>2]|0)+4>>2]&63](a,j+12|0,p,f+(t<<2)|0,h);c[g>>2]=(c[g>>2]|0)+h;c[o>>2]=(c[o>>2]|0)-h;o=(c[k>>2]|0)+h|0;c[k>>2]=o;if((o|0)<(c[m>>2]|0)){i=e;return}c[d>>2]=(c[d>>2]|0)+1;i=e;return}function Xi(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;c[e>>2]=0;return}function Yi(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;c[e>>2]=d;return}function Zi(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=i;g=c[f>>2]|0;f=b+320|0;h=c[f>>2]|0;if((h|0)<=0){i=d;return}j=b+112|0;b=h;h=0;while(1){k=c[g+(h<<2)>>2]|0;l=c[j>>2]|0;m=k+l|0;if((l|0)>0){l=c[e+(h<<2)>>2]|0;n=k;while(1){k=a[l]|0;a[n]=k;o=n+2|0;a[n+1|0]=k;if(o>>>0<m>>>0){l=l+1|0;n=o}else{break}}p=c[f>>2]|0}else{p=b}h=h+1|0;if((h|0)>=(p|0)){break}else{b=p}}i=d;return}function _i(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=i;g=c[f>>2]|0;f=b+320|0;if((c[f>>2]|0)<=0){i=d;return}h=b+112|0;b=0;j=0;while(1){k=c[g+(j<<2)>>2]|0;l=c[h>>2]|0;m=k+l|0;if((l|0)>0){n=c[e+(b<<2)>>2]|0;o=k;while(1){k=a[n]|0;a[o]=k;p=o+2|0;a[o+1|0]=k;if(p>>>0<m>>>0){n=n+1|0;o=p}else{break}}q=c[h>>2]|0}else{q=l}jk(g,j,g,j|1,1,q);j=j+2|0;if((j|0)>=(c[f>>2]|0)){break}else{b=b+1|0}}i=d;return}function $i(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;g=i;h=c[b+476>>2]|0;j=c[f>>2]|0;f=c[d+4>>2]|0;d=a[h+140+f|0]|0;k=d&255;l=a[h+f+150|0]|0;f=l&255;h=b+320|0;if((c[h>>2]|0)<=0){i=g;return}m=b+112|0;b=d<<24>>24!=0;d=f+ -1|0;n=0-k|0;o=((n|0)>-1?n:-1)+k+1|0;if((l&255)>1){l=0;k=0;while(1){n=c[j+(k<<2)>>2]|0;p=c[m>>2]|0;q=n+p|0;if((p|0)>0){if(b){r=c[e+(l<<2)>>2]|0;s=n;while(1){nA(s|0,a[r]|0,o|0)|0;s=s+o|0;if(!(s>>>0<q>>>0)){break}else{r=r+1|0}}}else{do{}while((p|0)>0)}}jk(j,k,j,k+1|0,d,c[m>>2]|0);p=k+f|0;if((p|0)>=(c[h>>2]|0)){break}l=l+1|0;k=p}i=g;return}else{k=0;l=0;while(1){d=c[j+(l<<2)>>2]|0;p=c[m>>2]|0;r=d+p|0;if((p|0)>0){if(b){q=c[e+(k<<2)>>2]|0;s=d;while(1){nA(s|0,a[q]|0,o|0)|0;s=s+o|0;if(!(s>>>0<r>>>0)){break}else{q=q+1|0}}}else{do{}while((p|0)>0)}}p=l+f|0;if((p|0)>=(c[h>>2]|0)){break}k=k+1|0;l=p}i=g;return}}function aj(a){a=a|0;c[a>>2]=48;c[a+4>>2]=17;c[a+8>>2]=49;c[a+12>>2]=18;c[a+16>>2]=50;c[a+104>>2]=0;c[a+108>>2]=0;c[a+20>>2]=0;c[a+112>>2]=9832;c[a+116>>2]=126;c[a+120>>2]=0;c[a+124>>2]=0;c[a+128>>2]=0;return a|0}function bj(a){a=a|0;rd[c[(c[a>>2]|0)+8>>2]&127](a);fh(a);Ub(1)}function cj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;e=c[a>>2]|0;if((b|0)>=0){if((c[e+104>>2]|0)<(b|0)){i=d;return}rd[c[e+8>>2]&127](a);i=d;return}b=e+108|0;f=c[b>>2]|0;if((f|0)!=0?(c[e+104>>2]|0)<=2:0){g=f}else{rd[c[e+8>>2]&127](a);g=c[b>>2]|0}c[b>>2]=g+1;i=d;return}function dj(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+208|0;d=b;e=b+8|0;td[c[(c[a>>2]|0)+12>>2]&31](a,e);a=c[o>>2]|0;c[d>>2]=e;Ic(a|0,10344,d|0)|0;i=b;return}function ej(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;i=i+32|0;f=e;g=c[b>>2]|0;b=c[g+20>>2]|0;if((b|0)>0?(b|0)<=(c[g+116>>2]|0):0){h=(c[g+112>>2]|0)+(b<<2)|0;j=8}else{k=c[g+120>>2]|0;if(((k|0)!=0?(l=c[g+124>>2]|0,(b|0)>=(l|0)):0)?(b|0)<=(c[g+128>>2]|0):0){h=k+(b-l<<2)|0;j=8}else{j=9}}if((j|0)==8){l=c[h>>2]|0;if((l|0)==0){j=9}else{m=l}}if((j|0)==9){c[g+24>>2]=b;m=c[c[g+112>>2]>>2]|0}b=m;while(1){n=b+1|0;l=a[b]|0;if(l<<24>>24==37){j=13;break}else if(l<<24>>24==0){j=12;break}else{b=n}}if((j|0)==12){o=g+24|0}else if((j|0)==13){j=g+24|0;if((a[n]|0)==115){c[f>>2]=j;Gb(d|0,m|0,f|0)|0;i=e;return}else{o=j}}j=c[g+28>>2]|0;n=c[g+32>>2]|0;b=c[g+36>>2]|0;l=c[g+40>>2]|0;h=c[g+44>>2]|0;k=c[g+48>>2]|0;p=c[g+52>>2]|0;c[f>>2]=c[o>>2];c[f+4>>2]=j;c[f+8>>2]=n;c[f+12>>2]=b;c[f+16>>2]=l;c[f+20>>2]=h;c[f+24>>2]=k;c[f+28>>2]=p;Gb(d|0,m|0,f|0)|0;i=e;return}function fj(a){a=a|0;var b=0;b=c[a>>2]|0;c[b+108>>2]=0;c[b+20>>2]=0;return}function gj(d,e,f,h,j){d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0;k=i;i=i+256|0;l=k;m=c[d+336>>2]|0;d=8;n=f;f=c[e+84>>2]|0;e=l;while(1){o=b[n+16>>1]|0;p=b[n+32>>1]|0;if((o|p)<<16>>16==0){if(((((b[n+48>>1]|0)==0?(b[n+64>>1]|0)==0:0)?(b[n+80>>1]|0)==0:0)?(b[n+96>>1]|0)==0:0)?(b[n+112>>1]|0)==0:0){q=+(b[n>>1]|0)*+g[f>>2];g[e>>2]=q;g[e+32>>2]=q;g[e+64>>2]=q;g[e+96>>2]=q;g[e+128>>2]=q;g[e+160>>2]=q;g[e+192>>2]=q;g[e+224>>2]=q}else{r=0;s=10}}else{r=p;s=10}if((s|0)==10){s=0;q=+(b[n>>1]|0)*+g[f>>2];t=+(r<<16>>16)*+g[f+64>>2];u=+(b[n+64>>1]|0)*+g[f+128>>2];v=+(b[n+96>>1]|0)*+g[f+192>>2];w=q+u;x=q-u;u=t+v;q=(t-v)*1.4142135381698608-u;v=w+u;t=w-u;u=x+q;w=x-q;q=+(o<<16>>16)*+g[f+32>>2];x=+(b[n+48>>1]|0)*+g[f+96>>2];y=+(b[n+80>>1]|0)*+g[f+160>>2];z=+(b[n+112>>1]|0)*+g[f+224>>2];A=x+y;B=y-x;x=q+z;y=q-z;z=A+x;q=(B+y)*1.8477590084075928;C=q-B*2.613126039505005-z;B=(x-A)*1.4142135381698608-C;A=q-y*1.0823922157287598-B;g[e>>2]=v+z;g[e+224>>2]=v-z;g[e+32>>2]=u+C;g[e+192>>2]=u-C;g[e+64>>2]=w+B;g[e+160>>2]=w-B;g[e+96>>2]=t+A;g[e+128>>2]=t-A}d=d+ -1|0;if((d|0)<=0){break}else{n=n+2|0;f=f+4|0;e=e+4|0}}e=j+7|0;f=j+1|0;n=j+6|0;d=j+2|0;r=j+5|0;s=j+3|0;o=j+4|0;p=0;D=l;while(1){l=c[h+(p<<2)>>2]|0;A=+g[D>>2]+128.5;t=+g[D+16>>2];B=A+t;w=A-t;t=+g[D+8>>2];A=+g[D+24>>2];C=t+A;u=(t-A)*1.4142135381698608-C;A=B+C;t=B-C;C=w+u;B=w-u;u=+g[D+20>>2];w=+g[D+12>>2];z=u+w;v=u-w;w=+g[D+4>>2];u=+g[D+28>>2];y=w+u;q=w-u;u=z+y;w=(v+q)*1.8477590084075928;x=w-v*2.613126039505005-u;v=(y-z)*1.4142135381698608-x;z=w-q*1.0823922157287598-v;a[l+j|0]=a[m+(~~(A+u)&1023)|0]|0;a[l+e|0]=a[m+(~~(A-u)&1023)|0]|0;a[l+f|0]=a[m+(~~(C+x)&1023)|0]|0;a[l+n|0]=a[m+(~~(C-x)&1023)|0]|0;a[l+d|0]=a[m+(~~(B+v)&1023)|0]|0;a[l+r|0]=a[m+(~~(B-v)&1023)|0]|0;a[l+s|0]=a[m+(~~(t+z)&1023)|0]|0;a[l+o|0]=a[m+(~~(t-z)&1023)|0]|0;p=p+1|0;if((p|0)==8){break}else{D=D+32|0}}i=k;return}function hj(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;j=i;i=i+256|0;k=j;l=c[d+336>>2]|0;d=8;m=f;f=c[e+84>>2]|0;e=k;while(1){n=b[m+16>>1]|0;o=b[m+32>>1]|0;if((n|o)<<16>>16==0){if(((((b[m+48>>1]|0)==0?(b[m+64>>1]|0)==0:0)?(b[m+80>>1]|0)==0:0)?(b[m+96>>1]|0)==0:0)?(b[m+112>>1]|0)==0:0){p=aa(b[m>>1]|0,c[f>>2]|0)|0;c[e>>2]=p;c[e+32>>2]=p;c[e+64>>2]=p;c[e+96>>2]=p;c[e+128>>2]=p;c[e+160>>2]=p;c[e+192>>2]=p;c[e+224>>2]=p}else{q=0;r=10}}else{q=o;r=10}if((r|0)==10){r=0;o=aa(b[m>>1]|0,c[f>>2]|0)|0;p=aa(q<<16>>16,c[f+64>>2]|0)|0;s=aa(b[m+64>>1]|0,c[f+128>>2]|0)|0;t=aa(b[m+96>>1]|0,c[f+192>>2]|0)|0;u=s+o|0;v=o-s|0;s=t+p|0;o=((p-t|0)*362>>8)-s|0;t=s+u|0;p=u-s|0;s=o+v|0;u=v-o|0;o=aa(n<<16>>16,c[f+32>>2]|0)|0;n=aa(b[m+48>>1]|0,c[f+96>>2]|0)|0;v=aa(b[m+80>>1]|0,c[f+160>>2]|0)|0;w=aa(b[m+112>>1]|0,c[f+224>>2]|0)|0;x=v+n|0;y=v-n|0;n=w+o|0;v=o-w|0;w=n+x|0;o=(v+y|0)*473>>8;z=((aa(y,-669)|0)>>8)-w+o|0;y=((n-x|0)*362>>8)-z|0;x=y+((v*277>>8)-o)|0;c[e>>2]=w+t;c[e+224>>2]=t-w;c[e+32>>2]=z+s;c[e+192>>2]=s-z;c[e+64>>2]=y+u;c[e+160>>2]=u-y;c[e+128>>2]=x+p;c[e+96>>2]=p-x}d=d+ -1|0;if((d|0)<=0){break}else{m=m+2|0;f=f+4|0;e=e+4|0}}e=h+1|0;f=h+2|0;m=h+3|0;d=h+4|0;q=h+5|0;x=h+6|0;p=h+7|0;y=0;u=k;while(1){k=c[g+(y<<2)>>2]|0;z=k+h|0;s=c[u+4>>2]|0;w=c[u+8>>2]|0;if((s|w|0)==0){if(((((c[u+12>>2]|0)==0?(c[u+16>>2]|0)==0:0)?(c[u+20>>2]|0)==0:0)?(c[u+24>>2]|0)==0:0)?(c[u+28>>2]|0)==0:0){t=a[l+(((c[u>>2]|0)>>>5&1023)+128)|0]|0;a[z]=t;a[k+e|0]=t;a[k+f|0]=t;a[k+m|0]=t;a[k+d|0]=t;a[k+q|0]=t;a[k+x|0]=t;a[k+p|0]=t}else{A=0;r=19}}else{A=w;r=19}if((r|0)==19){r=0;w=c[u>>2]|0;t=c[u+16>>2]|0;o=t+w|0;v=w-t|0;t=c[u+24>>2]|0;w=t+A|0;n=((A-t|0)*362>>8)-w|0;t=w+o|0;B=o-w|0;w=n+v|0;o=v-n|0;n=c[u+20>>2]|0;v=c[u+12>>2]|0;C=v+n|0;D=n-v|0;v=c[u+28>>2]|0;n=v+s|0;E=s-v|0;v=n+C|0;s=(E+D|0)*473>>8;F=((aa(D,-669)|0)>>8)-v+s|0;D=((n-C|0)*362>>8)-F|0;C=D+((E*277>>8)-s)|0;a[z]=a[l+(((v+t|0)>>>5&1023)+128)|0]|0;a[k+p|0]=a[l+(((t-v|0)>>>5&1023)+128)|0]|0;a[k+e|0]=a[l+(((F+w|0)>>>5&1023)+128)|0]|0;a[k+x|0]=a[l+(((w-F|0)>>>5&1023)+128)|0]|0;a[k+f|0]=a[l+(((D+o|0)>>>5&1023)+128)|0]|0;a[k+q|0]=a[l+(((o-D|0)>>>5&1023)+128)|0]|0;a[k+d|0]=a[l+(((C+B|0)>>>5&1023)+128)|0]|0;a[k+m|0]=a[l+(((B-C|0)>>>5&1023)+128)|0]|0}y=y+1|0;if((y|0)==8){break}else{u=u+32|0}}i=j;return}function ij(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;j=i;i=i+256|0;k=j;l=c[d+336>>2]|0;d=8;m=f;f=c[e+84>>2]|0;e=k;while(1){n=b[m+16>>1]|0;o=b[m+32>>1]|0;if((n|o)<<16>>16==0){if(((((b[m+48>>1]|0)==0?(b[m+64>>1]|0)==0:0)?(b[m+80>>1]|0)==0:0)?(b[m+96>>1]|0)==0:0)?(b[m+112>>1]|0)==0:0){p=aa(c[f>>2]<<2,b[m>>1]|0)|0;c[e>>2]=p;c[e+32>>2]=p;c[e+64>>2]=p;c[e+96>>2]=p;c[e+128>>2]=p;c[e+160>>2]=p;c[e+192>>2]=p;c[e+224>>2]=p}else{q=0;r=10}}else{q=o;r=10}if((r|0)==10){r=0;o=aa(q<<16>>16,c[f+64>>2]|0)|0;p=aa(b[m+96>>1]|0,c[f+192>>2]|0)|0;s=(p+o|0)*4433|0;t=s+(o*6270|0)|0;o=s+(aa(p,-15137)|0)|0;p=aa(c[f+128>>2]<<13,b[m+64>>1]|0)|0;s=aa(c[f>>2]<<13,b[m>>1]|0)|0|1024;u=p+s|0;v=s-p|0;p=u+t|0;s=u-t|0;t=v+o|0;u=v-o|0;o=aa(b[m+112>>1]|0,c[f+224>>2]|0)|0;v=aa(b[m+80>>1]|0,c[f+160>>2]|0)|0;w=aa(b[m+48>>1]|0,c[f+96>>2]|0)|0;x=aa(n<<16>>16,c[f+32>>2]|0)|0;n=w+o|0;y=x+v|0;z=(y+n|0)*9633|0;A=z+(aa(n,-16069)|0)|0;n=z+(aa(y,-3196)|0)|0;y=aa(x+o|0,-7373)|0;z=y+(o*2446|0)+A|0;o=y+(x*12299|0)+n|0;x=aa(w+v|0,-20995)|0;y=x+(v*16819|0)+n|0;n=x+(w*25172|0)+A|0;c[e>>2]=o+p>>11;c[e+224>>2]=p-o>>11;c[e+32>>2]=n+t>>11;c[e+192>>2]=t-n>>11;c[e+64>>2]=y+u>>11;c[e+160>>2]=u-y>>11;c[e+96>>2]=z+s>>11;c[e+128>>2]=s-z>>11}d=d+ -1|0;if((d|0)<=0){break}else{m=m+2|0;f=f+4|0;e=e+4|0}}e=h+1|0;f=h+2|0;m=h+3|0;d=h+4|0;q=h+5|0;z=h+6|0;s=h+7|0;y=0;u=k;while(1){k=c[g+(y<<2)>>2]|0;n=k+h|0;t=c[u+4>>2]|0;o=c[u+8>>2]|0;if((t|o|0)==0){if(((((c[u+12>>2]|0)==0?(c[u+16>>2]|0)==0:0)?(c[u+20>>2]|0)==0:0)?(c[u+24>>2]|0)==0:0)?(c[u+28>>2]|0)==0:0){p=a[l+((((c[u>>2]|0)+16|0)>>>5&1023)+128)|0]|0;a[n]=p;a[k+e|0]=p;a[k+f|0]=p;a[k+m|0]=p;a[k+d|0]=p;a[k+q|0]=p;a[k+z|0]=p;a[k+s|0]=p}else{B=0;r=19}}else{B=o;r=19}if((r|0)==19){r=0;o=c[u+24>>2]|0;p=(o+B|0)*4433|0;A=p+(B*6270|0)|0;w=p+(aa(o,-15137)|0)|0;o=(c[u>>2]|0)+16|0;p=c[u+16>>2]|0;x=o+p<<13;v=o-p<<13;p=x+A|0;o=x-A|0;A=v+w|0;x=v-w|0;w=c[u+28>>2]|0;v=c[u+20>>2]|0;C=c[u+12>>2]|0;D=C+w|0;E=t+v|0;F=(E+D|0)*9633|0;G=F+(aa(D,-16069)|0)|0;D=F+(aa(E,-3196)|0)|0;E=aa(t+w|0,-7373)|0;F=E+(w*2446|0)+G|0;w=E+(t*12299|0)+D|0;t=aa(C+v|0,-20995)|0;E=t+(v*16819|0)+D|0;D=t+(C*25172|0)+G|0;a[n]=a[l+(((w+p|0)>>>18&1023)+128)|0]|0;a[k+s|0]=a[l+(((p-w|0)>>>18&1023)+128)|0]|0;a[k+e|0]=a[l+(((D+A|0)>>>18&1023)+128)|0]|0;a[k+z|0]=a[l+(((A-D|0)>>>18&1023)+128)|0]|0;a[k+f|0]=a[l+(((E+x|0)>>>18&1023)+128)|0]|0;a[k+q|0]=a[l+(((x-E|0)>>>18&1023)+128)|0]|0;a[k+m|0]=a[l+(((F+o|0)>>>18&1023)+128)|0]|0;a[k+d|0]=a[l+(((o-F|0)>>>18&1023)+128)|0]|0}y=y+1|0;if((y|0)==8){break}else{u=u+32|0}}i=j;return}function jj(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;j=i;i=i+208|0;k=j;l=c[d+336>>2]|0;d=0;m=f;f=c[e+84>>2]|0;e=k;while(1){n=aa(c[f>>2]<<13,b[m>>1]|0)|0|1024;o=aa(b[m+32>>1]|0,c[f+64>>2]|0)|0;p=aa(b[m+64>>1]|0,c[f+128>>2]|0)|0;q=aa(b[m+96>>1]|0,c[f+192>>2]|0)|0;r=(p-q|0)*7223|0;s=(o-p|0)*2578|0;t=(aa(p,-15083)|0)+n+s+r|0;u=q+o|0;v=(u*10438|0)+n|0;w=r+(aa(q,-637)|0)+v|0;q=s+(aa(o,-20239)|0)+v|0;v=aa(b[m+16>>1]|0,c[f+32>>2]|0)|0;o=aa(b[m+48>>1]|0,c[f+96>>2]|0)|0;s=aa(b[m+80>>1]|0,c[f+160>>2]|0)|0;r=(o+v|0)*7663|0;x=(v-o|0)*1395|0;y=aa(s+o|0,-11295)|0;o=r+x+y|0;z=(s+v|0)*5027|0;v=z+(r-x)|0;x=z+(s*15326|0)+y|0;c[e>>2]=v+w>>11;c[e+168>>2]=w-v>>11;c[e+28>>2]=o+t>>11;c[e+140>>2]=t-o>>11;c[e+56>>2]=x+q>>11;c[e+112>>2]=q-x>>11;c[e+84>>2]=((p-u|0)*11585|0)+n>>11;d=d+1|0;if((d|0)==7){break}else{m=m+2|0;f=f+4|0;e=e+4|0}}e=h+6|0;f=h+1|0;m=h+5|0;d=h+2|0;n=h+4|0;u=h+3|0;p=0;x=k;while(1){k=c[g+(p<<2)>>2]|0;q=(c[x>>2]<<13)+131072|0;o=c[x+8>>2]|0;t=c[x+16>>2]|0;v=c[x+24>>2]|0;w=(t-v|0)*7223|0;y=(o-t|0)*2578|0;s=(aa(t,-15083)|0)+q+y+w|0;z=v+o|0;r=(z*10438|0)+q|0;A=w+(aa(v,-637)|0)+r|0;v=y+(aa(o,-20239)|0)+r|0;r=c[x+4>>2]|0;o=c[x+12>>2]|0;y=c[x+20>>2]|0;w=(o+r|0)*7663|0;B=(r-o|0)*1395|0;C=aa(y+o|0,-11295)|0;o=w+B+C|0;D=(y+r|0)*5027|0;r=w-B+D|0;B=D+(y*15326|0)+C|0;a[k+h|0]=a[l+(((r+A|0)>>>18&1023)+128)|0]|0;a[k+e|0]=a[l+(((A-r|0)>>>18&1023)+128)|0]|0;a[k+f|0]=a[l+(((o+s|0)>>>18&1023)+128)|0]|0;a[k+m|0]=a[l+(((s-o|0)>>>18&1023)+128)|0]|0;a[k+d|0]=a[l+(((B+v|0)>>>18&1023)+128)|0]|0;a[k+n|0]=a[l+(((v-B|0)>>>18&1023)+128)|0]|0;a[k+u|0]=a[l+(((((t-z|0)*11585|0)+q|0)>>>18&1023)+128)|0]|0;p=p+1|0;if((p|0)==7){break}else{x=x+28|0}}i=j;return}function kj(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;j=i;i=i+144|0;k=j;l=c[d+336>>2]|0;d=0;m=f;f=c[e+84>>2]|0;e=k;while(1){n=aa(c[f>>2]<<13,b[m>>1]|0)|0|1024;o=aa((c[f+128>>2]|0)*5793|0,b[m+64>>1]|0)|0;p=o+n|0;q=(aa(o,-2)|0)+n>>11;n=aa((c[f+64>>2]|0)*10033|0,b[m+32>>1]|0)|0;o=n+p|0;r=p-n|0;n=aa(b[m+16>>1]|0,c[f+32>>2]|0)|0;p=aa(b[m+48>>1]|0,c[f+96>>2]|0)|0;s=aa(b[m+80>>1]|0,c[f+160>>2]|0)|0;t=(s+n|0)*2998|0;u=t+(p+n<<13)|0;v=t+(s-p<<13)|0;t=n-p-s<<2;c[e>>2]=u+o>>11;c[e+120>>2]=o-u>>11;c[e+24>>2]=t+q;c[e+96>>2]=q-t;c[e+48>>2]=v+r>>11;c[e+72>>2]=r-v>>11;d=d+1|0;if((d|0)==6){break}else{m=m+2|0;f=f+4|0;e=e+4|0}}e=h+5|0;f=h+1|0;m=h+4|0;d=h+2|0;v=h+3|0;r=0;t=k;while(1){k=c[g+(r<<2)>>2]|0;q=(c[t>>2]<<13)+131072|0;u=(c[t+16>>2]|0)*5793|0;o=q+u|0;s=q-u-u|0;u=(c[t+8>>2]|0)*10033|0;q=o+u|0;p=o-u|0;u=c[t+4>>2]|0;o=c[t+12>>2]|0;n=c[t+20>>2]|0;w=(n+u|0)*2998|0;x=w+(o+u<<13)|0;y=w+(n-o<<13)|0;w=u-o-n<<13;a[k+h|0]=a[l+(((x+q|0)>>>18&1023)+128)|0]|0;a[k+e|0]=a[l+(((q-x|0)>>>18&1023)+128)|0]|0;a[k+f|0]=a[l+(((w+s|0)>>>18&1023)+128)|0]|0;a[k+m|0]=a[l+(((s-w|0)>>>18&1023)+128)|0]|0;a[k+d|0]=a[l+(((y+p|0)>>>18&1023)+128)|0]|0;a[k+v|0]=a[l+(((p-y|0)>>>18&1023)+128)|0]|0;r=r+1|0;if((r|0)==6){break}else{t=t+24|0}}i=j;return}function lj(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;j=i;i=i+112|0;k=j;l=c[d+336>>2]|0;d=0;m=f;f=c[e+84>>2]|0;e=k;while(1){n=aa(c[f>>2]<<13,b[m>>1]|0)|0|1024;o=aa(b[m+32>>1]|0,c[f+64>>2]|0)|0;p=aa(b[m+64>>1]|0,c[f+128>>2]|0)|0;q=(p+o|0)*6476|0;r=o-p|0;p=(r*2896|0)+n|0;o=p+q|0;s=p-q|0;q=(aa(r,-11584)|0)+n|0;n=aa(b[m+16>>1]|0,c[f+32>>2]|0)|0;r=aa(b[m+48>>1]|0,c[f+96>>2]|0)|0;p=(r+n|0)*6810|0;t=p+(n*4209|0)|0;n=p+(aa(r,-17828)|0)|0;c[e>>2]=t+o>>11;c[e+80>>2]=o-t>>11;c[e+20>>2]=n+s>>11;c[e+60>>2]=s-n>>11;c[e+40>>2]=q>>11;d=d+1|0;if((d|0)==5){break}else{m=m+2|0;f=f+4|0;e=e+4|0}}e=h+4|0;f=h+1|0;m=h+3|0;d=h+2|0;q=0;n=k;while(1){k=c[g+(q<<2)>>2]|0;s=(c[n>>2]<<13)+131072|0;t=c[n+8>>2]|0;o=c[n+16>>2]|0;r=(o+t|0)*6476|0;p=t-o|0;o=(p*2896|0)+s|0;t=o+r|0;u=o-r|0;r=(aa(p,-11584)|0)+s|0;s=c[n+4>>2]|0;p=c[n+12>>2]|0;o=(p+s|0)*6810|0;v=o+(s*4209|0)|0;s=o+(aa(p,-17828)|0)|0;a[k+h|0]=a[l+(((v+t|0)>>>18&1023)+128)|0]|0;a[k+e|0]=a[l+(((t-v|0)>>>18&1023)+128)|0]|0;a[k+f|0]=a[l+(((s+u|0)>>>18&1023)+128)|0]|0;a[k+m|0]=a[l+(((u-s|0)>>>18&1023)+128)|0]|0;a[k+d|0]=a[l+((r>>>18&1023)+128)|0]|0;q=q+1|0;if((q|0)==5){break}else{n=n+20|0}}i=j;return}function mj(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;j=i;i=i+64|0;k=j;l=c[d+336>>2]|0;d=0;m=f;f=c[e+84>>2]|0;e=k;while(1){n=aa(b[m>>1]|0,c[f>>2]|0)|0;o=aa(b[m+32>>1]|0,c[f+64>>2]|0)|0;p=o+n<<2;q=n-o<<2;o=aa(b[m+16>>1]|0,c[f+32>>2]|0)|0;n=aa(b[m+48>>1]|0,c[f+96>>2]|0)|0;r=((n+o|0)*4433|0)+1024|0;s=r+(o*6270|0)>>11;o=r+(aa(n,-15137)|0)>>11;c[e>>2]=s+p;c[e+48>>2]=p-s;c[e+16>>2]=o+q;c[e+32>>2]=q-o;d=d+1|0;if((d|0)==4){break}else{m=m+2|0;f=f+4|0;e=e+4|0}}e=h+3|0;f=h+1|0;m=h+2|0;d=0;o=k;while(1){k=c[g+(d<<2)>>2]|0;q=(c[o>>2]|0)+16|0;s=c[o+8>>2]|0;p=q+s<<13;n=q-s<<13;s=c[o+4>>2]|0;q=c[o+12>>2]|0;r=(q+s|0)*4433|0;t=r+(s*6270|0)|0;s=r+(aa(q,-15137)|0)|0;a[k+h|0]=a[l+(((t+p|0)>>>18&1023)+128)|0]|0;a[k+e|0]=a[l+(((p-t|0)>>>18&1023)+128)|0]|0;a[k+f|0]=a[l+(((s+n|0)>>>18&1023)+128)|0]|0;a[k+m|0]=a[l+(((n-s|0)>>>18&1023)+128)|0]|0;d=d+1|0;if((d|0)==4){break}else{o=o+16|0}}i=j;return}function nj(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+48|0;k=j;l=c[d+336>>2]|0;d=c[e+84>>2]|0;e=aa(c[d>>2]<<13,b[f>>1]|0)|0|1024;m=aa((c[d+64>>2]|0)*5793|0,b[f+32>>1]|0)|0;n=m+e|0;o=(aa(m,-2)|0)+e|0;e=aa((c[d+32>>2]|0)*10033|0,b[f+16>>1]|0)|0;m=e+n>>11;c[k>>2]=m;c[k+24>>2]=n-e>>11;e=k+12|0;c[e>>2]=o>>11;o=aa(c[d+4>>2]<<13,b[f+2>>1]|0)|0|1024;n=aa((c[d+68>>2]|0)*5793|0,b[f+34>>1]|0)|0;p=n+o|0;q=(aa(n,-2)|0)+o|0;o=aa((c[d+36>>2]|0)*10033|0,b[f+18>>1]|0)|0;n=o+p>>11;c[k+4>>2]=n;c[k+28>>2]=p-o>>11;o=q>>11;c[k+16>>2]=o;q=aa(c[d+8>>2]<<13,b[f+4>>1]|0)|0|1024;p=aa((c[d+72>>2]|0)*5793|0,b[f+36>>1]|0)|0;r=p+q|0;s=(aa(p,-2)|0)+q|0;q=aa((c[d+40>>2]|0)*10033|0,b[f+20>>1]|0)|0;f=q+r>>11;c[k+8>>2]=f;d=r-q>>11;c[k+32>>2]=d;q=s>>11;c[k+20>>2]=q;s=h+2|0;r=h+1|0;p=c[g>>2]|0;t=(m<<13)+131072|0;m=t+(f*5793|0)|0;u=(aa(f,-11586)|0)+t|0;t=n*10033|0;a[p+h|0]=a[l+(((m+t|0)>>>18&1023)+128)|0]|0;a[p+s|0]=a[l+(((m-t|0)>>>18&1023)+128)|0]|0;a[p+r|0]=a[l+((u>>>18&1023)+128)|0]|0;u=c[g+4>>2]|0;p=(c[e>>2]<<13)+131072|0;e=p+(q*5793|0)|0;t=(aa(q,-11586)|0)+p|0;p=o*10033|0;a[u+h|0]=a[l+(((e+p|0)>>>18&1023)+128)|0]|0;a[u+s|0]=a[l+(((e-p|0)>>>18&1023)+128)|0]|0;a[u+r|0]=a[l+((t>>>18&1023)+128)|0]|0;t=c[g+8>>2]|0;g=(c[k+24>>2]<<13)+131072|0;u=g+(d*5793|0)|0;p=(aa(d,-11586)|0)+g|0;g=(c[k+28>>2]|0)*10033|0;a[t+h|0]=a[l+(((u+g|0)>>>18&1023)+128)|0]|0;a[t+s|0]=a[l+(((u-g|0)>>>18&1023)+128)|0]|0;a[t+r|0]=a[l+((p>>>18&1023)+128)|0]|0;i=j;return}function oj(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0;i=c[d+336>>2]|0;d=c[e+84>>2]|0;e=aa(b[f>>1]|0,c[d>>2]|0)|0;j=aa(b[f+16>>1]|0,c[d+32>>2]|0)|0;k=e+4|0;e=j+k|0;l=k-j|0;j=aa(b[f+2>>1]|0,c[d+4>>2]|0)|0;k=aa(b[f+18>>1]|0,c[d+36>>2]|0)|0;d=k+j|0;f=j-k|0;k=c[g>>2]|0;a[k+h|0]=a[i+(((d+e|0)>>>3&1023)+128)|0]|0;j=h+1|0;a[k+j|0]=a[i+(((e-d|0)>>>3&1023)+128)|0]|0;d=c[g+4>>2]|0;a[d+h|0]=a[i+(((f+l|0)>>>3&1023)+128)|0]|0;a[d+j|0]=a[i+(((l-f|0)>>>3&1023)+128)|0]|0;return}function pj(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0;i=a[(c[d+336>>2]|0)+((((aa(b[f>>1]|0,c[c[e+84>>2]>>2]|0)|0)+4|0)>>>3&1023)+128)|0]|0;a[(c[g>>2]|0)+h|0]=i;return}function qj(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;j=i;i=i+288|0;k=j;l=c[d+336>>2]|0;d=0;m=f;f=c[e+84>>2]|0;e=k;while(1){n=aa(c[f>>2]<<13,b[m>>1]|0)|0|1024;o=aa(b[m+32>>1]|0,c[f+64>>2]|0)|0;p=aa(b[m+64>>1]|0,c[f+128>>2]|0)|0;q=aa((c[f+192>>2]|0)*5793|0,b[m+96>>1]|0)|0;r=q+n|0;s=n-q-q|0;q=o-p|0;n=s+(q*5793|0)|0;t=(aa(q,-11586)|0)+s|0;s=(p+o|0)*10887|0;q=o*8875|0;o=p*2012|0;p=s-o+r|0;u=r-s+q|0;s=r-q+o|0;o=aa(b[m+16>>1]|0,c[f+32>>2]|0)|0;q=aa(b[m+80>>1]|0,c[f+160>>2]|0)|0;r=aa(b[m+112>>1]|0,c[f+224>>2]|0)|0;v=aa(aa(c[f+96>>2]|0,-10033)|0,b[m+48>>1]|0)|0;w=(q+o|0)*7447|0;x=(r+o|0)*3962|0;y=w-v+x|0;z=(q-r|0)*11409|0;A=v-z+w|0;w=z+v+x|0;x=(o-q-r|0)*10033|0;c[e>>2]=y+p>>11;c[e+256>>2]=p-y>>11;c[e+32>>2]=x+n>>11;c[e+224>>2]=n-x>>11;c[e+64>>2]=A+u>>11;c[e+192>>2]=u-A>>11;c[e+96>>2]=w+s>>11;c[e+160>>2]=s-w>>11;c[e+128>>2]=t>>11;d=d+1|0;if((d|0)==8){break}else{m=m+2|0;f=f+4|0;e=e+4|0}}e=h+8|0;f=h+1|0;m=h+7|0;d=h+2|0;t=h+6|0;w=h+3|0;s=h+5|0;A=h+4|0;u=0;x=k;while(1){k=c[g+(u<<2)>>2]|0;n=(c[x>>2]<<13)+131072|0;y=c[x+8>>2]|0;p=c[x+16>>2]|0;r=(c[x+24>>2]|0)*5793|0;q=r+n|0;o=n-r-r|0;r=y-p|0;n=o+(r*5793|0)|0;v=(aa(r,-11586)|0)+o|0;o=(p+y|0)*10887|0;r=y*8875|0;y=p*2012|0;p=o-y+q|0;z=q-o+r|0;o=q-r+y|0;y=c[x+4>>2]|0;r=c[x+20>>2]|0;q=c[x+28>>2]|0;B=aa(c[x+12>>2]|0,-10033)|0;C=(r+y|0)*7447|0;D=(q+y|0)*3962|0;E=C-B+D|0;F=(r-q|0)*11409|0;G=B-F+C|0;C=F+B+D|0;D=(y-r-q|0)*10033|0;a[k+h|0]=a[l+(((E+p|0)>>>18&1023)+128)|0]|0;a[k+e|0]=a[l+(((p-E|0)>>>18&1023)+128)|0]|0;a[k+f|0]=a[l+(((D+n|0)>>>18&1023)+128)|0]|0;a[k+m|0]=a[l+(((n-D|0)>>>18&1023)+128)|0]|0;a[k+d|0]=a[l+(((G+z|0)>>>18&1023)+128)|0]|0;a[k+t|0]=a[l+(((z-G|0)>>>18&1023)+128)|0]|0;a[k+w|0]=a[l+(((C+o|0)>>>18&1023)+128)|0]|0;a[k+s|0]=a[l+(((o-C|0)>>>18&1023)+128)|0]|0;a[k+A|0]=a[l+((v>>>18&1023)+128)|0]|0;u=u+1|0;if((u|0)==9){break}else{x=x+32|0}}i=j;return}function rj(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;j=i;i=i+320|0;k=j;l=c[d+336>>2]|0;d=0;m=f;f=c[e+84>>2]|0;e=k;while(1){n=aa(c[f>>2]<<13,b[m>>1]|0)|0|1024;o=aa(b[m+64>>1]|0,c[f+128>>2]|0)|0;p=(o*9373|0)+n|0;q=(aa(o,-3580)|0)+n|0;r=(aa(o,-11586)|0)+n>>11;n=aa(b[m+32>>1]|0,c[f+64>>2]|0)|0;o=aa(b[m+96>>1]|0,c[f+192>>2]|0)|0;s=(o+n|0)*6810|0;t=s+(n*4209|0)|0;n=s+(aa(o,-17828)|0)|0;o=t+p|0;s=p-t|0;t=n+q|0;p=q-n|0;n=aa(b[m+16>>1]|0,c[f+32>>2]|0)|0;q=aa(b[m+48>>1]|0,c[f+96>>2]|0)|0;u=aa(b[m+80>>1]|0,c[f+160>>2]|0)|0;v=aa(b[m+112>>1]|0,c[f+224>>2]|0)|0;w=v+q|0;x=q-v|0;v=x*2531|0;q=u<<13;y=w*7791|0;z=v+q|0;A=y+(n*11443|0)+z|0;B=(n*1812|0)-y+z|0;z=w*4815|0;w=q-v-(x<<12)|0;v=n-u-x<<2;x=(n*10323|0)-z-w|0;u=w+((n*5260|0)-z)|0;c[e>>2]=A+o>>11;c[e+288>>2]=o-A>>11;c[e+32>>2]=x+t>>11;c[e+256>>2]=t-x>>11;c[e+64>>2]=v+r;c[e+224>>2]=r-v;c[e+96>>2]=u+p>>11;c[e+192>>2]=p-u>>11;c[e+128>>2]=B+s>>11;c[e+160>>2]=s-B>>11;d=d+1|0;if((d|0)==8){break}else{m=m+2|0;f=f+4|0;e=e+4|0}}e=h+9|0;f=h+1|0;m=h+8|0;d=h+2|0;B=h+7|0;s=h+3|0;u=h+6|0;p=h+4|0;v=h+5|0;r=0;x=k;while(1){k=c[g+(r<<2)>>2]|0;t=(c[x>>2]<<13)+131072|0;A=c[x+16>>2]|0;o=t+(A*9373|0)|0;z=t+(aa(A,-3580)|0)|0;n=t+(aa(A,-11586)|0)|0;A=c[x+8>>2]|0;t=c[x+24>>2]|0;w=(t+A|0)*6810|0;q=w+(A*4209|0)|0;A=w+(aa(t,-17828)|0)|0;t=q+o|0;w=o-q|0;q=A+z|0;o=z-A|0;A=c[x+4>>2]|0;z=c[x+12>>2]|0;y=c[x+20>>2]<<13;C=c[x+28>>2]|0;D=C+z|0;E=z-C|0;C=E*2531|0;z=D*7791|0;F=C+y|0;G=z+(A*11443|0)+F|0;H=(A*1812|0)-z+F|0;F=D*4815|0;D=y-C-(E<<12)|0;C=(A-E<<13)-y|0;y=(A*10323|0)-F-D|0;E=D+((A*5260|0)-F)|0;a[k+h|0]=a[l+(((G+t|0)>>>18&1023)+128)|0]|0;a[k+e|0]=a[l+(((t-G|0)>>>18&1023)+128)|0]|0;a[k+f|0]=a[l+(((y+q|0)>>>18&1023)+128)|0]|0;a[k+m|0]=a[l+(((q-y|0)>>>18&1023)+128)|0]|0;a[k+d|0]=a[l+(((C+n|0)>>>18&1023)+128)|0]|0;a[k+B|0]=a[l+(((n-C|0)>>>18&1023)+128)|0]|0;a[k+s|0]=a[l+(((E+o|0)>>>18&1023)+128)|0]|0;a[k+u|0]=a[l+(((o-E|0)>>>18&1023)+128)|0]|0;a[k+p|0]=a[l+(((H+w|0)>>>18&1023)+128)|0]|0;a[k+v|0]=a[l+(((w-H|0)>>>18&1023)+128)|0]|0;r=r+1|0;if((r|0)==10){break}else{x=x+32|0}}i=j;return}function sj(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;j=i;i=i+352|0;k=j;l=c[d+336>>2]|0;d=0;m=f;f=c[e+84>>2]|0;e=k;while(1){n=aa(c[f>>2]<<13,b[m>>1]|0)|0|1024;o=aa(b[m+32>>1]|0,c[f+64>>2]|0)|0;p=aa(b[m+64>>1]|0,c[f+128>>2]|0)|0;q=aa(b[m+96>>1]|0,c[f+192>>2]|0)|0;r=(p-q|0)*20862|0;s=(p-o|0)*3529|0;t=q+o|0;u=t-p|0;v=(u*11116|0)+n|0;w=s+(aa(p,-14924)|0)+r+v|0;x=r+(q*17333|0)+v|0;r=s+(aa(o,-12399)|0)+v|0;s=v+(aa(t,-9467)|0)|0;t=s+(aa(q,-6461)|0)|0;q=(p*15929|0)+(aa(o,-11395)|0)+s|0;s=(aa(u,-11585)|0)+n|0;n=aa(b[m+16>>1]|0,c[f+32>>2]|0)|0;u=aa(b[m+48>>1]|0,c[f+96>>2]|0)|0;o=aa(b[m+80>>1]|0,c[f+160>>2]|0)|0;p=aa(b[m+112>>1]|0,c[f+224>>2]|0)|0;v=u+n|0;y=(o+v+p|0)*3264|0;z=v*7274|0;v=(o+n|0)*5492|0;A=y+((p+n|0)*3e3|0)|0;B=z+(aa(n,-7562)|0)+v+A|0;n=y+(aa(o+u|0,-9527)|0)|0;C=v+(aa(o,-9766)|0)+n|0;v=aa(p+u|0,-14731)|0;D=z+(u*16984|0)+v+n|0;n=v+(p*17223|0)+A|0;A=(o*8203|0)+(aa(u,-12019)|0)+(aa(p,-13802)|0)+y|0;c[e>>2]=B+x>>11;c[e+320>>2]=x-B>>11;c[e+32>>2]=D+w>>11;c[e+288>>2]=w-D>>11;c[e+64>>2]=C+t>>11;c[e+256>>2]=t-C>>11;c[e+96>>2]=n+r>>11;c[e+224>>2]=r-n>>11;c[e+128>>2]=A+q>>11;c[e+192>>2]=q-A>>11;c[e+160>>2]=s>>11;d=d+1|0;if((d|0)==8){break}else{m=m+2|0;f=f+4|0;e=e+4|0}}e=h+10|0;f=h+1|0;m=h+9|0;d=h+2|0;s=h+8|0;A=h+3|0;q=h+7|0;n=h+4|0;r=h+6|0;C=h+5|0;t=0;D=k;while(1){k=c[g+(t<<2)>>2]|0;w=(c[D>>2]<<13)+131072|0;B=c[D+8>>2]|0;x=c[D+16>>2]|0;y=c[D+24>>2]|0;p=(x-y|0)*20862|0;u=(x-B|0)*3529|0;o=y+B|0;v=o-x|0;z=(v*11116|0)+w|0;E=u+(aa(x,-14924)|0)+p+z|0;F=p+(y*17333|0)+z|0;p=u+(aa(B,-12399)|0)+z|0;u=z+(aa(o,-9467)|0)|0;o=u+(aa(y,-6461)|0)|0;y=(x*15929|0)+(aa(B,-11395)|0)+u|0;u=(aa(v,-11585)|0)+w|0;w=c[D+4>>2]|0;v=c[D+12>>2]|0;B=c[D+20>>2]|0;x=c[D+28>>2]|0;z=v+w|0;G=(z+B+x|0)*3264|0;H=z*7274|0;z=(B+w|0)*5492|0;I=G+((x+w|0)*3e3|0)|0;J=H+(aa(w,-7562)|0)+z+I|0;w=G+(aa(B+v|0,-9527)|0)|0;K=z+(aa(B,-9766)|0)+w|0;z=aa(x+v|0,-14731)|0;L=H+(v*16984|0)+z+w|0;w=z+(x*17223|0)+I|0;I=(B*8203|0)+(aa(v,-12019)|0)+(aa(x,-13802)|0)+G|0;a[k+h|0]=a[l+(((J+F|0)>>>18&1023)+128)|0]|0;a[k+e|0]=a[l+(((F-J|0)>>>18&1023)+128)|0]|0;a[k+f|0]=a[l+(((L+E|0)>>>18&1023)+128)|0]|0;a[k+m|0]=a[l+(((E-L|0)>>>18&1023)+128)|0]|0;a[k+d|0]=a[l+(((K+o|0)>>>18&1023)+128)|0]|0;a[k+s|0]=a[l+(((o-K|0)>>>18&1023)+128)|0]|0;a[k+A|0]=a[l+(((w+p|0)>>>18&1023)+128)|0]|0;a[k+q|0]=a[l+(((p-w|0)>>>18&1023)+128)|0]|0;a[k+n|0]=a[l+(((I+y|0)>>>18&1023)+128)|0]|0;a[k+r|0]=a[l+(((y-I|0)>>>18&1023)+128)|0]|0;a[k+C|0]=a[l+((u>>>18&1023)+128)|0]|0;t=t+1|0;if((t|0)==11){break}else{D=D+32|0}}i=j;return}function tj(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;j=i;i=i+384|0;k=j;l=c[d+336>>2]|0;d=0;m=f;f=c[e+84>>2]|0;e=k;while(1){n=aa(c[f>>2]<<13,b[m>>1]|0)|0|1024;o=aa((c[f+128>>2]|0)*10033|0,b[m+64>>1]|0)|0;p=o+n|0;q=n-o|0;o=aa(b[m+32>>1]|0,c[f+64>>2]|0)|0;r=o*11190|0;s=o<<13;o=aa(c[f+192>>2]<<13,b[m+96>>1]|0)|0;t=s-o|0;u=t+n|0;v=n-t|0;t=o+r|0;n=t+p|0;w=p-t|0;t=r-s-o|0;o=t+q|0;s=q-t|0;t=aa(b[m+16>>1]|0,c[f+32>>2]|0)|0;q=aa(b[m+48>>1]|0,c[f+96>>2]|0)|0;r=aa(b[m+80>>1]|0,c[f+160>>2]|0)|0;p=aa(b[m+112>>1]|0,c[f+224>>2]|0)|0;x=q*10703|0;y=aa(q,-4433)|0;z=r+t|0;A=(p+z|0)*7053|0;B=A+(z*2139|0)|0;z=x+(t*2295|0)+B|0;C=aa(p+r|0,-8565)|0;D=(aa(r,-12112)|0)+y+C+B|0;B=(p*12998|0)-x+A+C|0;C=y+(aa(t,-5540)|0)+(aa(p,-16244)|0)+A|0;A=t-p|0;p=q-r|0;r=(A+p|0)*4433|0;q=r+(A*6270|0)|0;A=r+(aa(p,-15137)|0)|0;c[e>>2]=z+n>>11;c[e+352>>2]=n-z>>11;c[e+32>>2]=q+u>>11;c[e+320>>2]=u-q>>11;c[e+64>>2]=D+o>>11;c[e+288>>2]=o-D>>11;c[e+96>>2]=B+s>>11;c[e+256>>2]=s-B>>11;c[e+128>>2]=A+v>>11;c[e+224>>2]=v-A>>11;c[e+160>>2]=C+w>>11;c[e+192>>2]=w-C>>11;d=d+1|0;if((d|0)==8){break}else{m=m+2|0;f=f+4|0;e=e+4|0}}e=h+11|0;f=h+1|0;m=h+10|0;d=h+2|0;C=h+9|0;w=h+3|0;A=h+8|0;v=h+4|0;B=h+7|0;s=h+5|0;D=h+6|0;o=0;q=k;while(1){k=c[g+(o<<2)>>2]|0;u=(c[q>>2]<<13)+131072|0;z=(c[q+16>>2]|0)*10033|0;n=u+z|0;p=u-z|0;z=c[q+8>>2]|0;r=z*11190|0;t=z<<13;z=c[q+24>>2]<<13;y=t-z|0;x=y+u|0;E=u-y|0;y=z+r|0;u=y+n|0;F=n-y|0;y=r-t-z|0;z=y+p|0;t=p-y|0;y=c[q+4>>2]|0;p=c[q+12>>2]|0;r=c[q+20>>2]|0;n=c[q+28>>2]|0;G=p*10703|0;H=aa(p,-4433)|0;I=r+y|0;J=(I+n|0)*7053|0;K=J+(I*2139|0)|0;I=G+(y*2295|0)+K|0;L=aa(n+r|0,-8565)|0;M=(aa(r,-12112)|0)+H+L+K|0;K=(n*12998|0)-G+J+L|0;L=H+(aa(y,-5540)|0)+(aa(n,-16244)|0)+J|0;J=y-n|0;n=p-r|0;r=(J+n|0)*4433|0;p=r+(J*6270|0)|0;J=r+(aa(n,-15137)|0)|0;a[k+h|0]=a[l+(((I+u|0)>>>18&1023)+128)|0]|0;a[k+e|0]=a[l+(((u-I|0)>>>18&1023)+128)|0]|0;a[k+f|0]=a[l+(((p+x|0)>>>18&1023)+128)|0]|0;a[k+m|0]=a[l+(((x-p|0)>>>18&1023)+128)|0]|0;a[k+d|0]=a[l+(((M+z|0)>>>18&1023)+128)|0]|0;a[k+C|0]=a[l+(((z-M|0)>>>18&1023)+128)|0]|0;a[k+w|0]=a[l+(((K+t|0)>>>18&1023)+128)|0]|0;a[k+A|0]=a[l+(((t-K|0)>>>18&1023)+128)|0]|0;a[k+v|0]=a[l+(((J+E|0)>>>18&1023)+128)|0]|0;a[k+B|0]=a[l+(((E-J|0)>>>18&1023)+128)|0]|0;a[k+s|0]=a[l+(((L+F|0)>>>18&1023)+128)|0]|0;a[k+D|0]=a[l+(((F-L|0)>>>18&1023)+128)|0]|0;o=o+1|0;if((o|0)==12){break}else{q=q+32|0}}i=j;return}function uj(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;j=i;i=i+416|0;k=j;l=c[d+336>>2]|0;d=0;m=f;f=c[e+84>>2]|0;e=k;while(1){n=aa(c[f>>2]<<13,b[m>>1]|0)|0|1024;o=aa(b[m+32>>1]|0,c[f+64>>2]|0)|0;p=aa(b[m+64>>1]|0,c[f+128>>2]|0)|0;q=aa(b[m+96>>1]|0,c[f+192>>2]|0)|0;r=q+p|0;s=p-q|0;q=r*9465|0;p=(s*793|0)+n|0;t=q+(o*11249|0)+p|0;u=(o*4108|0)-q+p|0;p=r*2592|0;q=(s*3989|0)+n|0;v=(o*8672|0)-p+q|0;w=p+(aa(o,-10258)|0)+q|0;q=r*3570|0;r=n+(aa(s,-7678)|0)|0;p=(aa(o,-1396)|0)-q+r|0;x=q+(aa(o,-6581)|0)+r|0;r=aa(b[m+16>>1]|0,c[f+32>>2]|0)|0;q=aa(b[m+48>>1]|0,c[f+96>>2]|0)|0;y=aa(b[m+80>>1]|0,c[f+160>>2]|0)|0;z=aa(b[m+112>>1]|0,c[f+224>>2]|0)|0;A=(q+r|0)*10832|0;B=(y+r|0)*9534|0;C=z+r|0;D=C*7682|0;E=A+(aa(r,-16549)|0)+B+D|0;F=aa(y+q|0,-2773)|0;G=aa(z+q|0,-9534)|0;H=A+(q*6859|0)+F+G|0;A=aa(z+y|0,-5384)|0;I=F+(aa(y,-12879)|0)+B+A|0;B=G+(z*18068|0)+D+A|0;A=C*2773|0;C=(y-q|0)*7682|0;D=(aa(q,-3818)|0)+(r*2611|0)+C+A|0;r=C+(y*3150|0)+(aa(z,-14273)|0)+A|0;c[e>>2]=E+t>>11;c[e+384>>2]=t-E>>11;c[e+32>>2]=H+v>>11;c[e+352>>2]=v-H>>11;c[e+64>>2]=I+u>>11;c[e+320>>2]=u-I>>11;c[e+96>>2]=B+p>>11;c[e+288>>2]=p-B>>11;c[e+128>>2]=D+x>>11;c[e+256>>2]=x-D>>11;c[e+160>>2]=r+w>>11;c[e+224>>2]=w-r>>11;c[e+192>>2]=((s-o|0)*11585|0)+n>>11;d=d+1|0;if((d|0)==8){break}else{m=m+2|0;f=f+4|0;e=e+4|0}}e=h+12|0;f=h+1|0;m=h+11|0;d=h+2|0;n=h+10|0;o=h+3|0;s=h+9|0;r=h+4|0;w=h+8|0;D=h+5|0;x=h+7|0;B=h+6|0;p=0;I=k;while(1){k=c[g+(p<<2)>>2]|0;u=(c[I>>2]<<13)+131072|0;H=c[I+8>>2]|0;v=c[I+16>>2]|0;E=c[I+24>>2]|0;t=E+v|0;A=v-E|0;E=t*9465|0;v=(A*793|0)+u|0;z=E+(H*11249|0)+v|0;y=(H*4108|0)-E+v|0;v=t*2592|0;E=(A*3989|0)+u|0;C=(H*8672|0)-v+E|0;q=v+(aa(H,-10258)|0)+E|0;E=t*3570|0;t=u+(aa(A,-7678)|0)|0;v=(aa(H,-1396)|0)-E+t|0;G=E+(aa(H,-6581)|0)+t|0;t=c[I+4>>2]|0;E=c[I+12>>2]|0;F=c[I+20>>2]|0;J=c[I+28>>2]|0;K=(E+t|0)*10832|0;L=(F+t|0)*9534|0;M=J+t|0;N=M*7682|0;O=K+(aa(t,-16549)|0)+L+N|0;P=aa(F+E|0,-2773)|0;Q=aa(J+E|0,-9534)|0;R=K+(E*6859|0)+P+Q|0;K=aa(J+F|0,-5384)|0;S=P+(aa(F,-12879)|0)+L+K|0;L=Q+(J*18068|0)+N+K|0;K=M*2773|0;M=(F-E|0)*7682|0;N=(aa(E,-3818)|0)+(t*2611|0)+M+K|0;t=M+(F*3150|0)+(aa(J,-14273)|0)+K|0;a[k+h|0]=a[l+(((O+z|0)>>>18&1023)+128)|0]|0;a[k+e|0]=a[l+(((z-O|0)>>>18&1023)+128)|0]|0;a[k+f|0]=a[l+(((R+C|0)>>>18&1023)+128)|0]|0;a[k+m|0]=a[l+(((C-R|0)>>>18&1023)+128)|0]|0;a[k+d|0]=a[l+(((S+y|0)>>>18&1023)+128)|0]|0;a[k+n|0]=a[l+(((y-S|0)>>>18&1023)+128)|0]|0;a[k+o|0]=a[l+(((L+v|0)>>>18&1023)+128)|0]|0;a[k+s|0]=a[l+(((v-L|0)>>>18&1023)+128)|0]|0;a[k+r|0]=a[l+(((N+G|0)>>>18&1023)+128)|0]|0;a[k+w|0]=a[l+(((G-N|0)>>>18&1023)+128)|0]|0;a[k+D|0]=a[l+(((t+q|0)>>>18&1023)+128)|0]|0;a[k+x|0]=a[l+(((q-t|0)>>>18&1023)+128)|0]|0;a[k+B|0]=a[l+(((((A-H|0)*11585|0)+u|0)>>>18&1023)+128)|0]|0;p=p+1|0;if((p|0)==13){break}else{I=I+32|0}}i=j;return}function vj(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;j=i;i=i+448|0;k=j;l=c[d+336>>2]|0;d=0;m=f;f=c[e+84>>2]|0;e=k;while(1){n=aa(c[f>>2]<<13,b[m>>1]|0)|0|1024;o=aa(b[m+64>>1]|0,c[f+128>>2]|0)|0;p=(o*10438|0)+n|0;q=(o*2578|0)+n|0;r=(aa(o,-7223)|0)+n|0;s=(aa(o,-11586)|0)+n>>11;n=aa(b[m+32>>1]|0,c[f+64>>2]|0)|0;o=aa(b[m+96>>1]|0,c[f+192>>2]|0)|0;t=(o+n|0)*9058|0;u=t+(n*2237|0)|0;v=t+(aa(o,-14084)|0)|0;t=(aa(o,-11295)|0)+(n*5027|0)|0;n=u+p|0;o=p-u|0;u=v+q|0;p=q-v|0;v=t+r|0;q=r-t|0;t=aa(b[m+16>>1]|0,c[f+32>>2]|0)|0;r=aa(b[m+48>>1]|0,c[f+96>>2]|0)|0;w=aa(b[m+80>>1]|0,c[f+160>>2]|0)|0;x=aa(b[m+112>>1]|0,c[f+224>>2]|0)|0;y=x<<13;z=w+t|0;A=(r+t|0)*10935|0;B=z*9810|0;C=A+(aa(t,-9232)|0)+B+y|0;D=z*6164|0;z=t-r|0;E=(z*3826|0)-y|0;F=D+(aa(t,-8693)|0)+E|0;t=(aa(w+r|0,-1297)|0)-y|0;G=A+(aa(r,-3474)|0)+t|0;A=B+(aa(w,-19447)|0)+t|0;t=(w-r|0)*11512|0;B=t+(aa(w,-13850)|0)+D+y|0;y=t+(r*5529|0)+E|0;E=z-w+x<<2;c[e>>2]=C+n>>11;c[e+416>>2]=n-C>>11;c[e+32>>2]=G+u>>11;c[e+384>>2]=u-G>>11;c[e+64>>2]=A+v>>11;c[e+352>>2]=v-A>>11;c[e+96>>2]=E+s;c[e+320>>2]=s-E;c[e+128>>2]=B+q>>11;c[e+288>>2]=q-B>>11;c[e+160>>2]=y+p>>11;c[e+256>>2]=p-y>>11;c[e+192>>2]=F+o>>11;c[e+224>>2]=o-F>>11;d=d+1|0;if((d|0)==8){break}else{m=m+2|0;f=f+4|0;e=e+4|0}}e=h+13|0;f=h+1|0;m=h+12|0;d=h+2|0;F=h+11|0;o=h+3|0;y=h+10|0;p=h+4|0;B=h+9|0;q=h+5|0;E=h+8|0;s=h+6|0;A=h+7|0;v=0;G=k;while(1){k=c[g+(v<<2)>>2]|0;u=(c[G>>2]<<13)+131072|0;C=c[G+16>>2]|0;n=u+(C*10438|0)|0;x=u+(C*2578|0)|0;w=u+(aa(C,-7223)|0)|0;z=u+(aa(C,-11586)|0)|0;C=c[G+8>>2]|0;u=c[G+24>>2]|0;r=(u+C|0)*9058|0;t=r+(C*2237|0)|0;D=r+(aa(u,-14084)|0)|0;r=(aa(u,-11295)|0)+(C*5027|0)|0;C=t+n|0;u=n-t|0;t=D+x|0;n=x-D|0;D=r+w|0;x=w-r|0;r=c[G+4>>2]|0;w=c[G+12>>2]|0;H=c[G+20>>2]|0;I=c[G+28>>2]<<13;J=H+r|0;K=(w+r|0)*10935|0;L=J*9810|0;M=K+(aa(r,-9232)|0)+L+I|0;N=J*6164|0;J=r-w|0;O=(J*3826|0)-I|0;P=N+(aa(r,-8693)|0)+O|0;r=(aa(H+w|0,-1297)|0)-I|0;Q=K+(aa(w,-3474)|0)+r|0;K=L+(aa(H,-19447)|0)+r|0;r=(H-w|0)*11512|0;L=I+(aa(H,-13850)|0)+r+N|0;N=r+(w*5529|0)+O|0;O=(J-H<<13)+I|0;a[k+h|0]=a[l+(((M+C|0)>>>18&1023)+128)|0]|0;a[k+e|0]=a[l+(((C-M|0)>>>18&1023)+128)|0]|0;a[k+f|0]=a[l+(((Q+t|0)>>>18&1023)+128)|0]|0;a[k+m|0]=a[l+(((t-Q|0)>>>18&1023)+128)|0]|0;a[k+d|0]=a[l+(((K+D|0)>>>18&1023)+128)|0]|0;a[k+F|0]=a[l+(((D-K|0)>>>18&1023)+128)|0]|0;a[k+o|0]=a[l+(((O+z|0)>>>18&1023)+128)|0]|0;a[k+y|0]=a[l+(((z-O|0)>>>18&1023)+128)|0]|0;a[k+p|0]=a[l+(((L+x|0)>>>18&1023)+128)|0]|0;a[k+B|0]=a[l+(((x-L|0)>>>18&1023)+128)|0]|0;a[k+q|0]=a[l+(((N+n|0)>>>18&1023)+128)|0]|0;a[k+E|0]=a[l+(((n-N|0)>>>18&1023)+128)|0]|0;a[k+s|0]=a[l+(((P+u|0)>>>18&1023)+128)|0]|0;a[k+A|0]=a[l+(((u-P|0)>>>18&1023)+128)|0]|0;v=v+1|0;if((v|0)==14){break}else{G=G+32|0}}i=j;return}function wj(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;j=i;i=i+480|0;k=j;l=c[d+336>>2]|0;d=0;m=f;f=c[e+84>>2]|0;e=k;while(1){n=aa(c[f>>2]<<13,b[m>>1]|0)|0|1024;o=aa(b[m+32>>1]|0,c[f+64>>2]|0)|0;p=aa(b[m+64>>1]|0,c[f+128>>2]|0)|0;q=aa(b[m+96>>1]|0,c[f+192>>2]|0)|0;r=(aa(q,-3580)|0)+n|0;s=(q*9373|0)+n|0;t=(aa(q,-11586)|0)+n|0;n=o-p|0;q=p+o|0;p=q*10958|0;u=n*374|0;v=o*11795|0;o=u+p+s|0;w=v-p+u+r|0;u=q*4482|0;p=aa(n,-3271)|0;x=s-u+p|0;y=u-v+p+r|0;p=q*6476|0;q=n*2896|0;v=q+p+r|0;r=s-p+q|0;q=t+(n*5792|0)|0;p=(aa(n,-11584)|0)+t|0;t=aa(b[m+16>>1]|0,c[f+32>>2]|0)|0;n=aa(b[m+48>>1]|0,c[f+96>>2]|0)|0;s=aa((c[f+160>>2]|0)*10033|0,b[m+80>>1]|0)|0;u=aa(b[m+112>>1]|0,c[f+224>>2]|0)|0;z=n-u|0;A=(z+t|0)*6810|0;B=A+(t*4209|0)|0;C=A+(aa(z,-17828)|0)|0;z=aa(n,-6810)|0;A=aa(n,-11018)|0;n=t-u|0;D=(n*11522|0)+s|0;E=(u*20131|0)-A+D|0;F=z+(aa(t,-9113)|0)+D|0;D=(n*10033|0)-s|0;n=(u+t|0)*4712|0;G=z+(t*3897|0)-s+n|0;t=s+A+(aa(u,-7121)|0)+n|0;c[e>>2]=E+o>>11;c[e+448>>2]=o-E>>11;c[e+32>>2]=B+v>>11;c[e+416>>2]=v-B>>11;c[e+64>>2]=D+q>>11;c[e+384>>2]=q-D>>11;c[e+96>>2]=G+w>>11;c[e+352>>2]=w-G>>11;c[e+128>>2]=C+r>>11;c[e+320>>2]=r-C>>11;c[e+160>>2]=t+x>>11;c[e+288>>2]=x-t>>11;c[e+192>>2]=F+y>>11;c[e+256>>2]=y-F>>11;c[e+224>>2]=p>>11;d=d+1|0;if((d|0)==8){break}else{m=m+2|0;f=f+4|0;e=e+4|0}}e=h+14|0;f=h+1|0;m=h+13|0;d=h+2|0;p=h+12|0;F=h+3|0;y=h+11|0;t=h+4|0;x=h+10|0;C=h+5|0;r=h+9|0;G=h+6|0;w=h+8|0;D=h+7|0;q=0;B=k;while(1){k=c[g+(q<<2)>>2]|0;v=(c[B>>2]<<13)+131072|0;E=c[B+8>>2]|0;o=c[B+16>>2]|0;n=c[B+24>>2]|0;u=(aa(n,-3580)|0)+v|0;A=(n*9373|0)+v|0;s=(aa(n,-11586)|0)+v|0;v=E-o|0;n=o+E|0;o=n*10958|0;z=v*374|0;H=E*11795|0;E=z+o+A|0;I=H-o+z+u|0;z=n*4482|0;o=aa(v,-3271)|0;J=A-z+o|0;K=z-H+o+u|0;o=n*6476|0;n=v*2896|0;H=n+o+u|0;u=A-o+n|0;n=s+(v*5792|0)|0;o=(aa(v,-11584)|0)+s|0;s=c[B+4>>2]|0;v=c[B+12>>2]|0;A=(c[B+20>>2]|0)*10033|0;z=c[B+28>>2]|0;L=v-z|0;M=(L+s|0)*6810|0;N=M+(s*4209|0)|0;O=M+(aa(L,-17828)|0)|0;L=aa(v,-6810)|0;M=aa(v,-11018)|0;v=s-z|0;P=(v*11522|0)+A|0;Q=(z*20131|0)-M+P|0;R=L+(aa(s,-9113)|0)+P|0;P=(v*10033|0)-A|0;v=(z+s|0)*4712|0;S=L+(s*3897|0)-A+v|0;s=A+M+(aa(z,-7121)|0)+v|0;a[k+h|0]=a[l+(((Q+E|0)>>>18&1023)+128)|0]|0;a[k+e|0]=a[l+(((E-Q|0)>>>18&1023)+128)|0]|0;a[k+f|0]=a[l+(((N+H|0)>>>18&1023)+128)|0]|0;a[k+m|0]=a[l+(((H-N|0)>>>18&1023)+128)|0]|0;a[k+d|0]=a[l+(((P+n|0)>>>18&1023)+128)|0]|0;a[k+p|0]=a[l+(((n-P|0)>>>18&1023)+128)|0]|0;a[k+F|0]=a[l+(((S+I|0)>>>18&1023)+128)|0]|0;a[k+y|0]=a[l+(((I-S|0)>>>18&1023)+128)|0]|0;a[k+t|0]=a[l+(((O+u|0)>>>18&1023)+128)|0]|0;a[k+x|0]=a[l+(((u-O|0)>>>18&1023)+128)|0]|0;a[k+C|0]=a[l+(((s+J|0)>>>18&1023)+128)|0]|0;a[k+r|0]=a[l+(((J-s|0)>>>18&1023)+128)|0]|0;a[k+G|0]=a[l+(((R+K|0)>>>18&1023)+128)|0]|0;a[k+w|0]=a[l+(((K-R|0)>>>18&1023)+128)|0]|0;a[k+D|0]=a[l+((o>>>18&1023)+128)|0]|0;q=q+1|0;if((q|0)==15){break}else{B=B+32|0}}i=j;return}function xj(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;j=i;i=i+512|0;k=j;l=c[d+336>>2]|0;d=0;m=f;f=c[e+84>>2]|0;e=k;while(1){n=aa(c[f>>2]<<13,b[m>>1]|0)|0|1024;o=aa(b[m+64>>1]|0,c[f+128>>2]|0)|0;p=o*10703|0;q=o*4433|0;o=p+n|0;r=n-p|0;p=q+n|0;s=n-q|0;q=aa(b[m+32>>1]|0,c[f+64>>2]|0)|0;n=aa(b[m+96>>1]|0,c[f+192>>2]|0)|0;t=q-n|0;u=t*2260|0;v=t*11363|0;t=v+(n*20995|0)|0;w=u+(q*7373|0)|0;x=v+(aa(q,-4926)|0)|0;q=u+(aa(n,-4176)|0)|0;n=t+o|0;u=o-t|0;t=w+p|0;o=p-w|0;w=x+s|0;p=s-x|0;x=q+r|0;s=r-q|0;q=aa(b[m+16>>1]|0,c[f+32>>2]|0)|0;r=aa(b[m+48>>1]|0,c[f+96>>2]|0)|0;v=aa(b[m+80>>1]|0,c[f+160>>2]|0)|0;y=aa(b[m+112>>1]|0,c[f+224>>2]|0)|0;z=v+q|0;A=(r+q|0)*11086|0;B=z*10217|0;C=(y+q|0)*8956|0;D=(q-y|0)*7350|0;E=z*5461|0;z=(q-r|0)*3363|0;F=A+(aa(q,-18730)|0)+B+C|0;G=z+(aa(q,-15038)|0)+E+D|0;q=(v+r|0)*1136|0;H=(v-r|0)*11529|0;I=y+r|0;J=aa(I,-5461)|0;K=A+(r*589|0)+q+J|0;A=aa(I,-10217)|0;I=z+(r*16154|0)+H+A|0;r=aa(y+v|0,-11086)|0;z=q+(aa(v,-9222)|0)+B+r|0;B=J+(y*8728|0)+C+r|0;r=(y-v|0)*3363|0;C=A+(y*25733|0)+D+r|0;D=H+(aa(v,-6278)|0)+E+r|0;c[e>>2]=F+n>>11;c[e+480>>2]=n-F>>11;c[e+32>>2]=K+t>>11;c[e+448>>2]=t-K>>11;c[e+64>>2]=z+w>>11;c[e+416>>2]=w-z>>11;c[e+96>>2]=B+x>>11;c[e+384>>2]=x-B>>11;c[e+128>>2]=C+s>>11;c[e+352>>2]=s-C>>11;c[e+160>>2]=D+p>>11;c[e+320>>2]=p-D>>11;c[e+192>>2]=I+o>>11;c[e+288>>2]=o-I>>11;c[e+224>>2]=G+u>>11;c[e+256>>2]=u-G>>11;d=d+1|0;if((d|0)==8){break}else{m=m+2|0;f=f+4|0;e=e+4|0}}e=h+15|0;f=h+1|0;m=h+14|0;d=h+2|0;G=h+13|0;u=h+3|0;I=h+12|0;o=h+4|0;D=h+11|0;p=h+5|0;C=h+10|0;s=h+6|0;B=h+9|0;x=h+7|0;z=h+8|0;w=0;K=k;while(1){k=c[g+(w<<2)>>2]|0;t=(c[K>>2]<<13)+131072|0;F=c[K+16>>2]|0;n=F*10703|0;r=F*4433|0;F=t+n|0;E=t-n|0;n=t+r|0;v=t-r|0;r=c[K+8>>2]|0;t=c[K+24>>2]|0;H=r-t|0;y=H*2260|0;A=H*11363|0;H=A+(t*20995|0)|0;J=y+(r*7373|0)|0;q=A+(aa(r,-4926)|0)|0;r=y+(aa(t,-4176)|0)|0;t=H+F|0;y=F-H|0;H=J+n|0;F=n-J|0;J=q+v|0;n=v-q|0;q=r+E|0;v=E-r|0;r=c[K+4>>2]|0;E=c[K+12>>2]|0;A=c[K+20>>2]|0;L=c[K+28>>2]|0;M=A+r|0;N=(E+r|0)*11086|0;O=M*10217|0;P=(L+r|0)*8956|0;Q=(r-L|0)*7350|0;R=M*5461|0;M=(r-E|0)*3363|0;S=N+(aa(r,-18730)|0)+O+P|0;T=M+(aa(r,-15038)|0)+R+Q|0;r=(A+E|0)*1136|0;U=(A-E|0)*11529|0;V=L+E|0;W=aa(V,-5461)|0;X=N+(E*589|0)+r+W|0;N=aa(V,-10217)|0;V=M+(E*16154|0)+U+N|0;E=aa(L+A|0,-11086)|0;M=r+(aa(A,-9222)|0)+O+E|0;O=W+(L*8728|0)+P+E|0;E=(L-A|0)*3363|0;P=N+(L*25733|0)+Q+E|0;Q=U+(aa(A,-6278)|0)+R+E|0;a[k+h|0]=a[l+(((S+t|0)>>>18&1023)+128)|0]|0;a[k+e|0]=a[l+(((t-S|0)>>>18&1023)+128)|0]|0;a[k+f|0]=a[l+(((X+H|0)>>>18&1023)+128)|0]|0;a[k+m|0]=a[l+(((H-X|0)>>>18&1023)+128)|0]|0;a[k+d|0]=a[l+(((M+J|0)>>>18&1023)+128)|0]|0;a[k+G|0]=a[l+(((J-M|0)>>>18&1023)+128)|0]|0;a[k+u|0]=a[l+(((O+q|0)>>>18&1023)+128)|0]|0;a[k+I|0]=a[l+(((q-O|0)>>>18&1023)+128)|0]|0;a[k+o|0]=a[l+(((P+v|0)>>>18&1023)+128)|0]|0;a[k+D|0]=a[l+(((v-P|0)>>>18&1023)+128)|0]|0;a[k+p|0]=a[l+(((Q+n|0)>>>18&1023)+128)|0]|0;a[k+C|0]=a[l+(((n-Q|0)>>>18&1023)+128)|0]|0;a[k+s|0]=a[l+(((V+F|0)>>>18&1023)+128)|0]|0;a[k+B|0]=a[l+(((F-V|0)>>>18&1023)+128)|0]|0;a[k+x|0]=a[l+(((T+y|0)>>>18&1023)+128)|0]|0;a[k+z|0]=a[l+(((y-T|0)>>>18&1023)+128)|0]|0;w=w+1|0;if((w|0)==16){break}else{K=K+32|0}}i=j;return}function yj(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;j=i;i=i+256|0;k=j;l=c[d+336>>2]|0;d=8;m=f;f=c[e+84>>2]|0;e=k;while(1){n=b[m+16>>1]|0;o=b[m+32>>1]|0;if((n|o)<<16>>16==0){if(((((b[m+48>>1]|0)==0?(b[m+64>>1]|0)==0:0)?(b[m+80>>1]|0)==0:0)?(b[m+96>>1]|0)==0:0)?(b[m+112>>1]|0)==0:0){p=aa(c[f>>2]<<2,b[m>>1]|0)|0;c[e>>2]=p;c[e+32>>2]=p;c[e+64>>2]=p;c[e+96>>2]=p;c[e+128>>2]=p;c[e+160>>2]=p;c[e+192>>2]=p;c[e+224>>2]=p}else{q=0;r=10}}else{q=o;r=10}if((r|0)==10){r=0;o=aa(q<<16>>16,c[f+64>>2]|0)|0;p=aa(b[m+96>>1]|0,c[f+192>>2]|0)|0;s=(p+o|0)*4433|0;t=s+(o*6270|0)|0;o=s+(aa(p,-15137)|0)|0;p=aa(c[f+128>>2]<<13,b[m+64>>1]|0)|0;s=aa(c[f>>2]<<13,b[m>>1]|0)|0|1024;u=p+s|0;v=s-p|0;p=u+t|0;s=u-t|0;t=v+o|0;u=v-o|0;o=aa(b[m+112>>1]|0,c[f+224>>2]|0)|0;v=aa(b[m+80>>1]|0,c[f+160>>2]|0)|0;w=aa(b[m+48>>1]|0,c[f+96>>2]|0)|0;x=aa(n<<16>>16,c[f+32>>2]|0)|0;n=w+o|0;y=x+v|0;z=(y+n|0)*9633|0;A=z+(aa(n,-16069)|0)|0;n=z+(aa(y,-3196)|0)|0;y=aa(x+o|0,-7373)|0;z=y+(o*2446|0)+A|0;o=y+(x*12299|0)+n|0;x=aa(w+v|0,-20995)|0;y=x+(v*16819|0)+n|0;n=x+(w*25172|0)+A|0;c[e>>2]=o+p>>11;c[e+224>>2]=p-o>>11;c[e+32>>2]=n+t>>11;c[e+192>>2]=t-n>>11;c[e+64>>2]=y+u>>11;c[e+160>>2]=u-y>>11;c[e+96>>2]=z+s>>11;c[e+128>>2]=s-z>>11}d=d+ -1|0;if((d|0)<=0){break}else{m=m+2|0;f=f+4|0;e=e+4|0}}e=h+15|0;f=h+1|0;m=h+14|0;d=h+2|0;q=h+13|0;r=h+3|0;z=h+12|0;s=h+4|0;y=h+11|0;u=h+5|0;n=h+10|0;t=h+6|0;o=h+9|0;p=h+7|0;A=h+8|0;w=0;x=k;while(1){k=c[g+(w<<2)>>2]|0;v=(c[x>>2]<<13)+131072|0;B=c[x+16>>2]|0;C=B*10703|0;D=B*4433|0;B=v+C|0;E=v-C|0;C=v+D|0;F=v-D|0;D=c[x+8>>2]|0;v=c[x+24>>2]|0;G=D-v|0;H=G*2260|0;I=G*11363|0;G=I+(v*20995|0)|0;J=H+(D*7373|0)|0;K=I+(aa(D,-4926)|0)|0;D=H+(aa(v,-4176)|0)|0;v=G+B|0;H=B-G|0;G=J+C|0;B=C-J|0;J=K+F|0;C=F-K|0;K=D+E|0;F=E-D|0;D=c[x+4>>2]|0;E=c[x+12>>2]|0;I=c[x+20>>2]|0;L=c[x+28>>2]|0;M=I+D|0;N=(E+D|0)*11086|0;O=M*10217|0;P=(L+D|0)*8956|0;Q=(D-L|0)*7350|0;R=M*5461|0;M=(D-E|0)*3363|0;S=N+(aa(D,-18730)|0)+O+P|0;T=M+(aa(D,-15038)|0)+R+Q|0;D=(I+E|0)*1136|0;U=(I-E|0)*11529|0;V=L+E|0;W=aa(V,-5461)|0;X=N+(E*589|0)+D+W|0;N=aa(V,-10217)|0;V=M+(E*16154|0)+U+N|0;E=aa(L+I|0,-11086)|0;M=D+(aa(I,-9222)|0)+O+E|0;O=W+(L*8728|0)+P+E|0;E=(L-I|0)*3363|0;P=N+(L*25733|0)+Q+E|0;Q=U+(aa(I,-6278)|0)+R+E|0;a[k+h|0]=a[l+(((S+v|0)>>>18&1023)+128)|0]|0;a[k+e|0]=a[l+(((v-S|0)>>>18&1023)+128)|0]|0;a[k+f|0]=a[l+(((X+G|0)>>>18&1023)+128)|0]|0;a[k+m|0]=a[l+(((G-X|0)>>>18&1023)+128)|0]|0;a[k+d|0]=a[l+(((M+J|0)>>>18&1023)+128)|0]|0;a[k+q|0]=a[l+(((J-M|0)>>>18&1023)+128)|0]|0;a[k+r|0]=a[l+(((O+K|0)>>>18&1023)+128)|0]|0;a[k+z|0]=a[l+(((K-O|0)>>>18&1023)+128)|0]|0;a[k+s|0]=a[l+(((P+F|0)>>>18&1023)+128)|0]|0;a[k+y|0]=a[l+(((F-P|0)>>>18&1023)+128)|0]|0;a[k+u|0]=a[l+(((Q+C|0)>>>18&1023)+128)|0]|0;a[k+n|0]=a[l+(((C-Q|0)>>>18&1023)+128)|0]|0;a[k+t|0]=a[l+(((V+B|0)>>>18&1023)+128)|0]|0;a[k+o|0]=a[l+(((B-V|0)>>>18&1023)+128)|0]|0;a[k+p|0]=a[l+(((T+H|0)>>>18&1023)+128)|0]|0;a[k+A|0]=a[l+(((H-T|0)>>>18&1023)+128)|0]|0;w=w+1|0;if((w|0)==8){break}else{x=x+32|0}}i=j;return}function zj(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;j=i;i=i+224|0;k=j;l=c[d+336>>2]|0;d=0;m=f;f=c[e+84>>2]|0;e=k;while(1){n=aa(c[f>>2]<<13,b[m>>1]|0)|0|1024;o=aa(b[m+32>>1]|0,c[f+64>>2]|0)|0;p=aa(b[m+64>>1]|0,c[f+128>>2]|0)|0;q=aa(b[m+96>>1]|0,c[f+192>>2]|0)|0;r=(p-q|0)*7223|0;s=(o-p|0)*2578|0;t=(aa(p,-15083)|0)+n+s+r|0;u=q+o|0;v=(u*10438|0)+n|0;w=r+(aa(q,-637)|0)+v|0;q=s+(aa(o,-20239)|0)+v|0;v=aa(b[m+16>>1]|0,c[f+32>>2]|0)|0;o=aa(b[m+48>>1]|0,c[f+96>>2]|0)|0;s=aa(b[m+80>>1]|0,c[f+160>>2]|0)|0;r=(o+v|0)*7663|0;x=(v-o|0)*1395|0;y=aa(s+o|0,-11295)|0;o=r+x+y|0;z=(s+v|0)*5027|0;v=z+(r-x)|0;x=z+(s*15326|0)+y|0;c[e>>2]=v+w>>11;c[e+192>>2]=w-v>>11;c[e+32>>2]=o+t>>11;c[e+160>>2]=t-o>>11;c[e+64>>2]=x+q>>11;c[e+128>>2]=q-x>>11;c[e+96>>2]=((p-u|0)*11585|0)+n>>11;d=d+1|0;if((d|0)==8){break}else{m=m+2|0;f=f+4|0;e=e+4|0}}e=h+13|0;f=h+1|0;m=h+12|0;d=h+2|0;n=h+11|0;u=h+3|0;p=h+10|0;x=h+4|0;q=h+9|0;o=h+5|0;t=h+8|0;v=h+6|0;w=h+7|0;y=0;s=k;while(1){k=c[g+(y<<2)>>2]|0;z=(c[s>>2]<<13)+131072|0;r=c[s+16>>2]|0;A=z+(r*10438|0)|0;B=z+(r*2578|0)|0;C=z+(aa(r,-7223)|0)|0;D=z+(aa(r,-11586)|0)|0;r=c[s+8>>2]|0;z=c[s+24>>2]|0;E=(z+r|0)*9058|0;F=E+(r*2237|0)|0;G=E+(aa(z,-14084)|0)|0;E=(aa(z,-11295)|0)+(r*5027|0)|0;r=F+A|0;z=A-F|0;F=G+B|0;A=B-G|0;G=E+C|0;B=C-E|0;E=c[s+4>>2]|0;C=c[s+12>>2]|0;H=c[s+20>>2]|0;I=c[s+28>>2]<<13;J=H+E|0;K=(C+E|0)*10935|0;L=J*9810|0;M=K+(aa(E,-9232)|0)+L+I|0;N=J*6164|0;J=E-C|0;O=(J*3826|0)-I|0;P=N+(aa(E,-8693)|0)+O|0;E=(aa(H+C|0,-1297)|0)-I|0;Q=K+(aa(C,-3474)|0)+E|0;K=L+(aa(H,-19447)|0)+E|0;E=(H-C|0)*11512|0;L=I+(aa(H,-13850)|0)+E+N|0;N=E+(C*5529|0)+O|0;O=(J-H<<13)+I|0;a[k+h|0]=a[l+(((M+r|0)>>>18&1023)+128)|0]|0;a[k+e|0]=a[l+(((r-M|0)>>>18&1023)+128)|0]|0;a[k+f|0]=a[l+(((Q+F|0)>>>18&1023)+128)|0]|0;a[k+m|0]=a[l+(((F-Q|0)>>>18&1023)+128)|0]|0;a[k+d|0]=a[l+(((K+G|0)>>>18&1023)+128)|0]|0;a[k+n|0]=a[l+(((G-K|0)>>>18&1023)+128)|0]|0;a[k+u|0]=a[l+(((O+D|0)>>>18&1023)+128)|0]|0;a[k+p|0]=a[l+(((D-O|0)>>>18&1023)+128)|0]|0;a[k+x|0]=a[l+(((L+B|0)>>>18&1023)+128)|0]|0;a[k+q|0]=a[l+(((B-L|0)>>>18&1023)+128)|0]|0;a[k+o|0]=a[l+(((N+A|0)>>>18&1023)+128)|0]|0;a[k+t|0]=a[l+(((A-N|0)>>>18&1023)+128)|0]|0;a[k+v|0]=a[l+(((P+z|0)>>>18&1023)+128)|0]|0;a[k+w|0]=a[l+(((z-P|0)>>>18&1023)+128)|0]|0;y=y+1|0;if((y|0)==7){break}else{s=s+32|0}}i=j;return}



function Aj(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;j=i;i=i+192|0;k=j;l=c[d+336>>2]|0;d=0;m=f;f=c[e+84>>2]|0;e=k;while(1){n=aa(c[f>>2]<<13,b[m>>1]|0)|0|1024;o=aa((c[f+128>>2]|0)*5793|0,b[m+64>>1]|0)|0;p=o+n|0;q=(aa(o,-2)|0)+n>>11;n=aa((c[f+64>>2]|0)*10033|0,b[m+32>>1]|0)|0;o=n+p|0;r=p-n|0;n=aa(b[m+16>>1]|0,c[f+32>>2]|0)|0;p=aa(b[m+48>>1]|0,c[f+96>>2]|0)|0;s=aa(b[m+80>>1]|0,c[f+160>>2]|0)|0;t=(s+n|0)*2998|0;u=t+(p+n<<13)|0;v=t+(s-p<<13)|0;t=n-p-s<<2;c[e>>2]=u+o>>11;c[e+160>>2]=o-u>>11;c[e+32>>2]=t+q;c[e+128>>2]=q-t;c[e+64>>2]=v+r>>11;c[e+96>>2]=r-v>>11;d=d+1|0;if((d|0)==8){break}else{m=m+2|0;f=f+4|0;e=e+4|0}}e=h+11|0;f=h+1|0;m=h+10|0;d=h+2|0;v=h+9|0;r=h+3|0;t=h+8|0;q=h+4|0;u=h+7|0;o=h+5|0;s=h+6|0;p=0;n=k;while(1){k=c[g+(p<<2)>>2]|0;w=(c[n>>2]<<13)+131072|0;x=(c[n+16>>2]|0)*10033|0;y=w+x|0;z=w-x|0;x=c[n+8>>2]|0;A=x*11190|0;B=x<<13;x=c[n+24>>2]<<13;C=B-x|0;D=C+w|0;E=w-C|0;C=x+A|0;w=C+y|0;F=y-C|0;C=A-B-x|0;x=C+z|0;B=z-C|0;C=c[n+4>>2]|0;z=c[n+12>>2]|0;A=c[n+20>>2]|0;y=c[n+28>>2]|0;G=z*10703|0;H=aa(z,-4433)|0;I=A+C|0;J=(I+y|0)*7053|0;K=J+(I*2139|0)|0;I=G+(C*2295|0)+K|0;L=aa(y+A|0,-8565)|0;M=(aa(A,-12112)|0)+H+L+K|0;K=(y*12998|0)-G+J+L|0;L=H+(aa(C,-5540)|0)+(aa(y,-16244)|0)+J|0;J=C-y|0;y=z-A|0;A=(J+y|0)*4433|0;z=A+(J*6270|0)|0;J=A+(aa(y,-15137)|0)|0;a[k+h|0]=a[l+(((I+w|0)>>>18&1023)+128)|0]|0;a[k+e|0]=a[l+(((w-I|0)>>>18&1023)+128)|0]|0;a[k+f|0]=a[l+(((z+D|0)>>>18&1023)+128)|0]|0;a[k+m|0]=a[l+(((D-z|0)>>>18&1023)+128)|0]|0;a[k+d|0]=a[l+(((M+x|0)>>>18&1023)+128)|0]|0;a[k+v|0]=a[l+(((x-M|0)>>>18&1023)+128)|0]|0;a[k+r|0]=a[l+(((K+B|0)>>>18&1023)+128)|0]|0;a[k+t|0]=a[l+(((B-K|0)>>>18&1023)+128)|0]|0;a[k+q|0]=a[l+(((J+E|0)>>>18&1023)+128)|0]|0;a[k+u|0]=a[l+(((E-J|0)>>>18&1023)+128)|0]|0;a[k+o|0]=a[l+(((L+F|0)>>>18&1023)+128)|0]|0;a[k+s|0]=a[l+(((F-L|0)>>>18&1023)+128)|0]|0;p=p+1|0;if((p|0)==6){break}else{n=n+32|0}}i=j;return}function Bj(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;j=i;i=i+160|0;k=j;l=c[d+336>>2]|0;d=0;m=f;f=c[e+84>>2]|0;e=k;while(1){n=aa(c[f>>2]<<13,b[m>>1]|0)|0|1024;o=aa(b[m+32>>1]|0,c[f+64>>2]|0)|0;p=aa(b[m+64>>1]|0,c[f+128>>2]|0)|0;q=(p+o|0)*6476|0;r=o-p|0;p=(r*2896|0)+n|0;o=p+q|0;s=p-q|0;q=(aa(r,-11584)|0)+n|0;n=aa(b[m+16>>1]|0,c[f+32>>2]|0)|0;r=aa(b[m+48>>1]|0,c[f+96>>2]|0)|0;p=(r+n|0)*6810|0;t=p+(n*4209|0)|0;n=p+(aa(r,-17828)|0)|0;c[e>>2]=t+o>>11;c[e+128>>2]=o-t>>11;c[e+32>>2]=n+s>>11;c[e+96>>2]=s-n>>11;c[e+64>>2]=q>>11;d=d+1|0;if((d|0)==8){break}else{m=m+2|0;f=f+4|0;e=e+4|0}}e=h+9|0;f=h+1|0;m=h+8|0;d=h+2|0;q=h+7|0;n=h+3|0;s=h+6|0;t=h+4|0;o=h+5|0;r=0;p=k;while(1){k=c[g+(r<<2)>>2]|0;u=(c[p>>2]<<13)+131072|0;v=c[p+16>>2]|0;w=u+(v*9373|0)|0;x=u+(aa(v,-3580)|0)|0;y=u+(aa(v,-11586)|0)|0;v=c[p+8>>2]|0;u=c[p+24>>2]|0;z=(u+v|0)*6810|0;A=z+(v*4209|0)|0;v=z+(aa(u,-17828)|0)|0;u=A+w|0;z=w-A|0;A=v+x|0;w=x-v|0;v=c[p+4>>2]|0;x=c[p+12>>2]|0;B=c[p+20>>2]<<13;C=c[p+28>>2]|0;D=C+x|0;E=x-C|0;C=E*2531|0;x=D*7791|0;F=C+B|0;G=x+(v*11443|0)+F|0;H=(v*1812|0)-x+F|0;F=D*4815|0;D=B-C-(E<<12)|0;C=(v-E<<13)-B|0;B=(v*10323|0)-F-D|0;E=D+((v*5260|0)-F)|0;a[k+h|0]=a[l+(((G+u|0)>>>18&1023)+128)|0]|0;a[k+e|0]=a[l+(((u-G|0)>>>18&1023)+128)|0]|0;a[k+f|0]=a[l+(((B+A|0)>>>18&1023)+128)|0]|0;a[k+m|0]=a[l+(((A-B|0)>>>18&1023)+128)|0]|0;a[k+d|0]=a[l+(((C+y|0)>>>18&1023)+128)|0]|0;a[k+q|0]=a[l+(((y-C|0)>>>18&1023)+128)|0]|0;a[k+n|0]=a[l+(((E+w|0)>>>18&1023)+128)|0]|0;a[k+s|0]=a[l+(((w-E|0)>>>18&1023)+128)|0]|0;a[k+t|0]=a[l+(((H+z|0)>>>18&1023)+128)|0]|0;a[k+o|0]=a[l+(((z-H|0)>>>18&1023)+128)|0]|0;r=r+1|0;if((r|0)==5){break}else{p=p+32|0}}i=j;return}function Cj(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;j=i;i=i+128|0;k=j;l=c[d+336>>2]|0;d=0;m=f;f=c[e+84>>2]|0;e=k;while(1){n=aa(b[m>>1]|0,c[f>>2]|0)|0;o=aa(b[m+32>>1]|0,c[f+64>>2]|0)|0;p=o+n<<2;q=n-o<<2;o=aa(b[m+16>>1]|0,c[f+32>>2]|0)|0;n=aa(b[m+48>>1]|0,c[f+96>>2]|0)|0;r=((n+o|0)*4433|0)+1024|0;s=r+(o*6270|0)>>11;o=r+(aa(n,-15137)|0)>>11;c[e>>2]=s+p;c[e+96>>2]=p-s;c[e+32>>2]=o+q;c[e+64>>2]=q-o;d=d+1|0;if((d|0)==8){break}else{m=m+2|0;f=f+4|0;e=e+4|0}}e=h+7|0;f=h+1|0;m=h+6|0;d=h+2|0;o=h+5|0;q=h+3|0;s=h+4|0;p=0;n=k;while(1){k=c[g+(p<<2)>>2]|0;r=c[n+8>>2]|0;t=c[n+24>>2]|0;u=(t+r|0)*4433|0;v=u+(r*6270|0)|0;r=u+(aa(t,-15137)|0)|0;t=(c[n>>2]|0)+16|0;u=c[n+16>>2]|0;w=t+u<<13;x=t-u<<13;u=w+v|0;t=w-v|0;v=x+r|0;w=x-r|0;r=c[n+28>>2]|0;x=c[n+20>>2]|0;y=c[n+12>>2]|0;z=c[n+4>>2]|0;A=y+r|0;B=z+x|0;C=(B+A|0)*9633|0;D=C+(aa(A,-16069)|0)|0;A=C+(aa(B,-3196)|0)|0;B=aa(z+r|0,-7373)|0;C=B+(r*2446|0)+D|0;r=B+(z*12299|0)+A|0;z=aa(y+x|0,-20995)|0;B=z+(x*16819|0)+A|0;A=z+(y*25172|0)+D|0;a[k+h|0]=a[l+(((r+u|0)>>>18&1023)+128)|0]|0;a[k+e|0]=a[l+(((u-r|0)>>>18&1023)+128)|0]|0;a[k+f|0]=a[l+(((A+v|0)>>>18&1023)+128)|0]|0;a[k+m|0]=a[l+(((v-A|0)>>>18&1023)+128)|0]|0;a[k+d|0]=a[l+(((B+w|0)>>>18&1023)+128)|0]|0;a[k+o|0]=a[l+(((w-B|0)>>>18&1023)+128)|0]|0;a[k+q|0]=a[l+(((C+t|0)>>>18&1023)+128)|0]|0;a[k+s|0]=a[l+(((t-C|0)>>>18&1023)+128)|0]|0;p=p+1|0;if((p|0)==4){break}else{n=n+32|0}}i=j;return}function Dj(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;j=i;i=i+80|0;k=j;l=c[d+336>>2]|0;d=0;m=f;f=c[e+84>>2]|0;e=k;while(1){n=aa(c[f>>2]<<13,b[m>>1]|0)|0|1024;o=aa((c[f+64>>2]|0)*5793|0,b[m+32>>1]|0)|0;p=o+n|0;q=(aa(o,-2)|0)+n|0;n=aa((c[f+32>>2]|0)*10033|0,b[m+16>>1]|0)|0;c[e>>2]=n+p>>11;c[e+48>>2]=p-n>>11;c[e+24>>2]=q>>11;d=d+1|0;if((d|0)==6){break}else{m=m+2|0;f=f+4|0;e=e+4|0}}e=h+5|0;f=h+1|0;m=h+4|0;d=h+2|0;q=h+3|0;n=0;p=k;while(1){k=c[g+(n<<2)>>2]|0;o=(c[p>>2]<<13)+131072|0;r=(c[p+16>>2]|0)*5793|0;s=o+r|0;t=o-r-r|0;r=(c[p+8>>2]|0)*10033|0;o=s+r|0;u=s-r|0;r=c[p+4>>2]|0;s=c[p+12>>2]|0;v=c[p+20>>2]|0;w=(v+r|0)*2998|0;x=w+(s+r<<13)|0;y=w+(v-s<<13)|0;w=r-s-v<<13;a[k+h|0]=a[l+(((x+o|0)>>>18&1023)+128)|0]|0;a[k+e|0]=a[l+(((o-x|0)>>>18&1023)+128)|0]|0;a[k+f|0]=a[l+(((w+t|0)>>>18&1023)+128)|0]|0;a[k+m|0]=a[l+(((t-w|0)>>>18&1023)+128)|0]|0;a[k+d|0]=a[l+(((y+u|0)>>>18&1023)+128)|0]|0;a[k+q|0]=a[l+(((u-y|0)>>>18&1023)+128)|0]|0;n=n+1|0;if((n|0)==3){break}else{p=p+24|0}}i=j;return}function Ej(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;j=i;i=i+32|0;k=j;l=c[d+336>>2]|0;d=c[e+84>>2]|0;e=aa(b[f>>1]|0,c[d>>2]|0)|0;m=aa(b[f+16>>1]|0,c[d+32>>2]|0)|0;n=m+e|0;c[k>>2]=n;o=k+16|0;c[o>>2]=e-m;m=aa(b[f+2>>1]|0,c[d+4>>2]|0)|0;e=aa(b[f+18>>1]|0,c[d+36>>2]|0)|0;p=e+m|0;c[k+4>>2]=p;q=m-e|0;c[k+20>>2]=q;e=aa(b[f+4>>1]|0,c[d+8>>2]|0)|0;m=aa(b[f+20>>1]|0,c[d+40>>2]|0)|0;r=m+e|0;c[k+8>>2]=r;s=e-m|0;c[k+24>>2]=s;m=aa(b[f+6>>1]|0,c[d+12>>2]|0)|0;e=aa(b[f+22>>1]|0,c[d+44>>2]|0)|0;d=e+m|0;c[k+12>>2]=d;f=m-e|0;c[k+28>>2]=f;k=h+3|0;e=h+1|0;m=h+2|0;t=c[g>>2]|0;u=n+4|0;n=u+r<<13;v=u-r<<13;r=(d+p|0)*4433|0;u=r+(p*6270|0)|0;p=r+(aa(d,-15137)|0)|0;a[t+h|0]=a[l+(((u+n|0)>>>16&1023)+128)|0]|0;a[t+k|0]=a[l+(((n-u|0)>>>16&1023)+128)|0]|0;a[t+e|0]=a[l+(((p+v|0)>>>16&1023)+128)|0]|0;a[t+m|0]=a[l+(((v-p|0)>>>16&1023)+128)|0]|0;p=c[g+4>>2]|0;g=(c[o>>2]|0)+4|0;o=g+s<<13;v=g-s<<13;s=(f+q|0)*4433|0;g=s+(q*6270|0)|0;q=s+(aa(f,-15137)|0)|0;a[p+h|0]=a[l+(((g+o|0)>>>16&1023)+128)|0]|0;a[p+k|0]=a[l+(((o-g|0)>>>16&1023)+128)|0]|0;a[p+e|0]=a[l+(((q+v|0)>>>16&1023)+128)|0]|0;a[p+m|0]=a[l+(((v-q|0)>>>16&1023)+128)|0]|0;i=j;return}function Fj(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0;i=c[d+336>>2]|0;d=c[e+84>>2]|0;e=c[g>>2]|0;g=(aa(b[f>>1]|0,c[d>>2]|0)|0)+4|0;j=aa(b[f+2>>1]|0,c[d+4>>2]|0)|0;a[e+h|0]=a[i+(((j+g|0)>>>3&1023)+128)|0]|0;a[e+(h+1)|0]=a[i+(((g-j|0)>>>3&1023)+128)|0]|0;return}function Gj(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;j=i;i=i+512|0;k=j;l=c[d+336>>2]|0;d=0;m=f;f=c[e+84>>2]|0;e=k;while(1){n=aa(c[f>>2]<<13,b[m>>1]|0)|0|1024;o=aa(b[m+64>>1]|0,c[f+128>>2]|0)|0;p=o*10703|0;q=o*4433|0;o=p+n|0;r=n-p|0;p=q+n|0;s=n-q|0;q=aa(b[m+32>>1]|0,c[f+64>>2]|0)|0;n=aa(b[m+96>>1]|0,c[f+192>>2]|0)|0;t=q-n|0;u=t*2260|0;v=t*11363|0;t=v+(n*20995|0)|0;w=u+(q*7373|0)|0;x=v+(aa(q,-4926)|0)|0;q=u+(aa(n,-4176)|0)|0;n=t+o|0;u=o-t|0;t=w+p|0;o=p-w|0;w=x+s|0;p=s-x|0;x=q+r|0;s=r-q|0;q=aa(b[m+16>>1]|0,c[f+32>>2]|0)|0;r=aa(b[m+48>>1]|0,c[f+96>>2]|0)|0;v=aa(b[m+80>>1]|0,c[f+160>>2]|0)|0;y=aa(b[m+112>>1]|0,c[f+224>>2]|0)|0;z=v+q|0;A=(r+q|0)*11086|0;B=z*10217|0;C=(y+q|0)*8956|0;D=(q-y|0)*7350|0;E=z*5461|0;z=(q-r|0)*3363|0;F=A+(aa(q,-18730)|0)+B+C|0;G=z+(aa(q,-15038)|0)+E+D|0;q=(v+r|0)*1136|0;H=(v-r|0)*11529|0;I=y+r|0;J=aa(I,-5461)|0;K=A+(r*589|0)+q+J|0;A=aa(I,-10217)|0;I=z+(r*16154|0)+H+A|0;r=aa(y+v|0,-11086)|0;z=q+(aa(v,-9222)|0)+B+r|0;B=J+(y*8728|0)+C+r|0;r=(y-v|0)*3363|0;C=A+(y*25733|0)+D+r|0;D=H+(aa(v,-6278)|0)+E+r|0;c[e>>2]=F+n>>11;c[e+480>>2]=n-F>>11;c[e+32>>2]=K+t>>11;c[e+448>>2]=t-K>>11;c[e+64>>2]=z+w>>11;c[e+416>>2]=w-z>>11;c[e+96>>2]=B+x>>11;c[e+384>>2]=x-B>>11;c[e+128>>2]=C+s>>11;c[e+352>>2]=s-C>>11;c[e+160>>2]=D+p>>11;c[e+320>>2]=p-D>>11;c[e+192>>2]=I+o>>11;c[e+288>>2]=o-I>>11;c[e+224>>2]=G+u>>11;c[e+256>>2]=u-G>>11;d=d+1|0;if((d|0)==8){break}else{m=m+2|0;f=f+4|0;e=e+4|0}}e=h+7|0;f=h+1|0;m=h+6|0;d=h+2|0;G=h+5|0;u=h+3|0;I=h+4|0;o=0;D=k;while(1){k=c[g+(o<<2)>>2]|0;p=c[D+8>>2]|0;C=c[D+24>>2]|0;s=(C+p|0)*4433|0;B=s+(p*6270|0)|0;p=s+(aa(C,-15137)|0)|0;C=(c[D>>2]|0)+16|0;s=c[D+16>>2]|0;x=C+s<<13;z=C-s<<13;s=x+B|0;C=x-B|0;B=z+p|0;x=z-p|0;p=c[D+28>>2]|0;z=c[D+20>>2]|0;w=c[D+12>>2]|0;K=c[D+4>>2]|0;t=w+p|0;F=K+z|0;n=(F+t|0)*9633|0;r=n+(aa(t,-16069)|0)|0;t=n+(aa(F,-3196)|0)|0;F=aa(K+p|0,-7373)|0;n=F+(p*2446|0)+r|0;p=F+(K*12299|0)+t|0;K=aa(w+z|0,-20995)|0;F=K+(z*16819|0)+t|0;t=K+(w*25172|0)+r|0;a[k+h|0]=a[l+(((p+s|0)>>>18&1023)+128)|0]|0;a[k+e|0]=a[l+(((s-p|0)>>>18&1023)+128)|0]|0;a[k+f|0]=a[l+(((t+B|0)>>>18&1023)+128)|0]|0;a[k+m|0]=a[l+(((B-t|0)>>>18&1023)+128)|0]|0;a[k+d|0]=a[l+(((F+x|0)>>>18&1023)+128)|0]|0;a[k+G|0]=a[l+(((x-F|0)>>>18&1023)+128)|0]|0;a[k+u|0]=a[l+(((n+C|0)>>>18&1023)+128)|0]|0;a[k+I|0]=a[l+(((C-n|0)>>>18&1023)+128)|0]|0;o=o+1|0;if((o|0)==16){break}else{D=D+32|0}}i=j;return}function Hj(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;j=i;i=i+400|0;k=j;l=c[d+336>>2]|0;d=0;m=f;f=c[e+84>>2]|0;e=k;while(1){n=aa(c[f>>2]<<13,b[m>>1]|0)|0|1024;o=aa(b[m+64>>1]|0,c[f+128>>2]|0)|0;p=(o*10438|0)+n|0;q=(o*2578|0)+n|0;r=(aa(o,-7223)|0)+n|0;s=(aa(o,-11586)|0)+n>>11;n=aa(b[m+32>>1]|0,c[f+64>>2]|0)|0;o=aa(b[m+96>>1]|0,c[f+192>>2]|0)|0;t=(o+n|0)*9058|0;u=t+(n*2237|0)|0;v=t+(aa(o,-14084)|0)|0;t=(aa(o,-11295)|0)+(n*5027|0)|0;n=u+p|0;o=p-u|0;u=v+q|0;p=q-v|0;v=t+r|0;q=r-t|0;t=aa(b[m+16>>1]|0,c[f+32>>2]|0)|0;r=aa(b[m+48>>1]|0,c[f+96>>2]|0)|0;w=aa(b[m+80>>1]|0,c[f+160>>2]|0)|0;x=aa(b[m+112>>1]|0,c[f+224>>2]|0)|0;y=x<<13;z=w+t|0;A=(r+t|0)*10935|0;B=z*9810|0;C=A+(aa(t,-9232)|0)+B+y|0;D=z*6164|0;z=t-r|0;E=(z*3826|0)-y|0;F=D+(aa(t,-8693)|0)+E|0;t=(aa(w+r|0,-1297)|0)-y|0;G=A+(aa(r,-3474)|0)+t|0;A=B+(aa(w,-19447)|0)+t|0;t=(w-r|0)*11512|0;B=t+(aa(w,-13850)|0)+D+y|0;y=t+(r*5529|0)+E|0;E=z-w+x<<2;c[e>>2]=C+n>>11;c[e+364>>2]=n-C>>11;c[e+28>>2]=G+u>>11;c[e+336>>2]=u-G>>11;c[e+56>>2]=A+v>>11;c[e+308>>2]=v-A>>11;c[e+84>>2]=E+s;c[e+280>>2]=s-E;c[e+112>>2]=B+q>>11;c[e+252>>2]=q-B>>11;c[e+140>>2]=y+p>>11;c[e+224>>2]=p-y>>11;c[e+168>>2]=F+o>>11;c[e+196>>2]=o-F>>11;d=d+1|0;if((d|0)==7){break}else{m=m+2|0;f=f+4|0;e=e+4|0}}e=h+6|0;f=h+1|0;m=h+5|0;d=h+2|0;F=h+4|0;o=h+3|0;y=0;p=k;while(1){k=c[g+(y<<2)>>2]|0;B=(c[p>>2]<<13)+131072|0;q=c[p+8>>2]|0;E=c[p+16>>2]|0;s=c[p+24>>2]|0;A=(E-s|0)*7223|0;v=(q-E|0)*2578|0;G=(aa(E,-15083)|0)+B+v+A|0;u=s+q|0;C=(u*10438|0)+B|0;n=A+(aa(s,-637)|0)+C|0;s=v+(aa(q,-20239)|0)+C|0;C=c[p+4>>2]|0;q=c[p+12>>2]|0;v=c[p+20>>2]|0;A=(q+C|0)*7663|0;x=(C-q|0)*1395|0;w=aa(v+q|0,-11295)|0;q=A+x+w|0;z=(v+C|0)*5027|0;C=A-x+z|0;x=z+(v*15326|0)+w|0;a[k+h|0]=a[l+(((C+n|0)>>>18&1023)+128)|0]|0;a[k+e|0]=a[l+(((n-C|0)>>>18&1023)+128)|0]|0;a[k+f|0]=a[l+(((q+G|0)>>>18&1023)+128)|0]|0;a[k+m|0]=a[l+(((G-q|0)>>>18&1023)+128)|0]|0;a[k+d|0]=a[l+(((x+s|0)>>>18&1023)+128)|0]|0;a[k+F|0]=a[l+(((s-x|0)>>>18&1023)+128)|0]|0;a[k+o|0]=a[l+(((((E-u|0)*11585|0)+B|0)>>>18&1023)+128)|0]|0;y=y+1|0;if((y|0)==14){break}else{p=p+28|0}}i=j;return}function Ij(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;j=i;i=i+288|0;k=j;l=c[d+336>>2]|0;d=0;m=f;f=c[e+84>>2]|0;e=k;while(1){n=aa(c[f>>2]<<13,b[m>>1]|0)|0|1024;o=aa((c[f+128>>2]|0)*10033|0,b[m+64>>1]|0)|0;p=o+n|0;q=n-o|0;o=aa(b[m+32>>1]|0,c[f+64>>2]|0)|0;r=o*11190|0;s=o<<13;o=aa(c[f+192>>2]<<13,b[m+96>>1]|0)|0;t=s-o|0;u=t+n|0;v=n-t|0;t=o+r|0;n=t+p|0;w=p-t|0;t=r-s-o|0;o=t+q|0;s=q-t|0;t=aa(b[m+16>>1]|0,c[f+32>>2]|0)|0;q=aa(b[m+48>>1]|0,c[f+96>>2]|0)|0;r=aa(b[m+80>>1]|0,c[f+160>>2]|0)|0;p=aa(b[m+112>>1]|0,c[f+224>>2]|0)|0;x=q*10703|0;y=aa(q,-4433)|0;z=r+t|0;A=(p+z|0)*7053|0;B=A+(z*2139|0)|0;z=x+(t*2295|0)+B|0;C=aa(p+r|0,-8565)|0;D=(aa(r,-12112)|0)+y+C+B|0;B=(p*12998|0)-x+A+C|0;C=y+(aa(t,-5540)|0)+(aa(p,-16244)|0)+A|0;A=t-p|0;p=q-r|0;r=(A+p|0)*4433|0;q=r+(A*6270|0)|0;A=r+(aa(p,-15137)|0)|0;c[e>>2]=z+n>>11;c[e+264>>2]=n-z>>11;c[e+24>>2]=q+u>>11;c[e+240>>2]=u-q>>11;c[e+48>>2]=D+o>>11;c[e+216>>2]=o-D>>11;c[e+72>>2]=B+s>>11;c[e+192>>2]=s-B>>11;c[e+96>>2]=A+v>>11;c[e+168>>2]=v-A>>11;c[e+120>>2]=C+w>>11;c[e+144>>2]=w-C>>11;d=d+1|0;if((d|0)==6){break}else{m=m+2|0;f=f+4|0;e=e+4|0}}e=h+5|0;f=h+1|0;m=h+4|0;d=h+2|0;C=h+3|0;w=0;A=k;while(1){k=c[g+(w<<2)>>2]|0;v=(c[A>>2]<<13)+131072|0;B=(c[A+16>>2]|0)*5793|0;s=v+B|0;D=v-B-B|0;B=(c[A+8>>2]|0)*10033|0;v=s+B|0;o=s-B|0;B=c[A+4>>2]|0;s=c[A+12>>2]|0;q=c[A+20>>2]|0;u=(q+B|0)*2998|0;z=u+(s+B<<13)|0;n=u+(q-s<<13)|0;u=B-s-q<<13;a[k+h|0]=a[l+(((z+v|0)>>>18&1023)+128)|0]|0;a[k+e|0]=a[l+(((v-z|0)>>>18&1023)+128)|0]|0;a[k+f|0]=a[l+(((u+D|0)>>>18&1023)+128)|0]|0;a[k+m|0]=a[l+(((D-u|0)>>>18&1023)+128)|0]|0;a[k+d|0]=a[l+(((n+o|0)>>>18&1023)+128)|0]|0;a[k+C|0]=a[l+(((o-n|0)>>>18&1023)+128)|0]|0;w=w+1|0;if((w|0)==12){break}else{A=A+24|0}}i=j;return}function Jj(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;j=i;i=i+208|0;k=j;l=c[d+336>>2]|0;d=0;m=f;f=c[e+84>>2]|0;e=k;while(1){n=aa(c[f>>2]<<13,b[m>>1]|0)|0|1024;o=aa(b[m+64>>1]|0,c[f+128>>2]|0)|0;p=(o*9373|0)+n|0;q=(aa(o,-3580)|0)+n|0;r=(aa(o,-11586)|0)+n>>11;n=aa(b[m+32>>1]|0,c[f+64>>2]|0)|0;o=aa(b[m+96>>1]|0,c[f+192>>2]|0)|0;s=(o+n|0)*6810|0;t=s+(n*4209|0)|0;n=s+(aa(o,-17828)|0)|0;o=t+p|0;s=p-t|0;t=n+q|0;p=q-n|0;n=aa(b[m+16>>1]|0,c[f+32>>2]|0)|0;q=aa(b[m+48>>1]|0,c[f+96>>2]|0)|0;u=aa(b[m+80>>1]|0,c[f+160>>2]|0)|0;v=aa(b[m+112>>1]|0,c[f+224>>2]|0)|0;w=v+q|0;x=q-v|0;v=x*2531|0;q=u<<13;y=w*7791|0;z=v+q|0;A=y+(n*11443|0)+z|0;B=(n*1812|0)-y+z|0;z=w*4815|0;w=q-v-(x<<12)|0;v=n-u-x<<2;x=(n*10323|0)-z-w|0;u=w+((n*5260|0)-z)|0;c[e>>2]=A+o>>11;c[e+180>>2]=o-A>>11;c[e+20>>2]=x+t>>11;c[e+160>>2]=t-x>>11;c[e+40>>2]=v+r;c[e+140>>2]=r-v;c[e+60>>2]=u+p>>11;c[e+120>>2]=p-u>>11;c[e+80>>2]=B+s>>11;c[e+100>>2]=s-B>>11;d=d+1|0;if((d|0)==5){break}else{m=m+2|0;f=f+4|0;e=e+4|0}}e=h+4|0;f=h+1|0;m=h+3|0;d=h+2|0;B=0;s=k;while(1){k=c[g+(B<<2)>>2]|0;u=(c[s>>2]<<13)+131072|0;p=c[s+8>>2]|0;v=c[s+16>>2]|0;r=(v+p|0)*6476|0;x=p-v|0;v=(x*2896|0)+u|0;p=v+r|0;t=v-r|0;r=(aa(x,-11584)|0)+u|0;u=c[s+4>>2]|0;x=c[s+12>>2]|0;v=(x+u|0)*6810|0;A=v+(u*4209|0)|0;u=v+(aa(x,-17828)|0)|0;a[k+h|0]=a[l+(((A+p|0)>>>18&1023)+128)|0]|0;a[k+e|0]=a[l+(((p-A|0)>>>18&1023)+128)|0]|0;a[k+f|0]=a[l+(((u+t|0)>>>18&1023)+128)|0]|0;a[k+m|0]=a[l+(((t-u|0)>>>18&1023)+128)|0]|0;a[k+d|0]=a[l+((r>>>18&1023)+128)|0]|0;B=B+1|0;if((B|0)==10){break}else{s=s+20|0}}i=j;return}function Kj(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;j=i;i=i+128|0;k=j;l=c[d+336>>2]|0;d=4;m=f;f=c[e+84>>2]|0;e=k;while(1){n=b[m+16>>1]|0;o=b[m+32>>1]|0;if((n|o)<<16>>16==0){if(((((b[m+48>>1]|0)==0?(b[m+64>>1]|0)==0:0)?(b[m+80>>1]|0)==0:0)?(b[m+96>>1]|0)==0:0)?(b[m+112>>1]|0)==0:0){p=aa(c[f>>2]<<2,b[m>>1]|0)|0;c[e>>2]=p;c[e+16>>2]=p;c[e+32>>2]=p;c[e+48>>2]=p;c[e+64>>2]=p;c[e+80>>2]=p;c[e+96>>2]=p;c[e+112>>2]=p}else{q=0;r=10}}else{q=o;r=10}if((r|0)==10){r=0;o=aa(q<<16>>16,c[f+64>>2]|0)|0;p=aa(b[m+96>>1]|0,c[f+192>>2]|0)|0;s=(p+o|0)*4433|0;t=s+(o*6270|0)|0;o=s+(aa(p,-15137)|0)|0;p=aa(c[f+128>>2]<<13,b[m+64>>1]|0)|0;s=aa(c[f>>2]<<13,b[m>>1]|0)|0|1024;u=p+s|0;v=s-p|0;p=u+t|0;s=u-t|0;t=v+o|0;u=v-o|0;o=aa(b[m+112>>1]|0,c[f+224>>2]|0)|0;v=aa(b[m+80>>1]|0,c[f+160>>2]|0)|0;w=aa(b[m+48>>1]|0,c[f+96>>2]|0)|0;x=aa(n<<16>>16,c[f+32>>2]|0)|0;n=w+o|0;y=x+v|0;z=(y+n|0)*9633|0;A=z+(aa(n,-16069)|0)|0;n=z+(aa(y,-3196)|0)|0;y=aa(x+o|0,-7373)|0;z=y+(o*2446|0)+A|0;o=y+(x*12299|0)+n|0;x=aa(w+v|0,-20995)|0;y=x+(v*16819|0)+n|0;n=x+(w*25172|0)+A|0;c[e>>2]=o+p>>11;c[e+112>>2]=p-o>>11;c[e+16>>2]=n+t>>11;c[e+96>>2]=t-n>>11;c[e+32>>2]=y+u>>11;c[e+80>>2]=u-y>>11;c[e+48>>2]=z+s>>11;c[e+64>>2]=s-z>>11}d=d+ -1|0;if((d|0)<=0){break}else{m=m+2|0;f=f+4|0;e=e+4|0}}e=h+3|0;f=h+1|0;m=h+2|0;d=0;q=k;while(1){k=c[g+(d<<2)>>2]|0;r=(c[q>>2]|0)+16|0;z=c[q+8>>2]|0;s=r+z<<13;y=r-z<<13;z=c[q+4>>2]|0;r=c[q+12>>2]|0;u=(r+z|0)*4433|0;n=u+(z*6270|0)|0;z=u+(aa(r,-15137)|0)|0;a[k+h|0]=a[l+(((n+s|0)>>>18&1023)+128)|0]|0;a[k+e|0]=a[l+(((s-n|0)>>>18&1023)+128)|0]|0;a[k+f|0]=a[l+(((z+y|0)>>>18&1023)+128)|0]|0;a[k+m|0]=a[l+(((y-z|0)>>>18&1023)+128)|0]|0;d=d+1|0;if((d|0)==8){break}else{q=q+16|0}}i=j;return}function Lj(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;j=i;i=i+80|0;k=j;l=c[d+336>>2]|0;d=0;m=f;f=c[e+84>>2]|0;e=k;while(1){n=aa(c[f>>2]<<13,b[m>>1]|0)|0|1024;o=aa((c[f+128>>2]|0)*5793|0,b[m+64>>1]|0)|0;p=o+n|0;q=(aa(o,-2)|0)+n>>11;n=aa((c[f+64>>2]|0)*10033|0,b[m+32>>1]|0)|0;o=n+p|0;r=p-n|0;n=aa(b[m+16>>1]|0,c[f+32>>2]|0)|0;p=aa(b[m+48>>1]|0,c[f+96>>2]|0)|0;s=aa(b[m+80>>1]|0,c[f+160>>2]|0)|0;t=(s+n|0)*2998|0;u=t+(p+n<<13)|0;v=t+(s-p<<13)|0;t=n-p-s<<2;c[e>>2]=u+o>>11;c[e+60>>2]=o-u>>11;c[e+12>>2]=t+q;c[e+48>>2]=q-t;c[e+24>>2]=v+r>>11;c[e+36>>2]=r-v>>11;d=d+1|0;if((d|0)==3){break}else{m=m+2|0;f=f+4|0;e=e+4|0}}e=h+2|0;f=h+1|0;m=0;d=k;while(1){k=c[g+(m<<2)>>2]|0;v=(c[d>>2]<<13)+131072|0;r=c[d+8>>2]|0;t=v+(r*5793|0)|0;q=(aa(r,-11586)|0)+v|0;v=(c[d+4>>2]|0)*10033|0;a[k+h|0]=a[l+(((t+v|0)>>>18&1023)+128)|0]|0;a[k+e|0]=a[l+(((t-v|0)>>>18&1023)+128)|0]|0;a[k+f|0]=a[l+((q>>>18&1023)+128)|0]|0;m=m+1|0;if((m|0)==6){break}else{d=d+12|0}}i=j;return}function Mj(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;j=i;i=i+32|0;k=j;l=c[d+336>>2]|0;d=c[e+84>>2]|0;e=aa(b[f>>1]|0,c[d>>2]|0)|0;m=aa(b[f+32>>1]|0,c[d+64>>2]|0)|0;n=m+e<<13;o=e-m<<13;m=aa(b[f+16>>1]|0,c[d+32>>2]|0)|0;e=aa(b[f+48>>1]|0,c[d+96>>2]|0)|0;p=(e+m|0)*4433|0;q=p+(m*6270|0)|0;m=p+(aa(e,-15137)|0)|0;e=q+n|0;c[k>>2]=e;c[k+24>>2]=n-q;q=m+o|0;c[k+8>>2]=q;n=o-m|0;c[k+16>>2]=n;m=aa(b[f+2>>1]|0,c[d+4>>2]|0)|0;o=aa(b[f+34>>1]|0,c[d+68>>2]|0)|0;p=o+m<<13;r=m-o<<13;o=aa(b[f+18>>1]|0,c[d+36>>2]|0)|0;m=aa(b[f+50>>1]|0,c[d+100>>2]|0)|0;d=(m+o|0)*4433|0;f=d+(o*6270|0)|0;o=d+(aa(m,-15137)|0)|0;m=f+p|0;c[k+4>>2]=m;d=p-f|0;c[k+28>>2]=d;f=o+r|0;c[k+12>>2]=f;p=r-o|0;c[k+20>>2]=p;o=h+1|0;r=c[g>>2]|0;s=e+32768|0;a[r+h|0]=a[l+(((s+m|0)>>>16&1023)+128)|0]|0;a[r+o|0]=a[l+(((s-m|0)>>>16&1023)+128)|0]|0;m=c[g+4>>2]|0;s=q+32768|0;a[m+h|0]=a[l+(((s+f|0)>>>16&1023)+128)|0]|0;a[m+o|0]=a[l+(((s-f|0)>>>16&1023)+128)|0]|0;f=c[g+8>>2]|0;s=n+32768|0;a[f+h|0]=a[l+(((s+p|0)>>>16&1023)+128)|0]|0;a[f+o|0]=a[l+(((s-p|0)>>>16&1023)+128)|0]|0;p=c[g+12>>2]|0;g=(c[k+24>>2]|0)+32768|0;a[p+h|0]=a[l+(((g+d|0)>>>16&1023)+128)|0]|0;a[p+o|0]=a[l+(((g-d|0)>>>16&1023)+128)|0]|0;i=j;return}function Nj(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0;i=c[d+336>>2]|0;d=c[e+84>>2]|0;e=(aa(b[f>>1]|0,c[d>>2]|0)|0)+4|0;j=aa(b[f+16>>1]|0,c[d+32>>2]|0)|0;a[(c[g>>2]|0)+h|0]=a[i+(((j+e|0)>>>3&1023)+128)|0]|0;a[(c[g+4>>2]|0)+h|0]=a[i+(((e-j|0)>>>3&1023)+128)|0]|0;return}function Oj(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;d=i;e=b+4|0;f=md[c[c[e>>2]>>2]&63](b,1,88)|0;g=b+484|0;c[g>>2]=f;c[f>>2]=19;c[f+8>>2]=51;c[f+12>>2]=52;c[f+68>>2]=0;c[f+52>>2]=0;f=b+120|0;if((c[f>>2]|0)>4){h=c[b>>2]|0;c[h+20>>2]=57;c[h+24>>2]=4;rd[c[h>>2]&127](b)}h=b+96|0;j=c[h>>2]|0;if((j|0)>256){k=c[b>>2]|0;c[k+20>>2]=59;c[k+24>>2]=256;rd[c[k>>2]&127](b);l=c[h>>2]|0}else{l=j}j=c[g>>2]|0;h=j+32|0;k=c[f>>2]|0;if((k|0)>1){m=1;while(1){n=m+1|0;o=1;p=n;do{p=aa(p,n)|0;o=o+1|0}while((o|0)!=(k|0));if((p|0)>(l|0)){q=m;r=p;break}else{m=n}}}else{m=(l|0)>1?l:1;q=m;r=m+1|0}if((q|0)<2){m=c[b>>2]|0;c[m+20>>2]=58;c[m+24>>2]=r;rd[c[m>>2]&127](b)}if((k|0)>0){m=0;r=1;while(1){c[h+(m<<2)>>2]=q;o=aa(r,q)|0;s=m+1|0;if((s|0)==(k|0)){t=o;break}else{m=s;r=o}}}else{t=1}r=b+44|0;m=0;q=0;o=t;a:while(1){t=m;s=q;while(1){if((s|0)<(k|0)){if((c[r>>2]|0)==2){u=c[10352+(s<<2)>>2]|0}else{u=s}v=h+(u<<2)|0;w=c[v>>2]|0;x=w+1|0;y=aa((o|0)/(w|0)|0,x)|0;if((y|0)<=(l|0)){break}}if((t|0)==0){break a}else{t=0;s=0}}c[v>>2]=x;m=1;q=s+1|0;o=y}y=c[b>>2]|0;if((c[f>>2]|0)==3){c[y+24>>2]=o;c[y+28>>2]=c[h>>2];c[y+32>>2]=c[j+36>>2];c[y+36>>2]=c[j+40>>2];c[y+20>>2]=96;td[c[y+4>>2]&31](b,1)}else{c[y+20>>2]=97;c[y+24>>2]=o;td[c[y+4>>2]&31](b,1)}y=yd[c[(c[e>>2]|0)+8>>2]&31](b,1,o,c[f>>2]|0)|0;q=c[f>>2]|0;if((q|0)>0){m=q;q=o;x=0;while(1){v=c[h+(x<<2)>>2]|0;l=(q|0)/(v|0)|0;b:do{if((v|0)>0){u=v+ -1|0;r=(u|0)/2|0;k=y+(x<<2)|0;if((l|0)>0){z=0}else{t=0;while(1){n=aa(t,l)|0;if((n|0)<(o|0)){p=n;do{p=p+q|0}while((p|0)<(o|0))}p=t+1|0;if((p|0)==(v|0)){A=m;break b}else{t=p}}}do{t=aa(z,l)|0;if((t|0)<(o|0)){p=(((z*255|0)+r|0)/(u|0)|0)&255;n=t;do{t=0;do{a[(c[k>>2]|0)+(t+n)|0]=p;t=t+1|0}while((t|0)!=(l|0));n=n+q|0}while((n|0)<(o|0))}z=z+1|0}while((z|0)!=(v|0));A=c[f>>2]|0}else{A=m}}while(0);v=x+1|0;if((v|0)<(A|0)){m=A;q=l;x=v}else{break}}}c[j+16>>2]=y;c[j+20>>2]=o;Sj(b);if((c[b+88>>2]|0)!=2){i=d;return}o=(c[b+112>>2]<<1)+4|0;if((c[f>>2]|0)<=0){i=d;return}j=(c[g>>2]|0)+68|0;g=0;do{c[j+(g<<2)>>2]=md[c[(c[e>>2]|0)+4>>2]&63](b,1,o)|0;g=g+1|0}while((g|0)<(c[f>>2]|0));i=d;return}function Pj(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;b=i;e=a+484|0;f=c[e>>2]|0;c[a+136>>2]=c[f+16>>2];c[a+132>>2]=c[f+20>>2];g=c[a+88>>2]|0;if((g|0)==2){c[f+4>>2]=15;c[f+84>>2]=0;h=f+68|0;if((c[h>>2]|0)==0){j=a+112|0;k=(c[j>>2]<<1)+4|0;l=a+120|0;if((c[l>>2]|0)<=0){i=b;return}m=a+4|0;n=(c[e>>2]|0)+68|0;o=0;while(1){c[n+(o<<2)>>2]=md[c[(c[m>>2]|0)+4>>2]&63](a,1,k)|0;p=o+1|0;q=c[l>>2]|0;if((p|0)<(q|0)){o=p}else{r=j;s=q;break}}}else{r=a+112|0;s=c[a+120>>2]|0}j=(c[r>>2]<<1)+4|0;r=a+120|0;if((s|0)>0){t=0}else{i=b;return}do{nA(c[h+(t<<2)>>2]|0,0,j|0)|0;t=t+1|0}while((t|0)<(c[r>>2]|0));i=b;return}else if((g|0)==0){r=f+4|0;if((c[a+120>>2]|0)==3){c[r>>2]=11;i=b;return}else{c[r>>2]=12;i=b;return}}else if((g|0)==1){g=a+120|0;c[f+4>>2]=(c[g>>2]|0)==3?13:14;c[f+48>>2]=0;if((c[f+28>>2]|0)==0){Sj(a)}if((c[f+52>>2]|0)!=0){i=b;return}f=c[e>>2]|0;e=c[g>>2]|0;if((e|0)<=0){i=b;return}r=f+32|0;t=a+4|0;j=f+52|0;f=e;e=0;while(1){h=c[r+(e<<2)>>2]|0;a:do{if((e|0)>0){s=0;while(1){o=s+1|0;if((h|0)==(c[r+(s<<2)>>2]|0)){break}if((o|0)<(e|0)){s=o}else{u=14;break a}}o=c[j+(s<<2)>>2]|0;if((o|0)!=0){v=f;w=o}else{u=14}}else{u=14}}while(0);if((u|0)==14){u=0;o=md[c[c[t>>2]>>2]&63](a,1,1024)|0;l=(h<<9)+ -512|0;k=0;do{m=0;do{n=255-((d[10368+(k<<4)+m|0]|0)<<1)|0;q=n*255|0;if((n|0)<0){x=0-((0-q|0)/(l|0)|0)|0}else{x=(q|0)/(l|0)|0}c[o+(k<<6)+(m<<2)>>2]=x;m=m+1|0}while((m|0)!=16);k=k+1|0}while((k|0)!=16);v=c[g>>2]|0;w=o}c[j+(e<<2)>>2]=w;e=e+1|0;if((e|0)>=(v|0)){break}else{f=v}}i=b;return}else{v=c[a>>2]|0;c[v+20>>2]=49;rd[c[v>>2]&127](a);i=b;return}}function Qj(a){a=a|0;return}function Rj(a){a=a|0;var b=0,d=0;b=i;d=c[a>>2]|0;c[d+20>>2]=47;rd[c[d>>2]&127](a);i=b;return}function Sj(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;d=i;e=c[b+484>>2]|0;f=(c[b+88>>2]|0)==1;c[e+28>>2]=f?1:0;g=b+120|0;h=e+24|0;c[h>>2]=yd[c[(c[b+4>>2]|0)+8>>2]&31](b,1,f?766:256,c[g>>2]|0)|0;if((c[g>>2]|0)<=0){i=d;return}b=e+32|0;j=c[e+20>>2]|0;e=0;do{k=c[b+(e<<2)>>2]|0;j=(j|0)/(k|0)|0;if(f){l=(c[h>>2]|0)+(e<<2)|0;c[l>>2]=(c[l>>2]|0)+255}l=c[(c[h>>2]|0)+(e<<2)>>2]|0;m=k+ -1|0;n=m<<1;o=0;p=(k+254|0)/(n|0)|0;k=0;while(1){if((o|0)>(p|0)){q=k;while(1){r=q+1|0;s=(((r<<1|1)*255|0)+m|0)/(n|0)|0;if((o|0)>(s|0)){q=r}else{t=s;u=r;break}}}else{t=p;u=k}a[l+o|0]=aa(u,j)|0;o=o+1|0;if((o|0)==256){break}else{p=t;k=u}}if(f){k=l+255|0;p=1;do{a[l+(0-p)|0]=a[l]|0;a[l+(p+255)|0]=a[k]|0;p=p+1|0}while((p|0)!=256)}e=e+1|0}while((e|0)<(c[g>>2]|0));i=d;return}function Tj(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=i;j=c[(c[b+484>>2]|0)+24>>2]|0;k=c[j>>2]|0;l=c[j+4>>2]|0;m=c[j+8>>2]|0;j=c[b+112>>2]|0;if((g|0)<1|(j|0)==0){i=h;return}else{n=0}do{b=j;o=c[e+(n<<2)>>2]|0;p=c[f+(n<<2)>>2]|0;while(1){a[p]=(d[l+(d[o+1|0]|0)|0]|0)+(d[k+(d[o]|0)|0]|0)+(d[m+(d[o+2|0]|0)|0]|0);b=b+ -1|0;if((b|0)==0){break}else{o=o+3|0;p=p+1|0}}n=n+1|0}while((n|0)!=(g|0));i=h;return}function Uj(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;h=i;j=c[(c[b+484>>2]|0)+24>>2]|0;k=c[b+112>>2]|0;l=c[b+120>>2]|0;if((g|0)<=0){i=h;return}b=(k|0)==0;m=(l|0)>0;n=0;do{if(!b){o=k;p=c[e+(n<<2)>>2]|0;q=c[f+(n<<2)>>2]|0;while(1){if(m){r=0;s=0;t=p;while(1){s=(d[(c[j+(r<<2)>>2]|0)+(d[t]|0)|0]|0)+s|0;r=r+1|0;if((r|0)==(l|0)){break}else{t=t+1|0}}u=s&255;v=p+l|0}else{u=0;v=p}a[q]=u;o=o+ -1|0;if((o|0)==0){break}else{p=v;q=q+1|0}}}n=n+1|0}while((n|0)!=(g|0));i=h;return}function Vj(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;h=i;j=c[b+484>>2]|0;k=c[j+24>>2]|0;l=c[k>>2]|0;m=c[k+4>>2]|0;n=c[k+8>>2]|0;k=c[b+112>>2]|0;if((g|0)<=0){i=h;return}b=j+48|0;o=j+52|0;j=o+4|0;p=o+8|0;q=(k|0)==0;r=c[b>>2]|0;s=0;do{t=c[o>>2]|0;u=c[j>>2]|0;v=c[p>>2]|0;if(!q){w=k;x=0;y=c[e+(s<<2)>>2]|0;z=c[f+(s<<2)>>2]|0;while(1){a[z]=(d[m+((d[y+1|0]|0)+(c[u+(r<<6)+(x<<2)>>2]|0))|0]|0)+(d[l+((d[y]|0)+(c[t+(r<<6)+(x<<2)>>2]|0))|0]|0)+(d[n+((d[y+2|0]|0)+(c[v+(r<<6)+(x<<2)>>2]|0))|0]|0);w=w+ -1|0;if((w|0)==0){break}else{x=x+1&15;y=y+3|0;z=z+1|0}}}r=r+1&15;c[b>>2]=r;s=s+1|0}while((s|0)!=(g|0));i=h;return}function Wj(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;h=i;j=c[b+484>>2]|0;k=c[b+120>>2]|0;l=c[b+112>>2]|0;if((g|0)<=0){i=h;return}b=j+48|0;m=(k|0)>0;n=j+24|0;o=j+52|0;j=(l|0)==0;p=0;do{q=f+(p<<2)|0;nA(c[q>>2]|0,0,l|0)|0;r=c[b>>2]|0;if(m){s=e+(p<<2)|0;t=0;do{u=c[(c[n>>2]|0)+(t<<2)>>2]|0;v=c[o+(t<<2)>>2]|0;if(!j){w=l;x=0;y=(c[s>>2]|0)+t|0;z=c[q>>2]|0;while(1){a[z]=(d[z]|0)+(d[u+((d[y]|0)+(c[v+(r<<6)+(x<<2)>>2]|0))|0]|0);w=w+ -1|0;if((w|0)==0){break}else{x=x+1&15;y=y+k|0;z=z+1|0}}}t=t+1|0}while((t|0)!=(k|0))}c[b>>2]=r+1&15;p=p+1|0}while((p|0)!=(g|0));i=h;return}function Xj(e,f,g,h){e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0;j=i;k=c[e+484>>2]|0;l=c[e+120>>2]|0;m=c[e+112>>2]|0;n=c[e+336>>2]|0;if((h|0)<=0){i=j;return}e=(l|0)>0;o=k+84|0;p=k+68|0;q=k+24|0;r=k+16|0;k=(m|0)==0;s=m+ -1|0;t=aa(s,l)|0;u=0-l|0;v=m+1|0;w=0;do{x=g+(w<<2)|0;nA(c[x>>2]|0,0,m|0)|0;if(e){y=f+(w<<2)|0;z=0;do{A=c[x>>2]|0;if((c[o>>2]|0)==0){B=z;C=1;D=l;E=c[p+(z<<2)>>2]|0;F=A}else{B=z+t|0;C=-1;D=u;E=(c[p+(z<<2)>>2]|0)+(v<<1)|0;F=A+s|0}A=c[(c[q>>2]|0)+(z<<2)>>2]|0;G=c[(c[r>>2]|0)+(z<<2)>>2]|0;if(k){H=0;I=E}else{J=aa(m,C)|0;K=0;L=0;M=m;N=0;O=E;P=(c[y>>2]|0)+B|0;Q=F;while(1){R=O+(C<<1)|0;S=d[n+((N+8+(b[R>>1]|0)>>4)+(d[P]|0))|0]|0;T=d[A+S|0]|0;a[Q]=(d[Q]|0)+T;U=S-(d[G+T|0]|0)|0;T=U<<1;S=T+U|0;b[O>>1]=S+L;V=S+T|0;W=V+K|0;S=M+ -1|0;if((S|0)==0){break}else{K=U;L=W;M=S;N=V+T|0;O=R;P=P+D|0;Q=Q+C|0}}H=W&65535;I=E+(J<<1)|0}b[I>>1]=H;z=z+1|0}while((z|0)!=(l|0))}c[o>>2]=(c[o>>2]|0)==0;w=w+1|0}while((w|0)!=(h|0));i=j;return}function Yj(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;d=a+4|0;e=md[c[c[d>>2]>>2]&63](a,1,44)|0;c[a+484>>2]=e;c[e>>2]=20;c[e+12>>2]=53;f=e+32|0;c[f>>2]=0;c[e+40>>2]=0;if((c[a+120>>2]|0)!=3){g=c[a>>2]|0;c[g+20>>2]=48;rd[c[g>>2]&127](a)}g=e+24|0;c[g>>2]=md[c[c[d>>2]>>2]&63](a,1,128)|0;h=0;do{j=md[c[(c[d>>2]|0)+4>>2]&63](a,1,4096)|0;c[(c[g>>2]|0)+(h<<2)>>2]=j;h=h+1|0}while((h|0)!=32);c[e+28>>2]=1;if((c[a+108>>2]|0)==0){c[e+16>>2]=0}else{h=c[a+96>>2]|0;if((h|0)>=8){if((h|0)>256){g=c[a>>2]|0;c[g+20>>2]=59;c[g+24>>2]=256;rd[c[g>>2]&127](a)}}else{g=c[a>>2]|0;c[g+20>>2]=58;c[g+24>>2]=8;rd[c[g>>2]&127](a)}c[e+16>>2]=yd[c[(c[d>>2]|0)+8>>2]&31](a,1,h,3)|0;c[e+20>>2]=h}h=a+88|0;if((c[h>>2]|0)==0){i=b;return}c[h>>2]=2;c[f>>2]=md[c[(c[d>>2]|0)+4>>2]&63](a,1,((c[a+112>>2]|0)*6|0)+12|0)|0;$j(a);i=b;return}function Zj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;e=c[a+484>>2]|0;f=c[e+24>>2]|0;g=a+88|0;if((c[g>>2]|0)==0){h=0}else{c[g>>2]=2;h=2}if((b|0)==0){c[e+4>>2]=(h|0)==2?17:18;c[e+8>>2]=55;h=c[a+132>>2]|0;if((h|0)>=1){if((h|0)>256){h=c[a>>2]|0;c[h+20>>2]=59;c[h+24>>2]=256;rd[c[h>>2]&127](a)}}else{h=c[a>>2]|0;c[h+20>>2]=58;c[h+24>>2]=1;rd[c[h>>2]&127](a)}if((c[g>>2]|0)==2){g=((c[a+112>>2]|0)*6|0)+12|0;h=e+32|0;b=c[h>>2]|0;if((b|0)==0){j=md[c[(c[a+4>>2]|0)+4>>2]&63](a,1,g)|0;c[h>>2]=j;k=j}else{k=b}nA(k|0,0,g|0)|0;if((c[e+40>>2]|0)==0){$j(a)}c[e+36>>2]=0}}else{c[e+4>>2]=16;c[e+8>>2]=54;c[e+28>>2]=1}a=e+28|0;if((c[a>>2]|0)==0){i=d;return}else{l=0}do{nA(c[f+(l<<2)>>2]|0,0,4096)|0;l=l+1|0}while((l|0)!=32);c[a>>2]=0;i=d;return}function _j(a){a=a|0;c[(c[a+484>>2]|0)+28>>2]=1;return}function $j(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;d=c[a+484>>2]|0;e=md[c[c[a+4>>2]>>2]&63](a,1,2044)|0;a=e+1020|0;c[d+40>>2]=a;c[a>>2]=0;c[e+1024>>2]=1;c[e+1016>>2]=-1;c[e+1028>>2]=2;c[e+1012>>2]=-2;c[e+1032>>2]=3;c[e+1008>>2]=-3;c[e+1036>>2]=4;c[e+1004>>2]=-4;c[e+1040>>2]=5;c[e+1e3>>2]=-5;c[e+1044>>2]=6;c[e+996>>2]=-6;c[e+1048>>2]=7;c[e+992>>2]=-7;c[e+1052>>2]=8;c[e+988>>2]=-8;c[e+1056>>2]=9;c[e+984>>2]=-9;c[e+1060>>2]=10;c[e+980>>2]=-10;c[e+1064>>2]=11;c[e+976>>2]=-11;c[e+1068>>2]=12;c[e+972>>2]=-12;c[e+1072>>2]=13;c[e+968>>2]=-13;c[e+1076>>2]=14;c[e+964>>2]=-14;c[e+1080>>2]=15;c[e+960>>2]=-15;e=16;d=16;do{c[a+(e<<2)>>2]=d;c[a+(0-e<<2)>>2]=0-d;e=e+1|0;d=(e&1^1)+d|0}while((e|0)!=48);e=0-d|0;f=48;do{c[a+(f<<2)>>2]=d;c[a+(0-f<<2)>>2]=e;f=f+1|0}while((f|0)!=256);i=b;return}function ak(a,e,f,g){a=a|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;h=c[(c[a+484>>2]|0)+24>>2]|0;j=c[a+112>>2]|0;if((g|0)<1|(j|0)==0){i=f;return}else{k=0}do{a=j;l=c[e+(k<<2)>>2]|0;while(1){m=(c[h+((d[l]|0)>>>3<<2)>>2]|0)+((d[l+1|0]|0)>>>2<<6)+((d[l+2|0]|0)>>>3<<1)|0;n=b[m>>1]|0;o=n+1<<16>>16;b[m>>1]=o<<16>>16==0?n:o;a=a+ -1|0;if((a|0)==0){break}else{l=l+3|0}}k=k+1|0}while((k|0)!=(g|0));i=f;return}function bk(d){d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0;e=i;f=d+484|0;g=c[f>>2]|0;h=d+136|0;c[h>>2]=c[g+16>>2];j=c[g+20>>2]|0;k=md[c[c[d+4>>2]>>2]&63](d,1,j<<5)|0;c[k>>2]=0;c[k+4>>2]=31;c[k+8>>2]=0;c[k+12>>2]=63;c[k+16>>2]=0;c[k+20>>2]=31;gk(c[(c[f>>2]|0)+24>>2]|0,k);if((j|0)>1){l=1;while(1){if((l<<1|0)>(j|0)){m=k;n=0;o=0;p=0;while(1){q=c[m+24>>2]|0;r=(q|0)>(o|0);s=r?m:p;t=n+1|0;if((t|0)==(l|0)){u=s;break}else{m=m+32|0;n=t;o=r?q:o;p=s}}}else{p=k;o=0;n=0;m=0;while(1){s=c[p+28>>2]|0;if((s|0)>(n|0)){q=(c[p+24>>2]|0)>0;v=q?s:n;w=q?p:m}else{v=n;w=m}q=o+1|0;if((q|0)==(l|0)){u=w;break}else{p=p+32|0;o=q;n=v;m=w}}}if((u|0)==0){x=l;break}m=k+(l<<5)|0;n=u+4|0;c[k+(l<<5)+4>>2]=c[n>>2];o=u+12|0;c[k+(l<<5)+12>>2]=c[o>>2];p=u+20|0;c[k+(l<<5)+20>>2]=c[p>>2];c[m>>2]=c[u>>2];q=u+8|0;s=k+(l<<5)+8|0;c[s>>2]=c[q>>2];r=u+16|0;t=k+(l<<5)+16|0;c[t>>2]=c[r>>2];y=c[n>>2]|0;z=c[u>>2]|0;A=y-z<<4;B=c[o>>2]|0;C=c[q>>2]|0;q=(B-C|0)*12|0;D=c[p>>2]|0;E=c[r>>2]|0;r=(A|0)>(q|0);F=(D-E<<3|0)>((r?A:q)|0)?2:r&1^1;if((F|0)==0){r=(z+y|0)/2|0;c[n>>2]=r;c[m>>2]=r+1}else if((F|0)==1){r=(C+B|0)/2|0;c[o>>2]=r;c[s>>2]=r+1}else if((F|0)==2){F=(E+D|0)/2|0;c[p>>2]=F;c[t>>2]=F+1}gk(c[(c[f>>2]|0)+24>>2]|0,u);gk(c[(c[f>>2]|0)+24>>2]|0,m);m=l+1|0;if((m|0)<(j|0)){l=m}else{x=m;break}}if((x|0)>0){G=x}else{H=x;I=d+132|0;c[I>>2]=H;J=c[d>>2]|0;K=J+20|0;c[K>>2]=98;L=J+24|0;c[L>>2]=H;M=J+4|0;N=c[M>>2]|0;td[N&31](d,1);O=g+28|0;c[O>>2]=1;i=e;return}}else{G=1}x=0;while(1){l=c[(c[f>>2]|0)+24>>2]|0;j=c[k+(x<<5)>>2]|0;u=c[k+(x<<5)+4>>2]|0;w=c[k+(x<<5)+8>>2]|0;v=c[k+(x<<5)+12>>2]|0;m=c[k+(x<<5)+16>>2]|0;F=c[k+(x<<5)+20>>2]|0;if((j|0)>(u|0)){P=0;Q=0;R=0;S=0}else{t=(w|0)>(v|0);p=(m|0)>(F|0);D=j;j=0;E=0;r=0;s=0;while(1){if(t){T=j;U=E;V=r;W=s}else{o=c[l+(D<<2)>>2]|0;B=D<<3|4;C=j;n=w;y=E;z=r;q=s;while(1){if(p){X=C;Y=y;Z=z;_=q}else{A=n<<2|2;$=C;ba=y;ca=m;da=z;ea=o+(n<<6)+(m<<1)|0;fa=q;while(1){ga=b[ea>>1]|0;ha=ga&65535;if(ga<<16>>16==0){ia=$;ja=ba;ka=da;la=fa}else{ia=(aa(ha,B)|0)+$|0;ja=(aa(ha,A)|0)+ba|0;ka=(aa(ha,ca<<3|4)|0)+da|0;la=ha+fa|0}if((ca|0)<(F|0)){$=ia;ba=ja;ca=ca+1|0;da=ka;ea=ea+2|0;fa=la}else{X=ia;Y=ja;Z=ka;_=la;break}}}if((n|0)<(v|0)){C=X;n=n+1|0;y=Y;z=Z;q=_}else{T=X;U=Y;V=Z;W=_;break}}}if((D|0)<(u|0)){D=D+1|0;j=T;E=U;r=V;s=W}else{P=T;Q=U;R=V;S=W;break}}}s=S>>1;a[(c[c[h>>2]>>2]|0)+x|0]=(s+P|0)/(S|0)|0;a[(c[(c[h>>2]|0)+4>>2]|0)+x|0]=(s+Q|0)/(S|0)|0;a[(c[(c[h>>2]|0)+8>>2]|0)+x|0]=(s+R|0)/(S|0)|0;s=x+1|0;if((s|0)==(G|0)){H=G;break}else{x=s}}I=d+132|0;c[I>>2]=H;J=c[d>>2]|0;K=J+20|0;c[K>>2]=98;L=J+24|0;c[L>>2]=H;M=J+4|0;N=c[M>>2]|0;td[N&31](d,1);O=g+28|0;c[O>>2]=1;i=e;return}function ck(e,f,g,h){e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0;j=i;k=c[e+484>>2]|0;l=c[k+24>>2]|0;m=c[e+112>>2]|0;n=c[e+336>>2]|0;o=c[k+40>>2]|0;p=c[e+136>>2]|0;q=c[p>>2]|0;r=c[p+4>>2]|0;s=c[p+8>>2]|0;if((h|0)<=0){i=j;return}p=k+36|0;t=k+32|0;k=(m|0)==0;u=m+ -1|0;v=u*3|0;w=(m*3|0)+3|0;x=0;do{y=c[f+(x<<2)>>2]|0;z=c[g+(x<<2)>>2]|0;if((c[p>>2]|0)==0){A=1;B=3;C=c[t>>2]|0;D=y;E=z;F=1}else{A=-1;B=-3;C=(c[t>>2]|0)+(w<<1)|0;D=y+v|0;E=z+u|0;F=0}c[p>>2]=F;if(k){G=0;H=0;I=0;J=C}else{z=B+1|0;y=B+2|0;K=aa(m,B)|0;L=0;M=0;N=0;O=0;P=0;Q=0;R=m;S=0;T=0;U=0;V=C;W=D;X=E;while(1){Y=V+(B<<1)|0;Z=d[n+((d[W]|0)+(c[o+(S+8+(b[Y>>1]|0)>>4<<2)>>2]|0))|0]|0;_=d[n+((d[W+1|0]|0)+(c[o+(T+8+(b[V+(z<<1)>>1]|0)>>4<<2)>>2]|0))|0]|0;$=d[n+((d[W+2|0]|0)+(c[o+(U+8+(b[V+(y<<1)>>1]|0)>>4<<2)>>2]|0))|0]|0;ba=$>>>3;ca=_>>>2;da=Z>>>3;ea=(c[l+(da<<2)>>2]|0)+(ca<<6)+(ba<<1)|0;fa=b[ea>>1]|0;if(fa<<16>>16==0){fk(e,da,ca,ba);ga=b[ea>>1]|0}else{ga=fa}fa=(ga&65535)+ -1|0;a[X]=fa;ea=Z-(d[q+fa|0]|0)|0;Z=_-(d[r+fa|0]|0)|0;_=$-(d[s+fa|0]|0)|0;fa=ea<<1;$=fa+ea|0;b[V>>1]=$+O;ba=$+fa|0;ha=ba+L|0;$=Z<<1;ca=$+Z|0;b[V+2>>1]=ca+P;da=ca+$|0;ia=da+M|0;ca=_<<1;ja=ca+_|0;b[V+4>>1]=ja+Q;ka=ja+ca|0;la=ka+N|0;ja=R+ -1|0;if((ja|0)==0){break}else{L=ea;M=Z;N=_;O=ha;P=ia;Q=la;R=ja;S=ba+fa|0;T=da+$|0;U=ka+ca|0;V=Y;W=W+B|0;X=X+A|0}}G=ha&65535;H=ia&65535;I=la&65535;J=C+(K<<1)|0}b[J>>1]=G;b[J+2>>1]=H;b[J+4>>1]=I;x=x+1|0}while((x|0)!=(h|0));i=j;return}function dk(e,f,g,h){e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;j=i;k=c[(c[e+484>>2]|0)+24>>2]|0;l=c[e+112>>2]|0;if((h|0)<=0){i=j;return}m=(l|0)==0;n=0;do{if(!m){o=l;p=c[f+(n<<2)>>2]|0;q=c[g+(n<<2)>>2]|0;while(1){r=(d[p]|0)>>>3;s=(d[p+1|0]|0)>>>2;t=(d[p+2|0]|0)>>>3;u=(c[k+(r<<2)>>2]|0)+(s<<6)+(t<<1)|0;v=b[u>>1]|0;if(v<<16>>16==0){fk(e,r,s,t);w=b[u>>1]|0}else{w=v}a[q]=(w&65535)+255;o=o+ -1|0;if((o|0)==0){break}else{p=p+3|0;q=q+1|0}}}n=n+1|0}while((n|0)!=(h|0));i=j;return}function ek(a){a=a|0;return}function fk(e,f,g,h){e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;j=i;i=i+1408|0;k=j;l=j+1152|0;m=j+1024|0;n=c[(c[e+484>>2]|0)+24>>2]|0;o=f>>2;f=g>>3;g=h>>2;h=o<<5;p=h|4;q=f<<5;r=q|2;s=g<<5;t=s|4;u=c[e+132>>2]|0;v=h|28;h=v+p>>1;w=q|30;q=w+r>>1;x=s|28;s=x+t>>1;if((u|0)>0){y=c[e+136>>2]|0;z=c[y>>2]|0;A=c[y+4>>2]|0;B=c[y+8>>2]|0;y=0;C=2147483647;while(1){D=d[z+y|0]|0;do{if((D|0)>=(p|0)){if((D|0)>(v|0)){E=D-v<<1;F=D-p<<1;G=aa(F,F)|0;H=aa(E,E)|0;break}if((D|0)>(h|0)){E=D-p<<1;G=aa(E,E)|0;H=0;break}else{E=D-v<<1;G=aa(E,E)|0;H=0;break}}else{E=D-p<<1;F=D-v<<1;G=aa(F,F)|0;H=aa(E,E)|0}}while(0);D=d[A+y|0]|0;do{if((D|0)>=(r|0)){if((D|0)>(w|0)){E=(D-w|0)*3|0;F=(D-r|0)*3|0;I=aa(F,F)|0;J=(aa(E,E)|0)+H|0;break}if((D|0)>(q|0)){E=(D-r|0)*3|0;I=aa(E,E)|0;J=H;break}else{E=(D-w|0)*3|0;I=aa(E,E)|0;J=H;break}}else{E=(D-r|0)*3|0;F=(D-w|0)*3|0;I=aa(F,F)|0;J=(aa(E,E)|0)+H|0}}while(0);D=I+G|0;E=d[B+y|0]|0;do{if((E|0)>=(t|0)){if((E|0)>(x|0)){F=E-x|0;K=E-t|0;L=aa(K,K)|0;M=(aa(F,F)|0)+J|0;break}if((E|0)>(s|0)){F=E-t|0;L=aa(F,F)|0;M=J;break}else{F=E-x|0;L=aa(F,F)|0;M=J;break}}else{F=E-t|0;K=E-x|0;L=aa(K,K)|0;M=(aa(F,F)|0)+J|0}}while(0);E=D+L|0;c[k+(y<<2)>>2]=M;N=(E|0)<(C|0)?E:C;E=y+1|0;if((E|0)==(u|0)){O=0;P=0;break}else{y=E;C=N}}while(1){if((c[k+(O<<2)>>2]|0)>(N|0)){Q=P}else{a[l+P|0]=O;Q=P+1|0}C=O+1|0;if((C|0)==(u|0)){R=Q;break}else{O=C;P=Q}}}else{R=0}Q=k;P=127;while(1){c[Q>>2]=2147483647;if((P|0)>0){Q=Q+4|0;P=P+ -1|0}else{break}}if((R|0)>0){P=e+136|0;e=0;do{Q=a[l+e|0]|0;O=Q&255;u=c[P>>2]|0;N=p-(d[(c[u>>2]|0)+O|0]|0)|0;C=N<<1;y=aa(C,C)|0;C=r-(d[(c[u+4>>2]|0)+O|0]|0)|0;M=C*3|0;L=(aa(M,M)|0)+y|0;y=t-(d[(c[u+8>>2]|0)+O|0]|0)|0;O=(C*72|0)+144|0;C=y<<4;u=C+64|0;M=C+192|0;J=C+320|0;C=k;x=m;s=L+(aa(y,y)|0)|0;y=3;L=(N<<6)+256|0;while(1){N=C;B=x;G=s;I=7;H=O;while(1){if((G|0)<(c[N>>2]|0)){c[N>>2]=G;a[B]=Q}w=u+G|0;q=N+4|0;if((w|0)<(c[q>>2]|0)){c[q>>2]=w;a[B+1|0]=Q}q=M+w|0;w=N+8|0;if((q|0)<(c[w>>2]|0)){c[w>>2]=q;a[B+2|0]=Q}w=J+q|0;q=N+12|0;if((w|0)<(c[q>>2]|0)){c[q>>2]=w;a[B+3|0]=Q}if((I|0)>0){N=N+16|0;B=B+4|0;G=G+H|0;I=I+ -1|0;H=H+288|0}else{break}}if((y|0)>0){C=C+128|0;x=x+32|0;s=s+L|0;y=y+ -1|0;L=L+512|0}else{break}}e=e+1|0}while((e|0)!=(R|0))}R=o<<2;o=f<<3;f=g<<2;g=c[n+(R<<2)>>2]|0;e=m;k=0;while(1){t=k+o|0;r=f|1;b[g+(t<<6)+(f<<1)>>1]=(d[e]|0)+1;b[g+(t<<6)+(r<<1)>>1]=(d[e+1|0]|0)+1;b[g+(t<<6)+(r+1<<1)>>1]=(d[e+2|0]|0)+1;b[g+(t<<6)+((f|3)<<1)>>1]=(d[e+3|0]|0)+1;k=k+1|0;if((k|0)==8){break}else{e=e+4|0}}e=c[n+((R|1)<<2)>>2]|0;k=m+32|0;g=0;while(1){t=g+o|0;r=f|1;b[e+(t<<6)+(f<<1)>>1]=(d[k]|0)+1;b[e+(t<<6)+(r<<1)>>1]=(d[k+1|0]|0)+1;b[e+(t<<6)+(r+1<<1)>>1]=(d[k+2|0]|0)+1;b[e+(t<<6)+((f|3)<<1)>>1]=(d[k+3|0]|0)+1;g=g+1|0;if((g|0)==8){break}else{k=k+4|0}}k=c[n+((R|2)<<2)>>2]|0;g=m+64|0;e=0;while(1){t=e+o|0;r=f|1;b[k+(t<<6)+(f<<1)>>1]=(d[g]|0)+1;b[k+(t<<6)+(r<<1)>>1]=(d[g+1|0]|0)+1;b[k+(t<<6)+(r+1<<1)>>1]=(d[g+2|0]|0)+1;b[k+(t<<6)+((f|3)<<1)>>1]=(d[g+3|0]|0)+1;e=e+1|0;if((e|0)==8){break}else{g=g+4|0}}g=c[n+((R|3)<<2)>>2]|0;R=m+96|0;m=0;while(1){n=m+o|0;e=f|1;b[g+(n<<6)+(f<<1)>>1]=(d[R]|0)+1;b[g+(n<<6)+(e<<1)>>1]=(d[R+1|0]|0)+1;b[g+(n<<6)+(e+1<<1)>>1]=(d[R+2|0]|0)+1;b[g+(n<<6)+((f|3)<<1)>>1]=(d[R+3|0]|0)+1;m=m+1|0;if((m|0)==8){break}else{R=R+4|0}}i=j;return}function gk(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;e=i;f=c[d>>2]|0;g=d+4|0;h=c[g>>2]|0;j=d+8|0;k=c[j>>2]|0;l=d+12|0;m=c[l>>2]|0;n=d+16|0;o=c[n>>2]|0;p=d+20|0;q=c[p>>2]|0;a:do{if((f|0)<(h|0)){r=(k|0)>(m|0);s=(o|0)>(q|0);t=f;b:while(1){if(!r){u=c[a+(t<<2)>>2]|0;v=k;while(1){if(!s){w=o;x=u+(v<<6)+(o<<1)|0;while(1){if((b[x>>1]|0)!=0){break b}if((w|0)<(q|0)){w=w+1|0;x=x+2|0}else{break}}}if((v|0)<(m|0)){v=v+1|0}else{break}}}if((t|0)<(h|0)){t=t+1|0}else{y=f;break a}}c[d>>2]=t;y=t}else{y=f}}while(0);c:do{if((h|0)>(y|0)){f=(k|0)>(m|0);s=(o|0)>(q|0);r=h;d:while(1){if(!f){v=c[a+(r<<2)>>2]|0;u=k;while(1){if(!s){x=o;w=v+(u<<6)+(o<<1)|0;while(1){if((b[w>>1]|0)!=0){break d}if((x|0)<(q|0)){x=x+1|0;w=w+2|0}else{break}}}if((u|0)<(m|0)){u=u+1|0}else{break}}}if((r|0)>(y|0)){r=r+ -1|0}else{z=h;break c}}c[g>>2]=r;z=r}else{z=h}}while(0);e:do{if((k|0)<(m|0)){h=(y|0)>(z|0);g=(o|0)>(q|0);s=k;f:while(1){if(!h){f=y;while(1){if(!g){t=o;u=(c[a+(f<<2)>>2]|0)+(s<<6)+(o<<1)|0;while(1){if((b[u>>1]|0)!=0){break f}if((t|0)<(q|0)){t=t+1|0;u=u+2|0}else{break}}}if((f|0)<(z|0)){f=f+1|0}else{break}}}if((s|0)<(m|0)){s=s+1|0}else{A=k;break e}}c[j>>2]=s;A=s}else{A=k}}while(0);g:do{if((m|0)>(A|0)){k=(y|0)>(z|0);j=(o|0)>(q|0);g=m;h:while(1){if(!k){h=y;while(1){if(!j){r=o;f=(c[a+(h<<2)>>2]|0)+(g<<6)+(o<<1)|0;while(1){if((b[f>>1]|0)!=0){break h}if((r|0)<(q|0)){r=r+1|0;f=f+2|0}else{break}}}if((h|0)<(z|0)){h=h+1|0}else{break}}}if((g|0)>(A|0)){g=g+ -1|0}else{B=m;break g}}c[l>>2]=g;B=g}else{B=m}}while(0);i:do{if((o|0)<(q|0)){m=(y|0)>(z|0);l=(A|0)>(B|0);j=o;j:while(1){if(!m){k=y;while(1){if(!l){s=A;h=(c[a+(k<<2)>>2]|0)+(A<<6)+(j<<1)|0;while(1){if((b[h>>1]|0)!=0){break j}if((s|0)<(B|0)){s=s+1|0;h=h+64|0}else{break}}}if((k|0)<(z|0)){k=k+1|0}else{break}}}if((j|0)<(q|0)){j=j+1|0}else{C=o;break i}}c[n>>2]=j;C=j}else{C=o}}while(0);k:do{if((q|0)>(C|0)){o=(y|0)>(z|0);n=(A|0)>(B|0);l=q;l:while(1){m:do{if(!o){if(n){m=y;while(1){if((m|0)<(z|0)){m=m+1|0}else{break m}}}else{D=y}while(1){m=A;g=(c[a+(D<<2)>>2]|0)+(A<<6)+(l<<1)|0;while(1){if((b[g>>1]|0)!=0){break l}if((m|0)<(B|0)){m=m+1|0;g=g+64|0}else{break}}if((D|0)<(z|0)){D=D+1|0}else{break}}}}while(0);if((l|0)>(C|0)){l=l+ -1|0}else{E=q;break k}}c[p>>2]=l;E=l}else{E=q}}while(0);q=z-y<<4;p=(B-A|0)*12|0;D=E-C<<3;c[d+24>>2]=(aa(p,p)|0)+(aa(q,q)|0)+(aa(D,D)|0);if((y|0)>(z|0)){F=0;G=d+28|0;c[G>>2]=F;i=e;return}D=(C|0)>(E|0);if((A|0)>(B|0)){F=0;G=d+28|0;c[G>>2]=F;i=e;return}else{H=y;I=0}while(1){y=c[a+(H<<2)>>2]|0;if(D){J=I}else{q=A;p=I;while(1){n=C;o=p;j=y+(q<<6)+(C<<1)|0;while(1){o=((b[j>>1]|0)!=0)+o|0;if((n|0)>=(E|0)){break}else{n=n+1|0;j=j+2|0}}if((q|0)<(B|0)){q=q+1|0;p=o}else{J=o;break}}}if((H|0)<(z|0)){H=H+1|0;I=J}else{F=J;break}}G=d+28|0;c[G>>2]=F;i=e;return}function hk(a,b){a=a|0;b=b|0;return(a+ -1+b|0)/(b|0)|0|0}function ik(a,b){a=a|0;b=b|0;var c=0;c=a+ -1+b|0;return c-((c|0)%(b|0)|0)|0}function jk(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;h=i;if((f|0)<=0){i=h;return}j=d+(e<<2)|0;e=a+(b<<2)|0;b=f;while(1){lA(c[j>>2]|0,c[e>>2]|0,g|0)|0;b=b+ -1|0;if((b|0)<=0){break}else{j=j+4|0;e=e+4|0}}i=h;return}function kk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=i;lA(b|0,a|0,c<<7|0)|0;i=d;return}function lk(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;f=d+8|0;g=d+12|0;h=b+4|0;c[h>>2]=0;c[f>>2]=Gk(b)|0;j=xk(b,84)|0;if((j|0)==0){Hk(b);k=c[b>>2]|0;c[k+20>>2]=56;c[k+24>>2]=0;rd[c[k>>2]&127](b)}c[j>>2]=32;c[j+4>>2]=33;c[j+8>>2]=14;c[j+12>>2]=15;c[j+16>>2]=2;c[j+20>>2]=3;c[j+24>>2]=56;c[j+28>>2]=8;c[j+32>>2]=9;c[j+36>>2]=21;c[j+40>>2]=57;c[j+48>>2]=1e9;b=j+44|0;c[b>>2]=c[f>>2];c[j+56>>2]=0;c[j+64>>2]=0;c[j+52>>2]=0;c[j+60>>2]=0;c[j+68>>2]=0;c[j+72>>2]=0;c[j+76>>2]=84;c[h>>2]=j;j=rc(11896)|0;if((j|0)==0){i=d;return}a[g]=120;c[e>>2]=f;c[e+4>>2]=g;if((Lc(j|0,11904,e|0)|0)<=0){i=d;return}e=a[g]|0;if(e<<24>>24==77|e<<24>>24==109){e=(c[f>>2]|0)*1e3|0;c[f>>2]=e;l=e}else{l=c[f>>2]|0}c[b>>2]=l*1e3;i=d;return}function mk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;f=c[a+4>>2]|0;if(d>>>0>999999984){g=c[a>>2]|0;c[g+20>>2]=56;c[g+24>>2]=1;rd[c[g>>2]&127](a)}g=d&7;if((g|0)==0){h=d}else{h=d+8-g|0}if(b>>>0>1){g=c[a>>2]|0;c[g+20>>2]=15;c[g+24>>2]=b;rd[c[g>>2]&127](a)}g=f+52+(b<<2)|0;d=c[g>>2]|0;a:do{if((d|0)==0){j=0;k=10}else{l=d;while(1){if(!((c[l+8>>2]|0)>>>0<h>>>0)){m=l;break a}n=c[l>>2]|0;if((n|0)==0){j=l;k=10;break}else{l=n}}}}while(0);do{if((k|0)==10){d=h+16|0;l=(j|0)==0;n=c[(l?11912:11920)+(b<<2)>>2]|0;o=999999984-h|0;p=n>>>0>o>>>0?o:n;n=d+p|0;o=xk(a,n)|0;if((o|0)==0){q=p;while(1){r=q>>>1;if(q>>>0<100){s=c[a>>2]|0;c[s+20>>2]=56;c[s+24>>2]=2;rd[c[s>>2]&127](a)}s=d+r|0;t=xk(a,s)|0;if((t|0)==0){q=r}else{u=s;v=t;w=r;break}}}else{u=n;v=o;w=p}q=f+76|0;c[q>>2]=(c[q>>2]|0)+u;c[v>>2]=0;c[v+4>>2]=0;c[v+8>>2]=w+h;if(l){c[g>>2]=v;m=v;break}else{c[j>>2]=v;m=v;break}}}while(0);v=m+4|0;j=c[v>>2]|0;c[v>>2]=j+h;v=m+8|0;c[v>>2]=(c[v>>2]|0)-h;i=e;return m+16+j|0}function nk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;f=c[a+4>>2]|0;if(d>>>0>999999984){g=c[a>>2]|0;c[g+20>>2]=56;c[g+24>>2]=3;rd[c[g>>2]&127](a)}g=d&7;if((g|0)==0){h=d}else{h=d+8-g|0}if(b>>>0>1){g=c[a>>2]|0;c[g+20>>2]=15;c[g+24>>2]=b;rd[c[g>>2]&127](a)}g=h+16|0;d=zk(a,g)|0;if((d|0)==0){j=c[a>>2]|0;c[j+20>>2]=56;c[j+24>>2]=4;rd[c[j>>2]&127](a)}a=f+76|0;c[a>>2]=(c[a>>2]|0)+g;g=f+60+(b<<2)|0;c[d>>2]=c[g>>2];c[d+4>>2]=h;c[d+8>>2]=0;c[g>>2]=d;i=e;return d+16|0}function ok(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;g=c[a+4>>2]|0;h=999999984/(d>>>0)|0;if((h|0)==0){j=c[a>>2]|0;c[j+20>>2]=72;rd[c[j>>2]&127](a)}j=(h|0)<(e|0)?h:e;c[g+80>>2]=j;g=mk(a,b,e<<2)|0;if((e|0)==0){i=f;return g|0}h=~e;k=0;l=j;while(1){j=e-k|0;m=l>>>0<j>>>0?l:j;j=nk(a,b,aa(m,d)|0)|0;if((m|0)==0){n=k}else{o=~l;p=k+h|0;q=p>>>0<o>>>0?o:p;p=k;o=m;r=j;while(1){c[g+(p<<2)>>2]=r;o=o+ -1|0;if((o|0)==0){break}else{p=p+1|0;r=r+d|0}}n=k+ -1-q|0}if(n>>>0<e>>>0){k=n;l=m}else{break}}i=f;return g|0}function pk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;f=i;g=c[a+4>>2]|0;h=d<<7;j=999999984/(h>>>0)|0;if((j|0)==0){k=c[a>>2]|0;c[k+20>>2]=72;rd[c[k>>2]&127](a)}k=(j|0)<(e|0)?j:e;c[g+80>>2]=k;g=mk(a,b,e<<2)|0;if((e|0)==0){i=f;return g|0}j=~e;l=0;m=k;while(1){k=e-l|0;n=m>>>0<k>>>0?m:k;k=nk(a,b,aa(h,n)|0)|0;if((n|0)==0){o=l}else{p=~m;q=l+j|0;r=q>>>0<p>>>0?p:q;q=l;p=n;s=k;while(1){c[g+(q<<2)>>2]=s;p=p+ -1|0;if((p|0)==0){break}else{q=q+1|0;s=s+(d<<7)|0}}o=l+ -1-r|0}if(o>>>0<e>>>0){l=o;m=n}else{break}}i=f;return g|0}function qk(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;h=i;j=c[a+4>>2]|0;if((b|0)!=1){k=c[a>>2]|0;c[k+20>>2]=15;c[k+24>>2]=b;rd[c[k>>2]&127](a)}k=mk(a,b,128)|0;c[k>>2]=0;c[k+4>>2]=f;c[k+8>>2]=e;c[k+12>>2]=g;c[k+32>>2]=d;c[k+40>>2]=0;d=j+68|0;c[k+44>>2]=c[d>>2];c[d>>2]=k;i=h;return k|0}function rk(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;h=i;j=c[a+4>>2]|0;if((b|0)!=1){k=c[a>>2]|0;c[k+20>>2]=15;c[k+24>>2]=b;rd[c[k>>2]&127](a)}k=mk(a,b,128)|0;c[k>>2]=0;c[k+4>>2]=f;c[k+8>>2]=e;c[k+12>>2]=g;c[k+32>>2]=d;c[k+40>>2]=0;d=j+72|0;c[k+44>>2]=c[d>>2];c[d>>2]=k;i=h;return k|0}function sk(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;b=i;d=c[a+4>>2]|0;e=d+68|0;f=c[e>>2]|0;if((f|0)==0){g=0;h=0}else{j=0;k=0;l=f;while(1){if((c[l>>2]|0)==0){f=c[l+8>>2]|0;m=(aa(f,c[l+12>>2]|0)|0)+k|0;n=(aa(c[l+4>>2]|0,f)|0)+j|0;o=m}else{n=j;o=k}m=c[l+44>>2]|0;if((m|0)==0){g=n;h=o;break}else{j=n;k=o;l=m}}}l=d+72|0;o=c[l>>2]|0;if((o|0)==0){p=g;q=h}else{k=o;o=g;g=h;while(1){if((c[k>>2]|0)==0){h=c[k+8>>2]|0;n=(aa(c[k+12>>2]<<7,h)|0)+g|0;r=(aa(h<<7,c[k+4>>2]|0)|0)+o|0;s=n}else{r=o;s=g}n=c[k+44>>2]|0;if((n|0)==0){p=r;q=s;break}else{k=n;o=r;g=s}}}if((q|0)<1){i=b;return}s=Bk(a,q,p,c[d+76>>2]|0)|0;if((s|0)<(p|0)){p=(s|0)/(q|0)|0;t=(p|0)<1?1:p}else{t=1e9}p=c[e>>2]|0;if((p|0)!=0){e=d+80|0;q=p;do{if((c[q>>2]|0)==0){p=c[q+4>>2]|0;s=c[q+12>>2]|0;if(((((p+ -1|0)>>>0)/(s>>>0)|0)+1|0)>(t|0)){g=q+16|0;c[g>>2]=aa(s,t)|0;s=q+8|0;Ck(a,q+48|0,aa(c[s>>2]|0,p)|0);c[q+40>>2]=1;u=s;v=c[g>>2]|0}else{c[q+16>>2]=p;u=q+8|0;v=p}c[q>>2]=ok(a,1,c[u>>2]|0,v)|0;c[q+20>>2]=c[e>>2];c[q+24>>2]=0;c[q+28>>2]=0;c[q+36>>2]=0}q=c[q+44>>2]|0}while((q|0)!=0)}q=c[l>>2]|0;if((q|0)==0){i=b;return}l=d+80|0;d=q;do{if((c[d>>2]|0)==0){q=c[d+4>>2]|0;e=c[d+12>>2]|0;if(((((q+ -1|0)>>>0)/(e>>>0)|0)+1|0)>(t|0)){v=d+16|0;c[v>>2]=aa(e,t)|0;e=d+8|0;Ck(a,d+48|0,aa(q<<7,c[e>>2]|0)|0);c[d+40>>2]=1;w=e;x=c[v>>2]|0}else{c[d+16>>2]=q;w=d+8|0;x=q}c[d>>2]=pk(a,1,c[w>>2]|0,x)|0;c[d+20>>2]=c[l>>2];c[d+24>>2]=0;c[d+28>>2]=0;c[d+36>>2]=0}d=c[d+44>>2]|0}while((d|0)!=0);i=b;return}function tk(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;g=i;h=e+d|0;j=b+4|0;if(!((!(h>>>0>(c[j>>2]|0)>>>0)?!((c[b+12>>2]|0)>>>0<e>>>0):0)?(c[b>>2]|0)!=0:0)){e=c[a>>2]|0;c[e+20>>2]=23;rd[c[e>>2]&127](a)}e=b+24|0;k=c[e>>2]|0;if(!(!(k>>>0>d>>>0)?!(h>>>0>((c[b+16>>2]|0)+k|0)>>>0):0)){l=7}a:do{if((l|0)==7){if((c[b+40>>2]|0)==0){k=c[a>>2]|0;c[k+20>>2]=71;rd[c[k>>2]&127](a)}k=b+36|0;if((c[k>>2]|0)!=0){m=c[b+8>>2]|0;n=c[e>>2]|0;o=b+20|0;p=b+16|0;q=c[p>>2]|0;b:do{if((q|0)>0?(r=b+28|0,s=b+48|0,t=b+52|0,u=c[o>>2]|0,v=(u|0)<(q|0)?u:q,u=(c[r>>2]|0)-n|0,w=(v|0)<(u|0)?v:u,u=(c[j>>2]|0)-n|0,v=(w|0)<(u|0)?w:u,(v|0)>=1):0){u=v;v=aa(n,m)|0;w=0;while(1){x=aa(u,m)|0;nd[c[t>>2]&63](a,s,c[(c[b>>2]|0)+(w<<2)>>2]|0,v,x);y=c[o>>2]|0;z=c[p>>2]|0;A=y+w|0;if((A|0)>=(z|0)){break b}B=z-A|0;z=(y|0)<(B|0)?y:B;B=A+(c[e>>2]|0)|0;y=(c[r>>2]|0)-B|0;C=(z|0)<(y|0)?z:y;y=(c[j>>2]|0)-B|0;B=(C|0)<(y|0)?C:y;if((B|0)<1){break b}u=B;v=x+v|0;w=A}}}while(0);c[k>>2]=0}p=c[b+16>>2]|0;if((c[e>>2]|0)>>>0<d>>>0){D=d}else{o=h-p|0;D=(o|0)<0?0:o}c[e>>2]=D;o=c[b+8>>2]|0;m=b+20|0;n=b+16|0;if((p|0)>0?(q=b+28|0,w=b+48|0,v=c[m>>2]|0,u=(v|0)<(p|0)?v:p,p=(c[q>>2]|0)-D|0,v=(u|0)<(p|0)?u:p,p=(c[j>>2]|0)-D|0,u=(v|0)<(p|0)?v:p,(u|0)>=1):0){p=u;u=aa(o,D)|0;v=0;while(1){r=aa(p,o)|0;nd[c[w>>2]&63](a,w,c[(c[b>>2]|0)+(v<<2)>>2]|0,u,r);s=c[m>>2]|0;t=c[n>>2]|0;A=s+v|0;if((A|0)>=(t|0)){break a}x=t-A|0;t=(s|0)<(x|0)?s:x;x=A+(c[e>>2]|0)|0;s=(c[q>>2]|0)-x|0;B=(t|0)<(s|0)?t:s;s=(c[j>>2]|0)-x|0;x=(B|0)<(s|0)?B:s;if((x|0)<1){break a}p=x;u=r+u|0;v=A}}}}while(0);j=b+28|0;D=c[j>>2]|0;do{if(D>>>0<h>>>0){if(D>>>0<d>>>0){if((f|0)==0){E=0;F=d}else{v=c[a>>2]|0;c[v+20>>2]=23;rd[c[v>>2]&127](a);G=d;l=29}}else{G=D;l=29}if((l|0)==29){if((f|0)==0){E=0;F=G}else{c[j>>2]=h;E=1;F=G}}if((c[b+32>>2]|0)==0){if(E){break}v=c[a>>2]|0;c[v+20>>2]=23;rd[c[v>>2]&127](a);break}v=c[b+8>>2]|0;u=c[e>>2]|0;p=F-u|0;q=h-u|0;if(p>>>0<q>>>0){u=p;do{nA(c[(c[b>>2]|0)+(u<<2)>>2]|0,0,v|0)|0;u=u+1|0}while((u|0)!=(q|0))}}}while(0);if((f|0)==0){H=c[b>>2]|0;I=c[e>>2]|0;J=d-I|0;K=H+(J<<2)|0;i=g;return K|0}c[b+36>>2]=1;H=c[b>>2]|0;I=c[e>>2]|0;J=d-I|0;K=H+(J<<2)|0;i=g;return K|0}function uk(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;g=i;h=e+d|0;j=b+4|0;if(!((!(h>>>0>(c[j>>2]|0)>>>0)?!((c[b+12>>2]|0)>>>0<e>>>0):0)?(c[b>>2]|0)!=0:0)){e=c[a>>2]|0;c[e+20>>2]=23;rd[c[e>>2]&127](a)}e=b+24|0;k=c[e>>2]|0;if(!(!(k>>>0>d>>>0)?!(h>>>0>((c[b+16>>2]|0)+k|0)>>>0):0)){l=7}a:do{if((l|0)==7){if((c[b+40>>2]|0)==0){k=c[a>>2]|0;c[k+20>>2]=71;rd[c[k>>2]&127](a)}k=b+36|0;if((c[k>>2]|0)!=0){m=c[b+8>>2]<<7;n=c[e>>2]|0;o=b+20|0;p=b+16|0;q=c[p>>2]|0;b:do{if((q|0)>0?(r=b+28|0,s=b+48|0,t=b+52|0,u=c[o>>2]|0,v=(u|0)<(q|0)?u:q,u=(c[r>>2]|0)-n|0,w=(v|0)<(u|0)?v:u,u=(c[j>>2]|0)-n|0,v=(w|0)<(u|0)?w:u,(v|0)>=1):0){u=v;v=aa(n,m)|0;w=0;while(1){x=aa(u,m)|0;nd[c[t>>2]&63](a,s,c[(c[b>>2]|0)+(w<<2)>>2]|0,v,x);y=c[o>>2]|0;z=c[p>>2]|0;A=y+w|0;if((A|0)>=(z|0)){break b}B=z-A|0;z=(y|0)<(B|0)?y:B;B=A+(c[e>>2]|0)|0;y=(c[r>>2]|0)-B|0;C=(z|0)<(y|0)?z:y;y=(c[j>>2]|0)-B|0;B=(C|0)<(y|0)?C:y;if((B|0)<1){break b}u=B;v=x+v|0;w=A}}}while(0);c[k>>2]=0}p=c[b+16>>2]|0;if((c[e>>2]|0)>>>0<d>>>0){D=d}else{o=h-p|0;D=(o|0)<0?0:o}c[e>>2]=D;o=c[b+8>>2]<<7;m=b+20|0;n=b+16|0;if((p|0)>0?(q=b+28|0,w=b+48|0,v=c[m>>2]|0,u=(v|0)<(p|0)?v:p,p=(c[q>>2]|0)-D|0,v=(u|0)<(p|0)?u:p,p=(c[j>>2]|0)-D|0,u=(v|0)<(p|0)?v:p,(u|0)>=1):0){p=u;u=aa(o,D)|0;v=0;while(1){r=aa(p,o)|0;nd[c[w>>2]&63](a,w,c[(c[b>>2]|0)+(v<<2)>>2]|0,u,r);s=c[m>>2]|0;t=c[n>>2]|0;A=s+v|0;if((A|0)>=(t|0)){break a}x=t-A|0;t=(s|0)<(x|0)?s:x;x=A+(c[e>>2]|0)|0;s=(c[q>>2]|0)-x|0;B=(t|0)<(s|0)?t:s;s=(c[j>>2]|0)-x|0;x=(B|0)<(s|0)?B:s;if((x|0)<1){break a}p=x;u=r+u|0;v=A}}}}while(0);j=b+28|0;D=c[j>>2]|0;do{if(D>>>0<h>>>0){if(D>>>0<d>>>0){if((f|0)==0){E=0;F=d}else{v=c[a>>2]|0;c[v+20>>2]=23;rd[c[v>>2]&127](a);G=d;l=29}}else{G=D;l=29}if((l|0)==29){if((f|0)==0){E=0;F=G}else{c[j>>2]=h;E=1;F=G}}if((c[b+32>>2]|0)==0){if(E){break}v=c[a>>2]|0;c[v+20>>2]=23;rd[c[v>>2]&127](a);break}v=c[b+8>>2]<<7;u=c[e>>2]|0;p=F-u|0;q=h-u|0;if(p>>>0<q>>>0){u=p;do{nA(c[(c[b>>2]|0)+(u<<2)>>2]|0,0,v|0)|0;u=u+1|0}while((u|0)!=(q|0))}}}while(0);if((f|0)==0){H=c[b>>2]|0;I=c[e>>2]|0;J=d-I|0;K=H+(J<<2)|0;i=g;return K|0}c[b+36>>2]=1;H=c[b>>2]|0;I=c[e>>2]|0;J=d-I|0;K=H+(J<<2)|0;i=g;return K|0}function vk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;e=c[a+4>>2]|0;if(!(b>>>0>1)){if((b|0)==1){f=e+68|0;g=c[f>>2]|0;if((g|0)!=0){h=g;do{g=h+40|0;if((c[g>>2]|0)!=0){c[g>>2]=0;td[c[h+56>>2]&31](a,h+48|0)}h=c[h+44>>2]|0}while((h|0)!=0)}c[f>>2]=0;f=e+72|0;h=c[f>>2]|0;if((h|0)!=0){g=h;do{h=g+40|0;if((c[h>>2]|0)!=0){c[h>>2]=0;td[c[g+56>>2]&31](a,g+48|0)}g=c[g+44>>2]|0}while((g|0)!=0)}c[f>>2]=0}}else{f=c[a>>2]|0;c[f+20>>2]=15;c[f+24>>2]=b;rd[c[f>>2]&127](a)}f=e+60+(b<<2)|0;g=c[f>>2]|0;c[f>>2]=0;if((g|0)!=0){f=e+76|0;h=g;while(1){g=c[h>>2]|0;j=(c[h+4>>2]|0)+16+(c[h+8>>2]|0)|0;Ak(a,h,j);c[f>>2]=(c[f>>2]|0)-j;if((g|0)==0){break}else{h=g}}}h=e+52+(b<<2)|0;b=c[h>>2]|0;c[h>>2]=0;if((b|0)==0){i=d;return}h=e+76|0;e=b;while(1){b=c[e>>2]|0;f=(c[e+4>>2]|0)+16+(c[e+8>>2]|0)|0;yk(a,e,f);c[h>>2]=(c[h>>2]|0)-f;if((b|0)==0){break}else{e=b}}i=d;return}function wk(a){a=a|0;var b=0,d=0;b=i;vk(a,1);vk(a,0);d=a+4|0;yk(a,c[d>>2]|0,84);c[d>>2]=0;Hk(a);i=b;return}function xk(a,b){a=a|0;b=b|0;var c=0;a=i;c=Wz(b)|0;i=a;return c|0}function yk(a,b,c){a=a|0;b=b|0;c=c|0;c=i;Xz(b);i=c;return}function zk(a,b){a=a|0;b=b|0;var c=0;a=i;c=Wz(b)|0;i=a;return c|0}function Ak(a,b,c){a=a|0;b=b|0;c=c|0;c=i;Xz(b);i=c;return}function Bk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;return(c[(c[a+4>>2]|0)+44>>2]|0)-e|0}function Ck(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;e=i;f=hb()|0;c[d+12>>2]=f;if((f|0)==0){f=c[b>>2]|0;c[f+20>>2]=65;g=f+24|0;f=g+80|0;do{a[g]=0;g=g+1|0}while((g|0)<(f|0));rd[c[c[b>>2]>>2]&127](b)}c[d>>2]=44;c[d+4>>2]=45;c[d+8>>2]=22;i=e;return}function Dk(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;h=b+12|0;if((oc(c[h>>2]|0,e|0,0)|0)!=0){e=c[a>>2]|0;c[e+20>>2]=67;rd[c[e>>2]&127](a)}if((za(d|0,1,f|0,c[h>>2]|0)|0)==(f|0)){i=g;return}f=c[a>>2]|0;c[f+20>>2]=66;rd[c[f>>2]&127](a);i=g;return}function Ek(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;h=b+12|0;if((oc(c[h>>2]|0,e|0,0)|0)!=0){e=c[a>>2]|0;c[e+20>>2]=67;rd[c[e>>2]&127](a)}if((Pb(d|0,1,f|0,c[h>>2]|0)|0)==(f|0)){i=g;return}f=c[a>>2]|0;c[f+20>>2]=68;rd[c[f>>2]&127](a);i=g;return}function Fk(a,b){a=a|0;b=b|0;a=i;sc(c[b+12>>2]|0)|0;i=a;return}function Gk(a){a=a|0;return 1e6}function Hk(a){a=a|0;return}function Ik(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e;g=f;c[g>>2]=1196314761;c[g+4>>2]=169478669;if(!(d>>>0>8)){if((d|0)==0){h=-1;i=e;return h|0}else{j=d}}else{j=8}if(b>>>0>7){h=-1;i=e;return h|0}h=aA(a+b|0,f+b|0,(j+b|0)>>>0>8?8-b|0:j)|0;i=e;return h|0}function Jk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=i;do{if((a|0)!=0){if((4294967295/(c>>>0)|0)>>>0>b>>>0){e=Wl(a,aa(c,b)|0)|0;break}else{wl(a,11928);e=0;break}}else{e=0}}while(0);i=d;return e|0}function Kk(a,b){a=a|0;b=b|0;var c=0;c=i;Ql(a,b);i=c;return}function Lk(a){a=a|0;var b=0;b=i;c[a+412>>2]=tn(0,0,0)|0;i=b;return}function Mk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;f=c[a+212>>2]|0;if((c[a+376>>2]&536870912|0)==0){g=(f&2048|0)==0}else{g=(f&768|0)!=768}if((d|0)==0|g^1){i=e;return}g=a+412|0;a=b;b=d;d=c[g>>2]|0;while(1){f=(b|0)==0?-1:b;d=tn(d,a,f)|0;if((b|0)==(f|0)){break}else{a=a+f|0;b=b-f|0}}c[g>>2]=d;i=e;return}function Nk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+128|0;f=e;g=(d|0)==0;h=b+212|0;if(!g){if((a[d]|0)!=49){c[h>>2]=c[h>>2]|131072}if((a[d+1|0]|0)!=46){c[h>>2]=c[h>>2]|131072}if((a[d+2|0]|0)!=54){c[h>>2]=c[h>>2]|131072}if((a[d+3|0]|0)!=46){c[h>>2]=c[h>>2]|131072}if((a[d+4|0]|0)!=49){c[h>>2]=c[h>>2]|131072}if((a[d+5|0]|0)!=48){c[h>>2]=c[h>>2]|131072}j=c[h>>2]|0;if((a[d+6|0]|0)==0){k=j}else{l=j|131072;c[h>>2]=l;k=l}}else{l=c[h>>2]|131072;c[h>>2]=l;k=l}if((k&131072|0)==0){m=1;i=e;return m|0}if(((!g?(a[d]|0)==49:0)?(a[d+2|0]|0)==54:0)?(a[d+3|0]|0)==46:0){m=1;i=e;return m|0}ul(f,128,ul(f,128,ul(f,128,ul(f,128,0,11968)|0,d)|0,12e3)|0,12024)|0;wl(b,f);m=0;i=e;return m|0}function Ok(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;j=i;i=i+1056|0;k=i;i=i+168|0;c[k>>2]=0;l=j+156|0;m=j;nA(l|0,0,900)|0;c[l+748>>2]=2147483647;c[l+752>>2]=2147483647;c[l+756>>2]=0;c[l+760>>2]=0;p=0;xa(19,l|0,f|0,g|0,h|0);h=p;p=0;if((h|0)!=0&(q|0)!=0){n=kA(c[h>>2]|0,k)|0;if((n|0)==0){Ea(h|0,q|0)}E=q}else{n=-1}if((n|0)!=1){p=0;xa(20,l|0,b|0,d|0,e|0);e=p;p=0;if((e|0)!=0&(q|0)!=0){o=kA(c[e>>2]|0,k)|0;if((o|0)==0){Ea(e|0,q|0)}E=q}else{o=-1}if((o|0)!=1){jA(m,1,k|0)|0;p=0;o=p;p=0;if((o|0)!=0&(q|0)!=0){r=kA(c[o>>2]|0,k)|0;if((r|0)==0){Ea(o|0,q|0)}E=q}else{r=-1}if((r|0)!=1){s=0}else{s=E}}else{s=E}}else{s=E}while(1){if((s|0)!=0){t=0;u=11;break}v=l+160|0;c[v>>2]=m;w=l+164|0;c[w>>2]=0;x=l+156|0;c[x>>2]=9;p=0;r=va(100,l|0,a|0)|0;o=p;p=0;if((o|0)!=0&(q|0)!=0){y=kA(c[o>>2]|0,k)|0;if((y|0)==0){Ea(o|0,q|0)}E=q}else{y=-1}if((y|0)==1){s=E;continue}if((r|0)==0){t=0;u=11;break}p=0;z=va(101,l|0,900)|0;r=p;p=0;if((r|0)!=0&(q|0)!=0){A=kA(c[r>>2]|0,k)|0;if((A|0)==0){Ea(r|0,q|0)}E=q}else{A=-1}if((A|0)==1){s=E}else{u=9;break}}if((u|0)==9){if((z|0)==0){t=0;i=j;return t|0}c[l+256>>2]=34;c[l+260>>2]=23;c[l+264>>2]=z;c[v>>2]=0;c[w>>2]=0;c[x>>2]=0;lA(z|0,l|0,900)|0;t=z;i=j;return t|0}else if((u|0)==11){i=j;return t|0}return 0}function Pk(a){a=a|0;var b=0,c=0,d=0;b=i;if((a|0)!=0){c=Tl(a,268)|0;if((c|0)==0){d=c}else{nA(c|0,0,268)|0;d=c}}else{d=0}i=b;return d|0}function Qk(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;if((a|0)==0|(b|0)==0){i=d;return}e=c[b>>2]|0;if((e|0)==0){i=d;return}c[b>>2]=0;Rk(a,e,32767,-1);nA(e|0,0,268)|0;Ql(a,e);i=d;return}function Rk(e,f,g,h){e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;j=i;if((e|0)==0|(f|0)==0){i=j;return}k=f+232|0;do{if((g&16384&c[k>>2]|0)!=0){if((h|0)==-1){l=f+128|0;if((c[l>>2]|0)>0){m=0;do{Rk(e,f,16384,m);m=m+1|0}while((m|0)<(c[l>>2]|0))}m=f+136|0;Ql(e,c[m>>2]|0);c[m>>2]=0;c[l>>2]=0;break}else{m=f+136|0;n=c[m>>2]|0;if((n|0)==0){break}o=c[n+(h*28|0)+4>>2]|0;if((o|0)==0){break}Ql(e,o);c[(c[m>>2]|0)+(h*28|0)+4>>2]=0;break}}}while(0);m=c[k>>2]|0;if((g&8192&m|0)==0){p=m}else{m=f+156|0;Ql(e,c[m>>2]|0);c[m>>2]=0;m=f+8|0;c[m>>2]=c[m>>2]&-17;p=c[k>>2]|0}if((g&256&p|0)==0){q=p}else{p=f+256|0;Ql(e,c[p>>2]|0);m=f+260|0;Ql(e,c[m>>2]|0);c[p>>2]=0;c[m>>2]=0;m=f+8|0;c[m>>2]=c[m>>2]&-16385;q=c[k>>2]|0}if((g&128&q|0)==0){r=q}else{q=f+208|0;Ql(e,c[q>>2]|0);m=f+220|0;Ql(e,c[m>>2]|0);c[q>>2]=0;c[m>>2]=0;m=f+224|0;q=c[m>>2]|0;if((q|0)!=0){p=f+229|0;if((a[p]|0)==0){s=q}else{o=q;q=0;while(1){Ql(e,c[o+(q<<2)>>2]|0);c[(c[m>>2]|0)+(q<<2)>>2]=0;n=q+1|0;t=c[m>>2]|0;if(n>>>0<(d[p]|0)>>>0){o=t;q=n}else{s=t;break}}}Ql(e,s);c[m>>2]=0}m=f+8|0;c[m>>2]=c[m>>2]&-1025;r=c[k>>2]|0}if((g&16&r|0)==0){u=r}else{r=f+116|0;Ql(e,c[r>>2]|0);m=f+120|0;Ql(e,c[m>>2]|0);c[r>>2]=0;c[m>>2]=0;m=f+8|0;c[m>>2]=c[m>>2]&-4097;u=c[k>>2]|0}do{if((g&32&u|0)!=0){if(!((h|0)==-1)){m=f+244|0;r=c[m>>2]|0;if((r|0)==0){break}Ql(e,c[r+(h<<4)>>2]|0);Ql(e,c[(c[m>>2]|0)+(h<<4)+8>>2]|0);c[(c[m>>2]|0)+(h<<4)>>2]=0;c[(c[m>>2]|0)+(h<<4)+8>>2]=0;break}m=f+248|0;r=c[m>>2]|0;if((r|0)!=0){if((r|0)>0){r=0;do{Rk(e,f,32,r);r=r+1|0}while((r|0)<(c[m>>2]|0))}r=f+244|0;Ql(e,c[r>>2]|0);c[r>>2]=0;c[m>>2]=0}r=f+8|0;c[r>>2]=c[r>>2]&-8193}}while(0);do{if((g&512&c[k>>2]|0)!=0){if(!((h|0)==-1)){u=f+236|0;r=c[u>>2]|0;if((r|0)==0){break}Ql(e,c[r+(h*20|0)+8>>2]|0);c[(c[u>>2]|0)+(h*20|0)+8>>2]=0;break}u=f+240|0;r=c[u>>2]|0;if((r|0)!=0){if((r|0)>0){r=0;do{Rk(e,f,512,r);r=r+1|0}while((r|0)<(c[u>>2]|0))}r=f+236|0;Ql(e,c[r>>2]|0);c[r>>2]=0;c[u>>2]=0}}}while(0);r=c[k>>2]|0;if((g&8&r|0)==0){v=r}else{r=f+204|0;Ql(e,c[r>>2]|0);c[r>>2]=0;r=f+8|0;c[r>>2]=c[r>>2]&-65;v=c[k>>2]|0}if((g&4096&v|0)==0){w=v}else{v=f+16|0;Ql(e,c[v>>2]|0);c[v>>2]=0;v=f+8|0;c[v>>2]=c[v>>2]&-9;b[f+20>>1]=0;w=c[k>>2]|0}if((g&64&w|0)==0){x=w}else{v=f+264|0;r=c[v>>2]|0;if((r|0)==0){y=w}else{w=f+4|0;if((c[w>>2]|0)==0){z=r}else{m=r;r=0;while(1){Ql(e,c[m+(r<<2)>>2]|0);c[(c[v>>2]|0)+(r<<2)>>2]=0;l=r+1|0;s=c[v>>2]|0;if(l>>>0<(c[w>>2]|0)>>>0){m=s;r=l}else{z=s;break}}}Ql(e,z);c[v>>2]=0;y=c[k>>2]|0}v=f+8|0;c[v>>2]=c[v>>2]&-32769;x=y}c[k>>2]=x&~((h|0)==-1?g:g&-16929);i=j;return}function Sk(a){a=a|0;var b=0;if((a|0)==0){b=0}else{b=c[a+188>>2]|0}return b|0}function Tk(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;g=f;a[g]=e>>>24;a[g+1|0]=e>>>16;a[g+2|0]=e>>>8;a[g+3|0]=e;a[g+4|0]=0;if((b|0)==0){h=0;i=f;return h|0}e=c[b+692>>2]|0;if((e|0)==0){h=0;i=f;return h|0}j=c[b+696>>2]|0;b=j+(e*5|0)|0;while(1){e=b+ -5|0;if((aA(g,e,4)|0)==0){break}if(e>>>0>j>>>0){b=e}else{h=0;k=7;break}}if((k|0)==7){i=f;return h|0}h=d[b+ -1|0]|0;i=f;return h|0}function Uk(a,b){a=a|0;b=b|0;var d=0;d=a+248|0;a:do{if((c[d>>2]|0)==0){switch(b|0){case-5:{c[d>>2]=12208;break a;break};case 1:{c[d>>2]=12064;break a;break};case-1:{c[d>>2]=12120;break a;break};case-6:{c[d>>2]=12224;break a;break};case-4:{c[d>>2]=12184;break a;break};case-7:{c[d>>2]=12256;break a;break};case 2:{c[d>>2]=12096;break a;break};case-2:{c[d>>2]=12136;break a;break};case-3:{c[d>>2]=12160;break a;break};default:{c[d>>2]=12032;break a}}}}while(0);return}function Vk(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0.0;f=i;do{if((e+ -16|0)>>>0>624999984){g=b[d+74>>1]|0;h=12280}else{j=b[d+74>>1]|0;if((c[a+208>>2]&32768|0)!=0?!((j&8)==0):0){g=j;h=12312;break}k=d+74|0;if(j<<16>>16<0){i=f;return}do{if(!((j&1)==0)){l=c[d>>2]|0;if((!((e|0)==0|(l|0)==0)?(m=+O(+(+(l|0)*1.0e5/+(e|0)+.5)),m<=2147483647.0&m>=-2147483648.0):0)?!((~~m+ -95e3|0)>>>0>1e4):0){break}if((j&32)==0){El(a,14352,0);break}El(a,14320,2);i=f;return}}while(0);c[d>>2]=e;b[k>>1]=j&65535|9;i=f;return}}while(0);b[d+74>>1]=g&65535|32768;El(a,h,1);i=f;return}function Wk(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;f=b[d+114>>1]|0;g=f&65535;if((g&32768|0)==0){h=d+8|0;j=c[h>>2]|0;k=(g&128|0)==0?j&-2049:j|2048;j=(f&2)==0?k&-5:k|4;c[h>>2]=j;if((f&1)==0){c[h>>2]=j&-2;i=e;return}else{c[h>>2]=j|1;i=e;return}}j=d+8|0;h=c[j>>2]&-6150;c[j>>2]=h;if((a|0)==0){i=e;return}f=d+232|0;k=c[f>>2]|0;if((k&16|0)!=0){g=d+116|0;Ql(a,c[g>>2]|0);l=d+120|0;Ql(a,c[l>>2]|0);c[g>>2]=0;c[l>>2]=0;c[j>>2]=h}c[f>>2]=k&-17;i=e;return}function Xk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;if((b|0)==0){i=d;return}e=b+40|0;f=a+824|0;g=e+76|0;do{c[e>>2]=c[f>>2];e=e+4|0;f=f+4|0}while((e|0)<(g|0));Wk(a,b);i=d;return}function Yk(a,d,f,g){a=a|0;d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0;h=i;i=i+48|0;j=h;k=Zk(j,f)|0;if((k|0)==0){l=d+74|0;m=e[l>>1]|0;if((m&32768|0)!=0){n=0;i=h;return n|0}do{if((g|0)<2?(m&2|0)!=0:0){if((al(f,d+4|0,100)|0)==0){b[l>>1]=m|32768;xl(a,14288);n=0;i=h;return n|0}else{if((g|0)==0){n=1}else{break}i=h;return n|0}}}while(0);g=d+4|0;c[g+0>>2]=c[f+0>>2];c[g+4>>2]=c[f+4>>2];c[g+8>>2]=c[f+8>>2];c[g+12>>2]=c[f+12>>2];c[g+16>>2]=c[f+16>>2];c[g+20>>2]=c[f+20>>2];c[g+24>>2]=c[f+24>>2];c[g+28>>2]=c[f+28>>2];g=d+36|0;o=j+0|0;j=g+36|0;do{c[g>>2]=c[o>>2];g=g+4|0;o=o+4|0}while((g|0)<(j|0));o=(al(f,12544,1e3)|0)==0;b[l>>1]=o?m&65469|2:m|66;n=2;i=h;return n|0}else if((k|0)==1){k=d+74|0;b[k>>1]=e[k>>1]|0|32768;xl(a,12328);n=0;i=h;return n|0}else{n=d+74|0;b[n>>1]=e[n>>1]|0|32768;tl(a,12352)}return 0}function Zk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0.0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0.0,N=0,P=0.0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;d=i;i=i+32|0;e=d;f=c[b>>2]|0;if(f>>>0>1e5){g=1;i=d;return g|0}h=b+4|0;j=c[h>>2]|0;if((j|0)<0){g=1;i=d;return g|0}if((j|0)>(1e5-f|0)){g=1;i=d;return g|0}k=b+8|0;l=c[k>>2]|0;if(l>>>0>1e5){g=1;i=d;return g|0}m=b+12|0;n=c[m>>2]|0;if((n|0)<0){g=1;i=d;return g|0}if((n|0)>(1e5-l|0)){g=1;i=d;return g|0}o=b+16|0;p=c[o>>2]|0;if(p>>>0>1e5){g=1;i=d;return g|0}q=b+20|0;r=c[q>>2]|0;if((r|0)<0){g=1;i=d;return g|0}if((r|0)>(1e5-p|0)){g=1;i=d;return g|0}s=b+24|0;t=c[s>>2]|0;if(t>>>0>1e5){g=1;i=d;return g|0}u=b+28|0;v=c[u>>2]|0;if((v|0)<0){g=1;i=d;return g|0}if((v|0)>(1e5-t|0)){g=1;i=d;return g|0}w=(l|0)==(p|0);x=(j|0)==(r|0);do{if(!(w|x)){y=+O(+(+(l-p|0)*+(j-r|0)/7.0+.5));if(y<=2147483647.0&y>=-2147483648.0){z=~~y;break}else{g=2;i=d;return g|0}}else{z=0}}while(0);A=(n|0)==(r|0);B=(f|0)==(p|0);do{if(!(A|B)){y=+O(+(+(f-p|0)*+(n-r|0)/7.0+.5));if(y<=2147483647.0&y>=-2147483648.0){C=~~y;break}else{g=2;i=d;return g|0}}else{C=0}}while(0);D=z-C|0;E=(v|0)==(r|0);do{if(!(w|E)){y=+O(+(+(l-p|0)*+(v-r|0)/7.0+.5));if(y<=2147483647.0&y>=-2147483648.0){F=~~y;break}else{g=2;i=d;return g|0}}else{F=0}}while(0);l=(t|0)==(p|0);do{if(!(A|l)){y=+O(+(+(n-r|0)*+(t-p|0)/7.0+.5));if(y<=2147483647.0&y>=-2147483648.0){G=~~y;break}else{g=2;i=d;return g|0}}else{G=0}}while(0);if((F|0)==(G|0)){g=1;i=d;return g|0}n=(v|0)==0|(z|0)==(C|0);do{if(!n){y=+O(+(+(v|0)*+(D|0)/+(F-G|0)+.5));if(y<=2147483647.0&y>=-2147483648.0){H=~~y;break}else{g=1;i=d;return g|0}}else{H=0}}while(0);if((H|0)<=(v|0)){g=1;i=d;return g|0}do{if(!(x|l)){y=+O(+(+(j-r|0)*+(t-p|0)/7.0+.5));if(y<=2147483647.0&y>=-2147483648.0){I=~~y;break}else{g=2;i=d;return g|0}}else{I=0}}while(0);do{if(!(B|E)){y=+O(+(+(f-p|0)*+(v-r|0)/7.0+.5));if(y<=2147483647.0&y>=-2147483648.0){J=~~y;break}else{g=2;i=d;return g|0}}else{J=0}}while(0);if((I|0)==(J|0)){g=1;i=d;return g|0}do{if(!n){y=+O(+(+(v|0)*+(D|0)/+(I-J|0)+.5));if(y<=2147483647.0&y>=-2147483648.0){K=~~y;break}else{g=1;i=d;return g|0}}else{K=0}}while(0);if((K|0)<=(v|0)){g=1;i=d;return g|0}y=+O(+(1.0e10/+(v|0)+.5));if(y<=2147483647.0&y>=-2147483648.0){L=~~y}else{L=0}y=+(H|0);M=+O(+(1.0e10/y+.5));if(M<=2147483647.0&M>=-2147483648.0){N=~~M}else{N=0}v=L-N|0;M=+(K|0);P=+O(+(1.0e10/M+.5));if(P<=2147483647.0&P>=-2147483648.0){Q=~~P}else{Q=0}N=v-Q|0;if((N|0)<1){g=1;i=d;return g|0}if((H|0)==0){g=1;i=d;return g|0}do{if((f|0)!=0){P=+O(+(+(f|0)*1.0e5/y+.5));if(P<=2147483647.0&P>=-2147483648.0){R=~~P;break}else{g=1;i=d;return g|0}}else{R=0}}while(0);c[a>>2]=R;R=a+4|0;f=c[h>>2]|0;do{if((f|0)!=0){P=+O(+(+(f|0)*1.0e5/y+.5));if(P<=2147483647.0&P>=-2147483648.0){S=~~P;break}else{g=1;i=d;return g|0}}else{S=0}}while(0);c[R>>2]=S;S=a+8|0;R=1e5-(c[b>>2]|0)|0;f=c[h>>2]|0;do{if((R|0)!=(f|0)){P=+O(+(+(R-f|0)*1.0e5/y+.5));if(P<=2147483647.0&P>=-2147483648.0){T=~~P;break}else{g=1;i=d;return g|0}}else{T=0}}while(0);c[S>>2]=T;T=a+12|0;S=c[k>>2]|0;if((K|0)==0){g=1;i=d;return g|0}do{if((S|0)!=0){y=+O(+(+(S|0)*1.0e5/M+.5));if(y<=2147483647.0&y>=-2147483648.0){U=~~y;break}else{g=1;i=d;return g|0}}else{U=0}}while(0);c[T>>2]=U;U=a+16|0;T=c[m>>2]|0;do{if((T|0)!=0){y=+O(+(+(T|0)*1.0e5/M+.5));if(y<=2147483647.0&y>=-2147483648.0){V=~~y;break}else{g=1;i=d;return g|0}}else{V=0}}while(0);c[U>>2]=V;V=a+20|0;U=1e5-(c[k>>2]|0)|0;T=c[m>>2]|0;do{if((U|0)!=(T|0)){y=+O(+(+(U-T|0)*1.0e5/M+.5));if(y<=2147483647.0&y>=-2147483648.0){W=~~y;break}else{g=1;i=d;return g|0}}else{W=0}}while(0);c[V>>2]=W;W=a+24|0;V=c[o>>2]|0;T=(v|0)==(Q|0);do{if(!((V|0)==0|T)){M=+O(+(+(N|0)*+(V|0)/1.0e5+.5));if(M<=2147483647.0&M>=-2147483648.0){X=~~M;break}else{g=1;i=d;return g|0}}else{X=0}}while(0);c[W>>2]=X;X=a+28|0;W=c[q>>2]|0;do{if(!((W|0)==0|T)){M=+O(+(+(N|0)*+(W|0)/1.0e5+.5));if(M<=2147483647.0&M>=-2147483648.0){Y=~~M;break}else{g=1;i=d;return g|0}}else{Y=0}}while(0);c[X>>2]=Y;Y=a+32|0;X=1e5-(c[o>>2]|0)|0;W=c[q>>2]|0;do{if(!((X|0)==(W|0)|T)){M=+O(+(+(N|0)*+(X-W|0)/1.0e5+.5));if(M<=2147483647.0&M>=-2147483648.0){Z=~~M;break}else{g=1;i=d;return g|0}}else{Z=0}}while(0);c[Y>>2]=Z;Z=sl(e,a)|0;if((Z|0)!=0){g=Z;i=d;return g|0}Z=c[s>>2]|0;s=c[e+24>>2]|0;if(((((((!((Z|0)<(s+ -5|0)|(Z|0)>(s+5|0))?(s=c[u>>2]|0,u=c[e+28>>2]|0,!((s|0)<(u+ -5|0)|(s|0)>(u+5|0))):0)?(u=c[b>>2]|0,b=c[e>>2]|0,!((u|0)<(b+ -5|0)|(u|0)>(b+5|0))):0)?(b=c[h>>2]|0,h=c[e+4>>2]|0,!((b|0)<(h+ -5|0)|(b|0)>(h+5|0))):0)?(h=c[k>>2]|0,k=c[e+8>>2]|0,!((h|0)<(k+ -5|0)|(h|0)>(k+5|0))):0)?(k=c[m>>2]|0,m=c[e+12>>2]|0,!((k|0)<(m+ -5|0)|(k|0)>(m+5|0))):0)?(m=c[o>>2]|0,o=c[e+16>>2]|0,!((m|0)<(o+ -5|0)|(m|0)>(o+5|0))):0)?(o=c[q>>2]|0,q=c[e+20>>2]|0,(o|0)>=(q+ -5|0)):0){_=(o|0)>(q+5|0)}else{_=1}g=_&1;i=d;return g|0}function _k(a,d,f){a=a|0;d=d|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0.0;g=i;h=d+74|0;j=b[h>>1]|0;k=j&65535;if((k&32768|0)!=0){l=0;i=g;return l|0}if(f>>>0>3){$k(a,d,12432,f,12440);l=0;i=g;return l|0}if((k&4|0)!=0?(e[d+72>>1]|0|0)!=(f|0):0){$k(a,d,12432,f,12472);l=0;i=g;return l|0}if((k&32|0)!=0){xl(a,12504);l=0;i=g;return l|0}if((k&2|0)!=0?(al(12544,d+4|0,100)|0)==0:0){El(a,12576,2);m=b[h>>1]|0}else{m=j}do{if((m&1)==0){n=m}else{j=c[d>>2]|0;if(((j|0)!=0?(o=+O(+(+(j|0)*1.0e5/45455.0+.5)),o<=2147483647.0&o>=-2147483648.0):0)?!((~~o+ -95e3|0)>>>0>1e4):0){n=m;break}El(a,14320,2);n=b[h>>1]|0}}while(0);b[d+72>>1]=f;f=n&65535;n=d+4|0;c[n+0>>2]=c[12544>>2];c[n+4>>2]=c[12548>>2];c[n+8>>2]=c[12552>>2];c[n+12>>2]=c[12556>>2];c[n+16>>2]=c[12560>>2];c[n+20>>2]=c[12564>>2];c[n+24>>2]=c[12568>>2];c[n+28>>2]=c[12572>>2];n=d+36|0;a=12392|0;m=n+36|0;do{c[n>>2]=c[a>>2];n=n+4|0;a=a+4|0}while((n|0)<(m|0));c[d>>2]=45455;b[h>>1]=f|231;l=1;i=g;return l|0}function $k(c,d,f,g,h){c=c|0;d=d|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;j=i;i=i+224|0;k=j+24|0;l=j;m=(d|0)!=0;if(m){n=d+74|0;b[n>>1]=e[n>>1]|0|32768}n=ul(k,196,0,14256)|0;d=ul(k,196,ul(k,n+79|0,n,f)|0,14272)|0;f=g>>>24;if((((f|0)==32|(f+ -48|0)>>>0<10|(f+ -65|0)>>>0<26|(f+ -97|0)>>>0<26?(n=g>>>16,o=n&255,(o|0)==32|(o+ -48|0)>>>0<10|(o+ -65|0)>>>0<26|(o+ -97|0)>>>0<26):0)?(p=g>>>8,q=p&255,(q|0)==32|(q+ -48|0)>>>0<10|(q+ -65|0)>>>0<26|(q+ -97|0)>>>0<26):0)?(r=g&255,(r|0)==32|(r+ -48|0)>>>0<10|(r+ -65|0)>>>0<26|(r+ -97|0)>>>0<26):0){a[k+d|0]=39;a[k+(d+1)|0]=(f+ -32|0)>>>0<95?f&255:63;a[k+(d+2)|0]=(o+ -32|0)>>>0<95?n&255:63;a[k+(d+3)|0]=(q+ -32|0)>>>0<95?p&255:63;a[k+(d+4)|0]=(r+ -32|0)>>>0<95?g&255:63;a[k+(d+5)|0]=39;a[k+(d+6)|0]=58;a[k+(d+7)|0]=32;s=d+8|0;ul(k,196,s,h)|0;t=m?2:1;El(c,k,t);i=j;return}s=ul(k,196,ul(k,196,d,vl(l,l+24|0,3,g)|0)|0,14280)|0;ul(k,196,s,h)|0;t=m?2:1;El(c,k,t);i=j;return}function al(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;f=c[a+24>>2]|0;g=c[b+24>>2]|0;if(((((((!((f|0)<(g-d|0)|(f|0)>(g+d|0))?(g=c[a+28>>2]|0,f=c[b+28>>2]|0,!((g|0)<(f-d|0)|(g|0)>(f+d|0))):0)?(f=c[a>>2]|0,g=c[b>>2]|0,!((f|0)<(g-d|0)|(f|0)>(g+d|0))):0)?(g=c[a+4>>2]|0,f=c[b+4>>2]|0,!((g|0)<(f-d|0)|(g|0)>(f+d|0))):0)?(f=c[a+8>>2]|0,g=c[b+8>>2]|0,!((f|0)<(g-d|0)|(f|0)>(g+d|0))):0)?(g=c[a+12>>2]|0,f=c[b+12>>2]|0,!((g|0)<(f-d|0)|(g|0)>(f+d|0))):0)?(f=c[a+16>>2]|0,g=c[b+16>>2]|0,!((f|0)<(g-d|0)|(f|0)>(g+d|0))):0)?(g=c[a+20>>2]|0,a=c[b+20>>2]|0,(g|0)>=(a-d|0)):0){h=(g|0)<=(a+d|0)}else{h=0}i=e;return h&1|0}function bl(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=i;if(!(d>>>0<132)){if((d&3|0)==0){f=1}else{$k(a,b,c,d,12624);f=0}}else{$k(a,b,c,d,12608);f=0}i=e;return f|0}function cl(a,b,c,e,f,g){a=a|0;b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;h=i;i=i+224|0;j=h+24|0;k=h;l=(d[f+1|0]|0)<<16|(d[f]|0)<<24|(d[f+2|0]|0)<<8|(d[f+3|0]|0);if((l|0)!=(e|0)){$k(a,b,c,l,12640);m=0;i=h;return m|0}l=(d[f+129|0]|0)<<16|(d[f+128|0]|0)<<24|(d[f+130|0]|0)<<8|(d[f+131|0]|0);if(!(l>>>0>357913930)?!(((l*12|0)+132|0)>>>0>e>>>0):0){e=(d[f+65|0]|0)<<16|(d[f+64|0]|0)<<24|(d[f+66|0]|0)<<8|(d[f+67|0]|0);if(e>>>0>65534){$k(a,b,c,e,12696);m=0;i=h;return m|0}if(e>>>0>3){$k(a,0,c,e,12728)}e=(d[f+37|0]|0)<<16|(d[f+36|0]|0)<<24|(d[f+38|0]|0)<<8|(d[f+39|0]|0);if((e|0)!=1633907568){$k(a,b,c,e,12760);m=0;i=h;return m|0}if((aA(f+68|0,12784,12)|0)!=0){e=ul(j,196,0,14256)|0;n=ul(j,196,ul(j,e+79|0,e,c)|0,14272)|0;ul(j,196,ul(j,196,ul(j,196,n,vl(k,k+24|0,3,0)|0)|0,14280)|0,12800)|0;El(a,j,1)}j=(d[f+17|0]|0)<<16|(d[f+16|0]|0)<<24|(d[f+18|0]|0)<<8|(d[f+19|0]|0);if((j|0)==1196573017){if((g&2|0)!=0){$k(a,b,c,1196573017,12880);m=0;i=h;return m|0}}else if((j|0)==1380401696){if((g&2|0)==0){$k(a,b,c,1380401696,12832);m=0;i=h;return m|0}}else{$k(a,b,c,j,12928);m=0;i=h;return m|0}j=(d[f+13|0]|0)<<16|(d[f+12|0]|0)<<24|(d[f+14|0]|0)<<8|(d[f+15|0]|0);if((j|0)==1852662636){$k(a,0,c,1852662636,13040)}else if((j|0)==1818848875){$k(a,b,c,1818848875,13e3);m=0;i=h;return m|0}else if((j|0)==1633842036){$k(a,b,c,1633842036,12960);m=0;i=h;return m|0}else if(!((j|0)==1936744803|(j|0)==1886549106|(j|0)==1835955314|(j|0)==1935896178)){$k(a,0,c,j,13080)}j=(d[f+21|0]|0)<<16|(d[f+20|0]|0)<<24|(d[f+22|0]|0)<<8|(d[f+23|0]|0);if((j|0)==1281450528|(j|0)==1482250784){m=1;i=h;return m|0}$k(a,b,c,j,13112);m=0;i=h;return m|0}$k(a,b,c,l,12672);m=0;i=h;return m|0}function dl(a,b,c,e,f){a=a|0;b=b|0;c=c|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;g=i;h=(d[f+129|0]|0)<<16|(d[f+128|0]|0)<<24|(d[f+130|0]|0)<<8|(d[f+131|0]|0);if((h|0)==0){j=1;i=g;return j|0}k=0;l=f+132|0;while(1){m=(d[l+1|0]|0)<<16|(d[l]|0)<<24|(d[l+2|0]|0)<<8|(d[l+3|0]|0);f=d[l+7|0]|0;n=(d[l+5|0]|0)<<16|(d[l+4|0]|0)<<24|(d[l+6|0]|0)<<8|f;o=(d[l+9|0]|0)<<16|(d[l+8|0]|0)<<24|(d[l+10|0]|0)<<8|(d[l+11|0]|0);if((f&3|0)!=0){$k(a,0,c,m,13144)}if(n>>>0>e>>>0|o>>>0>(e-n|0)>>>0){break}n=k+1|0;if(n>>>0<h>>>0){k=n;l=l+12|0}else{j=1;p=8;break}}if((p|0)==8){i=g;return j|0}$k(a,b,c,m,13192);j=0;i=g;return j|0}function el(a,b,f,g){a=a|0;b=b|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;h=i;j=(d[f+85|0]|0)<<16|(d[f+84|0]|0)<<24|(d[f+86|0]|0)<<8|(d[f+87|0]|0);k=f+88|0;l=f+89|0;m=f+90|0;n=f+91|0;o=f+92|0;p=f+93|0;q=f+94|0;r=f+95|0;s=f+96|0;t=f+97|0;u=f+98|0;v=f+99|0;w=0;while(1){if((((j|0)==(c[13908+(w<<5)>>2]|0)?((d[l]|0)<<16|(d[k]|0)<<24|(d[m]|0)<<8|(d[n]|0)|0)==(c[13912+(w<<5)>>2]|0):0)?((d[p]|0)<<16|(d[o]|0)<<24|(d[q]|0)<<8|(d[r]|0)|0)==(c[13916+(w<<5)>>2]|0):0)?((d[t]|0)<<16|(d[s]|0)<<24|(d[u]|0)<<8|(d[v]|0)|0)==(c[13920+(w<<5)>>2]|0):0){break}x=w+1|0;if(x>>>0<7){w=x}else{y=19;break}}if((y|0)==19){i=h;return}y=(d[f+1|0]|0)<<16|(d[f]|0)<<24|(d[f+2|0]|0)<<8|(d[f+3|0]|0);if((y|0)==(c[13904+(w<<5)>>2]|0)?(v=f+65|0,u=f+64|0,s=f+66|0,t=f+67|0,((d[u]|0)<<24|(d[v]|0)<<16|(d[s]|0)<<8|(d[t]|0)|0)==(e[13926+(w<<5)>>1]|0|0)):0){if((g|0)==0){z=sn(sn(0,0,0)|0,f,y)|0}else{z=g}if((z|0)==(c[13896+(w<<5)>>2]|0)?(z=tn(tn(0,0,0)|0,f,y)|0,(z|0)==(c[13900+(w<<5)>>2]|0)):0){if(!((w+ -5|0)>>>0<2)){if(!(w>>>0<4)){El(a,14152,0)}}else{El(a,14120,2)}_k(a,b,(d[v]|0)<<16|(d[u]|0)<<24|(d[s]|0)<<8|(d[t]|0))|0;i=h;return}}El(a,14200,0);i=h;return}function fl(d){d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0.0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=i;if((a[d+701|0]|0)!=0){i=e;return}if((b[d+898>>1]&2)==0){i=e;return}f=c[d+864>>2]|0;g=c[d+876>>2]|0;h=c[d+888>>2]|0;j=g+f+h|0;if((f|0)<0|(j|0)<1|(j|0)==0){tl(d,13272)}do{if((f|0)!=0){k=+O(+(+(f|0)*32768.0/+(j|0)+.5));if(k<=2147483647.0&k>=-2147483648.0){l=~~k;break}else{tl(d,13272)}}else{l=0}}while(0);if((g|0)<0|l>>>0>32768){tl(d,13272)}do{if((g|0)!=0){k=+O(+(+(g|0)*32768.0/+(j|0)+.5));if(k<=2147483647.0&k>=-2147483648.0){m=~~k;break}else{tl(d,13272)}}else{m=0}}while(0);if((h|0)<0|m>>>0>32768){tl(d,13272)}if((h|0)!=0){k=+O(+(+(h|0)*32768.0/+(j|0)+.5));if(!(k<=2147483647.0&k>=-2147483648.0)){tl(d,13272)}j=~~k;if(j>>>0<32769){n=j}else{tl(d,13272)}}else{n=0}j=m+l+n|0;if((j|0)>=32770){tl(d,13272)}if((j|0)<=32768){if((j|0)<32768){o=1;p=18}else{q=m;r=l;s=n}}else{o=-1;p=18}do{if((p|0)==18){if(!((m|0)<(l|0)|(m|0)<(n|0))){q=o+m|0;r=l;s=n;break}if((l|0)<(m|0)|(l|0)<(n|0)){q=m;r=l;s=o+n|0;break}else{q=m;r=o+l|0;s=n;break}}}while(0);if((q+r+s|0)!=32768){tl(d,13224)}b[d+702>>1]=r;b[d+704>>1]=q;i=e;return}function gl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0;f=i;do{if((e|0)!=0){if((b|0)==0|(d|0)==0){c[a>>2]=0;g=1;break}h=+O(+(+(b|0)*+(d|0)/+(e|0)+.5));if(h<=2147483647.0&h>=-2147483648.0){c[a>>2]=~~h;g=1}else{g=0}}else{g=0}}while(0);i=f;return g|0}function hl(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;k=i;if((b|0)==0){wl(a,13312);l=1}else{l=0}if((d|0)==0){wl(a,13344);m=1}else{m=l}if((c[a+748>>2]|0)>>>0<b>>>0){wl(a,13376);n=1}else{n=m}if((c[a+752>>2]|0)>>>0<d>>>0){wl(a,13416);o=1}else{o=n}if((b|0)<0){wl(a,13456);p=1}else{p=o}if((d|0)<0){wl(a,13488);q=1}else{q=p}if((e+ -1|0)>>>0>1&(e|0)!=4&(e|0)!=8&(e|0)!=16){wl(a,13520);r=1}else{r=q}if((f|0)<0|(f|0)==1|(f|0)==5|(f|0)>6){wl(a,13552);s=1}else{s=r}if(!((f|0)==3&(e|0)>8)){if((f|0)==2|(f|0)==4|(f|0)==6?(e|0)<8:0){t=20}else{u=s}}else{t=20}if((t|0)==20){wl(a,13584);u=1}if((g|0)>1){wl(a,13640);v=1}else{v=u}if((h|0)==0){w=v}else{wl(a,13680);w=1}v=a+208|0;if((c[v>>2]&4096|0)!=0?(c[a+708>>2]|0)!=0:0){wl(a,13720)}if((j|0)!=0){if(((c[a+708>>2]&4|0)!=0&(j|0)==64?(j=c[v>>2]|0,(j&4096|0)==0):0)?(f&-5|0)==2:0){x=j;y=w}else{wl(a,13776);x=c[v>>2]|0;y=1}if((x&4096|0)==0){z=y}else{wl(a,13808);tl(a,13840)}}else{z=w}if((z|0)==1){tl(a,13840)}else{i=k;return}}function il(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=i;h=c[e>>2]|0;j=c[f>>2]|0;a:do{if(j>>>0<d>>>0){k=j;l=h;while(1){switch(a[b+k|0]|0){case 43:{m=4;break};case 101:case 69:{m=32;break};case 57:case 56:case 55:case 54:case 53:case 52:case 51:case 50:case 49:{m=264;break};case 48:{m=8;break};case 46:{m=16;break};case 45:{m=132;break};default:{n=k;o=l;break a}}b:do{switch(m&60|l&3|0){case 4:{if((l&60|0)!=0){n=k;o=l;break a}p=m|l;break};case 10:{p=l|72;break};case 16:{if((l&16|0)!=0){n=k;o=l;break a}if((l&8|0)==0){p=l&448|m|1;break b}else{p=m|l;break b}break};case 6:{if((l&60|0)!=0){n=k;o=l;break a}p=l|4;break};case 9:{p=l|m|64;break};case 33:{if((l&8|0)==0){n=k;o=l;break a}p=l&448|2;break};case 32:{if((l&8|0)==0){n=k;o=l;break a}p=l&448|2;break};case 8:{if((l&16|0)==0){q=l}else{q=l&448|17}p=m|q|64;break};default:{n=k;o=l;break a}}}while(0);r=k+1|0;if(r>>>0<d>>>0){k=r;l=p}else{n=r;o=p;break a}}}else{n=j;o=h}}while(0);c[e>>2]=o;c[f>>2]=n;i=g;return o>>>3&1|0}function jl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e+4|0;g=e;c[f>>2]=0;c[g>>2]=0;if((il(b,d,f,g)|0)==0){h=0;i=e;return h|0}j=c[g>>2]|0;if((j|0)!=(d|0)?(a[b+j|0]|0)!=0:0){h=0;i=e;return h|0}h=c[f>>2]|0;i=e;return h|0}function kl(a){a=a|0;var b=0,c=0.0,d=0;b=i;c=+O(+(1.0e10/+(a|0)+.5));if(!(c<=2147483647.0&c>=-2147483648.0)){d=0;i=b;return d|0}d=~~c;i=b;return d|0}function ll(a){a=a|0;return(a+ -95e3|0)>>>0>1e4|0}function ml(a,b){a=a|0;b=b|0;var c=0,d=0.0,e=0;c=i;d=+O(+(1.0e15/+(a|0)/+(b|0)+.5));if(!(d<=2147483647.0&d>=-2147483648.0)){e=0;i=c;return e|0}e=~~d;i=c;return e|0}function nl(a,b){a=a|0;b=b|0;var c=0,d=0;c=i;if((a|0)!=0&a>>>0<255){d=~~+O(+(+R(+(+(a>>>0)/255.0),+(+(b|0)*1.0e-5))*255.0+.5))&255;i=c;return d|0}else{d=a&255;i=c;return d|0}return 0}function ol(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;f=(c|0)!=0;if((a[b+436|0]|0)!=8){if(f&c>>>0<65535){g=~~+O(+(+R(+(+(c>>>0)/65535.0),+(+(d|0)*1.0e-5))*65535.0+.5))&65535;i=e;return g|0}else{g=c&65535;i=e;return g|0}}else{if(f&c>>>0<255){h=~~+O(+(+R(+(+(c>>>0)/255.0),+(+(d|0)*1.0e-5))*255.0+.5))&255}else{h=c&255}g=h&255;i=e;return g|0}return 0}function pl(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;d=a+492|0;Ql(a,c[d>>2]|0);c[d>>2]=0;d=a+496|0;e=c[d>>2]|0;if((e|0)!=0){f=1<<8-(c[a+484>>2]|0);if((f|0)>0){g=e;h=0;while(1){Ql(a,c[g+(h<<2)>>2]|0);j=h+1|0;k=c[d>>2]|0;if((j|0)==(f|0)){l=k;break}else{g=k;h=j}}}else{l=e}Ql(a,l);c[d>>2]=0}d=a+500|0;Ql(a,c[d>>2]|0);c[d>>2]=0;d=a+504|0;Ql(a,c[d>>2]|0);c[d>>2]=0;d=a+508|0;l=c[d>>2]|0;if((l|0)!=0){e=1<<8-(c[a+484>>2]|0);if((e|0)>0){h=l;g=0;while(1){Ql(a,c[h+(g<<2)>>2]|0);f=g+1|0;j=c[d>>2]|0;if((f|0)==(e|0)){m=j;break}else{h=j;g=f}}}else{m=l}Ql(a,m);c[d>>2]=0}d=a+512|0;m=c[d>>2]|0;if((m|0)==0){i=b;return}l=1<<8-(c[a+484>>2]|0);if((l|0)>0){g=m;h=0;while(1){Ql(a,c[g+(h<<2)>>2]|0);e=h+1|0;f=c[d>>2]|0;if((e|0)==(l|0)){n=f;break}else{g=f;h=e}}}else{n=m}Ql(a,n);c[d>>2]=0;i=b;return}function ql(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=0.0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;f=i;g=d+492|0;if(!((c[g>>2]|0)==0?(c[d+496>>2]|0)==0:0)){wl(d,13864);pl(d)}if((e|0)>=9){if((a[d+435|0]&2)==0){h=a[d+519|0]|0}else{e=a[d+516|0]|0;j=a[d+517|0]|0;k=(j&255)>(e&255)?j:e;e=a[d+518|0]|0;h=(e&255)>(k&255)?e:k}if(h<<24>>24!=0&(h&255)<16){l=16-(h&255)&255}else{l=0}h=d+216|0;k=c[h>>2]&67109888;e=(k|0)!=0&(l&255)<5?5:l;l=(e&255)>8?8:e&255;c[d+484>>2]=l;e=d+496|0;j=d+488|0;m=c[j>>2]|0;n=(m|0)>0;if((k|0)!=0){if(n){o=+O(+(+(m|0)*+(c[d+824>>2]|0)*1.0e-5+.5));if(o<=2147483647.0&o>=-2147483648.0){p=+(~~o|0)*1.0e-5}else{p=0.0}}else{p=1.0}k=8-l|0;q=1<<k;r=16-l|0;s=Rl(d,q<<2)|0;c[e>>2]=s;t=0;do{c[s+(t<<2)>>2]=Sl(d,512)|0;t=t+1|0}while(t>>>0<q>>>0);t=(1<<r)+ -1|0;r=255>>>l;u=0;v=0;while(1){w=u*257|0;x=w&65535;y=((((aa(~~+O(+(+R(+(+((w+128|0)>>>0)/65535.0),+p)*65535.0+.5))&65535,t)|0)+32768|0)>>>0)/65535|0)+1|0;if(v>>>0<y>>>0){w=v;while(1){b[(c[s+((w&r)<<2)>>2]|0)+(w>>>k<<1)>>1]=x;z=w+1|0;if((z|0)==(y|0)){A=y;break}else{w=z}}}else{A=v}u=u+1|0;if((u|0)==255){break}else{v=A}}v=q<<8;if(A>>>0<v>>>0){q=A;do{b[(c[s+((q&r)<<2)>>2]|0)+(q>>>k<<1)>>1]=-1;q=q+1|0}while((q|0)!=(v|0))}}else{if(n){p=+O(+(1.0e15/+(c[d+824>>2]|0)/+(m|0)+.5));if(p<=2147483647.0&p>=-2147483648.0){B=~~p}else{B=0}}else{B=1e5}rl(d,e,l,B)}if((c[h>>2]&6291584|0)==0){i=f;return}h=d+824|0;p=+O(+(1.0e10/+(c[h>>2]|0)+.5));if(p<=2147483647.0&p>=-2147483648.0){C=~~p}else{C=0}rl(d,d+512|0,l,C);C=d+508|0;B=c[j>>2]|0;if((B|0)>0){p=+O(+(1.0e10/+(B|0)+.5));if(p<=2147483647.0&p>=-2147483648.0){D=~~p}else{D=0}}else{D=c[h>>2]|0}rl(d,C,l,D);i=f;return}D=d+488|0;l=c[D>>2]|0;if((l|0)>0){p=+O(+(1.0e15/+(c[d+824>>2]|0)/+(l|0)+.5));if(p<=2147483647.0&p>=-2147483648.0){E=~~p}else{E=0}}else{E=1e5}l=Sl(d,256)|0;c[g>>2]=l;if((E+ -95e3|0)>>>0>1e4){p=+(E|0)*1.0e-5;E=0;do{if((E|0)!=0&E>>>0<255){F=~~+O(+(+R(+(+(E>>>0)/255.0),+p)*255.0+.5))&255}else{F=E&255}a[l+E|0]=F;E=E+1|0}while((E|0)!=256)}else{E=0;do{a[l+E|0]=E;E=E+1|0}while((E|0)!=256)}if((c[d+216>>2]&6291584|0)==0){i=f;return}E=d+824|0;p=+O(+(1.0e10/+(c[E>>2]|0)+.5));if(p<=2147483647.0&p>=-2147483648.0){G=~~p}else{G=0}l=Sl(d,256)|0;c[d+504>>2]=l;if((G+ -95e3|0)>>>0>1e4){p=+(G|0)*1.0e-5;G=0;do{if((G|0)!=0&G>>>0<255){H=~~+O(+(+R(+(+(G>>>0)/255.0),+p)*255.0+.5))&255}else{H=G&255}a[l+G|0]=H;G=G+1|0}while((G|0)!=256)}else{G=0;do{a[l+G|0]=G;G=G+1|0}while((G|0)!=256)}G=d+500|0;l=c[D>>2]|0;if((l|0)>0){p=+O(+(1.0e10/+(l|0)+.5));if(p<=2147483647.0&p>=-2147483648.0){I=~~p}else{I=0}}else{I=c[E>>2]|0}E=Sl(d,256)|0;c[G>>2]=E;if(!((I+ -95e3|0)>>>0>1e4)){G=0;do{a[E+G|0]=G;G=G+1|0}while((G|0)!=256);i=f;return}p=+(I|0)*1.0e-5;I=0;do{if((I|0)!=0&I>>>0<255){J=~~+O(+(+R(+(+(I>>>0)/255.0),+p)*255.0+.5))&255}else{J=I&255}a[E+I|0]=J;I=I+1|0}while((I|0)!=256);i=f;return}function rl(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0,q=0;g=i;h=8-e|0;j=1<<h;k=(1<<16-e)+ -1|0;l=1<<15-e;m=Rl(a,j<<2)|0;c[d>>2]=m;d=(e|0)==0;n=+(k>>>0);o=+(f|0)*1.0e-5;if((f+ -95e3|0)>>>0>1e4){f=0;do{e=Sl(a,512)|0;c[m+(f<<2)>>2]=e;p=0;do{b[e+(p<<1)>>1]=~~+O(+(+R(+(+(((p<<h)+f|0)>>>0)/n),+o)*65535.0+.5));p=p+1|0}while((p|0)!=256);f=f+1|0}while(f>>>0<j>>>0);i=g;return}else{q=0}do{f=Sl(a,512)|0;c[m+(q<<2)>>2]=f;if(d){p=0;do{b[f+(p<<1)>>1]=(p<<h)+q;p=p+1|0}while((p|0)!=256)}else{p=0;do{b[f+(p<<1)>>1]=(((((p<<h)+q|0)*65535|0)+l|0)>>>0)/(k>>>0)|0;p=p+1|0}while((p|0)!=256)}q=q+1|0}while(q>>>0<j>>>0);i=g;return}function sl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0.0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;d=i;e=c[b>>2]|0;f=b+4|0;g=(c[f>>2]|0)+e+(c[b+8>>2]|0)|0;if((g|0)==0){h=1;i=d;return h|0}do{if((e|0)!=0){j=+O(+(+(e|0)*1.0e5/+(g|0)+.5));if(j<=2147483647.0&j>=-2147483648.0){k=~~j;break}else{h=1;i=d;return h|0}}else{k=0}}while(0);c[a>>2]=k;k=a+4|0;e=c[f>>2]|0;do{if((e|0)!=0){j=+O(+(+(e|0)*1.0e5/+(g|0)+.5));if(j<=2147483647.0&j>=-2147483648.0){l=~~j;break}else{h=1;i=d;return h|0}}else{l=0}}while(0);c[k>>2]=l;l=c[b>>2]|0;k=c[f>>2]|0;f=b+12|0;e=c[f>>2]|0;m=b+16|0;n=(c[m>>2]|0)+e+(c[b+20>>2]|0)|0;o=a+8|0;if((n|0)==0){h=1;i=d;return h|0}do{if((e|0)!=0){j=+O(+(+(e|0)*1.0e5/+(n|0)+.5));if(j<=2147483647.0&j>=-2147483648.0){p=~~j;break}else{h=1;i=d;return h|0}}else{p=0}}while(0);c[o>>2]=p;p=a+12|0;o=c[m>>2]|0;do{if((o|0)!=0){j=+O(+(+(o|0)*1.0e5/+(n|0)+.5));if(j<=2147483647.0&j>=-2147483648.0){q=~~j;break}else{h=1;i=d;return h|0}}else{q=0}}while(0);c[p>>2]=q;q=n+g|0;g=(c[f>>2]|0)+l|0;l=(c[m>>2]|0)+k|0;k=b+24|0;m=c[k>>2]|0;f=b+28|0;n=(c[f>>2]|0)+m+(c[b+32>>2]|0)|0;b=a+16|0;if((n|0)==0){h=1;i=d;return h|0}do{if((m|0)!=0){j=+O(+(+(m|0)*1.0e5/+(n|0)+.5));if(j<=2147483647.0&j>=-2147483648.0){r=~~j;break}else{h=1;i=d;return h|0}}else{r=0}}while(0);c[b>>2]=r;r=a+20|0;b=c[f>>2]|0;do{if((b|0)!=0){j=+O(+(+(b|0)*1.0e5/+(n|0)+.5));if(j<=2147483647.0&j>=-2147483648.0){s=~~j;break}else{h=1;i=d;return h|0}}else{s=0}}while(0);c[r>>2]=s;s=q+n|0;n=g+(c[k>>2]|0)|0;k=c[f>>2]|0;f=a+24|0;if((s|0)==0){h=1;i=d;return h|0}do{if((n|0)!=0){j=+O(+(+(n|0)*1.0e5/+(s|0)+.5));if(j<=2147483647.0&j>=-2147483648.0){t=~~j;break}else{h=1;i=d;return h|0}}else{t=0}}while(0);c[f>>2]=t;t=l+k|0;k=a+28|0;if((t|0)==0){c[k>>2]=0;h=0;i=d;return h|0}j=+O(+(+(t|0)*1.0e5/+(s|0)+.5));if(!(j<=2147483647.0&j>=-2147483648.0)){h=1;i=d;return h|0}c[k>>2]=~~j;h=0;i=d;return h|0}function tl(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;e=d;if((a|0)!=0?(d=c[a+168>>2]|0,(d|0)!=0):0){td[d&31](a,b)}d=c[o>>2]|0;c[e>>2]=(b|0)!=0?b:14544;Ic(d|0,14520,e|0)|0;$c(10,d|0)|0;Hl(a,1)}function ul(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;if(!((b|0)!=0&d>>>0<c>>>0)){g=d;i=f;return g|0}if((e|0)!=0?(h=c+ -1|0,c=a[e]|0,c<<24>>24!=0&h>>>0>d>>>0):0){j=d;k=e;e=c;while(1){c=k+1|0;l=j+1|0;a[b+j|0]=e;m=a[c]|0;if(m<<24>>24!=0&l>>>0<h>>>0){j=l;k=c;e=m}else{n=l;break}}}else{n=d}a[b+n|0]=0;g=n;i=f;return g|0}function vl(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;f=i;g=c+ -1|0;a[g]=0;if(!(g>>>0>b>>>0)){h=g;i=f;return h|0}if((d|0)==5){c=g;j=e;k=0;l=1;m=0;while(1){if(!((j|0)!=0|(k|0)<(l|0))){h=c;n=20;break}o=(j>>>0)%10|0;if((m|o|0)==0){p=c;q=0}else{r=c+ -1|0;a[r]=a[14400+o|0]|0;p=r;q=1}r=(j>>>0)/10|0;o=k+1|0;do{if((o|0)==5&p>>>0>b>>>0){if((q|0)!=0){s=p+ -1|0;a[s]=46;t=r;u=s;v=q;break}if(j>>>0<10){s=p+ -1|0;a[s]=48;t=0;u=s;v=0}else{t=r;u=p;v=0}}else{t=r;u=p;v=q}}while(0);if(u>>>0>b>>>0){c=u;j=t;k=o;l=5;m=v}else{h=u;n=20;break}}if((n|0)==20){i=f;return h|0}}else if((d|0)==2){u=g;v=e;m=0;l=1;while(1){if(!((v|0)!=0|(m|0)<(l|0))){h=u;n=20;break}k=u+ -1|0;a[k]=a[14400+((v>>>0)%10|0)|0]|0;if(k>>>0>b>>>0){u=k;v=(v>>>0)/10|0;m=m+1|0;l=2}else{h=k;n=20;break}}if((n|0)==20){i=f;return h|0}}else{l=g;g=e;e=0;m=1;while(1){if(!((g|0)!=0|(e|0)<(m|0))){h=l;n=20;break}if((d|0)==4){w=2;n=18}else if((d|0)==1){v=l+ -1|0;a[v]=a[14400+((g>>>0)%10|0)|0]|0;x=(g>>>0)/10|0;y=v;z=m}else if((d|0)==3){w=m;n=18}else{x=0;y=l;z=m}if((n|0)==18){n=0;v=l+ -1|0;a[v]=a[14400+(g&15)|0]|0;x=g>>>4;y=v;z=w}if(y>>>0>b>>>0){l=y;g=x;e=e+1|0;m=z}else{h=y;n=20;break}}if((n|0)==20){i=f;return h|0}}return 0}function wl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+16|0;f=e;if((b|0)!=0){a:do{if((a[d]|0)==35){g=1;while(1){h=g+1|0;if((a[d+g|0]|0)==32){j=g;break a}if((h|0)<15){g=h}else{j=h;break}}}else{j=0}}while(0);g=c[b+172>>2]|0;if((g|0)==0){k=j}else{td[g&31](b,d+j|0);i=e;return}}else{k=0}j=c[o>>2]|0;c[f>>2]=d+k;Ic(j|0,14496,f|0)|0;$c(10,j|0)|0;i=e;return}function xl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+16|0;f=e;g=(c[b+208>>2]&32768|0)!=0;if((c[b+212>>2]&1048576|0)==0){if(!g){tl(b,d)}if((c[b+376>>2]|0)==0){tl(b,d)}else{zl(b,d)}}if(g?(c[b+376>>2]|0)!=0:0){yl(b,d);i=e;return}if((b|0)!=0){a:do{if((a[d]|0)==35){g=1;while(1){h=g+1|0;if((a[d+g|0]|0)==32){j=g;break a}if((h|0)<15){g=h}else{j=h;break}}}else{j=0}}while(0);g=c[b+172>>2]|0;if((g|0)==0){k=j}else{td[g&31](b,d+j|0);i=e;return}}else{k=0}j=c[o>>2]|0;c[f>>2]=d+k;Ic(j|0,14496,f|0)|0;$c(10,j|0)|0;i=e;return}function yl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+224|0;f=e;g=e+4|0;if((b|0)==0){h=c[o>>2]|0;c[f>>2]=d;Ic(h|0,14496,f|0)|0;$c(10,h|0)|0;i=e;return}Cl(c[b+376>>2]|0,g,d);a:do{if((a[g]|0)==35){d=1;while(1){h=d+1|0;if((a[g+d|0]|0)==32){j=d;break a}if((h|0)<15){d=h}else{j=h;break}}}else{j=0}}while(0);d=c[b+172>>2]|0;h=g+j|0;if((d|0)==0){j=c[o>>2]|0;c[f>>2]=h;Ic(j|0,14496,f|0)|0;$c(10,j|0)|0;i=e;return}else{td[d&31](b,h);i=e;return}}function zl(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+224|0;e=d;if((a|0)==0){tl(0,b)}else{Cl(c[a+376>>2]|0,e,b);tl(a,e)}}function Al(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e;if((c[b+212>>2]&2097152|0)==0){tl(b,d)}a:do{if((a[d]|0)==35){g=1;while(1){h=g+1|0;if((a[d+g|0]|0)==32){j=g;break a}if((h|0)<15){g=h}else{j=h;break}}}else{j=0}}while(0);g=c[b+172>>2]|0;h=d+j|0;if((g|0)==0){j=c[o>>2]|0;c[f>>2]=h;Ic(j|0,14496,f|0)|0;$c(10,j|0)|0;i=e;return}else{td[g&31](b,h);i=e;return}}function Bl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e;if((c[b+212>>2]&4194304|0)==0){tl(b,d)}a:do{if((a[d]|0)==35){g=1;while(1){h=g+1|0;if((a[d+g|0]|0)==32){j=g;break a}if((h|0)<15){g=h}else{j=h;break}}}else{j=0}}while(0);g=c[b+172>>2]|0;h=d+j|0;if((g|0)==0){j=c[o>>2]|0;c[f>>2]=h;Ic(j|0,14496,f|0)|0;$c(10,j|0)|0;i=e;return}else{td[g&31](b,h);i=e;return}}function Cl(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;f=b>>>24;if((f+ -65|0)>>>0>57|(f+ -91|0)>>>0<6){a[c]=91;a[c+1|0]=a[14560+(b>>>28)|0]|0;a[c+2|0]=a[14560+(f&15)|0]|0;a[c+3|0]=93;g=4}else{a[c]=f;g=1}f=b>>>16;h=f&255;if((h+ -65|0)>>>0>57|(h+ -91|0)>>>0<6){a[c+g|0]=91;a[c+(g+1)|0]=a[14560+(b>>>20&15)|0]|0;a[c+(g|2)|0]=a[14560+(f&15)|0]|0;a[c+(g+3)|0]=93;j=g+4|0}else{a[c+g|0]=f;j=g+1|0}g=b>>>8;f=g&255;if((f+ -65|0)>>>0>57|(f+ -91|0)>>>0<6){a[c+j|0]=91;a[c+(j+1)|0]=a[14560+(b>>>12&15)|0]|0;a[c+(j+2)|0]=a[14560+(g&15)|0]|0;a[c+(j+3)|0]=93;k=j+4|0}else{a[c+j|0]=g;k=j+1|0}j=b&255;if((j+ -65|0)>>>0>57|(j+ -91|0)>>>0<6){a[c+k|0]=91;a[c+(k+1)|0]=a[14560+(b>>>4&15)|0]|0;a[c+(k+2)|0]=a[14560+(b&15)|0]|0;a[c+(k+3)|0]=93;l=k+4|0}else{a[c+k|0]=b;l=k+1|0}if((d|0)==0){a[c+l|0]=0;i=e;return}a[c+l|0]=58;a[c+(l+1)|0]=32;k=0;b=l+2|0;while(1){l=a[d+k|0]|0;if(l<<24>>24==0){m=b;break}j=k+1|0;g=b+1|0;a[c+b|0]=l;if((j|0)<195){k=j;b=g}else{m=g;break}}a[c+m|0]=0;i=e;return}function Dl(a,b){a=a|0;b=b|0;var d=0;d=i;if((c[a+212>>2]&1048576|0)==0){zl(a,b)}else{yl(a,b);i=d;return}}function El(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+16|0;g=f;if((c[b+208>>2]&32768|0)!=0){if((e|0)<2){yl(b,d);i=f;return}if((c[b+212>>2]&1048576|0)==0){zl(b,d)}yl(b,d);i=f;return}h=c[b+212>>2]|0;if((e|0)<1){if((h&2097152|0)==0){tl(b,d)}a:do{if((a[d]|0)==35){e=1;while(1){j=e+1|0;if((a[d+e|0]|0)==32){k=e;break a}if((j|0)<15){e=j}else{k=j;break}}}else{k=0}}while(0);e=c[b+172>>2]|0;j=d+k|0;if((e|0)==0){k=c[o>>2]|0;c[g>>2]=j;Ic(k|0,14496,g|0)|0;$c(10,k|0)|0;i=f;return}else{td[e&31](b,j);i=f;return}}else{if((h&4194304|0)==0){tl(b,d)}b:do{if((a[d]|0)==35){h=1;while(1){j=h+1|0;if((a[d+h|0]|0)==32){l=h;break b}if((j|0)<15){h=j}else{l=j;break}}}else{l=0}}while(0);h=c[b+172>>2]|0;j=d+l|0;if((h|0)==0){l=c[o>>2]|0;c[g>>2]=j;Ic(l|0,14496,g|0)|0;$c(10,l|0)|0;i=f;return}else{td[h&31](b,j);i=f;return}}}function Fl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,p=0;e=i;i=i+16|0;f=e;if((a|0)==0){g=0;i=e;return g|0}h=a+160|0;j=c[h>>2]|0;k=a+164|0;do{if((j|0)==0){c[k>>2]=0;if(d>>>0<157){c[h>>2]=a;l=a;break}m=Wl(a,d)|0;c[h>>2]=m;if((m|0)==0){g=0;i=e;return g|0}else{c[k>>2]=d;l=m;break}}else{m=c[k>>2]|0;if((m|0)==0){if((j|0)==(a|0)){n=156}else{tl(a,14424)}}else{n=m}if((n|0)!=(d|0)){m=c[a+172>>2]|0;if((m|0)==0){p=c[o>>2]|0;c[f>>2]=14456;Ic(p|0,14496,f|0)|0;$c(10,p|0)|0;g=0;i=e;return g|0}else{td[m&31](a,14456);g=0;i=e;return g|0}}else{l=j}}}while(0);c[a+156>>2]=b;g=l;i=e;return g|0}function Gl(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;b=i;i=i+160|0;d=i;i=i+168|0;c[d>>2]=0;e=b;if((a|0)==0){i=b;return}f=a+160|0;g=c[f>>2]|0;h=a+164|0;a:do{if((g|0)!=0?!((c[h>>2]|0)==0|(g|0)==(a|0)):0){jA(e,1,d|0)|0;p=0;j=p;p=0;if((j|0)!=0&(q|0)!=0){k=kA(c[j>>2]|0,d)|0;if((k|0)==0){Ea(j|0,q|0)}E=q}else{k=-1}if((k|0)==1){l=E}else{l=0}while(1){if((l|0)!=0){break a}c[f>>2]=e;c[h>>2]=0;c[a+156>>2]=9;p=0;oa(24,a|0,g|0);j=p;p=0;if((j|0)!=0&(q|0)!=0){m=kA(c[j>>2]|0,d)|0;if((m|0)==0){Ea(j|0,q|0)}E=q}else{m=-1}if((m|0)==1){l=E}else{break}}}}while(0);c[h>>2]=0;c[f>>2]=0;c[a+156>>2]=0;i=b;return}function Hl(a,b){a=a|0;b=b|0;var d=0,e=0;if(((a|0)!=0?(d=c[a+156>>2]|0,(d|0)!=0):0)?(e=c[a+160>>2]|0,(e|0)!=0):0){td[d&31](e,b)}Ac()}function Il(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;if((a|0)==0){i=f;return}c[a+176>>2]=b;c[a+168>>2]=d;c[a+172>>2]=e;i=f;return}function Jl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;if((a|0)==0|(b|0)==0){f=0;i=e;return f|0}f=c[b+8>>2]&d;i=e;return f|0}function Kl(a,b){a=a|0;b=b|0;var d=0;if((a|0)==0|(b|0)==0){d=0}else{d=c[b>>2]|0}return d|0}function Ll(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;if((a|0)==0|(b|0)==0){e=0;i=d;return e|0}e=c[b+4>>2]|0;i=d;return e|0}function Ml(b,c){b=b|0;c=c|0;var d=0;if((b|0)==0|(c|0)==0){d=0}else{d=a[c+24|0]|0}return d|0}function Nl(b,c){b=b|0;c=c|0;var d=0;if((b|0)==0|(c|0)==0){d=0}else{d=a[c+25|0]|0}return d|0}function Ol(b,c){b=b|0;c=c|0;var d=0;if((b|0)==0|(c|0)==0){d=0}else{d=a[c+29|0]|0}return d|0}function Pl(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+912|0;d=b;if((a|0)==0){i=b;return}lA(d|0,a|0,900)|0;nA(a|0,0,900)|0;e=c[d+724>>2]|0;if((e|0)==0){Xz(a)}else{td[e&31](d,a)}Gl(d);i=b;return}function Ql(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;if((a|0)==0|(b|0)==0){i=d;return}e=c[a+724>>2]|0;if((e|0)==0){Xz(b);i=d;return}else{td[e&31](a,b);i=d;return}}function Rl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;if((a|0)==0){e=0;i=d;return e|0}if((b|0)==0){tl(a,14640)}f=c[a+720>>2]|0;if((f|0)==0){g=Wz(b)|0}else{g=Ad[f&127](a,b)|0}if((g|0)==0){tl(a,14640)}nA(g|0,0,b|0)|0;e=g;i=d;return e|0}function Sl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;if((a|0)==0){e=0;i=d;return e|0}if((b|0)==0){tl(a,14640)}f=c[a+720>>2]|0;if((f|0)==0){g=Wz(b)|0}else{g=Ad[f&127](a,b)|0}if((g|0)==0){tl(a,14640)}else{e=g;i=d;return e|0}return 0}function Tl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;do{if((b|0)==0){e=0}else{if((a|0)!=0?(f=c[a+720>>2]|0,(f|0)!=0):0){e=Ad[f&127](a,b)|0;break}e=Wz(b)|0}}while(0);i=d;return e|0}function Ul(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;if((b|0)<1|(d|0)==0){tl(a,14576)}do{if(!((4294967295/(d>>>0)|0)>>>0<b>>>0)?(f=aa(d,b)|0,(f|0)!=0):0){if((a|0)!=0?(g=c[a+720>>2]|0,(g|0)!=0):0){h=Ad[g&127](a,f)|0;break}h=Wz(f)|0}else{h=0}}while(0);i=e;return h|0}function Vl(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;if((e|0)<1|(f|0)==0|(d|0)<0){tl(a,14608)}h=(d|0)>0;if((b|0)==0&h){tl(a,14608)}if((2147483647-d|0)<(e|0)){j=0;i=g;return j|0}k=e+d|0;if((4294967295/(f>>>0)|0)>>>0<k>>>0){j=0;i=g;return j|0}l=aa(k,f)|0;if((l|0)==0){j=0;i=g;return j|0}if((a|0)!=0?(k=c[a+720>>2]|0,(k|0)!=0):0){m=Ad[k&127](a,l)|0}else{m=Wz(l)|0}if((m|0)==0){j=0;i=g;return j|0}l=aa(f,d)|0;if(h){lA(m|0,b|0,l|0)|0}nA(m+l|0,0,aa(f,e)|0)|0;j=m;i=g;return j|0}function Wl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;do{if((a|0)==0){e=0}else{if((b|0)!=0){f=c[a+720>>2]|0;if((f|0)==0){g=Wz(b)|0}else{g=Ad[f&127](a,b)|0}if((g|0)!=0){e=g;break}}wl(a,14640);e=0}}while(0);i=d;return e|0}function Xl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=i;if((a|0)==0){i=f;return}c[a+716>>2]=b;c[a+720>>2]=d;c[a+724>>2]=e;i=f;return}function Yl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;g=Ok(a,b,d,e,0,0,0)|0;if((g|0)==0){i=f;return g|0}c[g+208>>2]=32768;c[g+796>>2]=8192;e=g+212|0;c[e>>2]=c[e>>2]|3145728;cm(g,0,0);i=f;return g|0}function Zl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;if((b|0)==0|(d|0)==0){i=e;return}lm(b,d);f=b+376|0;g=b+208|0;h=b+435|0;while(1){j=mm(b)|0;k=c[f>>2]|0;l=(k|0)==1229209940;m=c[g>>2]|0;if(!l){if((m&4|0)!=0){c[g>>2]=m|8}}else{if((m&1|0)==0){n=5;break}if((a[h]|0)==3?(m&2|0)==0:0){n=8;break}if((m&8|0)==0){o=m}else{Dl(b,14720);o=c[g>>2]|0}c[g>>2]=o|4}if((k|0)==1229472850){om(b,d,j);continue}else if((k|0)!=1229278788){m=Tk(b,k)|0;if((m|0)!=0){Lm(b,d,j,m);if((k|0)!=1347179589){if(l){n=21;break}else{continue}}else{c[g>>2]=c[g>>2]|2;continue}}if((k|0)==1347179589){pm(b,d,j);continue}if(l){n=25;break}if((k|0)==1732332865){rm(b,d,j);continue}else if((k|0)==1665684045){tm(b,d,j);continue}else if((k|0)==1649100612){Am(b,d,j);continue}else if((k|0)==1749635924){Bm(b,d,j);continue}else if((k|0)==2052348020){Im(b,d,j);continue}else if((k|0)==1767135348){Km(b,d,j);continue}else if((k|0)==1866876531){Dm(b,d,j);continue}else if((k|0)==1883455820){Em(b,d,j);continue}else if((k|0)==1933787468){Fm(b,d,j);continue}else if((k|0)==1950960965){Gm(b,d,j);continue}else if((k|0)==1951551059){zm(b,d,j);continue}else if((k|0)==1934642260){ym(b,d,j);continue}else if((k|0)==1950701684){Hm(b,d,j);continue}else if((k|0)==1766015824){vm(b,d,j);continue}else if((k|0)==1933723988){sm(b,d,j);continue}else if((k|0)==1934772034){um(b,d,j);continue}else if((k|0)==1883789683){Cm(b,d,j);continue}else{Lm(b,d,j,0);continue}}else{qm(b,d,j);continue}}if((n|0)==5){zl(b,14656)}else if((n|0)==8){zl(b,14688)}else if((n|0)==21){c[b+408>>2]=0;i=e;return}else if((n|0)==25){c[b+408>>2]=j;i=e;return}}function _l(e,f,g){e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;h=i;i=i+16|0;j=h;if((e|0)==0){i=h;return}if((c[e+212>>2]&64|0)==0){Sm(e)}k=c[e+368>>2]|0;c[j>>2]=k;l=j+8|0;a[l]=a[e+435|0]|0;a[j+9|0]=a[e+436|0]|0;a[j+10|0]=a[e+439|0]|0;m=a[e+438|0]|0;n=j+11|0;a[n]=m;o=m&255;if((m&255)>7){p=aa(o>>>3,k)|0}else{p=((aa(k,o)|0)+7|0)>>>3}o=j+4|0;c[o>>2]=p;k=e+372|0;m=c[k>>2]|0;q=e+432|0;a:do{if((a[q]|0)!=0?(c[e+216>>2]&2|0)!=0:0){switch(d[e+433|0]|0){case 4:{if((m&3|0)==2){break a}if((g|0)!=0?(m&2|0)!=0:0){Nm(e,g,1)}Rm(e);i=h;return};case 5:{if((m&1|0)==0?!((c[e+348>>2]|0)>>>0<2):0){break a}if((g|0)!=0){Nm(e,g,1)}Rm(e);i=h;return};case 3:{if((m&3|0)==0?!((c[e+348>>2]|0)>>>0<3):0){break a}if((g|0)!=0){Nm(e,g,1)}Rm(e);i=h;return};case 2:{if((m&7|0)==4){break a}if((g|0)!=0?(m&4|0)!=0:0){Nm(e,g,1)}Rm(e);i=h;return};case 0:{if((m&7|0)==0){break a}if((g|0)!=0){Nm(e,g,1)}Rm(e);i=h;return};case 1:{if((m&7|0)==0?!((c[e+348>>2]|0)>>>0<5):0){break a}if((g|0)!=0){Nm(e,g,1)}Rm(e);i=h;return};default:{if((m&1|0)!=0){break a}Rm(e);i=h;return}}}}while(0);if((c[e+208>>2]&4|0)==0){tl(e,14744)}m=e+384|0;Qm(e,c[m>>2]|0,p+1|0);p=c[m>>2]|0;r=a[p]|0;s=r&255;do{if(!(r<<24>>24==0)){if((r&255)<5){t=e+380|0;Pm(e,j,p+1|0,(c[t>>2]|0)+1|0,s);u=t;v=c[m>>2]|0;break}else{tl(e,14784)}}else{u=e+380|0;v=p}}while(0);lA(c[u>>2]|0,v|0,(c[o>>2]|0)+1|0)|0;do{if(((c[e+708>>2]&4|0)!=0?(a[e+712|0]|0)==64:0)?(o=(c[m>>2]|0)+1|0,v=c[j>>2]|0,u=b[l>>1]|0,p=u&255,!((p&2)==0)):0){s=(u&65535)>>>8&255;if(s<<24>>24==8){if(p<<24>>24==6){w=4}else if(p<<24>>24==2){w=3}else{break}if((v|0)==0){break}else{x=0;y=o}while(1){u=d[y+1|0]|0;a[y]=u+(d[y]|0);r=y+2|0;a[r]=(d[r]|0)+u;x=x+1|0;if((x|0)==(v|0)){break}else{y=y+w|0}}}else if(s<<24>>24==16){if(p<<24>>24==6){z=8}else if(p<<24>>24==2){z=6}else{break}if((v|0)==0){break}else{A=0;B=o}while(1){u=B+1|0;r=d[B+2|0]<<8|d[B+3|0];t=B+4|0;C=B+5|0;D=r+(d[B]<<8|d[u])|0;E=(d[t]<<8|d[C])+r|0;a[B]=D>>>8;a[u]=D;a[t]=E>>>8;a[C]=E;A=A+1|0;if((A|0)==(v|0)){break}else{B=B+z|0}}}else{break}}}while(0);z=e+216|0;if((c[z>>2]|0)!=0){im(e,j)}B=e+443|0;A=a[B]|0;w=a[n]|0;if(A<<24>>24==0){a[B]=w;if((w&255)>(d[e+442|0]|0)){tl(e,14816)}}else{if(!(A<<24>>24==w<<24>>24)){tl(e,14840)}}if((a[q]|0)!=0?(q=c[z>>2]|0,(q&2|0)!=0):0){z=a[e+433|0]|0;if((z&255)<6){Om(j,(c[m>>2]|0)+1|0,z&255,q)}if((g|0)!=0){Nm(e,g,1)}if((f|0)!=0){Nm(e,f,0)}}else{if((f|0)!=0){Nm(e,f,-1)}if((g|0)!=0){Nm(e,g,-1)}}Rm(e);g=c[e+544>>2]|0;if((g|0)==0){i=h;return}wd[g&31](e,c[k>>2]|0,d[e+433|0]|0);i=h;return}function $l(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;if((a|0)==0){i=e;return}f=c[a>>2]|0;if((f|0)==0){i=e;return}Qk(f,d);Qk(f,b);c[a>>2]=0;pl(f);Ql(f,c[f+728>>2]|0);Ql(f,c[f+804>>2]|0);Ql(f,c[f+788>>2]|0);Ql(f,c[f+612>>2]|0);Ql(f,c[f+616>>2]|0);a=f+676|0;b=c[a>>2]|0;if((b&4096|0)==0){g=b}else{Kk(f,c[f+416>>2]|0);g=c[a>>2]|0}b=g&-4097;c[a>>2]=b;if((g&8192|0)==0){h=b}else{Ql(f,c[f+528>>2]|0);h=c[a>>2]|0}c[a>>2]=h&-8193;yn(f+224|0)|0;Ql(f,c[f+568>>2]|0);Ql(f,c[f+772>>2]|0);Ql(f,c[f+696>>2]|0);Pl(f);i=e;return}function am(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;f=c[a+184>>2]|0;if((f|0)==0){tl(a,14888)}else{wd[f&31](a,b,d);i=e;return}}function bm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=i;if((a|0)==0){i=e;return}if((za(b|0,1,d|0,c[a+188>>2]|0)|0)==(d|0)){i=e;return}else{tl(a,14920)}}function cm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;if((a|0)==0){i=e;return}c[a+188>>2]=b;if((d|0)==0){f=12}else{f=d}c[a+184>>2]=f;f=a+180|0;if((c[f>>2]|0)!=0){c[f>>2]=0;wl(a,14936)}c[a+472>>2]=0;i=e;return}function dm(a){a=a|0;var b=0,d=0,e=0;b=i;if((a|0)==0){i=b;return}d=a+212|0;e=c[d>>2]|0;if((e&64|0)==0){c[d>>2]=e|16384;e=a+216|0;c[e>>2]=c[e>>2]|1024;i=b;return}else{Bl(a,15256);i=b;return}}function em(a){a=a|0;var b=0,d=0,e=0;b=i;if((a|0)==0){i=b;return}d=a+212|0;e=c[d>>2]|0;if((e&64|0)==0){c[d>>2]=e|16384;e=a+216|0;c[e>>2]=c[e>>2]|33558528;i=b;return}else{Bl(a,15256);i=b;return}}function fm(a){a=a|0;var b=0,d=0,e=0;b=i;if((a|0)==0){i=b;return}d=a+212|0;e=c[d>>2]|0;if((e&64|0)==0){c[d>>2]=e|16384;e=a+216|0;c[e>>2]=c[e>>2]|33558528;i=b;return}else{Bl(a,15256);i=b;return}}function gm(a){a=a|0;var b=0,d=0,e=0;b=i;if((a|0)==0){i=b;return}d=a+212|0;e=c[d>>2]|0;if((e&64|0)==0){c[d>>2]=e|16384;c[a+216>>2]=c[a+216>>2]|20480;i=b;return}else{Bl(a,15256);i=b;return}}function hm(f){f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;g=i;i=i+16|0;h=g;j=f+824|0;k=c[j>>2]|0;l=f+488|0;m=c[l>>2]|0;n=(m|0)!=0;do{if((k|0)==0){if(n){c[j>>2]=kl(m)|0;o=0;break}else{c[j>>2]=1e5;c[l>>2]=1e5;o=0;break}}else{if(!n){c[l>>2]=kl(k)|0;o=0;break}if((gl(h,k,m,1e5)|0)==0){o=1}else{o=(ll(c[h>>2]|0)|0)!=0}}}while(0);h=f+898|0;b[h>>1]=e[h>>1]|1;h=f+216|0;m=c[h>>2]|0;k=o?m|8192:m&-8193;c[h>>2]=k;if((k&262272|0)==262144){c[h>>2]=k&-41943297;k=f+212|0;c[k>>2]=c[k>>2]&-8193;b[f+428>>1]=0}k=(ll(c[l>>2]|0)|0)==0;m=c[h>>2]|0;if(k){k=m&-8388609;c[h>>2]=k;o=f+212|0;c[o>>2]=c[o>>2]&-8193;p=k}else{p=m}if((p&6291456|0)==0){q=p}else{fl(f);q=c[h>>2]|0}if((q&256|0)==0){if(((q&16512|0)==16512?(p=b[f+454>>1]|0,p<<16>>16==(b[f+456>>1]|0)):0)?p<<16>>16==(b[f+458>>1]|0):0){m=f+208|0;c[m>>2]=c[m>>2]|2048;b[f+460>>1]=p}}else{if((a[f+435|0]&2)==0){p=f+208|0;c[p>>2]=c[p>>2]|2048}}p=f+435|0;m=a[p]|0;if(m<<24>>24==3){k=b[f+428>>1]|0;a:do{if(k<<16>>16==0){r=0;s=0;t=28}else{o=c[f+528>>2]|0;n=k&65535;u=0;v=0;while(1){w=a[o+u|0]|0;if(!(w<<24>>24==-1)){if(w<<24>>24==0){x=1}else{y=k;z=q;break a}}else{x=v}w=u+1|0;if((w|0)<(n|0)){u=w;v=x}else{r=k;s=x;t=28;break}}}}while(0);if((t|0)==28){x=q&-8388609;c[h>>2]=x;k=f+212|0;c[k>>2]=c[k>>2]&-8193;if((s|0)==0){s=q&-8388993;c[h>>2]=s;y=r;z=s}else{y=r;z=x}}if(((z&4352|0)==4352?(x=d[f+452|0]|0,r=c[f+416>>2]|0,b[f+454>>1]=d[r+(x*3|0)|0]|0,b[f+456>>1]=d[r+(x*3|0)+1|0]|0,b[f+458>>1]=d[r+(x*3|0)+2|0]|0,(z&34078720|0)==524288):0)?(x=y&65535,!(y<<16>>16==0)):0){y=c[f+528>>2]|0;r=0;do{s=y+r|0;a[s]=d[s]^255;r=r+1|0}while((r|0)<(x|0));A=c[h>>2]|0}else{A=z}}else{if((m&4)==0){z=(b[f+428>>1]|0)==0;x=q&-8388609;c[h>>2]=x;r=f+212|0;c[r>>2]=c[r>>2]&-8193;if(z){z=q&-8388993;c[h>>2]=z;B=z}else{B=x}}else{B=q}if((B&4352|0)==4352?(m&2)==0:0){m=e[f+460>>1]|0;q=e[f+540>>1]|0;x=d[f+436|0]|0;if((x|0)==1){C=m*255|0;D=q*255|0}else if((x|0)==2){C=m*85|0;D=q*85|0}else if((x|0)==4){C=m*17|0;D=q*17|0}else{C=m;D=q}q=C&65535;b[f+458>>1]=q;b[f+456>>1]=q;b[f+454>>1]=q;if((B&33554432|0)==0){q=D&65535;b[f+538>>1]=q;b[f+536>>1]=q;b[f+534>>1]=q;A=B}else{A=B}}else{A=B}}if((A&896|0)==640?(a[f+436|0]|0)!=16:0){B=f+454|0;b[B>>1]=(((e[B>>1]|0)*255|0)+32895|0)>>>16;B=f+456|0;b[B>>1]=(((e[B>>1]|0)*255|0)+32895|0)>>>16;B=f+458|0;b[B>>1]=(((e[B>>1]|0)*255|0)+32895|0)>>>16;B=f+460|0;b[B>>1]=(((e[B>>1]|0)*255|0)+32895|0)>>>16}if((A&128|0)!=0&(A&67109888|0)!=0&(A&256|0)==0?(a[f+436|0]|0)==16:0){B=f+454|0;b[B>>1]=(e[B>>1]|0)*257;B=f+456|0;b[B>>1]=(e[B>>1]|0)*257;B=f+458|0;b[B>>1]=(e[B>>1]|0)*257;B=f+460|0;b[B>>1]=(e[B>>1]|0)*257}B=f+462|0;q=f+452|0;b[B+0>>1]=b[q+0>>1]|0;b[B+2>>1]=b[q+2>>1]|0;b[B+4>>1]=b[q+4>>1]|0;b[B+6>>1]=b[q+6>>1]|0;b[B+8>>1]=b[q+8>>1]|0;do{if((A&8192|0)==0){if((A&6291456|0)==0){E=A}else{if((ll(c[j>>2]|0)|0)!=0){t=66;break}if((ll(c[l>>2]|0)|0)!=0){t=66;break}E=c[h>>2]|0}if((E&128|0)!=0){if((ll(c[j>>2]|0)|0)!=0){t=66;break}if((ll(c[l>>2]|0)|0)!=0){t=66;break}if((a[f+446|0]|0)==3?(ll(c[f+448>>2]|0)|0)!=0:0){t=66;break}}q=c[h>>2]|0;if((q&8388608|0)==0){F=q}else{if((ll(c[l>>2]|0)|0)!=0){t=66;break}F=c[h>>2]|0}if((F&128|0)!=0?(a[p]|0)==3:0){q=b[f+428>>1]|0;B=q&65535;D=c[f+416>>2]|0;C=b[f+454>>1]|0;m=C&255;x=b[f+456>>1]|0;z=x&255;r=b[f+458>>1]|0;y=r&255;if(q<<16>>16==0){G=F}else{q=f+528|0;s=C&255;C=x&255;x=r&255;r=0;do{k=a[(c[q>>2]|0)+r|0]|0;if(k<<24>>24==0){a[D+(r*3|0)|0]=m;a[D+(r*3|0)+1|0]=z;a[D+(r*3|0)+2|0]=y}else if(!(k<<24>>24==-1)){v=D+(r*3|0)|0;u=k&255;k=(aa(u^255,s)|0)+128+(aa(d[v]|0,u)|0)|0;a[v]=((k>>>8&255)+k|0)>>>8;k=D+(r*3|0)+1|0;v=d[(c[q>>2]|0)+r|0]|0;u=(aa(v,d[k]|0)|0)+128+(aa(v^255,C)|0)|0;a[k]=((u>>>8&255)+u|0)>>>8;u=D+(r*3|0)+2|0;k=d[(c[q>>2]|0)+r|0]|0;v=(aa(k,d[u]|0)|0)+128+(aa(k^255,x)|0)|0;a[u]=((v>>>8&255)+v|0)>>>8}r=r+1|0}while((r|0)<(B|0));G=c[h>>2]|0}B=G&-129;c[h>>2]=B;H=B}else{H=F}}else{t=66}}while(0);do{if((t|0)==66){ql(f,d[f+436|0]|0);F=c[h>>2]|0;if((F&128|0)==0){if((a[p]|0)!=3){H=F;break}if(!((F&4096|0)==0|(F&6291456|0)==0)){H=F;break}G=c[f+416>>2]|0;E=b[f+420>>1]|0;A=E&65535;if(E<<16>>16==0){I=F}else{E=f+492|0;B=0;do{r=G+(B*3|0)|0;a[r]=a[(c[E>>2]|0)+(d[r]|0)|0]|0;r=G+(B*3|0)+1|0;a[r]=a[(c[E>>2]|0)+(d[r]|0)|0]|0;r=G+(B*3|0)+2|0;a[r]=a[(c[E>>2]|0)+(d[r]|0)|0]|0;B=B+1|0}while((B|0)<(A|0));I=c[h>>2]|0}A=I&-8193;c[h>>2]=A;H=A;break}if((F&6291456|0)!=0){wl(f,15008)}if((a[p]|0)!=3){A=f+446|0;B=d[A]|0;if((B|0)==2){E=kl(c[j>>2]|0)|0;J=E;K=ml(c[j>>2]|0,c[l>>2]|0)|0}else if((B|0)==3){E=f+448|0;G=kl(c[E>>2]|0)|0;J=G;K=ml(c[E>>2]|0,c[l>>2]|0)|0}else if((B|0)==1){J=c[l>>2]|0;K=1e5}else{tl(f,15064)}B=ll(J)|0;E=ll(K)|0;G=(B|0)!=0;if(G){b[f+470>>1]=ol(f,e[f+460>>1]|0,J)|0}B=(E|0)!=0;if(B){E=f+460|0;b[E>>1]=ol(f,e[E>>1]|0,K)|0}E=f+454|0;r=b[E>>1]|0;x=f+456|0;if((r<<16>>16==(b[x>>1]|0)?(q=f+458|0,r<<16>>16==(b[q>>1]|0)):0)?r<<16>>16==(b[f+460>>1]|0):0){D=b[f+470>>1]|0;b[f+468>>1]=D;b[f+466>>1]=D;b[f+464>>1]=D;b[q>>1]=r;b[x>>1]=r;b[E>>1]=r}else{if(G){b[f+464>>1]=ol(f,r&65535,J)|0;b[f+466>>1]=ol(f,e[x>>1]|0,J)|0;b[f+468>>1]=ol(f,e[f+458>>1]|0,J)|0}if(B){b[E>>1]=ol(f,e[E>>1]|0,K)|0;b[x>>1]=ol(f,e[x>>1]|0,K)|0;x=f+458|0;b[x>>1]=ol(f,e[x>>1]|0,K)|0}}a[A]=1;H=c[h>>2]|0;break}A=c[f+416>>2]|0;x=b[f+420>>1]|0;E=x&65535;B=a[f+446|0]|0;do{if(!(B<<24>>24==2)){r=B&255;if((r|0)==1){L=c[l>>2]|0;M=1e5}else if((r|0)==3){G=f+448|0;q=kl(c[G>>2]|0)|0;L=q;M=ml(c[G>>2]|0,c[l>>2]|0)|0}else if((r|0)==2){r=kl(c[j>>2]|0)|0;L=r;M=ml(c[j>>2]|0,c[l>>2]|0)|0}else{L=1e5;M=1e5}r=(ll(M)|0)==0;G=f+454|0;q=b[G>>1]|0;if(r){N=q&255;O=b[f+456>>1]&255;P=b[f+458>>1]&255}else{r=nl(q&65535,M)|0;q=nl(e[f+456>>1]|0,M)|0;N=r;O=q;P=nl(e[f+458>>1]|0,M)|0}q=(ll(L)|0)==0;r=b[G>>1]|0;if(q){Q=N;R=O;S=P;T=r&255;U=b[f+456>>1]&255;V=b[f+458>>1]&255;break}else{q=nl(r&65535,L)|0;r=nl(e[f+456>>1]|0,L)|0;Q=N;R=O;S=P;T=q;U=r;V=nl(e[f+458>>1]|0,L)|0;break}}else{r=e[f+454>>1]|0;q=c[f+492>>2]|0;G=e[f+456>>1]|0;D=e[f+458>>1]|0;C=c[f+504>>2]|0;Q=a[q+r|0]|0;R=a[q+G|0]|0;S=a[q+D|0]|0;T=a[C+r|0]|0;U=a[C+G|0]|0;V=a[C+D|0]|0}}while(0);if(!(x<<16>>16==0)){B=f+428|0;F=f+528|0;D=f+504|0;C=T&255;G=f+500|0;r=U&255;q=V&255;s=f+492|0;y=0;do{do{if((y|0)<(e[B>>1]|0)?(z=a[(c[F>>2]|0)+y|0]|0,!(z<<24>>24==-1)):0){m=A+(y*3|0)|0;if(z<<24>>24==0){a[m]=Q;a[A+(y*3|0)+1|0]=R;a[A+(y*3|0)+2|0]=S;break}else{v=z&255;z=(aa(v^255,C)|0)+128+(aa(d[(c[D>>2]|0)+(d[m]|0)|0]|0,v)|0)|0;a[m]=a[(c[G>>2]|0)+(((z>>>8&255)+z|0)>>>8&255)|0]|0;z=A+(y*3|0)+1|0;m=d[(c[F>>2]|0)+y|0]|0;v=(aa(m,d[(c[D>>2]|0)+(d[z]|0)|0]|0)|0)+128+(aa(m^255,r)|0)|0;a[z]=a[(c[G>>2]|0)+(((v>>>8&255)+v|0)>>>8&255)|0]|0;v=A+(y*3|0)+2|0;z=d[(c[F>>2]|0)+y|0]|0;m=(aa(z,d[(c[D>>2]|0)+(d[v]|0)|0]|0)|0)+128+(aa(z^255,q)|0)|0;a[v]=a[(c[G>>2]|0)+(((m>>>8&255)+m|0)>>>8&255)|0]|0;break}}else{t=89}}while(0);if((t|0)==89){t=0;m=A+(y*3|0)|0;a[m]=a[(c[s>>2]|0)+(d[m]|0)|0]|0;m=A+(y*3|0)+1|0;a[m]=a[(c[s>>2]|0)+(d[m]|0)|0]|0;m=A+(y*3|0)+2|0;a[m]=a[(c[s>>2]|0)+(d[m]|0)|0]|0}y=y+1|0}while((y|0)<(E|0))}E=c[h>>2]&-8321;c[h>>2]=E;H=E}}while(0);if((H&4104|0)!=8){i=g;return}if((a[p]|0)!=3){i=g;return}p=b[f+420>>1]|0;t=p&65535;S=a[f+516|0]|0;R=8-(S&255)|0;c[h>>2]=H&-9;if(!(S<<24>>24==0|(R|0)<1|p<<16>>16==0)){S=f+416|0;H=0;do{h=(c[S>>2]|0)+(H*3|0)|0;a[h]=(d[h]|0)>>>R;H=H+1|0}while((H|0)<(t|0))}H=a[f+517|0]|0;R=8-(H&255)|0;if(!(H<<24>>24==0|(R|0)<1|p<<16>>16==0)){H=f+416|0;S=0;do{h=(c[H>>2]|0)+(S*3|0)+1|0;a[h]=(d[h]|0)>>>R;S=S+1|0}while((S|0)<(t|0))}S=a[f+518|0]|0;R=8-(S&255)|0;if(S<<24>>24==0|(R|0)<1|p<<16>>16==0){i=g;return}p=f+416|0;f=0;do{S=(c[p>>2]|0)+(f*3|0)+2|0;a[S]=(d[S]|0)>>>R;f=f+1|0}while((f|0)<(t|0));i=g;return}



function Uy(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;h=i;i=i+32|0;j=h+24|0;k=h;l=h+4|0;m=h+8|0;n=h+12|0;o=h+16|0;p=h+20|0;c[j>>2]=a;c[k>>2]=b;c[l>>2]=d;c[m>>2]=e;c[n>>2]=f;c[o>>2]=g;c[p>>2]=Vy(c[j>>2]|0,c[n>>2]|0,c[o>>2]|0)|0;if((c[p>>2]|0)!=0){q=c[p>>2]|0;i=h;return q|0}c[p>>2]=Wy((c[j>>2]|0)+12|0,c[k>>2]|0,c[l>>2]|0,c[m>>2]|0,c[o>>2]|0)|0;q=c[p>>2]|0;i=h;return q|0}function Vy(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+12|0;g=e;h=e+4|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;$y(c[f>>2]|0,c[g>>2]|0);g=Zy((c[f>>2]|0)+12|0,c[h>>2]|0,e+8|0)|0;i=e;return g|0}function Wy(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;j=i;i=i+48|0;k=j+44|0;l=j+40|0;m=j+36|0;n=j+32|0;o=j+28|0;p=j+24|0;q=j+20|0;r=j+12|0;s=j+8|0;t=j+4|0;u=j;v=j+16|0;c[k>>2]=b;c[l>>2]=e;c[m>>2]=f;c[n>>2]=g;c[o>>2]=h;c[p>>2]=Xy(c[k>>2]|0,c[o>>2]|0,q)|0;if((c[p>>2]|0)!=0){w=c[p>>2]|0;i=j;return w|0}c[p>>2]=Yy(c[q>>2]|0,c[n>>2]|0,c[o>>2]|0)|0;if((c[p>>2]|0)!=0){w=c[p>>2]|0;i=j;return w|0}c[c[q>>2]>>2]=c[n>>2];c[r>>2]=(c[l>>2]|0)+((c[m>>2]|0)>>>3);c[s>>2]=128>>(c[m>>2]&7);c[t>>2]=c[(c[q>>2]|0)+8>>2];c[u>>2]=128;while(1){if(!((c[n>>2]|0)>>>0>0)){break}c[v>>2]=(d[c[t>>2]|0]|0)&~c[u>>2];if(((d[c[r>>2]|0]|0)&c[s>>2]|0)!=0){c[v>>2]=c[v>>2]|c[u>>2]}a[c[t>>2]|0]=c[v>>2];c[s>>2]=c[s>>2]>>1;if((c[s>>2]|0)==0){c[r>>2]=(c[r>>2]|0)+1;c[s>>2]=128}c[u>>2]=c[u>>2]>>1;if((c[u>>2]|0)==0){c[t>>2]=(c[t>>2]|0)+1;c[u>>2]=128}c[n>>2]=(c[n>>2]|0)+ -1}w=c[p>>2]|0;i=j;return w|0}function Xy(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+32|0;f=e+20|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[j>>2]=0;c[k>>2]=c[c[f>>2]>>2];d=c[f>>2]|0;if((c[k>>2]|0)==0){c[j>>2]=Zy(d,c[g>>2]|0,l)|0;m=c[l>>2]|0;n=c[h>>2]|0;c[n>>2]=m;o=c[j>>2]|0;i=e;return o|0}else{c[l>>2]=(c[d+8>>2]|0)+(c[k>>2]<<4)+ -16;m=c[l>>2]|0;n=c[h>>2]|0;c[n>>2]=m;o=c[j>>2]|0;i=e;return o|0}return 0}function Yy(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+32|0;f=e+20|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[j>>2]=((c[(c[f>>2]|0)+4>>2]|0)+7|0)>>>3;c[k>>2]=((c[g>>2]|0)+7|0)>>>3;c[l>>2]=0;if(!((c[k>>2]|0)>>>0>(c[j>>2]|0)>>>0)){m=c[l>>2]|0;i=e;return m|0}c[k>>2]=(c[k>>2]|0)+7&-8;g=Yn(c[h>>2]|0,1,c[j>>2]|0,c[k>>2]|0,c[(c[f>>2]|0)+8>>2]|0,l)|0;c[(c[f>>2]|0)+8>>2]=g;if((c[l>>2]|0)!=0){m=c[l>>2]|0;i=e;return m|0}c[(c[f>>2]|0)+4>>2]=c[k>>2]<<3;m=c[l>>2]|0;i=e;return m|0}function Zy(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+32|0;f=e+20|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[k>>2]=0;c[l>>2]=0;c[j>>2]=c[c[f>>2]>>2];c[j>>2]=(c[j>>2]|0)+1;if((c[j>>2]|0)>>>0>(c[(c[f>>2]|0)+4>>2]|0)>>>0?(c[k>>2]=_y(c[f>>2]|0,c[j>>2]|0,c[g>>2]|0)|0,(c[k>>2]|0)!=0):0){m=c[l>>2]|0;n=c[h>>2]|0;c[n>>2]=m;o=c[k>>2]|0;i=e;return o|0}c[l>>2]=(c[(c[f>>2]|0)+8>>2]|0)+(c[j>>2]<<4)+ -16;c[c[l>>2]>>2]=0;c[(c[l>>2]|0)+12>>2]=0;c[c[f>>2]>>2]=c[j>>2];m=c[l>>2]|0;n=c[h>>2]|0;c[n>>2]=m;o=c[k>>2]|0;i=e;return o|0}function _y(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+32|0;f=e+20|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[j>>2]=c[(c[f>>2]|0)+4>>2];c[k>>2]=c[g>>2];c[l>>2]=0;if(!((c[k>>2]|0)>>>0>(c[j>>2]|0)>>>0)){m=c[l>>2]|0;i=e;return m|0}c[k>>2]=(c[k>>2]|0)+7&-8;g=Yn(c[h>>2]|0,16,c[j>>2]|0,c[k>>2]|0,c[(c[f>>2]|0)+8>>2]|0,l)|0;c[(c[f>>2]|0)+8>>2]=g;if((c[l>>2]|0)!=0){m=c[l>>2]|0;i=e;return m|0}c[(c[f>>2]|0)+4>>2]=c[k>>2];m=c[l>>2]|0;i=e;return m|0}function $y(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d+12|0;f=d;g=d+4|0;h=d+8|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=c[(c[e>>2]|0)+12>>2];if(!((c[g>>2]|0)>>>0>0)){i=d;return}c[h>>2]=(c[(c[e>>2]|0)+20>>2]|0)+(c[g>>2]<<4)+ -16;c[(c[h>>2]|0)+12>>2]=c[f>>2];i=d;return}function az(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+32|0;g=f+24|0;h=f;j=f+4|0;k=f+8|0;l=f+12|0;m=f+16|0;n=f+20|0;c[g>>2]=a;c[h>>2]=b;c[j>>2]=d;c[k>>2]=e;if((c[(c[g>>2]|0)+4>>2]|0)!=0){i=f;return}if((c[h>>2]|0)<0|(c[h>>2]|0)>1){c[h>>2]=(c[h>>2]|0)!=0}if(!(((c[(c[g>>2]|0)+12>>2]|0)+ -1|0)>>>0<2)){i=f;return}c[l>>2]=(c[g>>2]|0)+16+((c[h>>2]|0)*36|0);while(1){if(!((c[j>>2]|0)>>>0>0)){o=10;break}c[n>>2]=c[c[g>>2]>>2];c[m>>2]=bz(c[l>>2]|0,c[c[k>>2]>>2]|0,c[(c[k>>2]|0)+4>>2]|0,c[n>>2]|0,0)|0;if((c[m>>2]|0)!=0){break}c[j>>2]=(c[j>>2]|0)+ -1;c[k>>2]=(c[k>>2]|0)+8}if((o|0)==10){i=f;return}c[(c[g>>2]|0)+4>>2]=c[m>>2];i=f;return}function bz(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=i;i=i+48|0;h=g+40|0;j=g+36|0;k=g+32|0;l=g+28|0;m=g+24|0;n=g+20|0;o=g+12|0;p=g+8|0;q=g+4|0;r=g;s=g+16|0;c[h>>2]=a;c[j>>2]=b;c[k>>2]=d;c[l>>2]=e;c[m>>2]=f;c[n>>2]=0;c[o>>2]=0;if((c[k>>2]|0)<0){c[o>>2]=c[o>>2]|1;if((c[k>>2]|0)==-21){c[o>>2]=c[o>>2]|2;c[j>>2]=(c[j>>2]|0)+(c[k>>2]|0)}c[k>>2]=0}if((c[m>>2]|0)!=0){c[c[m>>2]>>2]=-1}c[r>>2]=c[c[h>>2]>>2];c[s>>2]=c[(c[h>>2]|0)+8>>2];c[q>>2]=0;while(1){if(!((c[q>>2]|0)>>>0<(c[r>>2]|0)>>>0)){break}if((c[c[s>>2]>>2]|0)==(c[j>>2]|0)?(c[(c[s>>2]|0)+4>>2]|0)==(c[k>>2]|0):0){break}c[q>>2]=(c[q>>2]|0)+1;c[s>>2]=(c[s>>2]|0)+12}do{if((c[q>>2]|0)>>>0>=(c[r>>2]|0)>>>0){c[n>>2]=cz(c[h>>2]|0,c[l>>2]|0,s)|0;if((c[n>>2]|0)!=0){t=c[n>>2]|0;i=g;return t|0}else{c[c[s>>2]>>2]=c[j>>2];c[(c[s>>2]|0)+4>>2]=c[k>>2];c[(c[s>>2]|0)+8>>2]=c[o>>2];break}}}while(0);c[n>>2]=Xy((c[h>>2]|0)+12|0,c[l>>2]|0,p)|0;if((c[n>>2]|0)!=0){t=c[n>>2]|0;i=g;return t|0}c[n>>2]=dz(c[p>>2]|0,c[q>>2]|0,c[l>>2]|0)|0;if((c[n>>2]|0)!=0){t=c[n>>2]|0;i=g;return t|0}if((c[m>>2]|0)==0){t=c[n>>2]|0;i=g;return t|0}c[c[m>>2]>>2]=c[q>>2];t=c[n>>2]|0;i=g;return t|0}function cz(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+32|0;f=e+20|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[j>>2]=0;c[l>>2]=0;c[k>>2]=c[c[f>>2]>>2];c[k>>2]=(c[k>>2]|0)+1;if((c[k>>2]|0)>>>0>=(c[(c[f>>2]|0)+4>>2]|0)>>>0?(c[j>>2]=ez(c[f>>2]|0,c[k>>2]|0,c[g>>2]|0)|0,(c[j>>2]|0)!=0):0){m=c[l>>2]|0;n=c[h>>2]|0;c[n>>2]=m;o=c[j>>2]|0;i=e;return o|0}c[l>>2]=(c[(c[f>>2]|0)+8>>2]|0)+((c[k>>2]|0)*12|0)+ -12;c[c[l>>2]>>2]=0;c[(c[l>>2]|0)+4>>2]=0;c[(c[l>>2]|0)+8>>2]=0;c[c[f>>2]>>2]=c[k>>2];m=c[l>>2]|0;n=c[h>>2]|0;c[n>>2]=m;o=c[j>>2]|0;i=e;return o|0}function dz(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+32|0;h=g+16|0;j=g;k=g+4|0;l=g+8|0;m=g+12|0;c[h>>2]=b;c[j>>2]=e;c[k>>2]=f;c[l>>2]=0;if((c[j>>2]|0)<0){n=c[l>>2]|0;i=g;return n|0}do{if((c[j>>2]|0)>>>0>=(c[c[h>>2]>>2]|0)>>>0){c[l>>2]=Yy(c[h>>2]|0,(c[j>>2]|0)+1|0,c[k>>2]|0)|0;if((c[l>>2]|0)!=0){n=c[l>>2]|0;i=g;return n|0}else{c[c[h>>2]>>2]=(c[j>>2]|0)+1;break}}}while(0);c[m>>2]=(c[(c[h>>2]|0)+8>>2]|0)+(c[j>>2]>>3);a[c[m>>2]|0]=d[c[m>>2]|0]|0|128>>(c[j>>2]&7);n=c[l>>2]|0;i=g;return n|0}function ez(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+32|0;f=e+20|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[j>>2]=c[(c[f>>2]|0)+4>>2];c[k>>2]=c[g>>2];c[l>>2]=0;if(!((c[k>>2]|0)>>>0>(c[j>>2]|0)>>>0)){m=c[l>>2]|0;i=e;return m|0}c[k>>2]=(c[k>>2]|0)+7&-8;g=Yn(c[h>>2]|0,12,c[j>>2]|0,c[k>>2]|0,c[(c[f>>2]|0)+8>>2]|0,l)|0;c[(c[f>>2]|0)+8>>2]=g;if((c[l>>2]|0)!=0){m=c[l>>2]|0;i=e;return m|0}c[(c[f>>2]|0)+4>>2]=c[k>>2];m=c[l>>2]|0;i=e;return m|0}function fz(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;$y(c[f>>2]|0,c[g>>2]|0);g=gz((c[f>>2]|0)+24|0,c[h>>2]|0)|0;i=e;return g|0}function gz(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+32|0;e=d+16|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;c[e>>2]=a;c[f>>2]=b;c[j>>2]=0;c[g>>2]=(c[c[e>>2]>>2]|0)-1;while(1){if((c[g>>2]|0)<=0){k=9;break}c[h>>2]=(c[g>>2]|0)-1;while(1){if((c[h>>2]|0)<0){break}if((hz(c[e>>2]|0,c[g>>2]|0,c[h>>2]|0)|0)!=0){k=6;break}c[h>>2]=(c[h>>2]|0)+ -1}if((k|0)==6?(k=0,c[j>>2]=iz(c[e>>2]|0,c[h>>2]|0,c[g>>2]|0,c[f>>2]|0)|0,(c[j>>2]|0)!=0):0){k=9;break}c[g>>2]=(c[g>>2]|0)+ -1}if((k|0)==9){i=d;return c[j>>2]|0}return 0}function hz(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;f=i;i=i+48|0;g=f+40|0;h=f+36|0;j=f+32|0;k=f+28|0;l=f+24|0;m=f+20|0;n=f+12|0;o=f+8|0;p=f+4|0;q=f;r=f+16|0;c[h>>2]=a;c[j>>2]=b;c[k>>2]=e;c[l>>2]=(c[(c[h>>2]|0)+8>>2]|0)+(c[j>>2]<<4);c[m>>2]=(c[(c[h>>2]|0)+8>>2]|0)+(c[k>>2]<<4);c[n>>2]=c[(c[l>>2]|0)+8>>2];c[o>>2]=c[(c[m>>2]|0)+8>>2];c[p>>2]=c[c[l>>2]>>2];c[q>>2]=c[c[m>>2]>>2];c[r>>2]=(c[p>>2]|0)>>>0<(c[q>>2]|0)>>>0?c[p>>2]|0:c[q>>2]|0;while(1){if(!((c[r>>2]|0)>>>0>=8)){break}if(((d[c[n>>2]|0]|0)&(d[c[o>>2]|0]|0)|0)!=0){s=4;break}c[n>>2]=(c[n>>2]|0)+1;c[o>>2]=(c[o>>2]|0)+1;c[r>>2]=(c[r>>2]|0)-8}if((s|0)==4){c[g>>2]=1;t=c[g>>2]|0;i=f;return t|0}if((c[r>>2]|0)==0){c[g>>2]=0;t=c[g>>2]|0;i=f;return t|0}else{c[g>>2]=(d[c[n>>2]|0]|0)&(d[c[o>>2]|0]|0)&~(255>>c[r>>2]);t=c[g>>2]|0;i=f;return t|0}return 0}function iz(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+80|0;j=h+68|0;k=h+64|0;l=h+60|0;m=h+56|0;n=h+52|0;o=h+48|0;p=h+44|0;q=h+40|0;r=h+20|0;s=h+16|0;t=h+12|0;u=h+8|0;v=h+4|0;w=h;x=h+24|0;c[j>>2]=b;c[k>>2]=e;c[l>>2]=f;c[m>>2]=g;c[o>>2]=0;if((c[k>>2]|0)>(c[l>>2]|0)){c[n>>2]=c[k>>2];c[k>>2]=c[l>>2];c[l>>2]=c[n>>2]}if(!((c[k>>2]|0)<(c[l>>2]|0)&(c[k>>2]|0)>=0)){y=c[o>>2]|0;i=h;return y|0}if((c[l>>2]|0)>=(c[c[j>>2]>>2]|0)){y=c[o>>2]|0;i=h;return y|0}c[p>>2]=(c[(c[j>>2]|0)+8>>2]|0)+(c[k>>2]<<4);c[q>>2]=(c[(c[j>>2]|0)+8>>2]|0)+(c[l>>2]<<4);c[r>>2]=c[c[p>>2]>>2];c[s>>2]=c[c[q>>2]>>2];a:do{if((c[s>>2]|0)>>>0>0){b:do{if((c[s>>2]|0)>>>0>(c[r>>2]|0)>>>0){c[o>>2]=Yy(c[p>>2]|0,c[s>>2]|0,c[m>>2]|0)|0;if((c[o>>2]|0)!=0){y=c[o>>2]|0;i=h;return y|0}c[u>>2]=c[r>>2];while(1){if(!((c[u>>2]|0)>>>0<(c[s>>2]|0)>>>0)){break b}jz(c[p>>2]|0,c[u>>2]|0);c[u>>2]=(c[u>>2]|0)+1}}}while(0);c[v>>2]=c[(c[q>>2]|0)+8>>2];c[w>>2]=c[(c[p>>2]|0)+8>>2];c[u>>2]=((c[s>>2]|0)+7|0)>>>3;while(1){if(!((c[u>>2]|0)>>>0>0)){break a}a[c[w>>2]|0]=d[c[w>>2]|0]|0|(d[c[v>>2]|0]|0);c[w>>2]=(c[w>>2]|0)+1;c[v>>2]=(c[v>>2]|0)+1;c[u>>2]=(c[u>>2]|0)+ -1}}}while(0);c[c[q>>2]>>2]=0;c[(c[q>>2]|0)+12>>2]=0;c[t>>2]=(c[c[j>>2]>>2]|0)-1-(c[l>>2]|0);if((c[t>>2]|0)>0){l=c[q>>2]|0;c[x+0>>2]=c[l+0>>2];c[x+4>>2]=c[l+4>>2];c[x+8>>2]=c[l+8>>2];c[x+12>>2]=c[l+12>>2];mA(c[q>>2]|0,(c[q>>2]|0)+16|0,c[t>>2]<<4|0)|0;l=(c[q>>2]|0)+(c[t>>2]<<4)|0;c[l+0>>2]=c[x+0>>2];c[l+4>>2]=c[x+4>>2];c[l+8>>2]=c[x+8>>2];c[l+12>>2]=c[x+12>>2]}x=c[j>>2]|0;c[x>>2]=(c[x>>2]|0)+ -1;y=c[o>>2]|0;i=h;return y|0}function jz(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+16|0;g=f+8|0;h=f;j=f+4|0;c[g>>2]=b;c[h>>2]=e;if((c[h>>2]|0)>>>0>=(c[c[g>>2]>>2]|0)>>>0){i=f;return}c[j>>2]=(c[(c[g>>2]|0)+8>>2]|0)+(c[h>>2]>>3);a[c[j>>2]|0]=(d[c[j>>2]|0]|0)&~(128>>(c[h>>2]&7));i=f;return}function kz(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;b=(c[e>>2]|0)+4|0;if(((c[f>>2]|0)+ -1|0)>>>0<2){c[b>>2]=0;c[(c[e>>2]|0)+12>>2]=c[f>>2];lz((c[e>>2]|0)+16|0);lz((c[e>>2]|0)+52|0);i=d;return}else{c[b>>2]=6;c[(c[e>>2]|0)+12>>2]=c[f>>2];i=d;return}}function lz(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;c[c[d>>2]>>2]=0;c[(c[d>>2]|0)+12>>2]=0;c[(c[d>>2]|0)+24>>2]=0;i=b;return}function mz(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;kz(c[d>>2]|0,1);i=b;return}function nz(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+32|0;f=e+16|0;g=e;h=e+4|0;j=e+8|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[j>>2]=(En(c[c[h>>2]>>2]|0)|0)>>16;c[j+4>>2]=(En(c[(c[h>>2]|0)+4>>2]|0)|0)>>16;az(c[f>>2]|0,c[g>>2]|0,1,j);i=e;return}function oz(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+48|0;f=e+36|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;m=e+20|0;n=e+24|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=d;c[j>>2]=0;if((c[(c[f>>2]|0)+4>>2]|0)!=0){i=e;return}c[l>>2]=c[c[f>>2]>>2];if((c[g>>2]|0)<0|(c[g>>2]|0)>1){c[g>>2]=(c[g>>2]|0)!=0}c[k>>2]=(c[f>>2]|0)+16+((c[g>>2]|0)*36|0);a:do{if((c[(c[f>>2]|0)+12>>2]|0)==1){c[m>>2]=0;while(1){o=c[k>>2]|0;if((c[m>>2]|0)>=3){break}g=(En(c[c[h>>2]>>2]|0)|0)>>16;d=(En(c[(c[h>>2]|0)+4>>2]|0)|0)>>16;c[j>>2]=bz(o,g,d,c[l>>2]|0,n+(c[m>>2]<<2)|0)|0;if((c[j>>2]|0)!=0){break a}c[m>>2]=(c[m>>2]|0)+1;c[h>>2]=(c[h>>2]|0)+8}c[j>>2]=qz(o,c[n>>2]|0,c[n+4>>2]|0,c[n+8>>2]|0,c[l>>2]|0)|0;if((c[j>>2]|0)==0){i=e;return}}else{c[j>>2]=6}}while(0);c[(c[f>>2]|0)+4>>2]=c[j>>2];i=e;return}function pz(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d+12|0;f=d;g=d+4|0;h=d+8|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=0;if((c[(c[e>>2]|0)+4>>2]|0)!=0){i=d;return}c[h>>2]=c[c[e>>2]>>2];if((c[(c[e>>2]|0)+12>>2]|0)==1){c[g>>2]=Vy((c[e>>2]|0)+16|0,c[f>>2]|0,c[h>>2]|0)|0;if((c[g>>2]|0)==0?(c[g>>2]=Vy((c[e>>2]|0)+52|0,c[f>>2]|0,c[h>>2]|0)|0,(c[g>>2]|0)==0):0){i=d;return}}else{c[g>>2]=6}c[(c[e>>2]|0)+4>>2]=c[g>>2];i=d;return}function qz(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+32|0;h=g+28|0;j=g;k=g+4|0;l=g+8|0;m=g+12|0;n=g+16|0;o=g+20|0;p=g+24|0;c[h>>2]=a;c[j>>2]=b;c[k>>2]=d;c[l>>2]=e;c[m>>2]=f;c[n>>2]=0;c[o>>2]=c[(c[h>>2]|0)+24>>2];c[p>>2]=c[(c[h>>2]|0)+32>>2];while(1){if(!((c[o>>2]|0)>>>0>0)){break}if((rz(c[p>>2]|0,c[j>>2]|0)|0)!=0){break}if((rz(c[p>>2]|0,c[k>>2]|0)|0)!=0){break}if((rz(c[p>>2]|0,c[l>>2]|0)|0)!=0){break}c[o>>2]=(c[o>>2]|0)+ -1;c[p>>2]=(c[p>>2]|0)+16}if((c[o>>2]|0)==0?(c[n>>2]=Zy((c[h>>2]|0)+24|0,c[m>>2]|0,p)|0,(c[n>>2]|0)!=0):0){q=c[n>>2]|0;i=g;return q|0}c[n>>2]=dz(c[p>>2]|0,c[j>>2]|0,c[m>>2]|0)|0;if((c[n>>2]|0)!=0){q=c[n>>2]|0;i=g;return q|0}c[n>>2]=dz(c[p>>2]|0,c[k>>2]|0,c[m>>2]|0)|0;if((c[n>>2]|0)!=0){q=c[n>>2]|0;i=g;return q|0}c[n>>2]=dz(c[p>>2]|0,c[l>>2]|0,c[m>>2]|0)|0;q=c[n>>2]|0;i=g;return q|0}function rz(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e+8|0;g=e;h=e+4|0;c[g>>2]=a;c[h>>2]=b;if((c[h>>2]|0)>>>0>=(c[c[g>>2]>>2]|0)>>>0){c[f>>2]=0;j=c[f>>2]|0;i=e;return j|0}else{c[f>>2]=(d[(c[(c[g>>2]|0)+8>>2]|0)+(c[h>>2]>>3)|0]|0)&128>>(c[h>>2]&7);j=c[f>>2]|0;i=e;return j|0}return 0}function sz(a,f,g){a=a|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;h=i;i=i+64|0;j=h+24|0;k=h+44|0;l=h+40|0;m=h+36|0;n=h+32|0;o=h+28|0;p=h+20|0;q=h+16|0;r=h+12|0;s=h+8|0;t=h+4|0;u=h;v=h+48|0;c[j>>2]=a;c[k>>2]=f;c[l>>2]=g;c[m>>2]=0;c[m>>2]=Sn(c[j>>2]|0,2496,n)|0;if((c[n>>2]|0)!=0){w=c[m>>2]|0;x=c[l>>2]|0;c[x>>2]=w;y=c[n>>2]|0;i=h;return y|0}c[c[m>>2]>>2]=c[j>>2];c[q>>2]=(c[m>>2]|0)+208;c[r>>2]=(c[q>>2]|0)+4;c[c[r>>2]>>2]=e[(c[k>>2]|0)+120>>1]|0;c[r>>2]=(c[r>>2]|0)+12;c[p>>2]=(c[k>>2]|0)+128;c[o>>2]=d[(c[k>>2]|0)+124|0]|0;while(1){if(!((c[o>>2]|0)>>>0>0)){break}c[c[r>>2]>>2]=b[c[p>>2]>>1]|0;c[r>>2]=(c[r>>2]|0)+12;c[p>>2]=(c[p>>2]|0)+2;c[o>>2]=(c[o>>2]|0)+ -1}c[c[q>>2]>>2]=(d[(c[k>>2]|0)+124|0]|0)+1;c[s>>2]=(c[m>>2]|0)+4;c[t>>2]=(c[s>>2]|0)+4;c[c[t>>2]>>2]=e[(c[k>>2]|0)+122>>1]|0;c[t>>2]=(c[t>>2]|0)+12;c[p>>2]=(c[k>>2]|0)+154;c[o>>2]=d[(c[k>>2]|0)+125|0]|0;while(1){if(!((c[o>>2]|0)>>>0>0)){break}c[c[t>>2]>>2]=b[c[p>>2]>>1]|0;c[t>>2]=(c[t>>2]|0)+12;c[p>>2]=(c[p>>2]|0)+2;c[o>>2]=(c[o>>2]|0)+ -1}c[c[s>>2]>>2]=(d[(c[k>>2]|0)+125|0]|0)+1;uz((c[m>>2]|0)+412|0,d[(c[k>>2]|0)+8|0]|0,(c[k>>2]|0)+12|0,d[(c[k>>2]|0)+9|0]|0,(c[k>>2]|0)+40|0,c[(c[k>>2]|0)+116>>2]|0,0);uz((c[m>>2]|0)+412|0,d[(c[k>>2]|0)+10|0]|0,(c[k>>2]|0)+60|0,d[(c[k>>2]|0)+11|0]|0,(c[k>>2]|0)+88|0,c[(c[k>>2]|0)+116>>2]|0,1);b[v>>1]=1;b[v>>1]=vz(d[(c[k>>2]|0)+8|0]|0,(c[k>>2]|0)+12|0,b[v>>1]|0)|0;b[v>>1]=vz(d[(c[k>>2]|0)+9|0]|0,(c[k>>2]|0)+40|0,b[v>>1]|0)|0;b[v>>1]=vz(d[(c[k>>2]|0)+10|0]|0,(c[k>>2]|0)+60|0,b[v>>1]|0)|0;b[v>>1]=vz(d[(c[k>>2]|0)+11|0]|0,(c[k>>2]|0)+88|0,b[v>>1]|0)|0;c[u>>2]=On(1e3,b[v>>1]|0)|0;if((c[(c[k>>2]|0)+108>>2]|0)<(c[u>>2]|0)){z=c[(c[k>>2]|0)+108>>2]|0}else{z=c[u>>2]|0}c[(c[m>>2]|0)+2476>>2]=z;c[(c[m>>2]|0)+2480>>2]=c[(c[k>>2]|0)+112>>2];c[(c[m>>2]|0)+2488>>2]=c[(c[k>>2]|0)+116>>2];c[(c[m>>2]|0)+200>>2]=0;c[(c[m>>2]|0)+204>>2]=0;c[(c[m>>2]|0)+404>>2]=0;c[(c[m>>2]|0)+408>>2]=0;w=c[m>>2]|0;x=c[l>>2]|0;c[x>>2]=w;y=c[n>>2]|0;i=h;return y|0}function tz(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b+4|0;e=b;c[d>>2]=a;if((c[d>>2]|0)==0){i=b;return}c[e>>2]=c[c[d>>2]>>2];c[(c[d>>2]|0)+4>>2]=0;c[(c[d>>2]|0)+208>>2]=0;c[(c[d>>2]|0)+412>>2]=0;c[(c[d>>2]|0)+928>>2]=0;c[(c[d>>2]|0)+1444>>2]=0;c[(c[d>>2]|0)+1960>>2]=0;Vn(c[e>>2]|0,c[d>>2]|0);c[d>>2]=0;i=b;return}function uz(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;j=i;i=i+80|0;k=j+76|0;l=j+72|0;m=j+68|0;n=j+64|0;o=j+60|0;p=j+56|0;q=j+52|0;r=j+48|0;s=j+44|0;t=j+40|0;u=j+36|0;v=j+12|0;w=j;x=j+4|0;y=j+8|0;z=j+16|0;A=j+20|0;B=j+24|0;C=j+28|0;D=j+32|0;c[k>>2]=a;c[l>>2]=b;c[m>>2]=d;c[n>>2]=e;c[o>>2]=f;c[p>>2]=g;c[q>>2]=h;h=c[k>>2]|0;if((c[q>>2]|0)!=0){c[r>>2]=h+1032;c[s>>2]=(c[k>>2]|0)+1548}else{c[r>>2]=h;c[s>>2]=(c[k>>2]|0)+516}c[c[r>>2]>>2]=0;c[c[s>>2]>>2]=0;wz(c[k>>2]|0,0,c[l>>2]|0,c[m>>2]|0,c[r>>2]|0,c[s>>2]|0);wz(c[k>>2]|0,1,c[n>>2]|0,c[o>>2]|0,c[r>>2]|0,c[s>>2]|0);c[t>>2]=c[c[r>>2]>>2];c[u>>2]=c[c[s>>2]>>2];a:do{if((c[t>>2]|0)>0){c[v>>2]=(c[r>>2]|0)+4;c[l>>2]=c[t>>2];while(1){if(!((c[l>>2]|0)>>>0>0)){break a}if((c[l>>2]|0)>>>0>1?(c[w>>2]=(c[(c[v>>2]|0)+32>>2]|0)-(c[c[v>>2]>>2]|0),(c[(c[v>>2]|0)+4>>2]|0)>(c[w>>2]|0)):0){c[(c[v>>2]|0)+4>>2]=c[w>>2]}c[(c[v>>2]|0)+12>>2]=c[c[v>>2]>>2];c[(c[v>>2]|0)+8>>2]=(c[(c[v>>2]|0)+4>>2]|0)+(c[c[v>>2]>>2]|0);c[l>>2]=(c[l>>2]|0)+ -1;c[v>>2]=(c[v>>2]|0)+32}}}while(0);b:do{if((c[u>>2]|0)>0){c[x>>2]=(c[s>>2]|0)+4;c[l>>2]=c[u>>2];while(1){if(!((c[l>>2]|0)>>>0>0)){break b}if((c[l>>2]|0)>>>0>1?(c[y>>2]=(c[c[x>>2]>>2]|0)-(c[(c[x>>2]|0)+32>>2]|0),(c[(c[x>>2]|0)+4>>2]|0)<(c[y>>2]|0)):0){c[(c[x>>2]|0)+4>>2]=c[y>>2]}c[(c[x>>2]|0)+8>>2]=c[c[x>>2]>>2];c[(c[x>>2]|0)+12>>2]=(c[(c[x>>2]|0)+4>>2]|0)+(c[c[x>>2]>>2]|0);c[l>>2]=(c[l>>2]|0)+ -1;c[x>>2]=(c[x>>2]|0)+32}}}while(0);c[D>>2]=(c[r>>2]|0)+4;c[l>>2]=c[t>>2];c[z>>2]=1;while(1){if((c[z>>2]|0)<0){break}if((c[l>>2]|0)>>>0>0){t=(c[D>>2]|0)+12|0;c[t>>2]=(c[t>>2]|0)-(c[p>>2]|0);c[A>>2]=c[(c[D>>2]|0)+8>>2];c[l>>2]=(c[l>>2]|0)+ -1;while(1){if(!((c[l>>2]|0)>>>0>0)){break}c[B>>2]=c[(c[D>>2]|0)+44>>2];c[C>>2]=(c[B>>2]|0)-(c[A>>2]|0);t=c[A>>2]|0;if((c[C>>2]|0)<(c[p>>2]<<1|0)){r=t+((c[C>>2]|0)/2|0)|0;c[(c[D>>2]|0)+44>>2]=r;c[(c[D>>2]|0)+8>>2]=r}else{c[(c[D>>2]|0)+8>>2]=t+(c[p>>2]|0);c[(c[D>>2]|0)+44>>2]=(c[B>>2]|0)-(c[p>>2]|0)}c[D>>2]=(c[D>>2]|0)+32;c[A>>2]=c[(c[D>>2]|0)+8>>2];c[l>>2]=(c[l>>2]|0)+ -1}c[(c[D>>2]|0)+8>>2]=(c[A>>2]|0)+(c[p>>2]|0)}c[D>>2]=(c[s>>2]|0)+4;c[l>>2]=c[u>>2];c[z>>2]=(c[z>>2]|0)+ -1}i=j;return}function vz(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+16|0;g=f+8|0;h=f;j=f+14|0;k=f+4|0;l=f+12|0;c[g>>2]=a;c[h>>2]=d;b[j>>1]=e;c[k>>2]=0;while(1){if(!((c[k>>2]|0)>>>0<(c[g>>2]|0)>>>0)){break}b[l>>1]=(b[(c[h>>2]|0)+((c[k>>2]|0)+1<<1)>>1]|0)-(b[(c[h>>2]|0)+(c[k>>2]<<1)>>1]|0);if((b[l>>1]|0)>(b[j>>1]|0)){b[j>>1]=b[l>>1]|0}c[k>>2]=(c[k>>2]|0)+2}i=f;return b[j>>1]|0}function wz(e,f,g,h,j,k){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;l=i;i=i+64|0;m=l+20|0;n=l+54|0;o=l+48|0;p=l+44|0;q=l+40|0;r=l+36|0;s=l+32|0;t=l+24|0;u=l+53|0;v=l+16|0;w=l+12|0;x=l+8|0;y=l+4|0;z=l;A=l+52|0;B=l+28|0;c[m>>2]=e;a[n]=f;c[o>>2]=g;c[p>>2]=h;c[q>>2]=j;c[r>>2]=k;c[s>>2]=c[c[q>>2]>>2];c[t>>2]=c[c[r>>2]>>2];a[u]=1;c[m>>2]=c[m>>2];while(1){if(!((c[o>>2]|0)>>>0>1)){break}a[A]=0;if((d[u]|0)==0?(d[n]|0)==0:0){c[v>>2]=b[c[p>>2]>>1]|0;c[w>>2]=(b[(c[p>>2]|0)+2>>1]|0)-(c[v>>2]|0);c[y>>2]=(c[q>>2]|0)+4;c[x>>2]=c[s>>2];a[A]=1}else{c[v>>2]=b[(c[p>>2]|0)+2>>1]|0;c[w>>2]=(b[c[p>>2]>>1]|0)-(c[v>>2]|0);c[y>>2]=(c[r>>2]|0)+4;c[x>>2]=c[t>>2];a[u]=0}c[z>>2]=c[y>>2];while(1){if(!((c[x>>2]|0)>>>0>0)){C=17;break}if((c[v>>2]|0)<(c[c[z>>2]>>2]|0)){C=17;break}if((c[v>>2]|0)==(c[c[z>>2]>>2]|0)){C=11;break}c[x>>2]=(c[x>>2]|0)+ -1;c[z>>2]=(c[z>>2]|0)+32}do{if((C|0)==11){C=0;c[B>>2]=c[(c[z>>2]|0)+4>>2];m=c[w>>2]|0;k=c[B>>2]|0;if((c[w>>2]|0)<0){if((m|0)>=(k|0)){break}c[(c[z>>2]|0)+4>>2]=c[w>>2];break}else{if((m|0)<=(k|0)){break}c[(c[z>>2]|0)+4>>2]=c[w>>2];break}}else if((C|0)==17){while(1){C=0;if(!((c[x>>2]|0)>>>0>0)){break}k=(c[z>>2]|0)+(c[x>>2]<<5)|0;m=(c[z>>2]|0)+((c[x>>2]|0)-1<<5)|0;c[k+0>>2]=c[m+0>>2];c[k+4>>2]=c[m+4>>2];c[k+8>>2]=c[m+8>>2];c[k+12>>2]=c[m+12>>2];c[k+16>>2]=c[m+16>>2];c[k+20>>2]=c[m+20>>2];c[k+24>>2]=c[m+24>>2];c[k+28>>2]=c[m+28>>2];c[x>>2]=(c[x>>2]|0)+ -1;C=17}c[c[z>>2]>>2]=c[v>>2];c[(c[z>>2]|0)+4>>2]=c[w>>2];if((a[A]|0)!=0){c[s>>2]=(c[s>>2]|0)+1;break}else{c[t>>2]=(c[t>>2]|0)+1;break}}}while(0);c[p>>2]=(c[p>>2]|0)+4;c[o>>2]=(c[o>>2]|0)-2}c[c[q>>2]>>2]=c[s>>2];c[c[r>>2]>>2]=c[t>>2];i=l;return}function xz(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;i=b;return(c[d>>2]|0)+100|0}function yz(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;i=b;return(c[d>>2]|0)+112|0}function zz(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;c[d>>2]=a;i=b;return(c[d>>2]|0)+140|0}function Az(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;Vn(c[f>>2]|0,c[(c[e>>2]|0)+24>>2]|0);c[(c[e>>2]|0)+24>>2]=0;c[(c[e>>2]|0)+20>>2]=0;c[(c[e>>2]|0)+28>>2]=0;Vn(c[f>>2]|0,c[(c[e>>2]|0)+12>>2]|0);c[(c[e>>2]|0)+12>>2]=0;Vn(c[f>>2]|0,c[(c[e>>2]|0)+8>>2]|0);c[(c[e>>2]|0)+8>>2]=0;c[(c[e>>2]|0)+4>>2]=0;c[c[e>>2]>>2]=0;c[(c[e>>2]|0)+16>>2]=0;i=d;return}function Bz(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;e=i;i=i+64|0;f=e+56|0;g=e+52|0;h=e+48|0;j=e+44|0;k=e+40|0;l=e+36|0;m=e+32|0;n=e+28|0;o=e+20|0;p=e+16|0;q=e+12|0;r=e+8|0;s=e+4|0;t=e;u=e+24|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=0;c[j>>2]=0;c[k>>2]=c[(c[g>>2]|0)+8>>2];c[m>>2]=c[c[g>>2]>>2];c[n>>2]=0;Dz(c[f>>2]|0);c[l>>2]=0;while(1){if(!((c[l>>2]|0)>>>0<(c[m>>2]|0)>>>0)){break}if((c[h>>2]|0)==0){g=c[k>>2]|0;c[k>>2]=g+1;c[j>>2]=d[g]|0;c[h>>2]=128}if((((c[j>>2]&c[h>>2]|0)!=0?(c[o>>2]=(c[(c[f>>2]|0)+8>>2]|0)+((c[l>>2]|0)*28|0),(c[(c[o>>2]|0)+16>>2]&4|0)==0):0)?(c[p>>2]=0,(c[p>>2]|0)==0):0)?(g=(c[o>>2]|0)+16|0,c[g>>2]=c[g>>2]|4,(c[n>>2]|0)>>>0<(c[c[f>>2]>>2]|0)>>>0):0){g=c[o>>2]|0;b=c[n>>2]|0;c[n>>2]=b+1;c[(c[(c[f>>2]|0)+12>>2]|0)+(b<<2)>>2]=g}c[h>>2]=c[h>>2]>>1;c[l>>2]=(c[l>>2]|0)+1}c[(c[f>>2]|0)+4>>2]=c[n>>2];c[u>>2]=c[(c[f>>2]|0)+12>>2];c[q>>2]=1;while(1){if((c[q>>2]|0)>=(c[n>>2]|0)){break}c[s>>2]=c[(c[u>>2]|0)+(c[q>>2]<<2)>>2];c[r>>2]=(c[q>>2]|0)-1;while(1){if((c[r>>2]|0)<0){break}c[t>>2]=c[(c[u>>2]|0)+(c[r>>2]<<2)>>2];if((c[c[t>>2]>>2]|0)<(c[c[s>>2]>>2]|0)){break}c[(c[u>>2]|0)+((c[r>>2]|0)+1<<2)>>2]=c[t>>2];c[(c[u>>2]|0)+(c[r>>2]<<2)>>2]=c[s>>2];c[r>>2]=(c[r>>2]|0)+ -1}c[q>>2]=(c[q>>2]|0)+1}i=e;return}function Cz(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;h=i;i=i+96|0;j=h+88|0;k=h+84|0;l=h+80|0;m=h+76|0;n=h+72|0;o=h+68|0;p=h+64|0;q=h+60|0;r=h+56|0;s=h+52|0;t=h+48|0;u=h+44|0;v=h+16|0;w=h;x=h+4|0;y=h+8|0;z=h+12|0;A=h+20|0;B=h+24|0;C=h+28|0;D=h+32|0;E=h+36|0;F=h+40|0;c[j>>2]=b;c[k>>2]=d;c[l>>2]=e;c[m>>2]=f;c[n>>2]=g;c[o>>2]=c[(c[j>>2]|0)+12>>2];c[p>>2]=c[(c[j>>2]|0)+4>>2];while(1){if(!((c[l>>2]|0)>>>0>0)){break}c[q>>2]=0;c[r>>2]=c[(c[k>>2]|0)+28>>2];a:do{if((c[(c[k>>2]|0)+16>>2]&16|0)==0){do{if((a[(c[k>>2]|0)+20|0]|0)!=(c[n>>2]|0)?(a[(c[k>>2]|0)+20|0]|0)!=(0-(c[n>>2]|0)|0):0){if((a[(c[k>>2]|0)+21|0]|0)!=(c[n>>2]|0)?(a[(c[k>>2]|0)+21|0]|0)!=(0-(c[n>>2]|0)|0):0){break}c[q>>2]=a[(c[k>>2]|0)+21|0]|0}else{G=6}}while(0);if((G|0)==6){G=0;c[q>>2]=a[(c[k>>2]|0)+20|0]|0}if((c[q>>2]|0)!=0){if((c[q>>2]|0)==(c[n>>2]|0)){c[s>>2]=0;while(1){if(!((c[s>>2]|0)>>>0<(c[p>>2]|0)>>>0)){break a}c[t>>2]=c[(c[o>>2]|0)+(c[s>>2]<<2)>>2];c[u>>2]=(c[r>>2]|0)-(c[c[t>>2]>>2]|0);if((c[u>>2]|0)<(c[m>>2]|0)?(0-(c[u>>2]|0)|0)<(c[m>>2]|0):0){break}c[s>>2]=(c[s>>2]|0)+1}j=(c[k>>2]|0)+16|0;c[j>>2]=c[j>>2]|16;j=(c[k>>2]|0)+16|0;c[j>>2]=c[j>>2]|512;c[(c[k>>2]|0)+24>>2]=c[t>>2];break}if((c[q>>2]|0)!=(0-(c[n>>2]|0)|0)){break}c[v>>2]=0;while(1){if(!((c[v>>2]|0)>>>0<(c[p>>2]|0)>>>0)){break a}c[w>>2]=c[(c[o>>2]|0)+(c[v>>2]<<2)>>2];c[x>>2]=(c[r>>2]|0)-(c[c[w>>2]>>2]|0)-(c[(c[w>>2]|0)+4>>2]|0);if((c[x>>2]|0)<(c[m>>2]|0)?(0-(c[x>>2]|0)|0)<(c[m>>2]|0):0){break}c[v>>2]=(c[v>>2]|0)+1}j=(c[k>>2]|0)+16|0;c[j>>2]=c[j>>2]|16;j=(c[k>>2]|0)+16|0;c[j>>2]=c[j>>2]|1024;c[(c[k>>2]|0)+24>>2]=c[w>>2];break}if((c[(c[k>>2]|0)+16>>2]&64|0)!=0){if((c[n>>2]|0)==2){c[z>>2]=128;c[A>>2]=256}else{c[z>>2]=256;c[A>>2]=128}b:do{if((c[(c[k>>2]|0)+16>>2]&c[z>>2]|0)==0){if((c[(c[k>>2]|0)+16>>2]&c[A>>2]|0)!=0){c[y>>2]=0;while(1){if(!((c[y>>2]|0)>>>0<(c[p>>2]|0)>>>0)){break b}c[D>>2]=c[(c[o>>2]|0)+(c[y>>2]<<2)>>2];c[E>>2]=(c[r>>2]|0)-(c[c[D>>2]>>2]|0)-(c[(c[D>>2]|0)+4>>2]|0);if((c[E>>2]|0)<(c[m>>2]|0)?(0-(c[E>>2]|0)|0)<(c[m>>2]|0):0){break}c[y>>2]=(c[y>>2]|0)+1}j=(c[k>>2]|0)+16|0;c[j>>2]=c[j>>2]|1024;c[(c[k>>2]|0)+24>>2]=c[D>>2];j=(c[k>>2]|0)+16|0;c[j>>2]=c[j>>2]|16}}else{c[y>>2]=0;while(1){if(!((c[y>>2]|0)>>>0<(c[p>>2]|0)>>>0)){break b}c[B>>2]=c[(c[o>>2]|0)+(c[y>>2]<<2)>>2];c[C>>2]=(c[r>>2]|0)-(c[c[B>>2]>>2]|0);if((c[C>>2]|0)<(c[m>>2]|0)?(0-(c[C>>2]|0)|0)<(c[m>>2]|0):0){break}c[y>>2]=(c[y>>2]|0)+1}j=(c[k>>2]|0)+16|0;c[j>>2]=c[j>>2]|512;c[(c[k>>2]|0)+24>>2]=c[B>>2];j=(c[k>>2]|0)+16|0;c[j>>2]=c[j>>2]|16}}while(0);if((c[(c[k>>2]|0)+24>>2]|0)==0){c[y>>2]=0;while(1){if(!((c[y>>2]|0)>>>0<(c[p>>2]|0)>>>0)){break a}c[F>>2]=c[(c[o>>2]|0)+(c[y>>2]<<2)>>2];if((c[r>>2]|0)>=(c[c[F>>2]>>2]|0)?(c[r>>2]|0)<=((c[c[F>>2]>>2]|0)+(c[(c[F>>2]|0)+4>>2]|0)|0):0){break}c[y>>2]=(c[y>>2]|0)+1}c[(c[k>>2]|0)+24>>2]=c[F>>2]}}}}while(0);c[l>>2]=(c[l>>2]|0)+ -1;c[k>>2]=(c[k>>2]|0)+40}i=h;return}function Dz(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;i=i+16|0;d=b+8|0;e=b;f=b+4|0;c[d>>2]=a;c[e>>2]=c[c[d>>2]>>2];c[f>>2]=c[(c[d>>2]|0)+8>>2];while(1){if(!((c[e>>2]|0)>>>0>0)){break}d=(c[f>>2]|0)+16|0;c[d>>2]=c[d>>2]&-5;c[(c[f>>2]|0)+24>>2]=-1;c[e>>2]=(c[e>>2]|0)+ -1;c[f>>2]=(c[f>>2]|0)+28}i=b;return}function Ez(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;h=i;i=i+96|0;j=h+88|0;k=h+84|0;l=h+80|0;m=h+76|0;n=h+72|0;o=h+68|0;p=h+64|0;q=h+60|0;r=h+56|0;s=h+52|0;t=h+48|0;u=h+12|0;v=h;w=h+4|0;x=h+8|0;y=h+24|0;z=h+28|0;A=h+32|0;B=h+36|0;C=h+40|0;D=h+44|0;c[j>>2]=b;c[k>>2]=e;c[l>>2]=f;c[m>>2]=g;c[n>>2]=(c[k>>2]|0)+4+((c[l>>2]|0)*204|0);c[o>>2]=c[(c[n>>2]|0)+196>>2];c[p>>2]=c[(c[n>>2]|0)+200>>2];if((c[(c[j>>2]|0)+16>>2]&8|0)!=0){i=h;return}g=Nn(c[c[j>>2]>>2]|0,c[o>>2]|0)|0;c[q>>2]=g+(c[p>>2]|0);c[r>>2]=Nn(c[(c[j>>2]|0)+4>>2]|0,c[o>>2]|0)|0;if(!((c[l>>2]|0)==0?(a[(c[m>>2]|0)+120|0]|0)==0:0)){E=4}do{if((E|0)==4){if((c[l>>2]|0)==1?(a[(c[m>>2]|0)+121|0]|0)==0:0){break}if((c[l>>2]|0)==0?(d[(c[m>>2]|0)+122|0]|0)!=0:0){F=1}else{if((c[l>>2]|0)==1){F=(d[(c[m>>2]|0)+123|0]|0)!=0}else{F=0}}c[s>>2]=F&1;p=c[r>>2]|0;c[t>>2]=p;c[(c[j>>2]|0)+12>>2]=p;c[u>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;if((c[l>>2]|0)==1){Fz((c[k>>2]|0)+412|0,(c[c[j>>2]>>2]|0)+(c[(c[j>>2]|0)+4>>2]|0)|0,c[c[j>>2]>>2]|0,u)}p=c[u>>2]|0;if((p|0)==2){c[(c[j>>2]|0)+8>>2]=c[u+8>>2]}else if((p|0)==3){c[(c[j>>2]|0)+8>>2]=c[u+8>>2];c[(c[j>>2]|0)+12>>2]=(c[u+4>>2]|0)-(c[u+8>>2]|0)}else if((p|0)==1){c[(c[j>>2]|0)+8>>2]=(c[u+4>>2]|0)-(c[t>>2]|0)}else{c[v>>2]=c[(c[j>>2]|0)+20>>2];if((c[v>>2]|0)!=0){if((c[(c[v>>2]|0)+16>>2]&8|0)==0){Ez(c[v>>2]|0,c[k>>2]|0,c[l>>2]|0,c[m>>2]|0)}c[w>>2]=(c[c[v>>2]>>2]|0)+(c[(c[v>>2]|0)+4>>2]>>1);c[x>>2]=(c[(c[v>>2]|0)+8>>2]|0)+(c[(c[v>>2]|0)+12>>2]>>1);c[y>>2]=(c[c[j>>2]>>2]|0)+(c[(c[j>>2]|0)+4>>2]>>1);c[z>>2]=Nn((c[y>>2]|0)-(c[w>>2]|0)|0,c[o>>2]|0)|0;c[q>>2]=(c[x>>2]|0)+(c[z>>2]|0)-(c[r>>2]>>1)}c[(c[j>>2]|0)+8>>2]=c[q>>2];c[(c[j>>2]|0)+12>>2]=c[t>>2];do{if((a[(c[m>>2]|0)+124|0]|0)!=0){if((c[r>>2]|0)>64){c[r>>2]=Gz(c[n>>2]|0,c[r>>2]|0,0)|0;break}if((c[r>>2]|0)>=32){c[q>>2]=(c[q>>2]|0)+(c[r>>2]>>1)&-64;c[r>>2]=64;break}p=(c[q>>2]|0)+32&-64;if((c[r>>2]|0)<=0){c[q>>2]=p;break}c[A>>2]=p;c[B>>2]=(c[q>>2]|0)+(c[r>>2]|0)+32&-64;c[C>>2]=(c[A>>2]|0)-(c[q>>2]|0);c[D>>2]=(c[B>>2]|0)-((c[q>>2]|0)+(c[r>>2]|0));if((c[C>>2]|0)<0){c[C>>2]=0-(c[C>>2]|0)}if((c[D>>2]|0)<0){c[D>>2]=0-(c[D>>2]|0)}if((c[C>>2]|0)<=(c[D>>2]|0)){c[q>>2]=c[A>>2];break}else{c[q>>2]=c[B>>2];break}}}while(0);p=c[q>>2]|0;g=p+(Hz(c[q>>2]|0,c[r>>2]|0)|0)|0;c[(c[j>>2]|0)+8>>2]=g;c[(c[j>>2]|0)+12>>2]=c[r>>2]}do{if((c[s>>2]|0)!=0){c[q>>2]=c[(c[j>>2]|0)+8>>2];c[r>>2]=c[(c[j>>2]|0)+12>>2];if((c[r>>2]|0)<64){c[r>>2]=64}else{c[r>>2]=(c[r>>2]|0)+32&-64}g=c[u>>2]|0;if((g|0)==1){c[(c[j>>2]|0)+8>>2]=(c[u+4>>2]|0)-(c[r>>2]|0);c[(c[j>>2]|0)+12>>2]=c[r>>2];break}else if((g|0)==2){c[(c[j>>2]|0)+12>>2]=c[r>>2];break}else if((g|0)==3){break}else{c[(c[j>>2]|0)+12>>2]=c[r>>2];g=(c[q>>2]|0)+(c[r>>2]>>1)|0;if((c[r>>2]&64|0)!=0){c[q>>2]=(g&-64)+32}else{c[q>>2]=g+32&-64}c[(c[j>>2]|0)+8>>2]=(c[q>>2]|0)-(c[r>>2]>>1);c[(c[j>>2]|0)+12>>2]=c[r>>2];break}}}while(0);g=(c[j>>2]|0)+16|0;c[g>>2]=c[g>>2]|8;i=h;return}}while(0);c[(c[j>>2]|0)+8>>2]=c[q>>2];c[(c[j>>2]|0)+12>>2]=c[r>>2];r=(c[j>>2]|0)+16|0;c[r>>2]=c[r>>2]|8;i=h;return}function Fz(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=i;i=i+48|0;h=g+32|0;j=g+28|0;k=g+24|0;l=g+20|0;m=g+16|0;n=g+8|0;o=g+4|0;p=g;q=g+12|0;c[h>>2]=a;c[j>>2]=b;c[k>>2]=e;c[l>>2]=f;c[c[l>>2]>>2]=0;c[q>>2]=d[(c[h>>2]|0)+2080|0]|0;c[m>>2]=c[h>>2];c[n>>2]=c[c[m>>2]>>2];c[p>>2]=(c[m>>2]|0)+4;while(1){if(!((c[n>>2]|0)>>>0>0)){break}c[o>>2]=(c[j>>2]|0)-(c[(c[p>>2]|0)+12>>2]|0);if((c[o>>2]|0)<(0-(c[(c[h>>2]|0)+2076>>2]|0)|0)){break}if((c[j>>2]|0)<=((c[(c[p>>2]|0)+8>>2]|0)+(c[(c[h>>2]|0)+2076>>2]|0)|0)){r=5;break}c[n>>2]=(c[n>>2]|0)+ -1;c[p>>2]=(c[p>>2]|0)+32}do{if((r|0)==5){if((c[q>>2]|0)==0?(c[o>>2]|0)>(c[(c[h>>2]|0)+2072>>2]|0):0){break}j=c[l>>2]|0;c[j>>2]=c[j>>2]|1;c[(c[l>>2]|0)+4>>2]=c[(c[p>>2]|0)+16>>2]}}while(0);c[m>>2]=(c[h>>2]|0)+516;c[n>>2]=c[c[m>>2]>>2];c[p>>2]=(c[m>>2]|0)+4+(c[n>>2]<<5)+ -32;while(1){if(!((c[n>>2]|0)>>>0>0)){r=17;break}c[o>>2]=(c[(c[p>>2]|0)+8>>2]|0)-(c[k>>2]|0);if((c[o>>2]|0)<(0-(c[(c[h>>2]|0)+2076>>2]|0)|0)){r=17;break}if((c[k>>2]|0)>=((c[(c[p>>2]|0)+12>>2]|0)-(c[(c[h>>2]|0)+2076>>2]|0)|0)){r=13;break}c[n>>2]=(c[n>>2]|0)+ -1;c[p>>2]=(c[p>>2]|0)+ -32}if((r|0)==13){if((c[q>>2]|0)==0?(c[o>>2]|0)>=(c[(c[h>>2]|0)+2072>>2]|0):0){i=g;return}h=c[l>>2]|0;c[h>>2]=c[h>>2]|2;c[(c[l>>2]|0)+8>>2]=c[(c[p>>2]|0)+16>>2];i=g;return}else if((r|0)==17){i=g;return}}function Gz(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+16|0;g=f+8|0;h=f;j=f+12|0;k=f+4|0;c[g>>2]=b;c[h>>2]=d;a[j]=e;do{if((c[h>>2]|0)>64){c[k>>2]=(c[h>>2]|0)-(c[(c[g>>2]|0)+8>>2]|0);if((c[k>>2]|0)<0){c[k>>2]=0-(c[k>>2]|0)}if((c[k>>2]|0)<40){e=c[(c[g>>2]|0)+8>>2]|0;c[h>>2]=e;c[h>>2]=(c[h>>2]|0)<48?48:e}e=c[h>>2]|0;if((c[h>>2]|0)>=192){c[h>>2]=e+32&-64;break}c[k>>2]=e&63;c[h>>2]=c[h>>2]&-64;e=c[k>>2]|0;if((c[k>>2]|0)<10){c[h>>2]=(c[h>>2]|0)+e;break}if((e|0)<32){c[h>>2]=(c[h>>2]|0)+10;break}if((c[k>>2]|0)<54){c[h>>2]=(c[h>>2]|0)+54;break}else{c[h>>2]=(c[h>>2]|0)+(c[k>>2]|0);break}}else{c[h>>2]=64}}while(0);if((a[j]|0)==0){l=c[h>>2]|0;i=f;return l|0}c[h>>2]=(c[h>>2]|0)+32&-64;l=c[h>>2]|0;i=f;return l|0}function Hz(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+32|0;e=d+16|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=((c[f>>2]|0)+32&-64)-(c[f>>2]|0);c[j>>2]=((c[f>>2]|0)+(c[g>>2]|0)+32&-64)-(c[f>>2]|0)-(c[g>>2]|0);g=c[h>>2]|0;f=c[j>>2]|0;if((((c[h>>2]|0)<0?0-g|0:g)|0)<=(((c[j>>2]|0)<0?0-f|0:f)|0)){c[e>>2]=c[h>>2];k=c[e>>2]|0;i=d;return k|0}else{c[e>>2]=c[j>>2];k=c[e>>2]|0;i=d;return k|0}return 0}function Iz(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;d=i;i=i+48|0;e=d+36|0;f=d+32|0;g=d+28|0;h=d+24|0;j=d+20|0;k=d+16|0;l=d+8|0;m=d+4|0;n=d;o=d+12|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=(c[e>>2]|0)+4+((c[f>>2]|0)*204|0);c[h>>2]=c[g>>2];c[j>>2]=c[c[h>>2]>>2];c[k>>2]=(c[h>>2]|0)+4;c[l>>2]=c[k>>2];c[m>>2]=c[(c[g>>2]|0)+196>>2];if(!((c[j>>2]|0)>>>0>0)){i=d;return}g=Nn(c[c[k>>2]>>2]|0,c[m>>2]|0)|0;c[(c[k>>2]|0)+4>>2]=g;c[(c[k>>2]|0)+8>>2]=(c[(c[k>>2]|0)+4>>2]|0)+32&-64;c[k>>2]=(c[k>>2]|0)+12;c[j>>2]=(c[j>>2]|0)+ -1;while(1){if(!((c[j>>2]|0)>>>0>0)){break}c[n>>2]=Nn(c[c[k>>2]>>2]|0,c[m>>2]|0)|0;c[o>>2]=(c[n>>2]|0)-(c[(c[l>>2]|0)+4>>2]|0);if((c[o>>2]|0)<0){c[o>>2]=0-(c[o>>2]|0)}if((c[o>>2]|0)<128){c[n>>2]=c[(c[l>>2]|0)+4>>2]}c[(c[k>>2]|0)+4>>2]=c[n>>2];c[(c[k>>2]|0)+8>>2]=(c[n>>2]|0)+32&-64;c[j>>2]=(c[j>>2]|0)+ -1;c[k>>2]=(c[k>>2]|0)+12}i=d;return}function Jz(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;f=i;i=i+64|0;g=f+56|0;h=f+52|0;j=f+48|0;k=f+44|0;l=f+40|0;m=f+36|0;n=f+32|0;o=f+28|0;p=f+20|0;q=f+16|0;r=f+12|0;s=f+8|0;t=f+4|0;u=f;v=f+24|0;c[g>>2]=b;c[h>>2]=d;c[j>>2]=e;c[m>>2]=0;e=c[h>>2]|0;if((c[h>>2]|0)>=34359738){a[(c[g>>2]|0)+2080|0]=(e|0)<((c[(c[g>>2]|0)+2064>>2]<<3|0)/125|0|0)}else{a[(c[g>>2]|0)+2080|0]=(e*125|0)<(c[(c[g>>2]|0)+2064>>2]<<3|0)}c[n>>2]=c[(c[g>>2]|0)+2068>>2];while(1){if((c[n>>2]|0)>0){w=(Nn(c[n>>2]|0,c[h>>2]|0)|0)>32}else{w=0}x=c[n>>2]|0;if(!w){break}c[n>>2]=x+ -1}c[(c[g>>2]|0)+2072>>2]=x;c[l>>2]=0;while(1){if(!((c[l>>2]|0)>>>0<4)){break}x=c[l>>2]|0;if((x|0)==1){c[m>>2]=(c[g>>2]|0)+516}else if((x|0)==2){c[m>>2]=(c[g>>2]|0)+1032}else if((x|0)==0){c[m>>2]=c[g>>2]}else{c[m>>2]=(c[g>>2]|0)+1548}c[o>>2]=(c[m>>2]|0)+4;c[k>>2]=c[c[m>>2]>>2];while(1){if(!((c[k>>2]|0)>>>0>0)){break}x=Nn(c[(c[o>>2]|0)+8>>2]|0,c[h>>2]|0)|0;c[(c[o>>2]|0)+28>>2]=x+(c[j>>2]|0);x=Nn(c[(c[o>>2]|0)+12>>2]|0,c[h>>2]|0)|0;c[(c[o>>2]|0)+24>>2]=x+(c[j>>2]|0);x=Nn(c[c[o>>2]>>2]|0,c[h>>2]|0)|0;c[(c[o>>2]|0)+16>>2]=x+(c[j>>2]|0);x=Nn(c[(c[o>>2]|0)+4>>2]|0,c[h>>2]|0)|0;c[(c[o>>2]|0)+20>>2]=x;c[(c[o>>2]|0)+16>>2]=(c[(c[o>>2]|0)+16>>2]|0)+32&-64;c[k>>2]=(c[k>>2]|0)+ -1;c[o>>2]=(c[o>>2]|0)+32}c[l>>2]=(c[l>>2]|0)+1}c[l>>2]=0;while(1){if(!((c[l>>2]|0)>>>0<2)){break}o=c[g>>2]|0;if((c[l>>2]|0)==0){c[t>>2]=o;c[u>>2]=(c[g>>2]|0)+1032}else{c[t>>2]=o+516;c[u>>2]=(c[g>>2]|0)+1548}c[p>>2]=(c[t>>2]|0)+4;c[r>>2]=c[c[t>>2]>>2];while(1){if(!((c[r>>2]|0)>>>0>0)){break}c[q>>2]=(c[u>>2]|0)+4;c[s>>2]=c[c[u>>2]>>2];while(1){if(!((c[s>>2]|0)>>>0>0)){break}c[v>>2]=(c[c[p>>2]>>2]|0)-(c[c[q>>2]>>2]|0);if((c[v>>2]|0)<0){c[v>>2]=0-(c[v>>2]|0)}if((Nn(c[v>>2]|0,c[h>>2]|0)|0)<64){y=32;break}c[s>>2]=(c[s>>2]|0)+ -1;c[q>>2]=(c[q>>2]|0)+32}if((y|0)==32){y=0;c[(c[p>>2]|0)+28>>2]=c[(c[q>>2]|0)+28>>2];c[(c[p>>2]|0)+24>>2]=c[(c[q>>2]|0)+24>>2];c[(c[p>>2]|0)+16>>2]=c[(c[q>>2]|0)+16>>2];c[(c[p>>2]|0)+20>>2]=c[(c[q>>2]|0)+20>>2]}c[r>>2]=(c[r>>2]|0)+ -1;c[p>>2]=(c[p>>2]|0)+32}c[l>>2]=(c[l>>2]|0)+1}i=f;return}function Kz(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+32|0;e=d+16|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;c[e>>2]=a;c[f>>2]=b;c[j>>2]=4;b=c[e>>2]|0;c[g>>2]=(c[e>>2]|0)<0?0-b|0:b;b=c[f>>2]|0;c[h>>2]=(c[f>>2]|0)<0?0-b|0:b;if(((c[h>>2]|0)*12|0)<(c[g>>2]|0)){c[j>>2]=(c[e>>2]|0)>=0?2:-2;k=c[j>>2]|0;i=d;return k|0}if(((c[g>>2]|0)*12|0)>=(c[h>>2]|0)){k=c[j>>2]|0;i=d;return k|0}c[j>>2]=(c[f>>2]|0)>=0?-1:1;k=c[j>>2]|0;i=d;return k|0}function Lz(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;b=i;i=i+64|0;d=b+52|0;e=b+48|0;f=b+44|0;g=b+40|0;h=b+36|0;j=b+32|0;k=b+28|0;l=b+24|0;m=b+16|0;n=b+12|0;o=b+8|0;p=b+4|0;q=b;r=b+20|0;c[d>>2]=a;c[e>>2]=0;while(1){if(!((c[e>>2]|0)>>>0<(c[(c[d>>2]|0)+4>>2]|0)>>>0)){break}c[r>>2]=0;a:do{if(!((c[(c[(c[d>>2]|0)+12>>2]|0)+(c[e>>2]<<3)+4>>2]|0)>>>0<4)){c[f>>2]=c[(c[(c[d>>2]|0)+12>>2]|0)+(c[e>>2]<<3)>>2];a=c[f>>2]|0;c[h>>2]=a;c[g>>2]=a;do{c[h>>2]=c[(c[h>>2]|0)+4>>2];if((c[h>>2]|0)==(c[f>>2]|0)){break a}c[l>>2]=(c[(c[h>>2]|0)+28>>2]|0)-(c[(c[g>>2]|0)+28>>2]|0);c[m>>2]=(c[(c[h>>2]|0)+32>>2]|0)-(c[(c[g>>2]|0)+32>>2]|0);if((c[l>>2]|0)!=0){break}}while((c[m>>2]|0)==0);c[j>>2]=c[g>>2];while(1){c[g>>2]=c[j>>2];c[j>>2]=c[c[j>>2]>>2];if((c[j>>2]|0)==(c[f>>2]|0)){break a}c[n>>2]=(c[(c[g>>2]|0)+28>>2]|0)-(c[(c[j>>2]|0)+28>>2]|0);c[o>>2]=(c[(c[g>>2]|0)+32>>2]|0)-(c[(c[j>>2]|0)+32>>2]|0);if((c[n>>2]|0)==0?(c[o>>2]|0)==0:0){continue}c[p>>2]=Pn(c[l>>2]|0,c[m>>2]|0,c[n>>2]|0,c[o>>2]|0)|0;if((c[p>>2]|0)!=0){break}}c[f>>2]=c[g>>2];c[l>>2]=c[n>>2];c[m>>2]=c[o>>2];do{c[k>>2]=c[h>>2];while(1){c[h>>2]=c[k>>2];c[k>>2]=c[(c[k>>2]|0)+4>>2];if((c[k>>2]|0)==(c[f>>2]|0)){c[r>>2]=1}c[n>>2]=(c[(c[k>>2]|0)+28>>2]|0)-(c[(c[h>>2]|0)+28>>2]|0);c[o>>2]=(c[(c[k>>2]|0)+32>>2]|0)-(c[(c[h>>2]|0)+32>>2]|0);if((c[n>>2]|0)==0?(c[o>>2]|0)==0:0){continue}c[q>>2]=Pn(c[l>>2]|0,c[m>>2]|0,c[n>>2]|0,c[o>>2]|0)|0;if((c[q>>2]|0)!=0){break}}if((c[q>>2]^c[p>>2]|0)<0){do{a=(c[g>>2]|0)+12|0;c[a>>2]=c[a>>2]|4;c[g>>2]=c[(c[g>>2]|0)+4>>2]}while((c[g>>2]|0)!=(c[h>>2]|0));a=(c[g>>2]|0)+12|0;c[a>>2]=c[a>>2]|4}c[g>>2]=c[h>>2];c[h>>2]=c[k>>2];c[p>>2]=c[q>>2];c[l>>2]=c[n>>2];c[m>>2]=c[o>>2]}while((c[r>>2]|0)!=0^1)}}while(0);c[e>>2]=(c[e>>2]|0)+1}i=b;return}function Mz(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=i;i=i+48|0;h=g+40|0;j=g+36|0;k=g+32|0;l=g+28|0;m=g+24|0;n=g+20|0;o=g+12|0;p=g+8|0;q=g+4|0;r=g;s=g+16|0;c[h>>2]=a;c[j>>2]=b;c[k>>2]=d;c[l>>2]=e;c[m>>2]=f;c[l>>2]=c[l>>2];c[n>>2]=c[c[j>>2]>>2];l=Yn(c[m>>2]|0,4,0,c[n>>2]<<1,0,o)|0;c[(c[h>>2]|0)+12>>2]=l;if((c[o>>2]|0)!=0){t=c[o>>2]|0;i=g;return t|0}l=Yn(c[m>>2]|0,28,0,c[n>>2]|0,0,o)|0;c[(c[h>>2]|0)+8>>2]=l;if((c[o>>2]|0)!=0){t=c[o>>2]|0;i=g;return t|0}l=Yn(c[m>>2]|0,16,0,(c[n>>2]<<1)+1|0,0,o)|0;c[(c[h>>2]|0)+24>>2]=l;if((c[o>>2]|0)!=0){t=c[o>>2]|0;i=g;return t|0}c[c[h>>2]>>2]=c[n>>2];c[(c[h>>2]|0)+16>>2]=(c[(c[h>>2]|0)+12>>2]|0)+(c[n>>2]<<2);c[(c[h>>2]|0)+4>>2]=0;c[(c[h>>2]|0)+20>>2]=0;c[(c[h>>2]|0)+28>>2]=0;c[p>>2]=c[(c[h>>2]|0)+8>>2];c[q>>2]=c[(c[j>>2]|0)+8>>2];while(1){if(!((c[n>>2]|0)>>>0>0)){break}c[c[p>>2]>>2]=c[c[q>>2]>>2];c[(c[p>>2]|0)+4>>2]=c[(c[q>>2]|0)+4>>2];c[(c[p>>2]|0)+16>>2]=c[(c[q>>2]|0)+8>>2];c[n>>2]=(c[n>>2]|0)+ -1;c[p>>2]=(c[p>>2]|0)+28;c[q>>2]=(c[q>>2]|0)+12}a:do{if((c[k>>2]|0)!=0){c[r>>2]=c[(c[k>>2]|0)+8>>2];c[n>>2]=c[c[k>>2]>>2];c[(c[h>>2]|0)+32>>2]=c[k>>2];while(1){if(!((c[n>>2]|0)>>>0>0)){break a}Nz(c[h>>2]|0,c[r>>2]|0);c[n>>2]=(c[n>>2]|0)+ -1;c[r>>2]=(c[r>>2]|0)+16}}}while(0);if((c[(c[h>>2]|0)+4>>2]|0)==(c[c[h>>2]>>2]|0)){t=c[o>>2]|0;i=g;return t|0}c[n>>2]=c[c[h>>2]>>2];c[s>>2]=0;while(1){if(!((c[s>>2]|0)>>>0<(c[n>>2]|0)>>>0)){break}Oz(c[h>>2]|0,c[s>>2]|0);c[s>>2]=(c[s>>2]|0)+1}t=c[o>>2]|0;i=g;return t|0}function Nz(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+32|0;f=e+24|0;g=e;h=e+4|0;j=e+8|0;k=e+12|0;l=e+16|0;m=e+20|0;c[f>>2]=a;c[g>>2]=b;c[h>>2]=0;c[j>>2]=0;c[k>>2]=c[(c[g>>2]|0)+8>>2];c[m>>2]=c[c[g>>2]>>2];c[l>>2]=0;while(1){if(!((c[l>>2]|0)>>>0<(c[m>>2]|0)>>>0)){break}if((c[h>>2]|0)==0){g=c[k>>2]|0;c[k>>2]=g+1;c[j>>2]=d[g]|0;c[h>>2]=128}if((c[j>>2]&c[h>>2]|0)!=0){Oz(c[f>>2]|0,c[l>>2]|0)}c[h>>2]=c[h>>2]>>1;c[l>>2]=(c[l>>2]|0)+1}i=e;return}function Oz(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+32|0;e=d+20|0;f=d;g=d+4|0;h=d+8|0;j=d+12|0;k=d+16|0;c[e>>2]=a;c[f>>2]=b;c[g>>2]=(c[(c[e>>2]|0)+8>>2]|0)+((c[f>>2]|0)*28|0);if((c[f>>2]|0)>>>0>=(c[c[e>>2]>>2]|0)>>>0){i=d;return}if((c[(c[g>>2]|0)+16>>2]&4|0)!=0){i=d;return}f=(c[g>>2]|0)+16|0;c[f>>2]=c[f>>2]|4;c[h>>2]=c[(c[e>>2]|0)+16>>2];c[j>>2]=c[(c[e>>2]|0)+4>>2];c[(c[g>>2]|0)+20>>2]=0;while(1){if(!((c[j>>2]|0)>>>0>0)){break}c[k>>2]=c[c[h>>2]>>2];if((Pz(c[g>>2]|0,c[k>>2]|0)|0)!=0){l=6;break}c[j>>2]=(c[j>>2]|0)+ -1;c[h>>2]=(c[h>>2]|0)+4}if((l|0)==6){c[(c[g>>2]|0)+20>>2]=c[k>>2]}if(!((c[(c[e>>2]|0)+4>>2]|0)>>>0<(c[c[e>>2]>>2]|0)>>>0)){i=d;return}k=c[g>>2]|0;g=(c[e>>2]|0)+4|0;l=c[g>>2]|0;c[g>>2]=l+1;c[(c[(c[e>>2]|0)+16>>2]|0)+(l<<2)>>2]=k;i=d;return}function Pz(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d+4|0;f=d;c[e>>2]=a;c[f>>2]=b;if(((c[c[e>>2]>>2]|0)+(c[(c[e>>2]|0)+4>>2]|0)|0)<(c[c[f>>2]>>2]|0)){g=0;h=g&1;i=d;return h|0}g=((c[c[f>>2]>>2]|0)+(c[(c[f>>2]|0)+4>>2]|0)|0)>=(c[c[e>>2]>>2]|0);h=g&1;i=d;return h|0}function Qz(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0;f=i;i=i+944|0;g=f+680|0;h=f+424|0;j=f;k=f+232|0;l=aa(d,b)|0;if((l|0)==0){i=f;return}b=l-d|0;c[k+4>>2]=d;c[k>>2]=d;m=d;n=d;o=2;while(1){p=m+d+n|0;c[k+(o<<2)>>2]=p;if(p>>>0<l>>>0){q=n;n=p;o=o+1|0;m=q}else{break}}m=0-d|0;o=a+b|0;if((b|0)>0){b=(d|0)==0;n=d>>>0>256?256:d;l=(n|0)==(d|0);q=o;p=1;r=0;s=a;t=1;while(1){do{if((p&3|0)!=3){u=t+ -1|0;a:do{if((c[k+(u<<2)>>2]|0)>>>0<(q-s|0)>>>0){c[j>>2]=s;if((t|0)>1){v=t;w=s;x=s;y=1;while(1){z=w+m|0;A=v+ -2|0;B=w+(0-((c[k+(A<<2)>>2]|0)+d))|0;if((Ad[e&127](x,B)|0)>-1?(Ad[e&127](x,z)|0)>-1:0){C=y;break}D=y+1|0;E=j+(y<<2)|0;if((Ad[e&127](B,z)|0)>-1){c[E>>2]=B;F=B;G=v+ -1|0}else{c[E>>2]=z;F=z;G=A}if((G|0)<=1){C=D;break}v=G;w=F;x=c[j>>2]|0;y=D}if((C|0)>=2?(y=j+(C<<2)|0,c[y>>2]=g,!b):0){if((C|0)>0){H=d;I=g}else{x=c[j>>2]|0;lA(g|0,x|0,n|0)|0;if(l){break}else{J=d;K=n}while(1){J=J-K|0;K=J>>>0>256?256:J;lA(g|0,x|0,K|0)|0;if((J|0)==(K|0)){break a}}}while(1){x=H>>>0>256?256:H;w=c[j>>2]|0;lA(I|0,w|0,x|0)|0;v=w;w=0;while(1){D=w+1|0;A=c[j+(D<<2)>>2]|0;lA(v|0,A|0,x|0)|0;c[j+(w<<2)>>2]=v+x;if((D|0)==(C|0)){break}else{v=A;w=D}}if((H|0)==(x|0)){break a}H=H-x|0;I=c[y>>2]|0}}}}else{Rz(s,d,e,p,r,t,0,k)}}while(0);if((t|0)==1){L=p<<1;M=p>>>31|r<<1;N=0;break}else{y=u>>>0>31;w=y?0:p;v=y?t+ -33|0:u;L=w<<v;M=w>>>(32-v|0)|(y?p:r)<<v;N=1;break}}else{c[j>>2]=s;b:do{if((t|0)>1){v=t;y=s;w=s;D=1;while(1){A=y+m|0;z=v+ -2|0;E=y+(0-((c[k+(z<<2)>>2]|0)+d))|0;if((Ad[e&127](w,E)|0)>-1?(Ad[e&127](w,A)|0)>-1:0){O=D;break}B=D+1|0;P=j+(D<<2)|0;if((Ad[e&127](E,A)|0)>-1){c[P>>2]=E;Q=E;R=v+ -1|0}else{c[P>>2]=A;Q=A;R=z}if((R|0)<=1){O=B;break}v=R;y=Q;w=c[j>>2]|0;D=B}if((O|0)>=2?(D=j+(O<<2)|0,c[D>>2]=h,!b):0){if((O|0)>0){S=d;T=h}else{w=c[j>>2]|0;lA(h|0,w|0,n|0)|0;if(l){break}else{U=d;V=n}while(1){U=U-V|0;V=U>>>0>256?256:U;lA(h|0,w|0,V|0)|0;if((U|0)==(V|0)){break b}}}while(1){w=S>>>0>256?256:S;y=c[j>>2]|0;lA(T|0,y|0,w|0)|0;v=y;y=0;while(1){B=y+1|0;z=c[j+(B<<2)>>2]|0;lA(v|0,z|0,w|0)|0;c[j+(y<<2)>>2]=v+w;if((B|0)==(O|0)){break}else{v=z;y=B}}if((S|0)==(w|0)){break b}S=S-w|0;T=c[D>>2]|0}}}}while(0);L=p>>>2|r<<30;M=r>>>2;N=t+2|0}}while(0);u=L|1;D=s+d|0;if(D>>>0<o>>>0){p=u;r=M;s=D;t=N}else{W=M;X=u;Y=D;Z=N;break}}}else{W=0;X=1;Y=a;Z=1}Rz(Y,d,e,X,W,Z,0,k);a=X;X=W;W=Y;Y=Z;while(1){if((Y|0)==1){if((a|0)==1){if((X|0)==0){break}else{_=52}}}else{_=52}if((_|0)==52?(_=0,(Y|0)>=2):0){Z=a>>>30;N=Y+ -2|0;M=(a<<1&2147483646|Z<<31)^3;t=(Z|X<<2)>>>1;Rz(W+(0-((c[k+(N<<2)>>2]|0)+d))|0,d,e,M,t,Y+ -1|0,1,k);s=t<<1|Z&1;Z=M<<1|1;M=W+m|0;Rz(M,d,e,Z,s,N,1,k);a=Z;X=s;W=M;Y=N;continue}N=a+ -1|0;if((N|0)!=0){if((N&1|0)==0){M=N;N=0;do{N=N+1|0;M=M>>>1}while((M&1|0)==0);if((N|0)!=0){$=N}else{_=57}}else{_=57}if((_|0)==57){_=0;if((X|0)!=0){if((X&1|0)==0){M=X;s=0;while(1){Z=s+1|0;t=M>>>1;if((t&1|0)==0){M=t;s=Z}else{ba=Z;break}}}else{ba=0}}else{ba=32}$=(ba|0)==0?0:ba+32|0}if($>>>0>31){ca=$;_=62}else{da=$;ea=a;fa=X;ga=$}}else{ca=32;_=62}if((_|0)==62){_=0;da=ca+ -32|0;ea=X;fa=0;ga=ca}a=fa<<32-da|ea>>>da;X=fa>>>da;W=W+m|0;Y=ga+Y|0}i=f;return}function Rz(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0;k=i;i=i+752|0;l=k+232|0;m=k+488|0;n=k;c[n>>2]=a;o=0-b|0;a:do{if((e|0)==1&(f|0)==0){p=a;q=g;r=h;s=1;t=18}else{u=g;v=a;w=h;x=e;y=f;z=a;A=1;while(1){B=v+(0-(c[j+(u<<2)>>2]|0))|0;if((Ad[d&127](B,z)|0)<1){p=v;q=u;r=w;s=A;t=18;break a}if((w|0)==0&(u|0)>1){C=c[j+(u+ -2<<2)>>2]|0;if((Ad[d&127](v+o|0,B)|0)>-1){D=v;E=u;F=A;break a}if((Ad[d&127](v+(0-(C+b))|0,B)|0)>-1){D=v;E=u;F=A;break a}}C=A+1|0;c[n+(A<<2)>>2]=B;G=x+ -1|0;if((G|0)!=0){if((G&1|0)==0){H=G;G=0;do{G=G+1|0;H=H>>>1}while((H&1|0)==0);if((G|0)!=0){I=G}else{t=10}}else{t=10}if((t|0)==10){t=0;if((y|0)!=0){if((y&1|0)==0){H=y;J=0;while(1){K=J+1|0;L=H>>>1;if((L&1|0)==0){H=L;J=K}else{M=K;break}}}else{M=0}}else{M=32}I=(M|0)==0?0:M+32|0}if(I>>>0>31){N=I;t=15}else{O=I;P=x;Q=y;R=I}}else{N=32;t=15}if((t|0)==15){t=0;O=N+ -32|0;P=y;Q=0;R=N}J=Q<<32-O|P>>>O;H=Q>>>O;G=R+u|0;if((J|0)==1&(H|0)==0){D=B;E=G;F=C;break a}u=G;v=B;w=0;x=J;y=H;z=c[n>>2]|0;A=C}}}while(0);if((t|0)==18){if((r|0)==0){D=p;E=q;F=s}else{i=k;return}}b:do{if((F|0)>=2?(s=n+(F<<2)|0,c[s>>2]=l,(b|0)!=0):0){if((F|0)>0){S=b;T=l}else{q=b>>>0>256?256:b;p=c[n>>2]|0;lA(l|0,p|0,q|0)|0;if((q|0)==(b|0)){break}else{U=b;V=q}while(1){U=U-V|0;V=U>>>0>256?256:U;lA(l|0,p|0,V|0)|0;if((U|0)==(V|0)){break b}}}while(1){p=S>>>0>256?256:S;q=c[n>>2]|0;lA(T|0,q|0,p|0)|0;r=q;q=0;while(1){t=q+1|0;R=c[n+(t<<2)>>2]|0;lA(r|0,R|0,p|0)|0;c[n+(q<<2)>>2]=r+p;if((t|0)==(F|0)){break}else{r=R;q=t}}if((S|0)==(p|0)){break b}S=S-p|0;T=c[s>>2]|0}}}while(0);c[l>>2]=D;c:do{if((E|0)>1){T=E;S=D;F=D;n=1;while(1){V=S+o|0;U=T+ -2|0;s=S+(0-((c[j+(U<<2)>>2]|0)+b))|0;if((Ad[d&127](F,s)|0)>-1?(Ad[d&127](F,V)|0)>-1:0){W=n;break}q=n+1|0;r=l+(n<<2)|0;if((Ad[d&127](s,V)|0)>-1){c[r>>2]=s;X=s;Y=T+ -1|0}else{c[r>>2]=V;X=V;Y=U}if((Y|0)<=1){W=q;break}T=Y;S=X;F=c[l>>2]|0;n=q}if((W|0)>=2?(n=l+(W<<2)|0,c[n>>2]=m,(b|0)!=0):0){if((W|0)>0){Z=b;_=m}else{F=b>>>0>256?256:b;S=c[l>>2]|0;lA(m|0,S|0,F|0)|0;if((F|0)==(b|0)){$=m;break}else{aa=b;ba=F}while(1){F=aa-ba|0;T=F>>>0>256?256:F;lA(m|0,S|0,T|0)|0;if((F|0)==(T|0)){$=m;break c}else{aa=F;ba=T}}}while(1){S=Z>>>0>256?256:Z;T=c[l>>2]|0;lA(_|0,T|0,S|0)|0;F=T;T=0;while(1){q=T+1|0;U=c[l+(q<<2)>>2]|0;lA(F|0,U|0,S|0)|0;c[l+(T<<2)>>2]=F+S;if((q|0)==(W|0)){break}else{F=U;T=q}}if((Z|0)==(S|0)){$=m;break c}Z=Z-S|0;_=c[n>>2]|0}}else{$=m}}else{$=m}}while(0);i=k;return}function Sz(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;f=i;g=d&255;h=(e|0)==0;a:do{if((b&3|0)==0|h){j=e;k=h;l=b;m=5}else{n=d&255;o=e;p=b;while(1){if((a[p]|0)==n<<24>>24){q=o;r=p;m=6;break a}s=p+1|0;t=o+ -1|0;u=(t|0)==0;if((s&3|0)==0|u){j=t;k=u;l=s;m=5;break}else{o=t;p=s}}}}while(0);if((m|0)==5){if(k){v=0;w=l}else{q=j;r=l;m=6}}b:do{if((m|0)==6){l=d&255;if(!((a[r]|0)==l<<24>>24)){j=aa(g,16843009)|0;c:do{if(q>>>0>3){k=q;b=r;while(1){e=c[b>>2]^j;if(((e&-2139062144^-2139062144)&e+ -16843009|0)!=0){x=k;y=b;break c}e=b+4|0;h=k+ -4|0;if(h>>>0>3){k=h;b=e}else{x=h;y=e;break}}}else{x=q;y=r}}while(0);if((x|0)==0){v=0;w=y}else{j=x;b=y;while(1){if((a[b]|0)==l<<24>>24){v=j;w=b;break b}k=b+1|0;e=j+ -1|0;if((e|0)==0){v=0;w=k;break}else{j=e;b=k}}}}else{v=q;w=r}}}while(0);i=f;return((v|0)!=0?w:0)|0}function Tz(b,c){b=b|0;c=c|0;var d=0,e=0;d=i;e=Uz(b,c)|0;i=d;return((a[e]|0)==(c&255)<<24>>24?e:0)|0}function Uz(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;f=d&255;if((f|0)==0){g=b+(gA(b|0)|0)|0;i=e;return g|0}a:do{if((b&3|0)!=0){h=d&255;j=b;while(1){k=a[j]|0;if(k<<24>>24==0){g=j;l=13;break}m=j+1|0;if(k<<24>>24==h<<24>>24){g=j;l=13;break}if((m&3|0)==0){n=m;break a}else{j=m}}if((l|0)==13){i=e;return g|0}}else{n=b}}while(0);b=aa(f,16843009)|0;f=c[n>>2]|0;b:do{if(((f&-2139062144^-2139062144)&f+ -16843009|0)==0){l=f;j=n;while(1){h=l^b;m=j+4|0;if(((h&-2139062144^-2139062144)&h+ -16843009|0)!=0){o=j;break b}h=c[m>>2]|0;if(((h&-2139062144^-2139062144)&h+ -16843009|0)==0){l=h;j=m}else{o=m;break}}}else{o=n}}while(0);n=d&255;d=o;while(1){o=a[d]|0;if(o<<24>>24==0|o<<24>>24==n<<24>>24){g=d;break}else{d=d+1|0}}i=e;return g|0}function Vz(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0;f=i;i=i+1056|0;g=f+1024|0;h=f;j=a[e]|0;if(j<<24>>24==0){k=b;i=f;return k|0}l=Tz(b,j<<24>>24)|0;if((l|0)==0){k=0;i=f;return k|0}b=a[e+1|0]|0;if(b<<24>>24==0){k=l;i=f;return k|0}m=l+1|0;n=a[m]|0;if(n<<24>>24==0){k=0;i=f;return k|0}o=a[e+2|0]|0;if(o<<24>>24==0){p=b&255|(j&255)<<8;q=m;m=n;r=d[l]<<8|n&255;while(1){s=r&65535;if((s|0)==(p|0)){t=q;u=m;break}v=q+1|0;w=a[v]|0;if(w<<24>>24==0){t=v;u=0;break}else{q=v;m=w;r=w&255|s<<8}}k=u<<24>>24==0?0:t+ -1|0;i=f;return k|0}t=l+2|0;u=a[t]|0;if(u<<24>>24==0){k=0;i=f;return k|0}r=a[e+3|0]|0;if(r<<24>>24==0){m=(b&255)<<16|(j&255)<<24|(o&255)<<8;q=(u&255)<<8|(n&255)<<16|d[l]<<24;if((q|0)==(m|0)){x=t;y=0}else{p=t;t=q;while(1){q=p+1|0;s=a[q]|0;w=(s&255|t)<<8;v=s<<24>>24==0;if(v|(w|0)==(m|0)){x=q;y=v;break}else{p=q;t=w}}}k=y?0:x+ -2|0;i=f;return k|0}x=l+3|0;y=a[x]|0;if(y<<24>>24==0){k=0;i=f;return k|0}if((a[e+4|0]|0)==0){t=(b&255)<<16|(j&255)<<24|(o&255)<<8|r&255;r=(u&255)<<8|(n&255)<<16|y&255|d[l]<<24;if((r|0)==(t|0)){z=x;A=0}else{y=x;x=r;while(1){r=y+1|0;n=a[r]|0;u=n&255|x<<8;o=n<<24>>24==0;if(o|(u|0)==(t|0)){z=r;A=o;break}else{y=r;x=u}}}k=A?0:z+ -3|0;i=f;return k|0}c[g+0>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;c[g+16>>2]=0;c[g+20>>2]=0;c[g+24>>2]=0;c[g+28>>2]=0;z=j;j=0;while(1){if((a[l+j|0]|0)==0){k=0;B=80;break}A=z&255;x=g+(A>>>5<<2)|0;c[x>>2]=c[x>>2]|1<<(A&31);C=j+1|0;c[h+(A<<2)>>2]=C;z=a[e+C|0]|0;if(z<<24>>24==0){break}else{j=C}}if((B|0)==80){i=f;return k|0}a:do{if(C>>>0>1){z=1;A=-1;x=0;b:while(1){y=z;t=x;u=1;while(1){r=y;D=t;c:while(1){E=r;o=1;while(1){F=a[e+(o+A)|0]|0;G=a[e+E|0]|0;if(!(F<<24>>24==G<<24>>24)){break c}n=o+1|0;if((o|0)==(u|0)){break}b=n+D|0;if(b>>>0<C>>>0){E=b;o=n}else{H=A;I=u;break b}}o=D+u|0;n=o+1|0;if(n>>>0<C>>>0){r=n;D=o}else{H=A;I=u;break b}}r=E-A|0;if(!((F&255)>(G&255))){break}o=E+1|0;if(o>>>0<C>>>0){y=o;t=E;u=r}else{H=A;I=r;break b}}u=D+2|0;if(u>>>0<C>>>0){z=u;A=D;x=D+1|0}else{H=D;I=1;break}}x=1;A=-1;z=0;while(1){u=x;t=z;y=1;while(1){r=u;J=t;d:while(1){K=r;o=1;while(1){L=a[e+(o+A)|0]|0;M=a[e+K|0]|0;if(!(L<<24>>24==M<<24>>24)){break d}n=o+1|0;if((o|0)==(y|0)){break}b=n+J|0;if(b>>>0<C>>>0){K=b;o=n}else{N=H;O=A;P=I;Q=y;break a}}o=J+y|0;n=o+1|0;if(n>>>0<C>>>0){r=n;J=o}else{N=H;O=A;P=I;Q=y;break a}}r=K-A|0;if(!((L&255)<(M&255))){break}o=K+1|0;if(o>>>0<C>>>0){u=o;t=K;y=r}else{N=H;O=A;P=I;Q=r;break a}}y=J+2|0;if(y>>>0<C>>>0){x=y;A=J;z=J+1|0}else{N=H;O=J;P=I;Q=1;break}}}else{N=-1;O=-1;P=1;Q=1}}while(0);I=(O+1|0)>>>0>(N+1|0)>>>0;J=I?Q:P;P=I?O:N;N=P+1|0;if((aA(e,e+J|0,N)|0)==0){O=C-J|0;I=C|63;if((C|0)!=(J|0)){Q=l;H=0;K=l;e:while(1){M=Q;do{if((K-M|0)>>>0<C>>>0){L=Sz(K,0,I)|0;if((L|0)!=0){if((L-M|0)>>>0<C>>>0){k=0;B=80;break e}else{R=L;break}}else{R=K+I|0;break}}else{R=K}}while(0);M=d[Q+j|0]|0;if((1<<(M&31)&c[g+(M>>>5<<2)>>2]|0)==0){Q=Q+C|0;H=0;K=R;continue}L=c[h+(M<<2)>>2]|0;M=C-L|0;if((C|0)!=(L|0)){Q=Q+((H|0)!=0&M>>>0<J>>>0?O:M)|0;H=0;K=R;continue}M=N>>>0>H>>>0?N:H;L=a[e+M|0]|0;f:do{if(L<<24>>24==0){S=N}else{D=L;E=M;while(1){G=E+1|0;if(!(D<<24>>24==(a[Q+E|0]|0))){break}F=a[e+G|0]|0;if(F<<24>>24==0){S=N;break f}else{D=F;E=G}}Q=Q+(E-P)|0;H=0;K=R;continue e}}while(0);while(1){if(!(S>>>0>H>>>0)){break}M=S+ -1|0;if((a[e+M|0]|0)==(a[Q+M|0]|0)){S=M}else{break}}if((S|0)==(H|0)){k=Q;B=80;break}Q=Q+J|0;H=O;K=R}if((B|0)==80){i=f;return k|0}}else{T=I;U=C}}else{I=C-P+ -1|0;T=C|63;U=(P>>>0>I>>>0?P:I)+1|0}I=e+N|0;R=l;K=l;g:while(1){l=R;do{if((K-l|0)>>>0<C>>>0){O=Sz(K,0,T)|0;if((O|0)!=0){if((O-l|0)>>>0<C>>>0){k=0;B=80;break g}else{V=O;break}}else{V=K+T|0;break}}else{V=K}}while(0);l=d[R+j|0]|0;if((1<<(l&31)&c[g+(l>>>5<<2)>>2]|0)==0){R=R+C|0;K=V;continue}O=c[h+(l<<2)>>2]|0;if((C|0)!=(O|0)){R=R+(C-O)|0;K=V;continue}O=a[I]|0;h:do{if(O<<24>>24==0){W=N}else{l=O;H=N;while(1){J=H+1|0;if(!(l<<24>>24==(a[R+H|0]|0))){break}Q=a[e+J|0]|0;if(Q<<24>>24==0){W=N;break h}else{l=Q;H=J}}R=R+(H-P)|0;K=V;continue g}}while(0);do{if((W|0)==0){k=R;B=80;break g}W=W+ -1|0}while((a[e+W|0]|0)==(a[R+W|0]|0));R=R+U|0;K=V}if((B|0)==80){i=f;return k|0}return 0}function Wz(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,La=0;b=i;do{if(a>>>0<245){if(a>>>0<11){d=16}else{d=a+11&-8}e=d>>>3;f=c[24200]|0;g=f>>>e;if((g&3|0)!=0){h=(g&1^1)+e|0;j=h<<1;k=96840+(j<<2)|0;l=96840+(j+2<<2)|0;j=c[l>>2]|0;m=j+8|0;n=c[m>>2]|0;do{if((k|0)!=(n|0)){if(n>>>0<(c[96816>>2]|0)>>>0){Ac()}o=n+12|0;if((c[o>>2]|0)==(j|0)){c[o>>2]=k;c[l>>2]=n;break}else{Ac()}}else{c[24200]=f&~(1<<h)}}while(0);n=h<<3;c[j+4>>2]=n|3;l=j+(n|4)|0;c[l>>2]=c[l>>2]|1;p=m;i=b;return p|0}if(d>>>0>(c[96808>>2]|0)>>>0){if((g|0)!=0){l=2<<e;n=g<<e&(l|0-l);l=(n&0-n)+ -1|0;n=l>>>12&16;k=l>>>n;l=k>>>5&8;o=k>>>l;k=o>>>2&4;q=o>>>k;o=q>>>1&2;r=q>>>o;q=r>>>1&1;s=(l|n|k|o|q)+(r>>>q)|0;q=s<<1;r=96840+(q<<2)|0;o=96840+(q+2<<2)|0;q=c[o>>2]|0;k=q+8|0;n=c[k>>2]|0;do{if((r|0)!=(n|0)){if(n>>>0<(c[96816>>2]|0)>>>0){Ac()}l=n+12|0;if((c[l>>2]|0)==(q|0)){c[l>>2]=r;c[o>>2]=n;break}else{Ac()}}else{c[24200]=f&~(1<<s)}}while(0);f=s<<3;n=f-d|0;c[q+4>>2]=d|3;o=q+d|0;c[q+(d|4)>>2]=n|1;c[q+f>>2]=n;f=c[96808>>2]|0;if((f|0)!=0){r=c[96820>>2]|0;e=f>>>3;f=e<<1;g=96840+(f<<2)|0;m=c[24200]|0;j=1<<e;if((m&j|0)!=0){e=96840+(f+2<<2)|0;h=c[e>>2]|0;if(h>>>0<(c[96816>>2]|0)>>>0){Ac()}else{t=e;u=h}}else{c[24200]=m|j;t=96840+(f+2<<2)|0;u=g}c[t>>2]=r;c[u+12>>2]=r;c[r+8>>2]=u;c[r+12>>2]=g}c[96808>>2]=n;c[96820>>2]=o;p=k;i=b;return p|0}o=c[96804>>2]|0;if((o|0)!=0){n=(o&0-o)+ -1|0;o=n>>>12&16;g=n>>>o;n=g>>>5&8;r=g>>>n;g=r>>>2&4;f=r>>>g;r=f>>>1&2;j=f>>>r;f=j>>>1&1;m=c[97104+((n|o|g|r|f)+(j>>>f)<<2)>>2]|0;f=(c[m+4>>2]&-8)-d|0;j=m;r=m;while(1){m=c[j+16>>2]|0;if((m|0)==0){g=c[j+20>>2]|0;if((g|0)==0){break}else{v=g}}else{v=m}m=(c[v+4>>2]&-8)-d|0;g=m>>>0<f>>>0;f=g?m:f;j=v;r=g?v:r}j=c[96816>>2]|0;if(r>>>0<j>>>0){Ac()}k=r+d|0;if(!(r>>>0<k>>>0)){Ac()}q=c[r+24>>2]|0;s=c[r+12>>2]|0;do{if((s|0)==(r|0)){g=r+20|0;m=c[g>>2]|0;if((m|0)==0){o=r+16|0;n=c[o>>2]|0;if((n|0)==0){w=0;break}else{x=n;y=o}}else{x=m;y=g}while(1){g=x+20|0;m=c[g>>2]|0;if((m|0)!=0){x=m;y=g;continue}g=x+16|0;m=c[g>>2]|0;if((m|0)==0){break}else{x=m;y=g}}if(y>>>0<j>>>0){Ac()}else{c[y>>2]=0;w=x;break}}else{g=c[r+8>>2]|0;if(g>>>0<j>>>0){Ac()}m=g+12|0;if((c[m>>2]|0)!=(r|0)){Ac()}o=s+8|0;if((c[o>>2]|0)==(r|0)){c[m>>2]=s;c[o>>2]=g;w=s;break}else{Ac()}}}while(0);do{if((q|0)!=0){s=c[r+28>>2]|0;j=97104+(s<<2)|0;if((r|0)==(c[j>>2]|0)){c[j>>2]=w;if((w|0)==0){c[96804>>2]=c[96804>>2]&~(1<<s);break}}else{if(q>>>0<(c[96816>>2]|0)>>>0){Ac()}s=q+16|0;if((c[s>>2]|0)==(r|0)){c[s>>2]=w}else{c[q+20>>2]=w}if((w|0)==0){break}}if(w>>>0<(c[96816>>2]|0)>>>0){Ac()}c[w+24>>2]=q;s=c[r+16>>2]|0;do{if((s|0)!=0){if(s>>>0<(c[96816>>2]|0)>>>0){Ac()}else{c[w+16>>2]=s;c[s+24>>2]=w;break}}}while(0);s=c[r+20>>2]|0;if((s|0)!=0){if(s>>>0<(c[96816>>2]|0)>>>0){Ac()}else{c[w+20>>2]=s;c[s+24>>2]=w;break}}}}while(0);if(f>>>0<16){q=f+d|0;c[r+4>>2]=q|3;s=r+(q+4)|0;c[s>>2]=c[s>>2]|1}else{c[r+4>>2]=d|3;c[r+(d|4)>>2]=f|1;c[r+(f+d)>>2]=f;s=c[96808>>2]|0;if((s|0)!=0){q=c[96820>>2]|0;j=s>>>3;s=j<<1;g=96840+(s<<2)|0;o=c[24200]|0;m=1<<j;if((o&m|0)!=0){j=96840+(s+2<<2)|0;n=c[j>>2]|0;if(n>>>0<(c[96816>>2]|0)>>>0){Ac()}else{z=j;A=n}}else{c[24200]=o|m;z=96840+(s+2<<2)|0;A=g}c[z>>2]=q;c[A+12>>2]=q;c[q+8>>2]=A;c[q+12>>2]=g}c[96808>>2]=f;c[96820>>2]=k}p=r+8|0;i=b;return p|0}else{B=d}}else{B=d}}else{if(!(a>>>0>4294967231)){g=a+11|0;q=g&-8;s=c[96804>>2]|0;if((s|0)!=0){m=0-q|0;o=g>>>8;if((o|0)!=0){if(q>>>0>16777215){C=31}else{g=(o+1048320|0)>>>16&8;n=o<<g;o=(n+520192|0)>>>16&4;j=n<<o;n=(j+245760|0)>>>16&2;h=14-(o|g|n)+(j<<n>>>15)|0;C=q>>>(h+7|0)&1|h<<1}}else{C=0}h=c[97104+(C<<2)>>2]|0;a:do{if((h|0)==0){D=m;E=0;F=0}else{if((C|0)==31){G=0}else{G=25-(C>>>1)|0}n=m;j=0;g=q<<G;o=h;e=0;while(1){l=c[o+4>>2]&-8;H=l-q|0;if(H>>>0<n>>>0){if((l|0)==(q|0)){D=H;E=o;F=o;break a}else{I=H;J=o}}else{I=n;J=e}H=c[o+20>>2]|0;l=c[o+(g>>>31<<2)+16>>2]|0;K=(H|0)==0|(H|0)==(l|0)?j:H;if((l|0)==0){D=I;E=K;F=J;break}else{n=I;j=K;g=g<<1;o=l;e=J}}}}while(0);if((E|0)==0&(F|0)==0){h=2<<C;m=s&(h|0-h);if((m|0)==0){B=q;break}h=(m&0-m)+ -1|0;m=h>>>12&16;r=h>>>m;h=r>>>5&8;k=r>>>h;r=k>>>2&4;f=k>>>r;k=f>>>1&2;e=f>>>k;f=e>>>1&1;L=c[97104+((h|m|r|k|f)+(e>>>f)<<2)>>2]|0}else{L=E}if((L|0)==0){M=D;N=F}else{f=D;e=L;k=F;while(1){r=(c[e+4>>2]&-8)-q|0;m=r>>>0<f>>>0;h=m?r:f;r=m?e:k;m=c[e+16>>2]|0;if((m|0)!=0){f=h;e=m;k=r;continue}m=c[e+20>>2]|0;if((m|0)==0){M=h;N=r;break}else{f=h;e=m;k=r}}}if((N|0)!=0?M>>>0<((c[96808>>2]|0)-q|0)>>>0:0){k=c[96816>>2]|0;if(N>>>0<k>>>0){Ac()}e=N+q|0;if(!(N>>>0<e>>>0)){Ac()}f=c[N+24>>2]|0;s=c[N+12>>2]|0;do{if((s|0)==(N|0)){r=N+20|0;m=c[r>>2]|0;if((m|0)==0){h=N+16|0;o=c[h>>2]|0;if((o|0)==0){O=0;break}else{P=o;Q=h}}else{P=m;Q=r}while(1){r=P+20|0;m=c[r>>2]|0;if((m|0)!=0){P=m;Q=r;continue}r=P+16|0;m=c[r>>2]|0;if((m|0)==0){break}else{P=m;Q=r}}if(Q>>>0<k>>>0){Ac()}else{c[Q>>2]=0;O=P;break}}else{r=c[N+8>>2]|0;if(r>>>0<k>>>0){Ac()}m=r+12|0;if((c[m>>2]|0)!=(N|0)){Ac()}h=s+8|0;if((c[h>>2]|0)==(N|0)){c[m>>2]=s;c[h>>2]=r;O=s;break}else{Ac()}}}while(0);do{if((f|0)!=0){s=c[N+28>>2]|0;k=97104+(s<<2)|0;if((N|0)==(c[k>>2]|0)){c[k>>2]=O;if((O|0)==0){c[96804>>2]=c[96804>>2]&~(1<<s);break}}else{if(f>>>0<(c[96816>>2]|0)>>>0){Ac()}s=f+16|0;if((c[s>>2]|0)==(N|0)){c[s>>2]=O}else{c[f+20>>2]=O}if((O|0)==0){break}}if(O>>>0<(c[96816>>2]|0)>>>0){Ac()}c[O+24>>2]=f;s=c[N+16>>2]|0;do{if((s|0)!=0){if(s>>>0<(c[96816>>2]|0)>>>0){Ac()}else{c[O+16>>2]=s;c[s+24>>2]=O;break}}}while(0);s=c[N+20>>2]|0;if((s|0)!=0){if(s>>>0<(c[96816>>2]|0)>>>0){Ac()}else{c[O+20>>2]=s;c[s+24>>2]=O;break}}}}while(0);b:do{if(!(M>>>0<16)){c[N+4>>2]=q|3;c[N+(q|4)>>2]=M|1;c[N+(M+q)>>2]=M;f=M>>>3;if(M>>>0<256){s=f<<1;k=96840+(s<<2)|0;r=c[24200]|0;h=1<<f;if((r&h|0)!=0){f=96840+(s+2<<2)|0;m=c[f>>2]|0;if(m>>>0<(c[96816>>2]|0)>>>0){Ac()}else{R=f;S=m}}else{c[24200]=r|h;R=96840+(s+2<<2)|0;S=k}c[R>>2]=e;c[S+12>>2]=e;c[N+(q+8)>>2]=S;c[N+(q+12)>>2]=k;break}k=M>>>8;if((k|0)!=0){if(M>>>0>16777215){T=31}else{s=(k+1048320|0)>>>16&8;h=k<<s;k=(h+520192|0)>>>16&4;r=h<<k;h=(r+245760|0)>>>16&2;m=14-(k|s|h)+(r<<h>>>15)|0;T=M>>>(m+7|0)&1|m<<1}}else{T=0}m=97104+(T<<2)|0;c[N+(q+28)>>2]=T;c[N+(q+20)>>2]=0;c[N+(q+16)>>2]=0;h=c[96804>>2]|0;r=1<<T;if((h&r|0)==0){c[96804>>2]=h|r;c[m>>2]=e;c[N+(q+24)>>2]=m;c[N+(q+12)>>2]=e;c[N+(q+8)>>2]=e;break}r=c[m>>2]|0;if((T|0)==31){U=0}else{U=25-(T>>>1)|0}c:do{if((c[r+4>>2]&-8|0)!=(M|0)){m=M<<U;h=r;while(1){V=h+(m>>>31<<2)+16|0;s=c[V>>2]|0;if((s|0)==0){break}if((c[s+4>>2]&-8|0)==(M|0)){W=s;break c}else{m=m<<1;h=s}}if(V>>>0<(c[96816>>2]|0)>>>0){Ac()}else{c[V>>2]=e;c[N+(q+24)>>2]=h;c[N+(q+12)>>2]=e;c[N+(q+8)>>2]=e;break b}}else{W=r}}while(0);r=W+8|0;m=c[r>>2]|0;s=c[96816>>2]|0;if(W>>>0<s>>>0){Ac()}if(m>>>0<s>>>0){Ac()}else{c[m+12>>2]=e;c[r>>2]=e;c[N+(q+8)>>2]=m;c[N+(q+12)>>2]=W;c[N+(q+24)>>2]=0;break}}else{m=M+q|0;c[N+4>>2]=m|3;r=N+(m+4)|0;c[r>>2]=c[r>>2]|1}}while(0);p=N+8|0;i=b;return p|0}else{B=q}}else{B=q}}else{B=-1}}}while(0);N=c[96808>>2]|0;if(!(B>>>0>N>>>0)){M=N-B|0;W=c[96820>>2]|0;if(M>>>0>15){c[96820>>2]=W+B;c[96808>>2]=M;c[W+(B+4)>>2]=M|1;c[W+N>>2]=M;c[W+4>>2]=B|3}else{c[96808>>2]=0;c[96820>>2]=0;c[W+4>>2]=N|3;M=W+(N+4)|0;c[M>>2]=c[M>>2]|1}p=W+8|0;i=b;return p|0}W=c[96812>>2]|0;if(B>>>0<W>>>0){M=W-B|0;c[96812>>2]=M;W=c[96824>>2]|0;c[96824>>2]=W+B;c[W+(B+4)>>2]=M|1;c[W+4>>2]=B|3;p=W+8|0;i=b;return p|0}do{if((c[24318]|0)==0){W=Oa(30)|0;if((W+ -1&W|0)==0){c[97280>>2]=W;c[97276>>2]=W;c[97284>>2]=-1;c[97288>>2]=-1;c[97292>>2]=0;c[97244>>2]=0;c[24318]=(Qb(0)|0)&-16^1431655768;break}else{Ac()}}}while(0);W=B+48|0;M=c[97280>>2]|0;N=B+47|0;V=M+N|0;U=0-M|0;M=V&U;if(!(M>>>0>B>>>0)){p=0;i=b;return p|0}T=c[97240>>2]|0;if((T|0)!=0?(S=c[97232>>2]|0,R=S+M|0,R>>>0<=S>>>0|R>>>0>T>>>0):0){p=0;i=b;return p|0}d:do{if((c[97244>>2]&4|0)==0){T=c[96824>>2]|0;e:do{if((T|0)!=0){R=97248|0;while(1){S=c[R>>2]|0;if(!(S>>>0>T>>>0)?(X=R+4|0,(S+(c[X>>2]|0)|0)>>>0>T>>>0):0){break}S=c[R+8>>2]|0;if((S|0)==0){Y=182;break e}else{R=S}}if((R|0)!=0){S=V-(c[96812>>2]|0)&U;if(S>>>0<2147483647){O=Ka(S|0)|0;P=(O|0)==((c[R>>2]|0)+(c[X>>2]|0)|0);Z=O;_=S;$=P?O:-1;aa=P?S:0;Y=191}else{ba=0}}else{Y=182}}else{Y=182}}while(0);do{if((Y|0)==182){T=Ka(0)|0;if((T|0)!=(-1|0)){q=T;S=c[97276>>2]|0;P=S+ -1|0;if((P&q|0)==0){ca=M}else{ca=M-q+(P+q&0-S)|0}S=c[97232>>2]|0;q=S+ca|0;if(ca>>>0>B>>>0&ca>>>0<2147483647){P=c[97240>>2]|0;if((P|0)!=0?q>>>0<=S>>>0|q>>>0>P>>>0:0){ba=0;break}P=Ka(ca|0)|0;q=(P|0)==(T|0);Z=P;_=ca;$=q?T:-1;aa=q?ca:0;Y=191}else{ba=0}}else{ba=0}}}while(0);f:do{if((Y|0)==191){q=0-_|0;if(($|0)!=(-1|0)){da=$;ea=aa;Y=202;break d}do{if((Z|0)!=(-1|0)&_>>>0<2147483647&_>>>0<W>>>0?(T=c[97280>>2]|0,P=N-_+T&0-T,P>>>0<2147483647):0){if((Ka(P|0)|0)==(-1|0)){Ka(q|0)|0;ba=aa;break f}else{fa=P+_|0;break}}else{fa=_}}while(0);if((Z|0)==(-1|0)){ba=aa}else{da=Z;ea=fa;Y=202;break d}}}while(0);c[97244>>2]=c[97244>>2]|4;ga=ba;Y=199}else{ga=0;Y=199}}while(0);if((((Y|0)==199?M>>>0<2147483647:0)?(ba=Ka(M|0)|0,M=Ka(0)|0,(M|0)!=(-1|0)&(ba|0)!=(-1|0)&ba>>>0<M>>>0):0)?(fa=M-ba|0,M=fa>>>0>(B+40|0)>>>0,M):0){da=ba;ea=M?fa:ga;Y=202}if((Y|0)==202){ga=(c[97232>>2]|0)+ea|0;c[97232>>2]=ga;if(ga>>>0>(c[97236>>2]|0)>>>0){c[97236>>2]=ga}ga=c[96824>>2]|0;g:do{if((ga|0)!=0){fa=97248|0;while(1){ha=c[fa>>2]|0;ia=fa+4|0;ja=c[ia>>2]|0;if((da|0)==(ha+ja|0)){Y=214;break}M=c[fa+8>>2]|0;if((M|0)==0){break}else{fa=M}}if(((Y|0)==214?(c[fa+12>>2]&8|0)==0:0)?ga>>>0>=ha>>>0&ga>>>0<da>>>0:0){c[ia>>2]=ja+ea;M=(c[96812>>2]|0)+ea|0;ba=ga+8|0;if((ba&7|0)==0){ka=0}else{ka=0-ba&7}ba=M-ka|0;c[96824>>2]=ga+ka;c[96812>>2]=ba;c[ga+(ka+4)>>2]=ba|1;c[ga+(M+4)>>2]=40;c[96828>>2]=c[97288>>2];break}if(da>>>0<(c[96816>>2]|0)>>>0){c[96816>>2]=da}M=da+ea|0;ba=97248|0;while(1){if((c[ba>>2]|0)==(M|0)){Y=224;break}Z=c[ba+8>>2]|0;if((Z|0)==0){break}else{ba=Z}}if((Y|0)==224?(c[ba+12>>2]&8|0)==0:0){c[ba>>2]=da;M=ba+4|0;c[M>>2]=(c[M>>2]|0)+ea;M=da+8|0;if((M&7|0)==0){la=0}else{la=0-M&7}M=da+(ea+8)|0;if((M&7|0)==0){ma=0}else{ma=0-M&7}M=da+(ma+ea)|0;fa=la+B|0;Z=da+fa|0;aa=M-(da+la)-B|0;c[da+(la+4)>>2]=B|3;h:do{if((M|0)!=(c[96824>>2]|0)){if((M|0)==(c[96820>>2]|0)){_=(c[96808>>2]|0)+aa|0;c[96808>>2]=_;c[96820>>2]=Z;c[da+(fa+4)>>2]=_|1;c[da+(_+fa)>>2]=_;break}_=ea+4|0;N=c[da+(_+ma)>>2]|0;if((N&3|0)==1){W=N&-8;$=N>>>3;do{if(!(N>>>0<256)){ca=c[da+((ma|24)+ea)>>2]|0;X=c[da+(ea+12+ma)>>2]|0;do{if((X|0)==(M|0)){U=ma|16;V=da+(_+U)|0;q=c[V>>2]|0;if((q|0)==0){R=da+(U+ea)|0;U=c[R>>2]|0;if((U|0)==0){na=0;break}else{oa=U;pa=R}}else{oa=q;pa=V}while(1){V=oa+20|0;q=c[V>>2]|0;if((q|0)!=0){oa=q;pa=V;continue}V=oa+16|0;q=c[V>>2]|0;if((q|0)==0){break}else{oa=q;pa=V}}if(pa>>>0<(c[96816>>2]|0)>>>0){Ac()}else{c[pa>>2]=0;na=oa;break}}else{V=c[da+((ma|8)+ea)>>2]|0;if(V>>>0<(c[96816>>2]|0)>>>0){Ac()}q=V+12|0;if((c[q>>2]|0)!=(M|0)){Ac()}R=X+8|0;if((c[R>>2]|0)==(M|0)){c[q>>2]=X;c[R>>2]=V;na=X;break}else{Ac()}}}while(0);if((ca|0)!=0){X=c[da+(ea+28+ma)>>2]|0;h=97104+(X<<2)|0;if((M|0)==(c[h>>2]|0)){c[h>>2]=na;if((na|0)==0){c[96804>>2]=c[96804>>2]&~(1<<X);break}}else{if(ca>>>0<(c[96816>>2]|0)>>>0){Ac()}X=ca+16|0;if((c[X>>2]|0)==(M|0)){c[X>>2]=na}else{c[ca+20>>2]=na}if((na|0)==0){break}}if(na>>>0<(c[96816>>2]|0)>>>0){Ac()}c[na+24>>2]=ca;X=ma|16;h=c[da+(X+ea)>>2]|0;do{if((h|0)!=0){if(h>>>0<(c[96816>>2]|0)>>>0){Ac()}else{c[na+16>>2]=h;c[h+24>>2]=na;break}}}while(0);h=c[da+(_+X)>>2]|0;if((h|0)!=0){if(h>>>0<(c[96816>>2]|0)>>>0){Ac()}else{c[na+20>>2]=h;c[h+24>>2]=na;break}}}}else{h=c[da+((ma|8)+ea)>>2]|0;ca=c[da+(ea+12+ma)>>2]|0;V=96840+($<<1<<2)|0;if((h|0)!=(V|0)){if(h>>>0<(c[96816>>2]|0)>>>0){Ac()}if((c[h+12>>2]|0)!=(M|0)){Ac()}}if((ca|0)==(h|0)){c[24200]=c[24200]&~(1<<$);break}if((ca|0)!=(V|0)){if(ca>>>0<(c[96816>>2]|0)>>>0){Ac()}V=ca+8|0;if((c[V>>2]|0)==(M|0)){qa=V}else{Ac()}}else{qa=ca+8|0}c[h+12>>2]=ca;c[qa>>2]=h}}while(0);ra=da+((W|ma)+ea)|0;sa=W+aa|0}else{ra=M;sa=aa}$=ra+4|0;c[$>>2]=c[$>>2]&-2;c[da+(fa+4)>>2]=sa|1;c[da+(sa+fa)>>2]=sa;$=sa>>>3;if(sa>>>0<256){_=$<<1;N=96840+(_<<2)|0;h=c[24200]|0;ca=1<<$;if((h&ca|0)!=0){$=96840+(_+2<<2)|0;V=c[$>>2]|0;if(V>>>0<(c[96816>>2]|0)>>>0){Ac()}else{ta=$;ua=V}}else{c[24200]=h|ca;ta=96840+(_+2<<2)|0;ua=N}c[ta>>2]=Z;c[ua+12>>2]=Z;c[da+(fa+8)>>2]=ua;c[da+(fa+12)>>2]=N;break}N=sa>>>8;if((N|0)!=0){if(sa>>>0>16777215){va=31}else{_=(N+1048320|0)>>>16&8;ca=N<<_;N=(ca+520192|0)>>>16&4;h=ca<<N;ca=(h+245760|0)>>>16&2;V=14-(N|_|ca)+(h<<ca>>>15)|0;va=sa>>>(V+7|0)&1|V<<1}}else{va=0}V=97104+(va<<2)|0;c[da+(fa+28)>>2]=va;c[da+(fa+20)>>2]=0;c[da+(fa+16)>>2]=0;ca=c[96804>>2]|0;h=1<<va;if((ca&h|0)==0){c[96804>>2]=ca|h;c[V>>2]=Z;c[da+(fa+24)>>2]=V;c[da+(fa+12)>>2]=Z;c[da+(fa+8)>>2]=Z;break}h=c[V>>2]|0;if((va|0)==31){wa=0}else{wa=25-(va>>>1)|0}i:do{if((c[h+4>>2]&-8|0)!=(sa|0)){V=sa<<wa;ca=h;while(1){xa=ca+(V>>>31<<2)+16|0;_=c[xa>>2]|0;if((_|0)==0){break}if((c[_+4>>2]&-8|0)==(sa|0)){ya=_;break i}else{V=V<<1;ca=_}}if(xa>>>0<(c[96816>>2]|0)>>>0){Ac()}else{c[xa>>2]=Z;c[da+(fa+24)>>2]=ca;c[da+(fa+12)>>2]=Z;c[da+(fa+8)>>2]=Z;break h}}else{ya=h}}while(0);h=ya+8|0;W=c[h>>2]|0;V=c[96816>>2]|0;if(ya>>>0<V>>>0){Ac()}if(W>>>0<V>>>0){Ac()}else{c[W+12>>2]=Z;c[h>>2]=Z;c[da+(fa+8)>>2]=W;c[da+(fa+12)>>2]=ya;c[da+(fa+24)>>2]=0;break}}else{W=(c[96812>>2]|0)+aa|0;c[96812>>2]=W;c[96824>>2]=Z;c[da+(fa+4)>>2]=W|1}}while(0);p=da+(la|8)|0;i=b;return p|0}fa=97248|0;while(1){za=c[fa>>2]|0;if(!(za>>>0>ga>>>0)?(Aa=c[fa+4>>2]|0,Ba=za+Aa|0,Ba>>>0>ga>>>0):0){break}fa=c[fa+8>>2]|0}fa=za+(Aa+ -39)|0;if((fa&7|0)==0){Ca=0}else{Ca=0-fa&7}fa=za+(Aa+ -47+Ca)|0;Z=fa>>>0<(ga+16|0)>>>0?ga:fa;fa=Z+8|0;aa=da+8|0;if((aa&7|0)==0){Da=0}else{Da=0-aa&7}aa=ea+ -40-Da|0;c[96824>>2]=da+Da;c[96812>>2]=aa;c[da+(Da+4)>>2]=aa|1;c[da+(ea+ -36)>>2]=40;c[96828>>2]=c[97288>>2];c[Z+4>>2]=27;c[fa+0>>2]=c[97248>>2];c[fa+4>>2]=c[97252>>2];c[fa+8>>2]=c[97256>>2];c[fa+12>>2]=c[97260>>2];c[97248>>2]=da;c[97252>>2]=ea;c[97260>>2]=0;c[97256>>2]=fa;fa=Z+28|0;c[fa>>2]=7;if((Z+32|0)>>>0<Ba>>>0){aa=fa;while(1){fa=aa+4|0;c[fa>>2]=7;if((aa+8|0)>>>0<Ba>>>0){aa=fa}else{break}}}if((Z|0)!=(ga|0)){aa=Z-ga|0;fa=ga+(aa+4)|0;c[fa>>2]=c[fa>>2]&-2;c[ga+4>>2]=aa|1;c[ga+aa>>2]=aa;fa=aa>>>3;if(aa>>>0<256){M=fa<<1;ba=96840+(M<<2)|0;W=c[24200]|0;h=1<<fa;if((W&h|0)!=0){fa=96840+(M+2<<2)|0;V=c[fa>>2]|0;if(V>>>0<(c[96816>>2]|0)>>>0){Ac()}else{Ea=fa;Fa=V}}else{c[24200]=W|h;Ea=96840+(M+2<<2)|0;Fa=ba}c[Ea>>2]=ga;c[Fa+12>>2]=ga;c[ga+8>>2]=Fa;c[ga+12>>2]=ba;break}ba=aa>>>8;if((ba|0)!=0){if(aa>>>0>16777215){Ga=31}else{M=(ba+1048320|0)>>>16&8;h=ba<<M;ba=(h+520192|0)>>>16&4;W=h<<ba;h=(W+245760|0)>>>16&2;V=14-(ba|M|h)+(W<<h>>>15)|0;Ga=aa>>>(V+7|0)&1|V<<1}}else{Ga=0}V=97104+(Ga<<2)|0;c[ga+28>>2]=Ga;c[ga+20>>2]=0;c[ga+16>>2]=0;h=c[96804>>2]|0;W=1<<Ga;if((h&W|0)==0){c[96804>>2]=h|W;c[V>>2]=ga;c[ga+24>>2]=V;c[ga+12>>2]=ga;c[ga+8>>2]=ga;break}W=c[V>>2]|0;if((Ga|0)==31){Ha=0}else{Ha=25-(Ga>>>1)|0}j:do{if((c[W+4>>2]&-8|0)!=(aa|0)){V=aa<<Ha;h=W;while(1){Ia=h+(V>>>31<<2)+16|0;M=c[Ia>>2]|0;if((M|0)==0){break}if((c[M+4>>2]&-8|0)==(aa|0)){Ja=M;break j}else{V=V<<1;h=M}}if(Ia>>>0<(c[96816>>2]|0)>>>0){Ac()}else{c[Ia>>2]=ga;c[ga+24>>2]=h;c[ga+12>>2]=ga;c[ga+8>>2]=ga;break g}}else{Ja=W}}while(0);W=Ja+8|0;aa=c[W>>2]|0;Z=c[96816>>2]|0;if(Ja>>>0<Z>>>0){Ac()}if(aa>>>0<Z>>>0){Ac()}else{c[aa+12>>2]=ga;c[W>>2]=ga;c[ga+8>>2]=aa;c[ga+12>>2]=Ja;c[ga+24>>2]=0;break}}}else{aa=c[96816>>2]|0;if((aa|0)==0|da>>>0<aa>>>0){c[96816>>2]=da}c[97248>>2]=da;c[97252>>2]=ea;c[97260>>2]=0;c[96836>>2]=c[24318];c[96832>>2]=-1;aa=0;do{W=aa<<1;Z=96840+(W<<2)|0;c[96840+(W+3<<2)>>2]=Z;c[96840+(W+2<<2)>>2]=Z;aa=aa+1|0}while((aa|0)!=32);aa=da+8|0;if((aa&7|0)==0){La=0}else{La=0-aa&7}aa=ea+ -40-La|0;c[96824>>2]=da+La;c[96812>>2]=aa;c[da+(La+4)>>2]=aa|1;c[da+(ea+ -36)>>2]=40;c[96828>>2]=c[97288>>2]}}while(0);ea=c[96812>>2]|0;if(ea>>>0>B>>>0){da=ea-B|0;c[96812>>2]=da;ea=c[96824>>2]|0;c[96824>>2]=ea+B;c[ea+(B+4)>>2]=da|1;c[ea+4>>2]=B|3;p=ea+8|0;i=b;return p|0}}c[(Zc()|0)>>2]=12;p=0;i=b;return p|0}function Xz(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;b=i;if((a|0)==0){i=b;return}d=a+ -8|0;e=c[96816>>2]|0;if(d>>>0<e>>>0){Ac()}f=c[a+ -4>>2]|0;g=f&3;if((g|0)==1){Ac()}h=f&-8;j=a+(h+ -8)|0;do{if((f&1|0)==0){k=c[d>>2]|0;if((g|0)==0){i=b;return}l=-8-k|0;m=a+l|0;n=k+h|0;if(m>>>0<e>>>0){Ac()}if((m|0)==(c[96820>>2]|0)){o=a+(h+ -4)|0;if((c[o>>2]&3|0)!=3){p=m;q=n;break}c[96808>>2]=n;c[o>>2]=c[o>>2]&-2;c[a+(l+4)>>2]=n|1;c[j>>2]=n;i=b;return}o=k>>>3;if(k>>>0<256){k=c[a+(l+8)>>2]|0;r=c[a+(l+12)>>2]|0;s=96840+(o<<1<<2)|0;if((k|0)!=(s|0)){if(k>>>0<e>>>0){Ac()}if((c[k+12>>2]|0)!=(m|0)){Ac()}}if((r|0)==(k|0)){c[24200]=c[24200]&~(1<<o);p=m;q=n;break}if((r|0)!=(s|0)){if(r>>>0<e>>>0){Ac()}s=r+8|0;if((c[s>>2]|0)==(m|0)){t=s}else{Ac()}}else{t=r+8|0}c[k+12>>2]=r;c[t>>2]=k;p=m;q=n;break}k=c[a+(l+24)>>2]|0;r=c[a+(l+12)>>2]|0;do{if((r|0)==(m|0)){s=a+(l+20)|0;o=c[s>>2]|0;if((o|0)==0){u=a+(l+16)|0;v=c[u>>2]|0;if((v|0)==0){w=0;break}else{x=v;y=u}}else{x=o;y=s}while(1){s=x+20|0;o=c[s>>2]|0;if((o|0)!=0){x=o;y=s;continue}s=x+16|0;o=c[s>>2]|0;if((o|0)==0){break}else{x=o;y=s}}if(y>>>0<e>>>0){Ac()}else{c[y>>2]=0;w=x;break}}else{s=c[a+(l+8)>>2]|0;if(s>>>0<e>>>0){Ac()}o=s+12|0;if((c[o>>2]|0)!=(m|0)){Ac()}u=r+8|0;if((c[u>>2]|0)==(m|0)){c[o>>2]=r;c[u>>2]=s;w=r;break}else{Ac()}}}while(0);if((k|0)!=0){r=c[a+(l+28)>>2]|0;s=97104+(r<<2)|0;if((m|0)==(c[s>>2]|0)){c[s>>2]=w;if((w|0)==0){c[96804>>2]=c[96804>>2]&~(1<<r);p=m;q=n;break}}else{if(k>>>0<(c[96816>>2]|0)>>>0){Ac()}r=k+16|0;if((c[r>>2]|0)==(m|0)){c[r>>2]=w}else{c[k+20>>2]=w}if((w|0)==0){p=m;q=n;break}}if(w>>>0<(c[96816>>2]|0)>>>0){Ac()}c[w+24>>2]=k;r=c[a+(l+16)>>2]|0;do{if((r|0)!=0){if(r>>>0<(c[96816>>2]|0)>>>0){Ac()}else{c[w+16>>2]=r;c[r+24>>2]=w;break}}}while(0);r=c[a+(l+20)>>2]|0;if((r|0)!=0){if(r>>>0<(c[96816>>2]|0)>>>0){Ac()}else{c[w+20>>2]=r;c[r+24>>2]=w;p=m;q=n;break}}else{p=m;q=n}}else{p=m;q=n}}else{p=d;q=h}}while(0);if(!(p>>>0<j>>>0)){Ac()}d=a+(h+ -4)|0;w=c[d>>2]|0;if((w&1|0)==0){Ac()}if((w&2|0)==0){if((j|0)==(c[96824>>2]|0)){e=(c[96812>>2]|0)+q|0;c[96812>>2]=e;c[96824>>2]=p;c[p+4>>2]=e|1;if((p|0)!=(c[96820>>2]|0)){i=b;return}c[96820>>2]=0;c[96808>>2]=0;i=b;return}if((j|0)==(c[96820>>2]|0)){e=(c[96808>>2]|0)+q|0;c[96808>>2]=e;c[96820>>2]=p;c[p+4>>2]=e|1;c[p+e>>2]=e;i=b;return}e=(w&-8)+q|0;x=w>>>3;do{if(!(w>>>0<256)){y=c[a+(h+16)>>2]|0;t=c[a+(h|4)>>2]|0;do{if((t|0)==(j|0)){g=a+(h+12)|0;f=c[g>>2]|0;if((f|0)==0){r=a+(h+8)|0;k=c[r>>2]|0;if((k|0)==0){z=0;break}else{A=k;B=r}}else{A=f;B=g}while(1){g=A+20|0;f=c[g>>2]|0;if((f|0)!=0){A=f;B=g;continue}g=A+16|0;f=c[g>>2]|0;if((f|0)==0){break}else{A=f;B=g}}if(B>>>0<(c[96816>>2]|0)>>>0){Ac()}else{c[B>>2]=0;z=A;break}}else{g=c[a+h>>2]|0;if(g>>>0<(c[96816>>2]|0)>>>0){Ac()}f=g+12|0;if((c[f>>2]|0)!=(j|0)){Ac()}r=t+8|0;if((c[r>>2]|0)==(j|0)){c[f>>2]=t;c[r>>2]=g;z=t;break}else{Ac()}}}while(0);if((y|0)!=0){t=c[a+(h+20)>>2]|0;n=97104+(t<<2)|0;if((j|0)==(c[n>>2]|0)){c[n>>2]=z;if((z|0)==0){c[96804>>2]=c[96804>>2]&~(1<<t);break}}else{if(y>>>0<(c[96816>>2]|0)>>>0){Ac()}t=y+16|0;if((c[t>>2]|0)==(j|0)){c[t>>2]=z}else{c[y+20>>2]=z}if((z|0)==0){break}}if(z>>>0<(c[96816>>2]|0)>>>0){Ac()}c[z+24>>2]=y;t=c[a+(h+8)>>2]|0;do{if((t|0)!=0){if(t>>>0<(c[96816>>2]|0)>>>0){Ac()}else{c[z+16>>2]=t;c[t+24>>2]=z;break}}}while(0);t=c[a+(h+12)>>2]|0;if((t|0)!=0){if(t>>>0<(c[96816>>2]|0)>>>0){Ac()}else{c[z+20>>2]=t;c[t+24>>2]=z;break}}}}else{t=c[a+h>>2]|0;y=c[a+(h|4)>>2]|0;n=96840+(x<<1<<2)|0;if((t|0)!=(n|0)){if(t>>>0<(c[96816>>2]|0)>>>0){Ac()}if((c[t+12>>2]|0)!=(j|0)){Ac()}}if((y|0)==(t|0)){c[24200]=c[24200]&~(1<<x);break}if((y|0)!=(n|0)){if(y>>>0<(c[96816>>2]|0)>>>0){Ac()}n=y+8|0;if((c[n>>2]|0)==(j|0)){C=n}else{Ac()}}else{C=y+8|0}c[t+12>>2]=y;c[C>>2]=t}}while(0);c[p+4>>2]=e|1;c[p+e>>2]=e;if((p|0)==(c[96820>>2]|0)){c[96808>>2]=e;i=b;return}else{D=e}}else{c[d>>2]=w&-2;c[p+4>>2]=q|1;c[p+q>>2]=q;D=q}q=D>>>3;if(D>>>0<256){w=q<<1;d=96840+(w<<2)|0;e=c[24200]|0;C=1<<q;if((e&C|0)!=0){q=96840+(w+2<<2)|0;j=c[q>>2]|0;if(j>>>0<(c[96816>>2]|0)>>>0){Ac()}else{E=q;F=j}}else{c[24200]=e|C;E=96840+(w+2<<2)|0;F=d}c[E>>2]=p;c[F+12>>2]=p;c[p+8>>2]=F;c[p+12>>2]=d;i=b;return}d=D>>>8;if((d|0)!=0){if(D>>>0>16777215){G=31}else{F=(d+1048320|0)>>>16&8;E=d<<F;d=(E+520192|0)>>>16&4;w=E<<d;E=(w+245760|0)>>>16&2;C=14-(d|F|E)+(w<<E>>>15)|0;G=D>>>(C+7|0)&1|C<<1}}else{G=0}C=97104+(G<<2)|0;c[p+28>>2]=G;c[p+20>>2]=0;c[p+16>>2]=0;E=c[96804>>2]|0;w=1<<G;a:do{if((E&w|0)!=0){F=c[C>>2]|0;if((G|0)==31){H=0}else{H=25-(G>>>1)|0}b:do{if((c[F+4>>2]&-8|0)!=(D|0)){d=D<<H;e=F;while(1){I=e+(d>>>31<<2)+16|0;j=c[I>>2]|0;if((j|0)==0){break}if((c[j+4>>2]&-8|0)==(D|0)){J=j;break b}else{d=d<<1;e=j}}if(I>>>0<(c[96816>>2]|0)>>>0){Ac()}else{c[I>>2]=p;c[p+24>>2]=e;c[p+12>>2]=p;c[p+8>>2]=p;break a}}else{J=F}}while(0);F=J+8|0;d=c[F>>2]|0;j=c[96816>>2]|0;if(J>>>0<j>>>0){Ac()}if(d>>>0<j>>>0){Ac()}else{c[d+12>>2]=p;c[F>>2]=p;c[p+8>>2]=d;c[p+12>>2]=J;c[p+24>>2]=0;break}}else{c[96804>>2]=E|w;c[C>>2]=p;c[p+24>>2]=C;c[p+12>>2]=p;c[p+8>>2]=p}}while(0);p=(c[96832>>2]|0)+ -1|0;c[96832>>2]=p;if((p|0)==0){K=97256|0}else{i=b;return}while(1){p=c[K>>2]|0;if((p|0)==0){break}else{K=p+8|0}}c[96832>>2]=-1;i=b;return}function Yz(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;if((a|0)!=0){e=aa(b,a)|0;if((b|a)>>>0>65535){f=((e>>>0)/(a>>>0)|0|0)==(b|0)?e:-1}else{f=e}}else{f=0}e=Wz(f)|0;if((e|0)==0){i=d;return e|0}if((c[e+ -4>>2]&3|0)==0){i=d;return e|0}nA(e|0,0,f|0)|0;i=d;return e|0}function Zz(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;do{if((a|0)!=0){if(b>>>0>4294967231){c[(Zc()|0)>>2]=12;e=0;break}if(b>>>0<11){f=16}else{f=b+11&-8}g=_z(a+ -8|0,f)|0;if((g|0)!=0){e=g+8|0;break}g=Wz(b)|0;if((g|0)==0){e=0}else{h=c[a+ -4>>2]|0;j=(h&-8)-((h&3|0)==0?8:4)|0;lA(g|0,a|0,(j>>>0<b>>>0?j:b)|0)|0;Xz(a);e=g}}else{e=Wz(b)|0}}while(0);i=d;return e|0}function _z(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;e=a+4|0;f=c[e>>2]|0;g=f&-8;h=a+g|0;j=c[96816>>2]|0;if(a>>>0<j>>>0){Ac()}k=f&3;if(!((k|0)!=1&a>>>0<h>>>0)){Ac()}l=a+(g|4)|0;m=c[l>>2]|0;if((m&1|0)==0){Ac()}if((k|0)==0){if(b>>>0<256){n=0;i=d;return n|0}if(!(g>>>0<(b+4|0)>>>0)?!((g-b|0)>>>0>c[97280>>2]<<1>>>0):0){n=a;i=d;return n|0}n=0;i=d;return n|0}if(!(g>>>0<b>>>0)){k=g-b|0;if(!(k>>>0>15)){n=a;i=d;return n|0}c[e>>2]=f&1|b|2;c[a+(b+4)>>2]=k|3;c[l>>2]=c[l>>2]|1;$z(a+b|0,k);n=a;i=d;return n|0}if((h|0)==(c[96824>>2]|0)){k=(c[96812>>2]|0)+g|0;if(!(k>>>0>b>>>0)){n=0;i=d;return n|0}l=k-b|0;c[e>>2]=f&1|b|2;c[a+(b+4)>>2]=l|1;c[96824>>2]=a+b;c[96812>>2]=l;n=a;i=d;return n|0}if((h|0)==(c[96820>>2]|0)){l=(c[96808>>2]|0)+g|0;if(l>>>0<b>>>0){n=0;i=d;return n|0}k=l-b|0;if(k>>>0>15){c[e>>2]=f&1|b|2;c[a+(b+4)>>2]=k|1;c[a+l>>2]=k;o=a+(l+4)|0;c[o>>2]=c[o>>2]&-2;p=a+b|0;q=k}else{c[e>>2]=f&1|l|2;f=a+(l+4)|0;c[f>>2]=c[f>>2]|1;p=0;q=0}c[96808>>2]=q;c[96820>>2]=p;n=a;i=d;return n|0}if((m&2|0)!=0){n=0;i=d;return n|0}p=(m&-8)+g|0;if(p>>>0<b>>>0){n=0;i=d;return n|0}q=p-b|0;f=m>>>3;do{if(!(m>>>0<256)){l=c[a+(g+24)>>2]|0;k=c[a+(g+12)>>2]|0;do{if((k|0)==(h|0)){o=a+(g+20)|0;r=c[o>>2]|0;if((r|0)==0){s=a+(g+16)|0;t=c[s>>2]|0;if((t|0)==0){u=0;break}else{v=t;w=s}}else{v=r;w=o}while(1){o=v+20|0;r=c[o>>2]|0;if((r|0)!=0){v=r;w=o;continue}o=v+16|0;r=c[o>>2]|0;if((r|0)==0){break}else{v=r;w=o}}if(w>>>0<j>>>0){Ac()}else{c[w>>2]=0;u=v;break}}else{o=c[a+(g+8)>>2]|0;if(o>>>0<j>>>0){Ac()}r=o+12|0;if((c[r>>2]|0)!=(h|0)){Ac()}s=k+8|0;if((c[s>>2]|0)==(h|0)){c[r>>2]=k;c[s>>2]=o;u=k;break}else{Ac()}}}while(0);if((l|0)!=0){k=c[a+(g+28)>>2]|0;o=97104+(k<<2)|0;if((h|0)==(c[o>>2]|0)){c[o>>2]=u;if((u|0)==0){c[96804>>2]=c[96804>>2]&~(1<<k);break}}else{if(l>>>0<(c[96816>>2]|0)>>>0){Ac()}k=l+16|0;if((c[k>>2]|0)==(h|0)){c[k>>2]=u}else{c[l+20>>2]=u}if((u|0)==0){break}}if(u>>>0<(c[96816>>2]|0)>>>0){Ac()}c[u+24>>2]=l;k=c[a+(g+16)>>2]|0;do{if((k|0)!=0){if(k>>>0<(c[96816>>2]|0)>>>0){Ac()}else{c[u+16>>2]=k;c[k+24>>2]=u;break}}}while(0);k=c[a+(g+20)>>2]|0;if((k|0)!=0){if(k>>>0<(c[96816>>2]|0)>>>0){Ac()}else{c[u+20>>2]=k;c[k+24>>2]=u;break}}}}else{k=c[a+(g+8)>>2]|0;l=c[a+(g+12)>>2]|0;o=96840+(f<<1<<2)|0;if((k|0)!=(o|0)){if(k>>>0<j>>>0){Ac()}if((c[k+12>>2]|0)!=(h|0)){Ac()}}if((l|0)==(k|0)){c[24200]=c[24200]&~(1<<f);break}if((l|0)!=(o|0)){if(l>>>0<j>>>0){Ac()}o=l+8|0;if((c[o>>2]|0)==(h|0)){x=o}else{Ac()}}else{x=l+8|0}c[k+12>>2]=l;c[x>>2]=k}}while(0);if(q>>>0<16){c[e>>2]=p|c[e>>2]&1|2;x=a+(p|4)|0;c[x>>2]=c[x>>2]|1;n=a;i=d;return n|0}else{c[e>>2]=c[e>>2]&1|b|2;c[a+(b+4)>>2]=q|3;e=a+(p|4)|0;c[e>>2]=c[e>>2]|1;$z(a+b|0,q);n=a;i=d;return n|0}return 0}function $z(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;d=i;e=a+b|0;f=c[a+4>>2]|0;do{if((f&1|0)==0){g=c[a>>2]|0;if((f&3|0)==0){i=d;return}h=a+(0-g)|0;j=g+b|0;k=c[96816>>2]|0;if(h>>>0<k>>>0){Ac()}if((h|0)==(c[96820>>2]|0)){l=a+(b+4)|0;if((c[l>>2]&3|0)!=3){m=h;n=j;break}c[96808>>2]=j;c[l>>2]=c[l>>2]&-2;c[a+(4-g)>>2]=j|1;c[e>>2]=j;i=d;return}l=g>>>3;if(g>>>0<256){o=c[a+(8-g)>>2]|0;p=c[a+(12-g)>>2]|0;q=96840+(l<<1<<2)|0;if((o|0)!=(q|0)){if(o>>>0<k>>>0){Ac()}if((c[o+12>>2]|0)!=(h|0)){Ac()}}if((p|0)==(o|0)){c[24200]=c[24200]&~(1<<l);m=h;n=j;break}if((p|0)!=(q|0)){if(p>>>0<k>>>0){Ac()}q=p+8|0;if((c[q>>2]|0)==(h|0)){r=q}else{Ac()}}else{r=p+8|0}c[o+12>>2]=p;c[r>>2]=o;m=h;n=j;break}o=c[a+(24-g)>>2]|0;p=c[a+(12-g)>>2]|0;do{if((p|0)==(h|0)){q=16-g|0;l=a+(q+4)|0;s=c[l>>2]|0;if((s|0)==0){t=a+q|0;q=c[t>>2]|0;if((q|0)==0){u=0;break}else{v=q;w=t}}else{v=s;w=l}while(1){l=v+20|0;s=c[l>>2]|0;if((s|0)!=0){v=s;w=l;continue}l=v+16|0;s=c[l>>2]|0;if((s|0)==0){break}else{v=s;w=l}}if(w>>>0<k>>>0){Ac()}else{c[w>>2]=0;u=v;break}}else{l=c[a+(8-g)>>2]|0;if(l>>>0<k>>>0){Ac()}s=l+12|0;if((c[s>>2]|0)!=(h|0)){Ac()}t=p+8|0;if((c[t>>2]|0)==(h|0)){c[s>>2]=p;c[t>>2]=l;u=p;break}else{Ac()}}}while(0);if((o|0)!=0){p=c[a+(28-g)>>2]|0;k=97104+(p<<2)|0;if((h|0)==(c[k>>2]|0)){c[k>>2]=u;if((u|0)==0){c[96804>>2]=c[96804>>2]&~(1<<p);m=h;n=j;break}}else{if(o>>>0<(c[96816>>2]|0)>>>0){Ac()}p=o+16|0;if((c[p>>2]|0)==(h|0)){c[p>>2]=u}else{c[o+20>>2]=u}if((u|0)==0){m=h;n=j;break}}if(u>>>0<(c[96816>>2]|0)>>>0){Ac()}c[u+24>>2]=o;p=16-g|0;k=c[a+p>>2]|0;do{if((k|0)!=0){if(k>>>0<(c[96816>>2]|0)>>>0){Ac()}else{c[u+16>>2]=k;c[k+24>>2]=u;break}}}while(0);k=c[a+(p+4)>>2]|0;if((k|0)!=0){if(k>>>0<(c[96816>>2]|0)>>>0){Ac()}else{c[u+20>>2]=k;c[k+24>>2]=u;m=h;n=j;break}}else{m=h;n=j}}else{m=h;n=j}}else{m=a;n=b}}while(0);u=c[96816>>2]|0;if(e>>>0<u>>>0){Ac()}v=a+(b+4)|0;w=c[v>>2]|0;if((w&2|0)==0){if((e|0)==(c[96824>>2]|0)){r=(c[96812>>2]|0)+n|0;c[96812>>2]=r;c[96824>>2]=m;c[m+4>>2]=r|1;if((m|0)!=(c[96820>>2]|0)){i=d;return}c[96820>>2]=0;c[96808>>2]=0;i=d;return}if((e|0)==(c[96820>>2]|0)){r=(c[96808>>2]|0)+n|0;c[96808>>2]=r;c[96820>>2]=m;c[m+4>>2]=r|1;c[m+r>>2]=r;i=d;return}r=(w&-8)+n|0;f=w>>>3;do{if(!(w>>>0<256)){k=c[a+(b+24)>>2]|0;g=c[a+(b+12)>>2]|0;do{if((g|0)==(e|0)){o=a+(b+20)|0;l=c[o>>2]|0;if((l|0)==0){t=a+(b+16)|0;s=c[t>>2]|0;if((s|0)==0){x=0;break}else{y=s;z=t}}else{y=l;z=o}while(1){o=y+20|0;l=c[o>>2]|0;if((l|0)!=0){y=l;z=o;continue}o=y+16|0;l=c[o>>2]|0;if((l|0)==0){break}else{y=l;z=o}}if(z>>>0<u>>>0){Ac()}else{c[z>>2]=0;x=y;break}}else{o=c[a+(b+8)>>2]|0;if(o>>>0<u>>>0){Ac()}l=o+12|0;if((c[l>>2]|0)!=(e|0)){Ac()}t=g+8|0;if((c[t>>2]|0)==(e|0)){c[l>>2]=g;c[t>>2]=o;x=g;break}else{Ac()}}}while(0);if((k|0)!=0){g=c[a+(b+28)>>2]|0;j=97104+(g<<2)|0;if((e|0)==(c[j>>2]|0)){c[j>>2]=x;if((x|0)==0){c[96804>>2]=c[96804>>2]&~(1<<g);break}}else{if(k>>>0<(c[96816>>2]|0)>>>0){Ac()}g=k+16|0;if((c[g>>2]|0)==(e|0)){c[g>>2]=x}else{c[k+20>>2]=x}if((x|0)==0){break}}if(x>>>0<(c[96816>>2]|0)>>>0){Ac()}c[x+24>>2]=k;g=c[a+(b+16)>>2]|0;do{if((g|0)!=0){if(g>>>0<(c[96816>>2]|0)>>>0){Ac()}else{c[x+16>>2]=g;c[g+24>>2]=x;break}}}while(0);g=c[a+(b+20)>>2]|0;if((g|0)!=0){if(g>>>0<(c[96816>>2]|0)>>>0){Ac()}else{c[x+20>>2]=g;c[g+24>>2]=x;break}}}}else{g=c[a+(b+8)>>2]|0;k=c[a+(b+12)>>2]|0;j=96840+(f<<1<<2)|0;if((g|0)!=(j|0)){if(g>>>0<u>>>0){Ac()}if((c[g+12>>2]|0)!=(e|0)){Ac()}}if((k|0)==(g|0)){c[24200]=c[24200]&~(1<<f);break}if((k|0)!=(j|0)){if(k>>>0<u>>>0){Ac()}j=k+8|0;if((c[j>>2]|0)==(e|0)){A=j}else{Ac()}}else{A=k+8|0}c[g+12>>2]=k;c[A>>2]=g}}while(0);c[m+4>>2]=r|1;c[m+r>>2]=r;if((m|0)==(c[96820>>2]|0)){c[96808>>2]=r;i=d;return}else{B=r}}else{c[v>>2]=w&-2;c[m+4>>2]=n|1;c[m+n>>2]=n;B=n}n=B>>>3;if(B>>>0<256){w=n<<1;v=96840+(w<<2)|0;r=c[24200]|0;A=1<<n;if((r&A|0)!=0){n=96840+(w+2<<2)|0;e=c[n>>2]|0;if(e>>>0<(c[96816>>2]|0)>>>0){Ac()}else{C=n;D=e}}else{c[24200]=r|A;C=96840+(w+2<<2)|0;D=v}c[C>>2]=m;c[D+12>>2]=m;c[m+8>>2]=D;c[m+12>>2]=v;i=d;return}v=B>>>8;if((v|0)!=0){if(B>>>0>16777215){E=31}else{D=(v+1048320|0)>>>16&8;C=v<<D;v=(C+520192|0)>>>16&4;w=C<<v;C=(w+245760|0)>>>16&2;A=14-(v|D|C)+(w<<C>>>15)|0;E=B>>>(A+7|0)&1|A<<1}}else{E=0}A=97104+(E<<2)|0;c[m+28>>2]=E;c[m+20>>2]=0;c[m+16>>2]=0;C=c[96804>>2]|0;w=1<<E;if((C&w|0)==0){c[96804>>2]=C|w;c[A>>2]=m;c[m+24>>2]=A;c[m+12>>2]=m;c[m+8>>2]=m;i=d;return}w=c[A>>2]|0;if((E|0)==31){F=0}else{F=25-(E>>>1)|0}a:do{if((c[w+4>>2]&-8|0)==(B|0)){G=w}else{E=B<<F;A=w;while(1){H=A+(E>>>31<<2)+16|0;C=c[H>>2]|0;if((C|0)==0){break}if((c[C+4>>2]&-8|0)==(B|0)){G=C;break a}else{E=E<<1;A=C}}if(H>>>0<(c[96816>>2]|0)>>>0){Ac()}c[H>>2]=m;c[m+24>>2]=A;c[m+12>>2]=m;c[m+8>>2]=m;i=d;return}}while(0);H=G+8|0;B=c[H>>2]|0;w=c[96816>>2]|0;if(G>>>0<w>>>0){Ac()}if(B>>>0<w>>>0){Ac()}c[B+12>>2]=m;c[H>>2]=m;c[m+8>>2]=B;c[m+12>>2]=G;c[m+24>>2]=0;i=d;return}function aA(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;a:do{if((d|0)==0){f=0}else{g=d;h=b;j=c;while(1){k=a[h]|0;l=a[j]|0;if(!(k<<24>>24==l<<24>>24)){break}m=g+ -1|0;if((m|0)==0){f=0;break a}else{g=m;h=h+1|0;j=j+1|0}}f=(k&255)-(l&255)|0}}while(0);i=e;return f|0}function bA(b,c){b=b|0;c=c|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;f=a[b]|0;a:do{if(f<<24>>24==0){g=0;h=c}else{j=f;k=f&255;l=b;m=c;while(1){n=a[m]|0;if(n<<24>>24==0){g=j;h=m;break a}if(!(j<<24>>24==n<<24>>24)?(n=oA(k|0)|0,(n|0)!=(oA(d[m]|0|0)|0)):0){break}n=l+1|0;o=m+1|0;p=a[n]|0;if(p<<24>>24==0){g=0;h=o;break a}else{j=p;k=p&255;l=n;m=o}}g=a[l]|0;h=m}}while(0);c=oA(g&255|0)|0;g=c-(oA(d[h]|0|0)|0)|0;i=e;return g|0}function cA(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;e=a[b]|0;f=a[c]|0;if(e<<24>>24!=f<<24>>24|e<<24>>24==0|f<<24>>24==0){g=e;h=f;j=g&255;k=h&255;l=j-k|0;i=d;return l|0}else{m=b;n=c}while(1){c=m+1|0;b=n+1|0;f=a[c]|0;e=a[b]|0;if(f<<24>>24!=e<<24>>24|f<<24>>24==0|e<<24>>24==0){g=f;h=e;break}else{m=c;n=b}}j=g&255;k=h&255;l=j-k|0;i=d;return l|0}function dA(b,c,e){b=b|0;c=c|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;f=i;if((e|0)==0){g=0;i=f;return g|0}h=a[b]|0;a:do{if(h<<24>>24==0){j=0;k=c}else{l=e;m=h;n=b;o=c;while(1){p=l+ -1|0;q=a[o]|0;if(!((p|0)!=0&q<<24>>24!=0&m<<24>>24==q<<24>>24)){j=m;k=o;break a}q=n+1|0;r=o+1|0;s=a[q]|0;if(s<<24>>24==0){j=0;k=r;break}else{l=p;m=s;n=q;o=r}}}}while(0);g=(j&255)-(d[k]|0)|0;i=f;return g|0}function eA(){}function fA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=a+c>>>0;return(E=b+d+(e>>>0<a>>>0|0)>>>0,e|0)|0}function gA(b){b=b|0;var c=0;c=b;while(a[c]|0){c=c+1|0}return c-b|0}function hA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=b-d>>>0;e=b-d-(c>>>0>a>>>0|0)>>>0;return(E=e,a-c>>>0|0)|0}function iA(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0;while((e|0)<(d|0)){a[b+e|0]=f?0:a[c+e|0]|0;f=f?1:(a[c+e|0]|0)==0;e=e+1|0}return b|0}function jA(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;r=r+1|0;c[a>>2]=r;while((e|0)<40){if((c[d+(e<<2)>>2]|0)==0){c[d+(e<<2)>>2]=r;c[d+((e<<2)+4)>>2]=b;c[d+((e<<2)+8)>>2]=0;return 0}e=e+2|0}Bb(116);Bb(111);Bb(111);Bb(32);Bb(109);Bb(97);Bb(110);Bb(121);Bb(32);Bb(115);Bb(101);Bb(116);Bb(106);Bb(109);Bb(112);Bb(115);Bb(32);Bb(105);Bb(110);Bb(32);Bb(97);Bb(32);Bb(102);Bb(117);Bb(110);Bb(99);Bb(116);Bb(105);Bb(111);Bb(110);Bb(32);Bb(99);Bb(97);Bb(108);Bb(108);Bb(44);Bb(32);Bb(98);Bb(117);Bb(105);Bb(108);Bb(100);Bb(32);Bb(119);Bb(105);Bb(116);Bb(104);Bb(32);Bb(97);Bb(32);Bb(104);Bb(105);Bb(103);Bb(104);Bb(101);Bb(114);Bb(32);Bb(118);Bb(97);Bb(108);Bb(117);Bb(101);Bb(32);Bb(102);Bb(111);Bb(114);Bb(32);Bb(77);Bb(65);Bb(88);Bb(95);Bb(83);Bb(69);Bb(84);Bb(74);Bb(77);Bb(80);Bb(83);Bb(10);ba(0);return 0}function kA(a,b){a=a|0;b=b|0;var d=0,e=0;while((d|0)<20){e=c[b+(d<<2)>>2]|0;if((e|0)==0)break;if((e|0)==(a|0)){return c[b+((d<<2)+4)>>2]|0}d=d+2|0}return 0}function lA(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((e|0)>=4096)return Xc(b|0,d|0,e|0)|0;f=b|0;if((b&3)==(d&3)){while(b&3){if((e|0)==0)return f|0;a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}while((e|0)>=4){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;e=e-4|0}}while((e|0)>0){a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}return f|0}function mA(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;if((c|0)<(b|0)&(b|0)<(c+d|0)){e=b;c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b]=a[c]|0}b=e}else{lA(b,c,d)|0}return b|0}function nA(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b+e|0;if((e|0)>=20){d=d&255;g=b&3;h=d|d<<8|d<<16|d<<24;i=f&~3;if(g){g=b+4-g|0;while((b|0)<(g|0)){a[b]=d;b=b+1|0}}while((b|0)<(i|0)){c[b>>2]=h;b=b+4|0}}while((b|0)<(f|0)){a[b]=d;b=b+1|0}return b-e|0}function oA(a){a=a|0;if((a|0)<65)return a|0;if((a|0)>90)return a|0;return a-65+97|0}function pA(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){E=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}E=a<<c-32;return 0}function qA(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){E=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}E=0;return b>>>c-32|0}function rA(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){E=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}E=(b|0)<0?-1:0;return b>>c-32|0}function sA(b){b=b|0;var c=0;c=a[n+(b>>>24)|0]|0;if((c|0)<8)return c|0;c=a[n+(b>>16&255)|0]|0;if((c|0)<8)return c+8|0;c=a[n+(b>>8&255)|0]|0;if((c|0)<8)return c+16|0;return(a[n+(b&255)|0]|0)+24|0}function tA(b){b=b|0;var c=0;c=a[m+(b&255)|0]|0;if((c|0)<8)return c|0;c=a[m+(b>>8&255)|0]|0;if((c|0)<8)return c+8|0;c=a[m+(b>>16&255)|0]|0;if((c|0)<8)return c+16|0;return(a[m+(b>>>24)|0]|0)+24|0}function uA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=a&65535;d=b&65535;e=aa(d,c)|0;f=a>>>16;a=(e>>>16)+(aa(d,f)|0)|0;d=b>>>16;b=aa(d,c)|0;return(E=(a>>>16)+(aa(d,f)|0)+(((a&65535)+b|0)>>>16)|0,a+b<<16|e&65535|0)|0}function vA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=b>>31|((b|0)<0?-1:0)<<1;f=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;g=d>>31|((d|0)<0?-1:0)<<1;h=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;i=hA(e^a,f^b,e,f)|0;b=E;a=g^e;e=h^f;f=hA((AA(i,b,hA(g^c,h^d,g,h)|0,E,0)|0)^a,E^e,a,e)|0;return f|0}function wA(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+8|0;g=f|0;h=b>>31|((b|0)<0?-1:0)<<1;j=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;k=e>>31|((e|0)<0?-1:0)<<1;l=((e|0)<0?-1:0)>>31|((e|0)<0?-1:0)<<1;m=hA(h^a,j^b,h,j)|0;b=E;AA(m,b,hA(k^d,l^e,k,l)|0,E,g)|0;l=hA(c[g>>2]^h,c[g+4>>2]^j,h,j)|0;j=E;i=f;return(E=j,l)|0}function xA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;a=c;c=uA(e,a)|0;f=E;return(E=(aa(b,a)|0)+(aa(d,e)|0)+f|f&0,c|0|0)|0}function yA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=AA(a,b,c,d,0)|0;return e|0}function zA(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+8|0;g=f|0;AA(a,b,d,e,g)|0;i=f;return(E=c[g+4>>2]|0,c[g>>2]|0)|0}function AA(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;g=a;h=b;i=h;j=d;k=e;l=k;if((i|0)==0){m=(f|0)!=0;if((l|0)==0){if(m){c[f>>2]=(g>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(g>>>0)/(j>>>0)>>>0;return(E=n,o)|0}else{if(!m){n=0;o=0;return(E=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;n=0;o=0;return(E=n,o)|0}}m=(l|0)==0;do{if((j|0)!=0){if(!m){p=(sA(l|0)|0)-(sA(i|0)|0)|0;if(p>>>0<=31){q=p+1|0;r=31-p|0;s=p-31>>31;t=q;u=g>>>(q>>>0)&s|i<<r;v=i>>>(q>>>0)&s;w=0;x=g<<r;break}if((f|0)==0){n=0;o=0;return(E=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return(E=n,o)|0}r=j-1|0;if((r&j|0)!=0){s=(sA(j|0)|0)+33-(sA(i|0)|0)|0;q=64-s|0;p=32-s|0;y=p>>31;z=s-32|0;A=z>>31;t=s;u=p-1>>31&i>>>(z>>>0)|(i<<p|g>>>(s>>>0))&A;v=A&i>>>(s>>>0);w=g<<q&y;x=(i<<q|g>>>(z>>>0))&y|g<<p&s-33>>31;break}if((f|0)!=0){c[f>>2]=r&g;c[f+4>>2]=0}if((j|0)==1){n=h|b&0;o=a|0|0;return(E=n,o)|0}else{r=tA(j|0)|0;n=i>>>(r>>>0)|0;o=i<<32-r|g>>>(r>>>0)|0;return(E=n,o)|0}}else{if(m){if((f|0)!=0){c[f>>2]=(i>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(i>>>0)/(j>>>0)>>>0;return(E=n,o)|0}if((g|0)==0){if((f|0)!=0){c[f>>2]=0;c[f+4>>2]=(i>>>0)%(l>>>0)}n=0;o=(i>>>0)/(l>>>0)>>>0;return(E=n,o)|0}r=l-1|0;if((r&l|0)==0){if((f|0)!=0){c[f>>2]=a|0;c[f+4>>2]=r&i|b&0}n=0;o=i>>>((tA(l|0)|0)>>>0);return(E=n,o)|0}r=(sA(l|0)|0)-(sA(i|0)|0)|0;if(r>>>0<=30){s=r+1|0;p=31-r|0;t=s;u=i<<p|g>>>(s>>>0);v=i>>>(s>>>0);w=0;x=g<<p;break}if((f|0)==0){n=0;o=0;return(E=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return(E=n,o)|0}}while(0);if((t|0)==0){B=x;C=w;D=v;F=u;G=0;H=0}else{b=d|0|0;d=k|e&0;e=fA(b,d,-1,-1)|0;k=E;h=x;x=w;w=v;v=u;u=t;t=0;while(1){I=x>>>31|h<<1;J=t|x<<1;a=v<<1|h>>>31|0;g=v>>>31|w<<1|0;hA(e,k,a,g)|0;i=E;l=i>>31|((i|0)<0?-1:0)<<1;K=l&1;L=hA(a,g,l&b,(((i|0)<0?-1:0)>>31|((i|0)<0?-1:0)<<1)&d)|0;M=E;i=u-1|0;if((i|0)==0){break}else{h=I;x=J;w=M;v=L;u=i;t=K}}B=I;C=J;D=M;F=L;G=0;H=K}K=C;C=0;if((f|0)!=0){c[f>>2]=F;c[f+4>>2]=D}n=(K|0)>>>31|(B|C)<<1|(C<<1|K>>>31)&0|G;o=(K<<1|0>>>31)&-2|H;return(E=n,o)|0}function BA(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return ld[a&1](b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0}function CA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return md[a&63](b|0,c|0,d|0)|0}function DA(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;nd[a&63](b|0,c|0,d|0,e|0,f|0)}function EA(a,b,c){a=a|0;b=b|0;c=+c;od[a&3](b|0,+c)}function FA(a,b){a=a|0;b=b|0;return+pd[a&3](b|0)}function GA(a){a=a|0;return qd[a&7]()|0}function HA(a,b){a=a|0;b=b|0;rd[a&127](b|0)}function IA(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;sd[a&7](b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function JA(a,b,c){a=a|0;b=b|0;c=c|0;td[a&31](b|0,c|0)}function KA(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return ud[a&3](b|0,c|0,d|0,e|0,f|0,g|0)|0}function LA(a,b){a=a|0;b=b|0;return vd[a&63](b|0)|0}function MA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;wd[a&31](b|0,c|0,d|0)}function NA(a){a=a|0;xd[a&15]()}function OA(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return yd[a&31](b|0,c|0,d|0,e|0)|0}function PA(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;zd[a&7](b|0,c|0,d|0,e|0,f|0,g|0)}function QA(a,b,c){a=a|0;b=b|0;c=c|0;return Ad[a&127](b|0,c|0)|0}function RA(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return Bd[a&15](b|0,c|0,d|0,e|0,f|0)|0}function SA(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;Cd[a&31](b|0,c|0,d|0,e|0)}function TA(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ba(0);return 0}function UA(a,b,c){a=a|0;b=b|0;c=c|0;ba(1);return 0}function VA(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ba(2)}function WA(a,b){a=a|0;b=+b;ba(3)}function XA(a){a=a|0;ba(4);return 0.0}function YA(){ba(5);return 0}function ZA(a){a=a|0;ba(6)}function _A(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ba(7)}function $A(a,b){a=a|0;b=b|0;ba(8)}function aB(a,b){a=a|0;b=b|0;dd(a|0,b|0)}function bB(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ba(9);return 0}function cB(a){a=a|0;ba(10);return 0}function dB(a){a=a|0;return Va(a|0)|0}function eB(a,b,c){a=a|0;b=b|0;c=c|0;ba(11)}function fB(){ba(12)}function gB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ba(13);return 0}function hB(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ba(14)}function iB(a,b){a=a|0;b=b|0;ba(15);return 0}function jB(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ba(16);return 0}function kB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ba(17)}



function im(f,g){f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0;h=i;i=i+16|0;j=h;k=f+384|0;l=c[k>>2]|0;if((l|0)==0){tl(f,15096)}m=f+212|0;if((c[m>>2]&16448|0)==16384){tl(f,15112)}n=f+216|0;o=c[n>>2]|0;do{if((o&4096|0)!=0){p=g+8|0;if((a[p]|0)!=3){if((b[f+428>>1]|0)!=0?(o&33554432|0)!=0:0){jm(g,l+1|0,f+532|0);break}jm(g,l+1|0,0);break}q=c[f+416>>2]|0;r=c[f+528>>2]|0;s=b[f+428>>1]|0;t=s&65535;u=c[g>>2]|0;v=g+9|0;w=a[v]|0;if(!((w&255)<8)){if(!(w<<24>>24==8)){break}}else{x=w&255;if((x|0)==1){if((u|0)!=0){w=l+u|0;y=0;z=u+7&7^7;A=l+(((u+ -1|0)>>>3)+1)|0;while(1){a[w]=(d[A]&1<<z|0)!=0|0;B=(z|0)==7;y=y+1|0;if((y|0)==(u|0)){break}else{w=w+ -1|0;z=B?0:z+1|0;A=B?A+ -1|0:A}}}}else if((x|0)==2){if((u|0)!=0){A=l+u|0;z=0;w=(u<<1)+6&6^6;y=l+(((u+ -1|0)>>>2)+1)|0;while(1){a[A]=(d[y]|0)>>>w&3;B=(w|0)==6;z=z+1|0;if((z|0)==(u|0)){break}else{A=A+ -1|0;w=B?0:w+2|0;y=B?y+ -1|0:y}}}}else if((x|0)==4?(u|0)!=0:0){y=l+u|0;w=0;A=u<<2&4;z=l+(((u+ -1|0)>>>1)+1)|0;while(1){a[y]=(d[z]|0)>>>A&15;B=(A|0)==4;w=w+1|0;if((w|0)==(u|0)){break}else{y=y+ -1|0;A=B?0:A+4|0;z=B?z+ -1|0:z}}}a[v]=8;a[g+11|0]=8;c[g+4>>2]=u}z=l+u|0;if(s<<16>>16==0){A=u*3|0;if((u|0)!=0){y=l+A|0;w=0;x=z;while(1){a[y]=a[q+((d[x]|0)*3|0)+2|0]|0;a[y+ -1|0]=a[q+((d[x]|0)*3|0)+1|0]|0;a[y+ -2|0]=a[q+((d[x]|0)*3|0)|0]|0;w=w+1|0;if((w|0)==(u|0)){break}else{y=y+ -3|0;x=x+ -1|0}}}a[v]=8;a[g+11|0]=24;c[g+4>>2]=A;a[p]=2;a[g+10|0]=3;break}x=u<<2;if((u|0)!=0){y=l+x|0;w=0;s=z;while(1){B=d[s]|0;if(B>>>0<t>>>0){C=a[r+B|0]|0}else{C=-1}a[y]=C;a[y+ -1|0]=a[q+((d[s]|0)*3|0)+2|0]|0;a[y+ -2|0]=a[q+((d[s]|0)*3|0)+1|0]|0;a[y+ -3|0]=a[q+((d[s]|0)*3|0)|0]|0;w=w+1|0;if((w|0)==(u|0)){break}else{y=y+ -4|0;s=s+ -1|0}}}a[v]=8;a[g+11|0]=32;c[g+4>>2]=x;a[p]=6;a[g+10|0]=4}}while(0);C=c[n>>2]|0;if((C&262272|0)==262144?(l=a[g+8|0]|0,l<<24>>24==4|l<<24>>24==6):0){pn(g,(c[k>>2]|0)+1|0,0);D=c[n>>2]|0}else{D=C}do{if((D&6291456|0)!=0?(C=(c[k>>2]|0)+1|0,l=g+8|0,o=d[l]|0,(o&3|0)==2):0){s=e[f+702>>1]|0;y=e[f+704>>1]|0;u=32768-s-y|0;w=c[g>>2]|0;q=(o&4|0)!=0;o=g+9|0;a:do{if((a[o]|0)==8){r=f+500|0;if((c[r>>2]|0)!=0?(t=f+504|0,(c[t>>2]|0)!=0):0){if((w|0)==0){E=0;break}z=f+492|0;A=C;B=0;F=0;G=C;while(1){H=a[G]|0;I=a[G+1|0]|0;J=G+3|0;K=a[G+2|0]|0;L=H&255;if(H<<24>>24==I<<24>>24&H<<24>>24==K<<24>>24){M=c[z>>2]|0;if((M|0)==0){N=F;O=H}else{N=F;O=a[M+L|0]|0}}else{M=c[t>>2]|0;H=((aa(d[M+L|0]|0,s)|0)+16384+(aa(d[M+(I&255)|0]|0,y)|0)+(aa(d[M+(K&255)|0]|0,u)|0)|0)>>>15;N=F|1;O=a[(c[r>>2]|0)+H|0]|0}H=A+1|0;a[A]=O;if(q){a[H]=a[J]|0;P=A+2|0;Q=G+4|0}else{P=H;Q=J}J=B+1|0;if((J|0)==(w|0)){E=N;break a}else{A=P;B=J;F=N;G=Q}}}if((w|0)!=0){if(q){G=C;F=0;B=0;A=C;while(1){r=a[A]|0;t=a[A+1|0]|0;z=a[A+2|0]|0;if(r<<24>>24==t<<24>>24&r<<24>>24==z<<24>>24){R=B;S=r}else{R=B|1;S=((aa(t&255,y)|0)+(aa(r&255,s)|0)+(aa(z&255,u)|0)|0)>>>15&255}a[G]=S;a[G+1|0]=a[A+3|0]|0;z=F+1|0;if((z|0)==(w|0)){E=R;break}else{G=G+2|0;F=z;B=R;A=A+4|0}}}else{A=C;B=0;F=0;G=C;while(1){z=a[G]|0;r=a[G+1|0]|0;t=a[G+2|0]|0;if(z<<24>>24==r<<24>>24&z<<24>>24==t<<24>>24){T=F;U=z}else{T=F|1;U=((aa(r&255,y)|0)+(aa(z&255,s)|0)+(aa(t&255,u)|0)|0)>>>15&255}a[A]=U;t=B+1|0;if((t|0)==(w|0)){E=T;break}else{A=A+1|0;B=t;F=T;G=G+3|0}}}}else{E=0}}else{G=f+512|0;if((c[G>>2]|0)!=0?(F=f+508|0,(c[F>>2]|0)!=0):0){if((w|0)==0){E=0;break}B=f+496|0;A=f+484|0;t=C;z=0;r=0;J=C;while(1){H=a[J]|0;K=H&255;M=a[J+1|0]|0;I=M&255;L=K<<8|I;V=d[J+2|0]|0;W=d[J+3|0]|0;X=d[J+4|0]|0;Y=d[J+5|0]|0;Z=J+6|0;if((L|0)==(V<<8|W|0)?(L|0)==(X<<8|Y|0):0){L=c[B>>2]|0;if((L|0)==0){_=r;$=M;ba=H}else{H=b[(c[L+(I>>>(c[A>>2]|0)<<2)>>2]|0)+(K<<1)>>1]|0;_=r;$=H&255;ba=(H&65535)>>>8&255}}else{H=c[A>>2]|0;L=c[G>>2]|0;M=(aa(e[(c[L+(I>>>H<<2)>>2]|0)+(K<<1)>>1]|0,s)|0)+16384+(aa(e[(c[L+(W>>>H<<2)>>2]|0)+(V<<1)>>1]|0,y)|0)+(aa(e[(c[L+(Y>>>H<<2)>>2]|0)+(X<<1)>>1]|0,u)|0)|0;X=b[(c[(c[F>>2]|0)+((M>>>15&255)>>>H<<2)>>2]|0)+((M>>>23&255)<<1)>>1]|0;_=r|1;$=X&255;ba=(X&65535)>>>8&255}a[t]=ba;X=t+2|0;a[t+1|0]=$;if(q){a[X]=a[Z]|0;a[t+3|0]=a[J+7|0]|0;ca=t+4|0;da=J+8|0}else{ca=X;da=Z}Z=z+1|0;if((Z|0)==(w|0)){E=_;break a}else{t=ca;z=Z;r=_;J=da}}}if((w|0)==0){E=0}else{J=C;r=0;z=0;t=C;while(1){F=d[t]<<8|d[t+1|0];G=d[t+2|0]<<8|d[t+3|0];A=d[t+4|0]<<8|d[t+5|0];B=t+6|0;Z=(F|0)==(G|0)&(F|0)==(A|0)&1^1|z;X=(aa(F,s)|0)+16384+(aa(G,y)|0)+(aa(A,u)|0)|0;a[J]=X>>>23;A=J+2|0;a[J+1|0]=X>>>15;if(q){a[A]=a[B]|0;a[J+3|0]=a[t+7|0]|0;ea=J+4|0;fa=t+8|0}else{ea=A;fa=B}B=r+1|0;if((B|0)==(w|0)){E=Z;break}else{J=ea;r=B;z=Z;t=fa}}}}}while(0);q=g+10|0;u=(d[q]|0)+254|0;a[q]=u;a[l]=a[l]&253;q=aa(d[o]|0,u&255)|0;a[g+11|0]=q;u=q&255;if(u>>>0>7){ga=aa(u>>>3,w)|0}else{ga=((aa(u,w)|0)+7|0)>>>3}c[g+4>>2]=ga;if((E|0)==0){ha=c[n>>2]|0;break}a[f+700|0]=1;u=c[n>>2]|0;if((u&6291456|0)==4194304){wl(f,15136);ia=c[n>>2]|0}else{ia=u}if((ia&6291456|0)==2097152){tl(f,15136)}else{ha=ia}}else{ha=D}}while(0);if((ha&16384|0)!=0?(c[f+208>>2]&2048|0)==0:0){km(g,(c[k>>2]|0)+1|0);ja=c[n>>2]|0}else{ja=ha}b:do{if((ja&128|0)!=0){ha=(c[k>>2]|0)+1|0;D=c[f+492>>2]|0;ia=c[f+500>>2]|0;E=c[f+504>>2]|0;ga=c[f+496>>2]|0;fa=c[f+508>>2]|0;ea=c[f+512>>2]|0;da=c[f+484>>2]|0;_=(c[m>>2]&8192|0)!=0;ca=c[g>>2]|0;$=d[g+8|0]|0;if(($|0)==6){if((a[g+9|0]|0)==8){ba=(ca|0)==0;if((E|0)==0|(ia|0)==0|(D|0)==0){if(ba){break}T=f+454|0;U=f+456|0;R=f+458|0;S=0;Q=ha;while(1){N=a[Q+3|0]|0;if(N<<24>>24==0){a[Q]=b[T>>1];a[Q+1|0]=b[U>>1];a[Q+2|0]=b[R>>1]}else if(!(N<<24>>24==-1)){P=N&255;N=aa(d[Q]|0,P)|0;O=P^255;u=N+128+(aa(e[T>>1]|0,O)|0)|0;a[Q]=((u>>>8&255)+u|0)>>>8;u=Q+1|0;N=aa(d[u]|0,P)|0;q=N+128+(aa(e[U>>1]|0,O)|0)|0;a[u]=((q>>>8&255)+q|0)>>>8;q=Q+2|0;u=aa(d[q]|0,P)|0;P=u+128+(aa(e[R>>1]|0,O)|0)|0;a[q]=((P>>>8&255)+P|0)>>>8}S=S+1|0;if((S|0)==(ca|0)){break b}else{Q=Q+4|0}}}if(ba){break}Q=f+464|0;S=f+466|0;R=f+468|0;U=f+454|0;T=f+456|0;w=f+458|0;o=0;l=ha;while(1){P=a[l+3|0]|0;if(P<<24>>24==0){a[l]=b[U>>1];a[l+1|0]=b[T>>1];a[l+2|0]=b[w>>1]}else if(P<<24>>24==-1){a[l]=a[D+(d[l]|0)|0]|0;q=l+1|0;a[q]=a[D+(d[q]|0)|0]|0;q=l+2|0;a[q]=a[D+(d[q]|0)|0]|0}else{q=P&255;P=aa(d[E+(d[l]|0)|0]|0,q)|0;O=q^255;u=P+128+(aa(e[Q>>1]|0,O)|0)|0;P=((u>>>8&255)+u|0)>>>8;if(_){ka=P&255}else{ka=a[ia+(P&255)|0]|0}a[l]=ka;P=l+1|0;u=aa(d[E+(d[P]|0)|0]|0,q)|0;N=u+128+(aa(e[S>>1]|0,O)|0)|0;u=((N>>>8&255)+N|0)>>>8;if(_){la=u&255}else{la=a[ia+(u&255)|0]|0}a[P]=la;P=l+2|0;u=aa(d[E+(d[P]|0)|0]|0,q)|0;q=u+128+(aa(e[R>>1]|0,O)|0)|0;O=((q>>>8&255)+q|0)>>>8;if(_){ma=O&255}else{ma=a[ia+(O&255)|0]|0}a[P]=ma}o=o+1|0;if((o|0)==(ca|0)){break}else{l=l+4|0}}}else{l=(ca|0)==0;if((ga|0)==0|(fa|0)==0|(ea|0)==0){if(l){break}o=f+454|0;R=f+456|0;S=f+458|0;Q=0;w=ha;while(1){T=d[w+6|0]<<8|d[w+7|0];if((T|0)==0){a[w]=(e[o>>1]|0)>>>8;a[w+1|0]=b[o>>1];a[w+2|0]=(e[R>>1]|0)>>>8;a[w+3|0]=b[R>>1];a[w+4|0]=(e[S>>1]|0)>>>8;a[w+5|0]=b[S>>1]}else if((T|0)!=65535){U=w+1|0;ba=w+2|0;P=w+3|0;O=d[ba]<<8|d[P];q=w+4|0;u=w+5|0;N=d[q]<<8|d[u];y=aa(d[w]<<8|d[U],T)|0;s=T^65535;C=y+32768+(aa(e[o>>1]|0,s)|0)|0;y=(C>>>16)+C|0;a[w]=y>>>24;a[U]=y>>>16;y=aa(O,T)|0;O=y+32768+(aa(e[R>>1]|0,s)|0)|0;y=(O>>>16)+O|0;a[ba]=y>>>24;a[P]=y>>>16;y=aa(N,T)|0;T=y+32768+(aa(e[S>>1]|0,s)|0)|0;s=(T>>>16)+T|0;a[q]=s>>>24;a[u]=s>>>16}Q=Q+1|0;if((Q|0)==(ca|0)){break b}else{w=w+8|0}}}if(l){break}w=f+464|0;Q=f+466|0;S=f+468|0;R=f+454|0;o=f+456|0;s=f+458|0;u=0;q=ha;while(1){T=d[q+6|0]<<8|d[q+7|0];if((T|0)==0){a[q]=(e[R>>1]|0)>>>8;a[q+1|0]=b[R>>1];a[q+2|0]=(e[o>>1]|0)>>>8;a[q+3|0]=b[o>>1];a[q+4|0]=(e[s>>1]|0)>>>8;a[q+5|0]=b[s>>1]}else if((T|0)==65535){y=q+1|0;N=b[(c[ga+((d[y]|0)>>>da<<2)>>2]|0)+(d[q]<<1)>>1]|0;a[q]=(N&65535)>>>8;a[y]=N;N=q+2|0;y=q+3|0;P=b[(c[ga+((d[y]|0)>>>da<<2)>>2]|0)+(d[N]<<1)>>1]|0;a[N]=(P&65535)>>>8;a[y]=P;P=q+4|0;y=q+5|0;N=b[(c[ga+((d[y]|0)>>>da<<2)>>2]|0)+(d[P]<<1)>>1]|0;a[P]=(N&65535)>>>8;a[y]=N}else{N=q+1|0;y=aa(e[(c[ea+((d[N]|0)>>>da<<2)>>2]|0)+(d[q]<<1)>>1]|0,T)|0;P=T^65535;ba=y+32768+(aa(e[w>>1]|0,P)|0)|0;y=(ba>>>16)+ba|0;ba=y>>>16;O=y>>>24;if(_){na=ba&255;oa=O&255}else{y=b[(c[fa+((ba&255)>>>da<<2)>>2]|0)+(O<<1)>>1]|0;na=y&255;oa=(y&65535)>>>8&255}a[q]=oa;a[N]=na;N=q+2|0;y=q+3|0;O=aa(e[(c[ea+((d[y]|0)>>>da<<2)>>2]|0)+(d[N]<<1)>>1]|0,T)|0;ba=O+32768+(aa(e[Q>>1]|0,P)|0)|0;O=(ba>>>16)+ba|0;ba=O>>>16;U=O>>>24;if(_){pa=ba&255;qa=U&255}else{O=b[(c[fa+((ba&255)>>>da<<2)>>2]|0)+(U<<1)>>1]|0;pa=O&255;qa=(O&65535)>>>8&255}a[N]=qa;a[y]=pa;y=q+4|0;N=q+5|0;O=aa(e[(c[ea+((d[N]|0)>>>da<<2)>>2]|0)+(d[y]<<1)>>1]|0,T)|0;T=O+32768+(aa(e[S>>1]|0,P)|0)|0;P=(T>>>16)+T|0;T=P>>>16;O=P>>>24;if(_){ra=T&255;sa=O&255}else{P=b[(c[fa+((T&255)>>>da<<2)>>2]|0)+(O<<1)>>1]|0;ra=P&255;sa=(P&65535)>>>8&255}a[y]=sa;a[N]=ra}u=u+1|0;if((u|0)==(ca|0)){break}else{q=q+8|0}}}}else if(($|0)==4){if((a[g+9|0]|0)==8){q=(ca|0)==0;if((E|0)==0|(ia|0)==0|(D|0)==0){if(q){break}u=f+460|0;S=0;Q=ha;while(1){w=a[Q+1|0]|0;if(w<<24>>24==0){a[Q]=b[u>>1]}else if(!(w<<24>>24==-1)){s=w&255;w=aa(d[Q]|0,s)|0;o=w+128+(aa(e[u>>1]|0,s^255)|0)|0;a[Q]=((o>>>8&255)+o|0)>>>8}S=S+1|0;if((S|0)==(ca|0)){break b}else{Q=Q+2|0}}}if(q){break}Q=f+470|0;S=f+460|0;u=0;o=ha;while(1){s=a[o+1|0]|0;w=s&255;if(s<<24>>24==0){a[o]=b[S>>1]}else if(s<<24>>24==-1){a[o]=a[D+(d[o]|0)|0]|0}else{s=aa(d[E+(d[o]|0)|0]|0,w)|0;R=s+128+(aa(e[Q>>1]|0,w^255)|0)|0;w=((R>>>8&255)+R|0)>>>8;if(_){ta=w&255}else{ta=a[ia+(w&255)|0]|0}a[o]=ta}u=u+1|0;if((u|0)==(ca|0)){break b}else{o=o+2|0}}}o=(ca|0)==0;if((ga|0)==0|(fa|0)==0|(ea|0)==0){if(o){break}u=f+460|0;ia=0;Q=ha;while(1){E=d[Q+2|0]<<8|d[Q+3|0];if((E|0)==0){a[Q]=(e[u>>1]|0)>>>8;a[Q+1|0]=b[u>>1]}else if((E|0)!=65535){S=Q+1|0;q=aa(d[Q]<<8|d[S],E)|0;w=(aa(e[u>>1]|0,E^65535)|0)+32768+q|0;q=(w>>>16)+w|0;a[Q]=q>>>24;a[S]=q>>>16}ia=ia+1|0;if((ia|0)==(ca|0)){break b}else{Q=Q+4|0}}}if(o){break}Q=f+470|0;ia=f+460|0;u=0;q=ha;while(1){S=d[q+2|0]<<8|d[q+3|0];if((S|0)==0){a[q]=(e[ia>>1]|0)>>>8;a[q+1|0]=b[ia>>1]}else if((S|0)==65535){w=q+1|0;E=b[(c[ga+((d[w]|0)>>>da<<2)>>2]|0)+(d[q]<<1)>>1]|0;a[q]=(E&65535)>>>8;a[w]=E}else{E=q+1|0;w=aa(e[(c[ea+((d[E]|0)>>>da<<2)>>2]|0)+(d[q]<<1)>>1]|0,S)|0;R=w+32768+(aa(e[Q>>1]|0,S^65535)|0)|0;S=(R>>>16)+R|0;R=S>>>16;if(_){ua=R&255;va=S>>>24&255}else{w=b[(c[fa+((R&255)>>>da<<2)>>2]|0)+(S>>>24<<1)>>1]|0;ua=w&255;va=(w&65535)>>>8&255}a[q]=va;a[E]=ua}u=u+1|0;if((u|0)==(ca|0)){break}else{q=q+4|0}}}else if(($|0)==2){if((a[g+9|0]|0)==8){q=(ca|0)==0;if((D|0)==0){if(q){break}u=f+534|0;fa=f+536|0;_=f+538|0;Q=f+454|0;ea=f+456|0;ia=f+458|0;o=1;E=ha;while(1){if(((d[E]|0)==(e[u>>1]|0)?(w=E+1|0,(d[w]|0)==(e[fa>>1]|0)):0)?(S=E+2|0,(d[S]|0)==(e[_>>1]|0)):0){a[E]=b[Q>>1];a[w]=b[ea>>1];a[S]=b[ia>>1]}if((o|0)==(ca|0)){break b}o=o+1|0;E=E+3|0}}else{if(q){break}E=f+534|0;o=f+536|0;ia=f+538|0;ea=f+454|0;Q=f+456|0;_=f+458|0;fa=0;u=ha;while(1){S=d[u]|0;w=u+1|0;R=d[w]|0;if(((S|0)==(e[E>>1]|0)?(R|0)==(e[o>>1]|0):0)?(s=u+2|0,(d[s]|0)==(e[ia>>1]|0)):0){a[u]=b[ea>>1];a[w]=b[Q>>1];a[s]=b[_>>1]}else{a[u]=a[D+S|0]|0;a[w]=a[D+R|0]|0;R=u+2|0;a[R]=a[D+(d[R]|0)|0]|0}fa=fa+1|0;if((fa|0)==(ca|0)){break}else{u=u+3|0}}}}else{u=(ca|0)==0;if((ga|0)==0){if(u){break}fa=f+534|0;_=f+536|0;Q=f+538|0;ea=f+454|0;ia=f+456|0;o=f+458|0;E=1;q=ha;while(1){R=q+1|0;w=q+2|0;S=q+3|0;s=q+4|0;l=q+5|0;N=d[s]<<8|d[l];if(((d[q]<<8|d[R]|0)==(e[fa>>1]|0)?(d[w]<<8|d[S]|0)==(e[_>>1]|0):0)?(N|0)==(e[Q>>1]|0):0){a[q]=(e[ea>>1]|0)>>>8;a[R]=b[ea>>1];a[w]=(e[ia>>1]|0)>>>8;a[S]=b[ia>>1];a[s]=(e[o>>1]|0)>>>8;a[l]=b[o>>1]}if((E|0)==(ca|0)){break b}E=E+1|0;q=q+6|0}}else{if(u){break}q=f+534|0;E=f+536|0;o=f+538|0;ia=f+454|0;ea=f+456|0;Q=f+458|0;_=0;fa=ha;while(1){l=d[fa]|0;s=fa+1|0;S=d[s]|0;w=fa+2|0;R=fa+3|0;N=fa+4|0;y=d[N]|0;P=fa+5|0;O=d[P]|0;T=y<<8|O;U=d[w]|0;ba=d[R]|0;if(((l<<8|S|0)==(e[q>>1]|0)?(U<<8|ba|0)==(e[E>>1]|0):0)?(T|0)==(e[o>>1]|0):0){a[fa]=(e[ia>>1]|0)>>>8;a[s]=b[ia>>1];a[w]=(e[ea>>1]|0)>>>8;a[R]=b[ea>>1];a[N]=(e[Q>>1]|0)>>>8;wa=b[Q>>1]|0}else{T=b[(c[ga+(S>>>da<<2)>>2]|0)+(l<<1)>>1]|0;a[fa]=(T&65535)>>>8;a[s]=T;T=b[(c[ga+(ba>>>da<<2)>>2]|0)+(U<<1)>>1]|0;a[w]=(T&65535)>>>8;a[R]=T;T=b[(c[ga+(O>>>da<<2)>>2]|0)+(y<<1)>>1]|0;a[N]=(T&65535)>>>8;wa=T}a[P]=wa;_=_+1|0;if((_|0)==(ca|0)){break}else{fa=fa+6|0}}}}}else if(($|0)==0){switch(d[g+9|0]|0){case 2:{fa=(ca|0)==0;if((D|0)==0){if(fa){break b}_=f+540|0;Q=f+460|0;ea=1;ia=6;o=ha;while(1){E=d[o]|0;if((E>>>ia&3|0)==(e[_>>1]|0)){a[o]=e[Q>>1]<<ia|E&16191>>>(6-ia|0)}E=(ia|0)==0;if((ea|0)==(ca|0)){break b}ea=ea+1|0;ia=E?6:ia+ -2|0;o=E?o+1|0:o}}else{if(fa){break b}o=f+540|0;ia=f+460|0;ea=0;Q=6;_=ha;while(1){$=d[_]|0;E=$>>>Q&3;if((E|0)==(e[o>>1]|0)){xa=e[ia>>1]<<Q&255|$&16191>>>(6-Q|0)}else{xa=(d[D+(E<<2|E|E<<4|E<<6)|0]|0)>>>6<<Q|$&16191>>>(6-Q|0)}a[_]=xa;$=(Q|0)==0;ea=ea+1|0;if((ea|0)==(ca|0)){break}else{Q=$?6:Q+ -2|0;_=$?_+1|0:_}}}break};case 4:{_=(ca|0)==0;if((D|0)==0){if(_){break b}Q=f+540|0;ea=f+460|0;ia=1;o=4;fa=ha;while(1){$=d[fa]|0;if(($>>>o&15|0)==(e[Q>>1]|0)){a[fa]=e[ea>>1]<<o|$&3855>>>(4-o|0)}$=(o|0)==0;if((ia|0)==(ca|0)){break b}ia=ia+1|0;o=$?4:o+ -4|0;fa=$?fa+1|0:fa}}else{if(_){break b}fa=f+540|0;o=f+460|0;ia=0;ea=4;Q=ha;while(1){$=d[Q]|0;E=$>>>ea&15;if((E|0)==(e[fa>>1]|0)){ya=e[o>>1]<<ea&255|$&3855>>>(4-ea|0)}else{ya=(d[D+(E<<4|E)|0]|0)>>>4<<ea|$&3855>>>(4-ea|0)}a[Q]=ya;$=(ea|0)==0;ia=ia+1|0;if((ia|0)==(ca|0)){break}else{ea=$?4:ea+ -4|0;Q=$?Q+1|0:Q}}}break};case 1:{if((ca|0)==0){break b}Q=f+540|0;ea=f+460|0;ia=1;o=7;fa=ha;while(1){_=d[fa]|0;if((_>>>o&1|0)==(e[Q>>1]|0)){a[fa]=e[ea>>1]<<o|_&32639>>>(7-o|0)}_=(o|0)==0;if((ia|0)==(ca|0)){break b}ia=ia+1|0;o=_?7:o+ -1|0;fa=_?fa+1|0:fa}break};case 8:{fa=(ca|0)==0;if((D|0)==0){if(fa){break b}o=f+540|0;ia=f+460|0;ea=1;Q=ha;while(1){if((d[Q]|0)==(e[o>>1]|0)){a[Q]=b[ia>>1]}if((ea|0)==(ca|0)){break b}ea=ea+1|0;Q=Q+1|0}}else{if(fa){break b}Q=f+540|0;ea=f+460|0;ia=0;o=ha;while(1){_=d[o]|0;if((_|0)==(e[Q>>1]|0)){za=b[ea>>1]&255}else{za=a[D+_|0]|0}a[o]=za;ia=ia+1|0;if((ia|0)==(ca|0)){break}else{o=o+1|0}}}break};case 16:{o=(ca|0)==0;if((ga|0)==0){if(o){break b}ia=f+540|0;D=f+460|0;ea=1;Q=ha;while(1){fa=Q+1|0;if((d[Q]<<8|d[fa]|0)==(e[ia>>1]|0)){a[Q]=(e[D>>1]|0)>>>8;a[fa]=b[D>>1]}if((ea|0)==(ca|0)){break b}ea=ea+1|0;Q=Q+2|0}}else{if(o){break b}Q=f+540|0;ea=f+460|0;D=0;ia=ha;while(1){fa=d[ia]|0;_=ia+1|0;$=d[_]|0;if((fa<<8|$|0)==(e[Q>>1]|0)){a[ia]=(e[ea>>1]|0)>>>8;Aa=b[ea>>1]|0}else{E=b[(c[ga+($>>>da<<2)>>2]|0)+(fa<<1)>>1]|0;a[ia]=(E&65535)>>>8;Aa=E}a[_]=Aa;D=D+1|0;if((D|0)==(ca|0)){break}else{ia=ia+2|0}}}break};default:{break b}}}else{break}}}while(0);Aa=c[n>>2]|0;do{if((Aa&6299648|0)==8192){if((Aa&128|0)!=0){if((b[f+428>>1]|0)!=0){break}za=a[f+435|0]|0;if((za&4)==0){Ba=za}else{break}}else{Ba=a[f+435|0]|0}if(!(Ba<<24>>24==3)){za=(c[k>>2]|0)+1|0;ya=c[f+484>>2]|0;xa=c[f+492>>2]|0;wa=c[f+496>>2]|0;ua=c[g>>2]|0;va=g+9|0;ta=a[va]|0;if((ta&255)>8|(xa|0)==0?ta<<24>>24!=16|(wa|0)==0:0){break}ra=d[g+8|0]|0;if((ra|0)==0){if(ta<<24>>24==2){if((ua|0)==0){break}else{Ca=0;Da=za}while(1){sa=d[Da]|0;pa=sa&192;qa=sa&48;na=sa&12;oa=sa&3;a[Da]=(d[xa+(qa<<2|qa|qa>>>2|qa>>>4)|0]|0)>>>2&48|a[xa+(sa>>>6|pa|pa>>>2|pa>>>4)|0]&192|(d[xa+(na<<2|na|na<<4|na>>>2)|0]|0)>>>4&12|(d[xa+(oa<<4|oa|oa<<6|oa<<2)|0]|0)>>>6;Ca=Ca+4|0;if(!(Ca>>>0<ua>>>0)){break}else{Da=Da+1|0}}Ea=a[va]|0}else{Ea=ta}if(Ea<<24>>24==16){if((ua|0)==0){break}else{Fa=0;Ga=za}while(1){oa=Ga+1|0;na=b[(c[wa+((d[oa]|0)>>>ya<<2)>>2]|0)+(d[Ga]<<1)>>1]|0;a[Ga]=(na&65535)>>>8;a[oa]=na;Fa=Fa+1|0;if((Fa|0)==(ua|0)){break}else{Ga=Ga+2|0}}}else if(Ea<<24>>24==4){if((ua|0)==0){break}else{Ha=0;Ia=za}while(1){va=d[Ia]|0;na=va&15;a[Ia]=(d[xa+(na<<4|na)|0]|0)>>>4|a[xa+(va&240|va>>>4)|0]&240;Ha=Ha+2|0;if(!(Ha>>>0<ua>>>0)){break}else{Ia=Ia+1|0}}}else if(Ea<<24>>24==8){if((ua|0)==0){break}else{Ja=0;Ka=za}while(1){a[Ka]=a[xa+(d[Ka]|0)|0]|0;Ja=Ja+1|0;if((Ja|0)==(ua|0)){break}else{Ka=Ka+1|0}}}else{break}}else if((ra|0)==4){va=(ua|0)==0;if(ta<<24>>24==8){if(va){break}else{La=0;Ma=za}while(1){a[Ma]=a[xa+(d[Ma]|0)|0]|0;La=La+1|0;if((La|0)==(ua|0)){break}else{Ma=Ma+2|0}}}else{if(va){break}else{Na=0;Oa=za}while(1){na=Oa+1|0;oa=b[(c[wa+((d[na]|0)>>>ya<<2)>>2]|0)+(d[Oa]<<1)>>1]|0;a[Oa]=(oa&65535)>>>8;a[na]=oa;Na=Na+1|0;if((Na|0)==(ua|0)){break}else{Oa=Oa+4|0}}}}else if((ra|0)==6){va=(ua|0)==0;if(ta<<24>>24==8){if(va){break}else{Pa=0;Qa=za}while(1){a[Qa]=a[xa+(d[Qa]|0)|0]|0;oa=Qa+1|0;a[oa]=a[xa+(d[oa]|0)|0]|0;oa=Qa+2|0;a[oa]=a[xa+(d[oa]|0)|0]|0;Pa=Pa+1|0;if((Pa|0)==(ua|0)){break}else{Qa=Qa+4|0}}}else{if(va){break}else{Ra=0;Sa=za}while(1){oa=Sa+1|0;na=b[(c[wa+((d[oa]|0)>>>ya<<2)>>2]|0)+(d[Sa]<<1)>>1]|0;a[Sa]=(na&65535)>>>8;a[oa]=na;na=Sa+2|0;oa=Sa+3|0;pa=b[(c[wa+((d[oa]|0)>>>ya<<2)>>2]|0)+(d[na]<<1)>>1]|0;a[na]=(pa&65535)>>>8;a[oa]=pa;pa=Sa+4|0;oa=Sa+5|0;na=b[(c[wa+((d[oa]|0)>>>ya<<2)>>2]|0)+(d[pa]<<1)>>1]|0;a[pa]=(na&65535)>>>8;a[oa]=na;Ra=Ra+1|0;if((Ra|0)==(ua|0)){break}else{Sa=Sa+8|0}}}}else if((ra|0)==2){va=(ua|0)==0;if(ta<<24>>24==8){if(va){break}else{Ta=0;Ua=za}while(1){a[Ua]=a[xa+(d[Ua]|0)|0]|0;na=Ua+1|0;a[na]=a[xa+(d[na]|0)|0]|0;na=Ua+2|0;a[na]=a[xa+(d[na]|0)|0]|0;Ta=Ta+1|0;if((Ta|0)==(ua|0)){break}else{Ua=Ua+3|0}}}else{if(va){break}else{Va=0;Wa=za}while(1){xa=Wa+1|0;ta=b[(c[wa+((d[xa]|0)>>>ya<<2)>>2]|0)+(d[Wa]<<1)>>1]|0;a[Wa]=(ta&65535)>>>8;a[xa]=ta;ta=Wa+2|0;xa=Wa+3|0;ra=b[(c[wa+((d[xa]|0)>>>ya<<2)>>2]|0)+(d[ta]<<1)>>1]|0;a[ta]=(ra&65535)>>>8;a[xa]=ra;ra=Wa+4|0;xa=Wa+5|0;ta=b[(c[wa+((d[xa]|0)>>>ya<<2)>>2]|0)+(d[ra]<<1)>>1]|0;a[ra]=(ta&65535)>>>8;a[xa]=ta;Va=Va+1|0;if((Va|0)==(ua|0)){break}else{Wa=Wa+6|0}}}}else{break}}}}while(0);Wa=c[n>>2]|0;if((Wa&262272|0)==262272?(Va=a[g+8|0]|0,Va<<24>>24==4|Va<<24>>24==6):0){pn(g,(c[k>>2]|0)+1|0,0);Xa=c[n>>2]|0}else{Xa=Wa}c:do{if((Xa&8388608|0)!=0?(Wa=a[g+8|0]|0,!((Wa&4)==0)):0){Va=c[k>>2]|0;Ua=c[g>>2]|0;Ta=Wa&255;do{if((Ta&4|0)!=0){Wa=a[g+9|0]|0;if(Wa<<24>>24==16){Sa=c[f+508>>2]|0;Ra=c[f+484>>2]|0;if((Sa|0)==0){break}Qa=Ta<<1&4;Pa=Qa+4|0;if((Ua|0)==0){break c}Oa=Va+(Qa|3)|0;Qa=Ua;while(1){Na=Oa+1|0;Ma=b[(c[Sa+((d[Na]|0)>>>Ra<<2)>>2]|0)+(d[Oa]<<1)>>1]|0;a[Oa]=(Ma&65535)>>>8;a[Na]=Ma;Qa=Qa+ -1|0;if((Qa|0)==0){break c}else{Oa=Oa+Pa|0}}}else if(Wa<<24>>24==8){Pa=c[f+500>>2]|0;if((Pa|0)==0){break}Oa=Ta&2;Qa=Oa+2|0;if((Ua|0)==0){break c}Ra=Va+((Oa|1)+1)|0;Oa=Ua;while(1){a[Ra]=a[Pa+(d[Ra]|0)|0]|0;Oa=Oa+ -1|0;if((Oa|0)==0){break c}else{Ra=Ra+Qa|0}}}else{break}}}while(0);wl(f,15216)}}while(0);Xa=c[n>>2]|0;if((Xa&67108864|0)!=0?(Ua=c[k>>2]|0,Va=Ua+1|0,Ta=g+9|0,(a[Ta]|0)==16):0){Qa=g+4|0;Ra=c[Qa>>2]|0;Oa=Ua+(Ra+1)|0;if((Ra|0)>0){Ra=Va;Ua=Va;while(1){Va=d[Ua]|0;Pa=Ua+2|0;a[Ra]=(((((d[Ua+1|0]|0)-Va|0)*65535|0)+8388480|0)>>>24)+Va;if(Pa>>>0<Oa>>>0){Ra=Ra+1|0;Ua=Pa}else{break}}}a[Ta]=8;Ta=d[g+10|0]|0;a[g+11|0]=Ta<<3;c[Qa>>2]=aa(Ta,c[g>>2]|0)|0;Ya=c[n>>2]|0}else{Ya=Xa}if((Ya&1024|0)!=0?(Xa=c[k>>2]|0,Ta=Xa+1|0,Qa=g+9|0,(a[Qa]|0)==16):0){Ua=g+4|0;Ra=c[Ua>>2]|0;Oa=Xa+(Ra+1)|0;if((Ra|0)>0){Ra=Ta;Xa=Ta;while(1){a[Ra]=a[Xa]|0;Xa=Xa+2|0;if(!(Xa>>>0<Oa>>>0)){break}else{Ra=Ra+1|0}}}a[Qa]=8;Qa=d[g+10|0]|0;a[g+11|0]=Qa<<3;c[Ua>>2]=aa(Qa,c[g>>2]|0)|0;Za=c[n>>2]|0}else{Za=Ya}do{if((Za&64|0)!=0){Ya=(c[k>>2]|0)+1|0;Qa=c[f+612>>2]|0;Ua=c[f+616>>2]|0;Ra=c[g>>2]|0;Oa=g+9|0;d:do{if((a[Oa]|0)==8){Xa=g+8|0;Ta=a[Xa]|0;Pa=(Qa|0)==0;if(!(Ta<<24>>24!=2|Pa)){if((Ra|0)==0){_a=8}else{Va=Ya;Wa=0;Sa=Ya;while(1){a[Va]=a[Qa+((d[Sa+1|0]|0)>>>3<<5|(d[Sa]|0)>>>3<<10|(d[Sa+2|0]|0)>>>3)|0]|0;Wa=Wa+1|0;if((Wa|0)==(Ra|0)){break}else{Va=Va+1|0;Sa=Sa+3|0}}_a=a[Oa]|0}a[Xa]=3;a[g+10|0]=1;a[g+11|0]=_a;Sa=_a&255;if((_a&255)>7){$a=aa(Sa>>>3,Ra)|0}else{$a=((aa(Sa,Ra)|0)+7|0)>>>3}c[g+4>>2]=$a;break}if(Ta<<24>>24!=6|Pa){if(Ta<<24>>24!=3|(Ua|0)==0|(Ra|0)==0){break}else{ab=0;bb=Ya}while(1){a[bb]=a[Ua+(d[bb]|0)|0]|0;ab=ab+1|0;if((ab|0)==(Ra|0)){break d}else{bb=bb+1|0}}}if((Ra|0)==0){cb=8}else{Ta=Ya;Pa=0;Sa=Ya;while(1){a[Ta]=a[Qa+((d[Sa+1|0]|0)>>>3<<5|(d[Sa]|0)>>>3<<10|(d[Sa+2|0]|0)>>>3)|0]|0;Pa=Pa+1|0;if((Pa|0)==(Ra|0)){break}else{Ta=Ta+1|0;Sa=Sa+4|0}}cb=a[Oa]|0}a[Xa]=3;a[g+10|0]=1;a[g+11|0]=cb;Sa=cb&255;if((cb&255)>7){db=aa(Sa>>>3,Ra)|0}else{db=((aa(Sa,Ra)|0)+7|0)>>>3}c[g+4>>2]=db}}while(0);if((c[g+4>>2]|0)==0){tl(f,15176)}else{eb=c[n>>2]|0;break}}else{eb=Za}}while(0);if(((eb&512|0)!=0?(Za=c[k>>2]|0,db=g+9|0,(a[db]|0)==8):0)?(a[g+8|0]|0)!=3:0){cb=g+4|0;bb=c[cb>>2]|0;ab=bb<<1;if((ab|0)>(bb|0)){$a=Za+(ab|1)|0;ab=Za+(bb+1)|0;do{ab=ab+ -1|0;Za=a[ab]|0;a[$a+ -1|0]=Za;$a=$a+ -2|0;a[$a]=Za}while($a>>>0>ab>>>0);fb=c[cb>>2]|0}else{fb=bb}c[cb>>2]=fb<<1;a[db]=16;a[g+11|0]=d[g+10|0]<<4;gb=c[n>>2]|0}else{gb=eb}if((gb&16384|0)!=0?(c[f+208>>2]&2048|0)!=0:0){km(g,(c[k>>2]|0)+1|0);hb=c[n>>2]|0}else{hb=gb}if((hb&32|0)==0){ib=hb}else{mn(g,(c[k>>2]|0)+1|0);ib=c[n>>2]|0}do{if((ib&524288|0)!=0){hb=c[k>>2]|0;gb=c[g>>2]|0;eb=a[g+8|0]|0;if(eb<<24>>24==6){db=hb+((c[g+4>>2]|0)+1)|0;fb=(gb|0)==0;if((a[g+9|0]|0)==8){if(fb){break}else{jb=0;kb=db}while(1){cb=kb+ -1|0;a[cb]=d[cb]^255;jb=jb+1|0;if((jb|0)==(gb|0)){break}else{kb=kb+ -4|0}}}else{if(fb){break}else{lb=0;mb=db}while(1){cb=mb+ -1|0;a[cb]=d[cb]^255;cb=mb+ -2|0;a[cb]=d[cb]^255;lb=lb+1|0;if((lb|0)==(gb|0)){break}else{mb=mb+ -8|0}}}}else if(eb<<24>>24==4){db=hb+((c[g+4>>2]|0)+1)|0;fb=(gb|0)==0;if((a[g+9|0]|0)==8){if(fb){break}else{nb=db;ob=0}while(1){cb=nb+ -1|0;a[cb]=d[cb]^255;ob=ob+1|0;if((ob|0)==(gb|0)){break}else{nb=nb+ -2|0}}}else{if(fb){break}else{pb=0;qb=db}while(1){hb=qb+ -1|0;a[hb]=d[hb]^255;hb=qb+ -2|0;a[hb]=d[hb]^255;pb=pb+1|0;if((pb|0)==(gb|0)){break}else{qb=qb+ -4|0}}}}else{break}}}while(0);e:do{if((c[n>>2]&8|0)!=0?(qb=c[k>>2]|0,pb=qb+1|0,nb=a[g+8|0]|0,ob=nb&255,!(nb<<24>>24==3)):0){nb=d[g+9|0]|0;if((ob&2|0)==0){c[j>>2]=nb-(d[f+524|0]|0);rb=1}else{c[j>>2]=nb-(d[f+521|0]|0);c[j+4>>2]=nb-(d[f+522|0]|0);c[j+8>>2]=nb-(d[f+523|0]|0);rb=3}if((ob&4|0)==0){sb=rb}else{c[j+(rb<<2)>>2]=nb-(d[f+525|0]|0);sb=rb+1|0}ob=0;mb=0;while(1){lb=j+(ob<<2)|0;kb=c[lb>>2]|0;if((kb|0)>0&(kb|0)<(nb|0)){tb=1}else{c[lb>>2]=0;tb=mb}ob=ob+1|0;if((ob|0)>=(sb|0)){break}else{mb=tb}}if((tb|0)!=0){if((nb|0)==2){mb=c[g+4>>2]|0;ob=qb+(mb+1)|0;if((mb|0)>0){ub=pb}else{break}while(1){mb=ub+1|0;a[ub]=(d[ub]|0)>>>1&85;if(mb>>>0<ob>>>0){ub=mb}else{break}}}else if((nb|0)==4){ob=c[g+4>>2]|0;mb=qb+(ob+1)|0;lb=c[j>>2]|0;kb=15>>>lb;jb=kb<<4|kb;if((ob|0)>0){vb=pb}else{break}while(1){ob=vb+1|0;a[vb]=(d[vb]|0)>>>lb&jb;if(ob>>>0<mb>>>0){vb=ob}else{break}}}else if((nb|0)==8){mb=c[g+4>>2]|0;jb=mb+1|0;lb=qb+jb|0;if((mb|0)<=0){break}a[pb]=(d[pb]|0)>>>(c[j>>2]|0);if((jb|0)<=2){break}jb=1;mb=qb+2|0;while(1){ob=(jb|0)>=(sb|0)?0:jb;kb=mb+1|0;a[mb]=(d[mb]|0)>>>(c[j+(ob<<2)>>2]|0);if(kb>>>0<lb>>>0){jb=ob+1|0;mb=kb}else{break}}}else if((nb|0)==16){mb=c[g+4>>2]|0;jb=qb+(mb+1)|0;if((mb|0)>0){wb=pb;xb=0}else{break}while(1){mb=wb+1|0;lb=(d[wb]<<8|d[mb])>>>(c[j+(xb<<2)>>2]|0);kb=xb+1|0;a[wb]=lb>>>8;ob=wb+2|0;a[mb]=lb;if(!(ob>>>0<jb>>>0)){break e}wb=ob;xb=(kb|0)>=(sb|0)?0:kb}}else{break}}}}while(0);if((c[n>>2]&4|0)!=0?(sb=c[k>>2]|0,xb=g+9|0,wb=a[xb]|0,(wb&255)<8):0){j=wb&255;wb=c[g>>2]|0;if((j|0)==1){if((wb|0)!=0){vb=sb+wb|0;ub=0;tb=wb+7&7^7;rb=sb+(((wb+ -1|0)>>>3)+1)|0;while(1){a[vb]=(d[rb]|0)>>>tb&1;jb=(tb|0)==7;ub=ub+1|0;if((ub|0)==(wb|0)){break}else{vb=vb+ -1|0;tb=jb?0:tb+1|0;rb=jb?rb+ -1|0:rb}}}}else if((j|0)==2){if((wb|0)!=0){rb=sb+wb|0;tb=0;vb=(wb<<1)+6&6^6;ub=sb+(((wb+ -1|0)>>>2)+1)|0;while(1){a[rb]=(d[ub]|0)>>>vb&3;jb=(vb|0)==6;tb=tb+1|0;if((tb|0)==(wb|0)){break}else{rb=rb+ -1|0;vb=jb?0:vb+2|0;ub=jb?ub+ -1|0:ub}}}}else if((j|0)==4?(wb|0)!=0:0){j=sb+wb|0;ub=0;vb=wb<<2&4;rb=sb+(((wb+ -1|0)>>>1)+1)|0;while(1){a[j]=(d[rb]|0)>>>vb&15;sb=(vb|0)==4;ub=ub+1|0;if((ub|0)==(wb|0)){break}else{j=j+ -1|0;vb=sb?0:4;rb=sb?rb+ -1|0:rb}}}a[xb]=8;xb=d[g+10|0]|0;a[g+11|0]=xb<<3;c[g+4>>2]=aa(xb,wb)|0}wb=g+8|0;if((a[wb]|0)==3?(c[f+424>>2]|0)>-1:0){rn(f,g)}xb=c[n>>2]|0;if((xb&1|0)==0){yb=xb}else{qn(g,(c[k>>2]|0)+1|0);yb=c[n>>2]|0}if((yb&65536|0)==0){zb=yb}else{on(g,(c[k>>2]|0)+1|0);zb=c[n>>2]|0}do{if((zb&32768|0)!=0){yb=c[k>>2]|0;xb=b[f+444>>1]|0;rb=c[m>>2]|0;vb=c[g>>2]|0;j=(xb&65535)>>>8&255;ub=xb&255;xb=a[wb]|0;if(xb<<24>>24==0){sb=a[g+9|0]|0;if(sb<<24>>24==8){tb=yb+(vb+1)|0;jb=vb<<1;pb=yb+(jb|1)|0;if((rb&128|0)==0){if((vb|0)!=0){qb=pb;nb=0;kb=tb;do{kb=kb+ -1|0;a[qb+ -1|0]=a[kb]|0;qb=qb+ -2|0;a[qb]=ub;nb=nb+1|0}while((nb|0)!=(vb|0))}a[g+10|0]=2;a[g+11|0]=16;c[g+4>>2]=jb;break}else{a[yb+jb|0]=ub;if(vb>>>0>1){nb=pb;qb=1;kb=tb;while(1){ob=kb+ -1|0;lb=nb+ -2|0;a[lb]=a[ob]|0;mb=qb+1|0;a[nb+ -3|0]=ub;if((mb|0)==(vb|0)){break}else{nb=lb;qb=mb;kb=ob}}}a[g+10|0]=2;a[g+11|0]=16;c[g+4>>2]=jb;break}}else if(sb<<24>>24==16){kb=yb+(vb<<1|1)|0;qb=vb<<2;nb=yb+(qb|1)|0;if((rb&128|0)==0){if((vb|0)!=0){tb=nb;pb=0;ob=kb;do{a[tb+ -1|0]=a[ob+ -1|0]|0;ob=ob+ -2|0;a[tb+ -2|0]=a[ob]|0;a[tb+ -3|0]=j;tb=tb+ -4|0;a[tb]=ub;pb=pb+1|0}while((pb|0)!=(vb|0))}a[g+10|0]=2;a[g+11|0]=32;c[g+4>>2]=qb;break}else{a[yb+qb|0]=j;a[yb+(qb+ -1)|0]=ub;if(vb>>>0>1){pb=nb;tb=1;ob=kb;while(1){a[pb+ -3|0]=a[ob+ -1|0]|0;sb=ob+ -2|0;jb=pb+ -4|0;a[jb]=a[sb]|0;mb=tb+1|0;a[pb+ -5|0]=j;a[pb+ -6|0]=ub;if((mb|0)==(vb|0)){break}else{pb=jb;tb=mb;ob=sb}}}a[g+10|0]=2;a[g+11|0]=32;c[g+4>>2]=qb;break}}else{break}}else if(xb<<24>>24==2){ob=a[g+9|0]|0;if(ob<<24>>24==8){tb=vb*3|0;pb=yb+(tb+1)|0;kb=yb+(vb+1+tb)|0;if((rb&128|0)==0){if((vb|0)!=0){nb=kb;sb=0;mb=pb;do{a[nb+ -1|0]=a[mb+ -1|0]|0;a[nb+ -2|0]=a[mb+ -2|0]|0;mb=mb+ -3|0;a[nb+ -3|0]=a[mb]|0;nb=nb+ -4|0;a[nb]=ub;sb=sb+1|0}while((sb|0)!=(vb|0))}a[g+10|0]=4;a[g+11|0]=32;c[g+4>>2]=vb<<2;break}else{a[yb+(tb+vb)|0]=ub;if(vb>>>0>1){sb=kb;nb=1;mb=pb;while(1){a[sb+ -2|0]=a[mb+ -1|0]|0;a[sb+ -3|0]=a[mb+ -2|0]|0;xb=mb+ -3|0;qb=sb+ -4|0;a[qb]=a[xb]|0;jb=nb+1|0;a[sb+ -5|0]=ub;if((jb|0)==(vb|0)){break}else{sb=qb;nb=jb;mb=xb}}}a[g+10|0]=4;a[g+11|0]=32;c[g+4>>2]=vb<<2;break}}else if(ob<<24>>24==16){mb=vb*6|0;nb=yb+(mb|1)|0;sb=mb+(vb<<1)|0;mb=yb+(sb|1)|0;if((rb&128|0)==0){if((vb|0)!=0){pb=mb;kb=0;tb=nb;do{a[pb+ -1|0]=a[tb+ -1|0]|0;a[pb+ -2|0]=a[tb+ -2|0]|0;a[pb+ -3|0]=a[tb+ -3|0]|0;a[pb+ -4|0]=a[tb+ -4|0]|0;a[pb+ -5|0]=a[tb+ -5|0]|0;tb=tb+ -6|0;a[pb+ -6|0]=a[tb]|0;a[pb+ -7|0]=j;pb=pb+ -8|0;a[pb]=ub;kb=kb+1|0}while((kb|0)!=(vb|0))}a[g+10|0]=4;a[g+11|0]=64;c[g+4>>2]=vb<<3;break}else{a[yb+sb|0]=j;a[yb+(sb+ -1)|0]=ub;if(vb>>>0>1){kb=mb;pb=1;tb=nb;while(1){a[kb+ -3|0]=a[tb+ -1|0]|0;a[kb+ -4|0]=a[tb+ -2|0]|0;a[kb+ -5|0]=a[tb+ -3|0]|0;a[kb+ -6|0]=a[tb+ -4|0]|0;a[kb+ -7|0]=a[tb+ -5|0]|0;rb=tb+ -6|0;ob=kb+ -8|0;a[ob]=a[rb]|0;xb=pb+1|0;a[kb+ -9|0]=j;a[kb+ -10|0]=ub;if((xb|0)==(vb|0)){break}else{kb=ob;pb=xb;tb=rb}}}a[g+10|0]=4;a[g+11|0]=64;c[g+4>>2]=vb<<3;break}}else{break}}else{break}}}while(0);do{if((c[n>>2]&131072|0)!=0){m=c[k>>2]|0;zb=c[g>>2]|0;tb=a[wb]|0;if(tb<<24>>24==6){pb=m+((c[g+4>>2]|0)+1)|0;kb=(zb|0)==0;if((a[g+9|0]|0)==8){if(kb){break}else{Ab=0;Bb=pb}do{ub=Bb+ -1|0;j=a[ub]|0;nb=Bb+ -2|0;a[ub]=a[nb]|0;ub=Bb+ -3|0;a[nb]=a[ub]|0;Bb=Bb+ -4|0;a[ub]=a[Bb]|0;a[Bb]=j;Ab=Ab+1|0}while((Ab|0)!=(zb|0))}else{if(kb){break}else{Cb=0;Db=pb}do{vb=Db+ -1|0;j=a[vb]|0;ub=Db+ -2|0;nb=a[ub]|0;mb=Db+ -3|0;a[vb]=a[mb]|0;vb=Db+ -4|0;a[ub]=a[vb]|0;ub=Db+ -5|0;a[mb]=a[ub]|0;mb=Db+ -6|0;a[vb]=a[mb]|0;vb=Db+ -7|0;a[ub]=a[vb]|0;Db=Db+ -8|0;a[mb]=a[Db]|0;a[vb]=j;a[Db]=nb;Cb=Cb+1|0}while((Cb|0)!=(zb|0))}}else if(tb<<24>>24==4){pb=m+((c[g+4>>2]|0)+1)|0;kb=(zb|0)==0;if((a[g+9|0]|0)==8){if(kb){break}else{Eb=pb;Fb=0}do{nb=Eb+ -1|0;j=a[nb]|0;Eb=Eb+ -2|0;a[nb]=a[Eb]|0;a[Eb]=j;Fb=Fb+1|0}while((Fb|0)!=(zb|0))}else{if(kb){break}else{Gb=pb;Hb=0}do{m=Gb+ -1|0;tb=a[m]|0;j=Gb+ -2|0;nb=a[j]|0;vb=Gb+ -3|0;a[m]=a[vb]|0;Gb=Gb+ -4|0;a[j]=a[Gb]|0;a[vb]=tb;a[Gb]=nb;Hb=Hb+1|0}while((Hb|0)!=(zb|0))}}else{break}}}while(0);Hb=c[n>>2]|0;if((Hb&16|0)==0){Ib=Hb}else{nn(g,(c[k>>2]|0)+1|0);Ib=c[n>>2]|0}if((Ib&1048576|0)==0){i=h;return}Ib=c[f+192>>2]|0;if((Ib|0)!=0){wd[Ib&31](f,g,(c[k>>2]|0)+1|0)}k=a[f+204|0]|0;if(!(k<<24>>24==0)){a[g+9|0]=k}k=a[f+205|0]|0;f=g+10|0;if(k<<24>>24==0){Jb=a[f]|0}else{a[f]=k;Jb=k}k=aa(Jb&255,d[g+9|0]|0)|0;a[g+11|0]=k;Jb=k&255;k=c[g>>2]|0;if(Jb>>>0>7){Kb=aa(Jb>>>3,k)|0}else{Kb=((aa(Jb,k)|0)+7|0)>>>3}c[g+4>>2]=Kb;i=h;return}function jm(f,g,h){f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;j=i;k=c[f>>2]|0;l=f+8|0;m=a[l]|0;if(m<<24>>24==2){if((h|0)==0){i=j;return}n=f+9|0;o=a[n]|0;if(o<<24>>24==16){p=b[h+2>>1]|0;q=(p&65535)>>>8&65535;r=b[h+4>>1]|0;s=(r&65535)>>>8&65535;t=b[h+6>>1]|0;u=(t&65535)>>>8&65535;if((k|0)!=0){v=p&255;p=r&255;r=t&255;t=g+((k<<3)+ -1)|0;w=0;x=g+((c[f+4>>2]|0)+ -1)|0;while(1){y=x+ -5|0;z=x+ -4|0;if((((((d[y]|0)==(q|0)?(a[z]|0)==v<<24>>24:0)?(A=x+ -3|0,(d[A]|0)==(s|0)):0)?(B=x+ -2|0,(a[B]|0)==p<<24>>24):0)?(C=x+ -1|0,(d[C]|0)==(u|0)):0)?(a[x]|0)==r<<24>>24:0){a[t]=0;a[t+ -1|0]=0;D=C;E=B;F=A}else{a[t]=-1;a[t+ -1|0]=-1;D=x+ -1|0;E=x+ -2|0;F=x+ -3|0}a[t+ -2|0]=a[x]|0;a[t+ -3|0]=a[D]|0;a[t+ -4|0]=a[E]|0;a[t+ -5|0]=a[F]|0;a[t+ -6|0]=a[z]|0;a[t+ -7|0]=a[y]|0;w=w+1|0;if((w|0)==(k|0)){break}else{t=t+ -8|0;x=x+ -6|0}}}}else if(o<<24>>24==8?(k|0)!=0:0){o=b[h+2>>1]&255;x=b[h+4>>1]&255;t=b[h+6>>1]&255;w=g+((k<<2)+ -1)|0;F=0;E=g+((c[f+4>>2]|0)+ -1)|0;while(1){D=E+ -2|0;r=E+ -1|0;if(((a[D]|0)==o<<24>>24?(a[r]|0)==x<<24>>24:0)?(a[E]|0)==t<<24>>24:0){G=0}else{G=-1}a[w]=G;a[w+ -1|0]=a[E]|0;a[w+ -2|0]=a[r]|0;a[w+ -3|0]=a[D]|0;F=F+1|0;if((F|0)==(k|0)){break}else{w=w+ -4|0;E=E+ -3|0}}}a[l]=6;a[f+10|0]=4;E=d[n]<<2;a[f+11|0]=E;n=E&252;if(n>>>0>7){H=aa(n>>>3,k)|0}else{H=((aa(n,k)|0)+7|0)>>>3}c[f+4>>2]=H;i=j;return}else if(m<<24>>24==0){m=(h|0)!=0;if(m){I=e[h+8>>1]|0}else{I=0}h=f+9|0;H=a[h]|0;if((H&255)<8){n=H&255;if((n|0)==4){E=(I&15)*17|0;w=k+ -1|0;if((k|0)==0){J=E}else{F=g+w|0;G=0;t=k<<2&4;x=g+(w>>>1)|0;while(1){w=(d[x]|0)>>>t&15;a[F]=w<<4|w;w=(t|0)==4;o=G+1|0;if((o|0)==(k|0)){J=E;break}else{F=F+ -1|0;G=o;t=w?0:4;x=w?x+ -1|0:x}}}}else if((n|0)==2){x=(I&3)*85|0;t=k+ -1|0;if((k|0)==0){J=x}else{G=g+t|0;F=0;E=(k<<1)+6&6^6;w=g+(t>>>2)|0;while(1){t=(d[w]|0)>>>E&3;a[G]=t<<2|t|t<<4|t<<6;t=(E|0)==6;o=F+1|0;if((o|0)==(k|0)){J=x;break}else{G=G+ -1|0;F=o;E=t?0:E+2|0;w=t?w+ -1|0:w}}}}else if((n|0)==1){n=0-(I&1)&255;w=k+ -1|0;if((k|0)==0){J=n}else{E=g+w|0;F=0;G=k+7&7^7;x=g+(w>>>3)|0;while(1){a[E]=((d[x]&1<<G|0)!=0)<<31>>31;w=(G|0)==7;t=F+1|0;if((t|0)==(k|0)){J=n;break}else{E=E+ -1|0;F=t;G=w?0:G+1|0;x=w?x+ -1|0:x}}}}else{J=I}a[h]=8;a[f+11|0]=8;c[f+4>>2]=k;K=8;L=J}else{K=H;L=I}if(!m){i=j;return}if(K<<24>>24==16){m=c[f+4>>2]|0;if((k|0)!=0){I=L>>>8&255;H=L&255;J=g+((m<<1)+ -1)|0;x=0;G=g+(m+ -1)|0;while(1){m=G+ -1|0;if((a[m]|0)==I<<24>>24?(a[G]|0)==H<<24>>24:0){a[J]=0;a[J+ -1|0]=0}else{a[J]=-1;a[J+ -1|0]=-1}a[J+ -2|0]=a[G]|0;a[J+ -3|0]=a[m]|0;x=x+1|0;if((x|0)==(k|0)){break}else{J=J+ -4|0;G=G+ -2|0}}}}else if(K<<24>>24==8?(k|0)!=0:0){K=L&255;L=g+((k<<1)+ -1)|0;G=0;J=g+(k+ -1)|0;while(1){a[L]=((a[J]|0)!=K<<24>>24)<<31>>31;a[L+ -1|0]=a[J]|0;G=G+1|0;if((G|0)==(k|0)){break}else{L=L+ -2|0;J=J+ -1|0}}}a[l]=4;a[f+10|0]=2;l=d[h]<<1;a[f+11|0]=l;h=l&254;if(h>>>0>7){M=aa(h>>>3,k)|0}else{M=((aa(h,k)|0)+7|0)>>>3}c[f+4>>2]=M;i=j;return}else{i=j;return}}function km(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;g=c[b>>2]|0;h=b+9|0;j=a[h]|0;if(!((j&255)>7)){i=f;return}k=b+8|0;l=a[k]|0;if(!((l&2)==0)){i=f;return}do{if(l<<24>>24==0){if(j<<24>>24==8){m=g+ -1|0;if((g|0)==0){break}n=e+(m+(g<<1))|0;o=0;p=e+m|0;while(1){a[n]=a[p]|0;a[n+ -1|0]=a[p]|0;a[n+ -2|0]=a[p]|0;o=o+1|0;if((o|0)==(g|0)){break}else{n=n+ -3|0;p=p+ -1|0}}}else{p=(g<<1)+ -1|0;if((g|0)==0){break}n=e+(p+(g<<2))|0;o=0;m=e+p|0;while(1){a[n]=a[m]|0;p=m+ -1|0;a[n+ -1|0]=a[p]|0;a[n+ -2|0]=a[m]|0;a[n+ -3|0]=a[p]|0;a[n+ -4|0]=a[m]|0;a[n+ -5|0]=a[p]|0;o=o+1|0;if((o|0)==(g|0)){break}else{n=n+ -6|0;m=m+ -2|0}}}}else if(l<<24>>24==4){if(j<<24>>24==8){m=g<<1;n=m+ -1|0;if((g|0)==0){break}o=e+(n+m)|0;m=0;p=e+n|0;while(1){n=p+ -1|0;a[o]=a[p]|0;a[o+ -1|0]=a[n]|0;a[o+ -2|0]=a[n]|0;a[o+ -3|0]=a[n]|0;m=m+1|0;if((m|0)==(g|0)){break}else{o=o+ -4|0;p=p+ -2|0}}}else{p=g<<2;o=p+ -1|0;if((g|0)==0){break}m=e+(o+p)|0;p=0;n=e+o|0;while(1){a[m]=a[n]|0;o=n+ -2|0;a[m+ -1|0]=a[n+ -1|0]|0;a[m+ -2|0]=a[o]|0;q=n+ -3|0;a[m+ -3|0]=a[q]|0;a[m+ -4|0]=a[o]|0;a[m+ -5|0]=a[q]|0;a[m+ -6|0]=a[o]|0;a[m+ -7|0]=a[q]|0;p=p+1|0;if((p|0)==(g|0)){break}else{m=m+ -8|0;n=n+ -4|0}}}}}while(0);e=b+10|0;j=(d[e]|0)+2|0;a[e]=j;a[k]=d[k]|0|2;k=aa(d[h]|0,j&255)|0;a[b+11|0]=k;j=k&255;if(j>>>0>7){r=aa(j>>>3,g)|0}else{r=((aa(j,g)|0)+7|0)>>>3}c[b+4>>2]=r;i=f;return}function lm(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;f=b+441|0;g=a[f]|0;h=g&255;if((g&255)>7){i=e;return}j=8-h|0;c[b+800>>2]=17;am(b,d+h+32|0,j);a[f]=8;f=d+32|0;if((Ik(f,h,j)|0)==0){if(!((g&255)<3)){i=e;return}d=b+208|0;c[d>>2]=c[d>>2]|4096;i=e;return}if(!((g&255)<4)){tl(b,15376)}if((Ik(f,h,j+ -4|0)|0)==0){tl(b,15376)}else{tl(b,15360)}}function mm(a){a=a|0;var b=0,e=0,f=0,g=0,h=0,j=0,k=0;b=i;i=i+16|0;e=b;f=a+800|0;c[f>>2]=33;am(a,e,8);g=(d[e+1|0]|0)<<16|(d[e]|0)<<24|(d[e+2|0]|0)<<8|(d[e+3|0]|0);if((g|0)<0){tl(a,15320)}h=e+4|0;j=a+376|0;c[j>>2]=(d[e+5|0]|0)<<16|(d[h]|0)<<24|(d[e+6|0]|0)<<8|(d[e+7|0]|0);Lk(a);Mk(a,h,4);h=c[j>>2]|0;j=1;while(1){e=h&255;if((e+ -65|0)>>>0>57|(e+ -91|0)>>>0<6){k=5;break}e=j+1|0;if((e|0)<5){h=h>>>8;j=e}else{k=7;break}}if((k|0)==5){zl(a,16448)}else if((k|0)==7){c[f>>2]=65;i=b;return g|0}return 0}function nm(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+1040|0;f=e+1024|0;g=e;if((b|0)!=0){if((a|0)==0){h=b;while(1){j=h>>>0<1024?h:1024;if((h|0)==(j|0)){break}else{h=h-j|0}}}else{h=b;while(1){b=h>>>0<1024?h:1024;am(a,g,b);Mk(a,g,b);if((h|0)==(b|0)){break}else{h=h-b|0}}}}h=a+376|0;g=a+212|0;b=c[g>>2]|0;if((c[h>>2]&536870912|0)==0){c[a+800>>2]=129;am(a,f,4);if((b&2048|0)!=0){k=0;i=e;return k|0}}else{c[a+800>>2]=129;am(a,f,4);if((b&768|0)==768){k=0;i=e;return k|0}}if(((d[f+1|0]|0)<<16|(d[f]|0)<<24|(d[f+2|0]|0)<<8|(d[f+3|0]|0)|0)==(c[a+412>>2]|0)){k=0;i=e;return k|0}f=c[g>>2]|0;if((c[h>>2]&536870912|0)==0){if((f&1024|0)==0){zl(a,15416)}}else{if((f&512|0)!=0){zl(a,15416)}}yl(a,15416);k=1;i=e;return k|0}function om(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=i;i=i+16|0;h=g;j=b+208|0;k=c[j>>2]|0;if((k&1|0)!=0){zl(b,15432)}if((f|0)!=13){zl(b,15448)}c[j>>2]=k|1;if((b|0)!=0){am(b,h,13);Mk(b,h,13)}nm(b,0)|0;k=(d[h+1|0]|0)<<16|(d[h]|0)<<24|(d[h+2|0]|0)<<8|(d[h+3|0]|0);if((k|0)<0){tl(b,15320)}j=(d[h+5|0]|0)<<16|(d[h+4|0]|0)<<24|(d[h+6|0]|0)<<8|(d[h+7|0]|0);if((j|0)<0){tl(b,15320)}f=a[h+8|0]|0;l=f&255;m=a[h+9|0]|0;n=m&255;o=a[h+10|0]|0;p=o&255;q=a[h+11|0]|0;r=q&255;s=a[h+12|0]|0;h=s&255;c[b+348>>2]=k;c[b+352>>2]=j;a[b+436|0]=f;a[b+432|0]=s;a[b+435|0]=m;a[b+712|0]=q;a[b+744|0]=o;if((n|0)==6){a[b+439|0]=4;t=4}else if((n|0)==4){a[b+439|0]=2;t=2}else if((n|0)==2){a[b+439|0]=3;t=3}else{a[b+439|0]=1;t=1}o=aa(t,l)|0;a[b+438|0]=o;t=o&255;if(t>>>0>7){u=aa(t>>>3,k)|0;v=b+364|0;c[v>>2]=u;$m(b,e,k,j,l,n,h,p,r);i=g;return}else{u=((aa(t,k)|0)+7|0)>>>3;v=b+364|0;c[v>>2]=u;$m(b,e,k,j,l,n,h,p,r);i=g;return}}function pm(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+784|0;h=g+8|0;j=g;k=d+208|0;l=c[k>>2]|0;if((l&1|0)==0){zl(d,15456)}if((l&2|0)!=0){zl(d,15472)}if((l&4|0)!=0){nm(d,f)|0;Dl(d,15432);i=g;return}c[k>>2]=l|2;l=d+435|0;if((a[l]&2)==0){nm(d,f)|0;Dl(d,15488);i=g;return}if(!(f>>>0<769&((f>>>0)%3|0|0)==0)){nm(d,f)|0;if((a[l]|0)==3){zl(d,15448)}Dl(d,15448);i=g;return}l=(f|0)/3|0;if((f|0)>2){f=j+1|0;k=j+2|0;if((d|0)==0){m=0;n=h;while(1){a[n]=a[j]|0;a[n+1|0]=a[f]|0;a[n+2|0]=a[k]|0;m=m+1|0;if((m|0)>=(l|0)){break}else{n=n+3|0}}}else{n=0;m=h;while(1){am(d,j,3);Mk(d,j,3);a[m]=a[j]|0;a[m+1|0]=a[f]|0;a[m+2|0]=a[k]|0;n=n+1|0;if((n|0)>=(l|0)){break}else{m=m+3|0}}}}nm(d,0)|0;en(d,e,h,l);l=d+428|0;do{if((b[l>>1]|0)==0){if((e|0)==0){i=g;return}h=e+8|0;m=c[h>>2]|0;if((m&16|0)==0){o=m}else{b[l>>1]=0;p=h;q=24}}else{b[l>>1]=0;if((e|0)!=0){p=e+8|0;q=24;break}Dl(d,15520);i=g;return}}while(0);if((q|0)==24){b[e+22>>1]=0;Dl(d,15520);o=c[p>>2]|0}if((o&64|0)!=0){Dl(d,15544)}if((c[e+8>>2]&32|0)==0){i=g;return}Dl(d,15568);i=g;return}function qm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;b=i;e=a+208|0;f=c[e>>2]|0;if((f&5|0)!=5){zl(a,15432)}c[e>>2]=f|24;nm(a,d)|0;if((d|0)==0){i=b;return}Dl(a,15448);i=b;return}function rm(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f;h=c[a+208>>2]|0;if((h&1|0)==0){zl(a,15456)}if((h&6|0)!=0){nm(a,e)|0;Dl(a,15432);i=f;return}if((e|0)!=4){nm(a,e)|0;Dl(a,15448);i=f;return}if((a|0)!=0){am(a,g,4);Mk(a,g,4)}if((nm(a,0)|0)!=0){i=f;return}e=(d[g+1|0]|0)<<16|(d[g]|0)<<24|(d[g+2|0]|0)<<8|(d[g+3|0]|0);Vk(a,a+824|0,(e|0)>-1?e:-1);Xk(a,b);i=f;return}function sm(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;g=i;i=i+16|0;h=g;j=c[b+208>>2]|0;if((j&1|0)==0){zl(b,15456)}if((j&6|0)!=0){nm(b,f)|0;Dl(b,15432);i=g;return}if((e|0)!=0?(c[e+8>>2]&2|0)!=0:0){nm(b,f)|0;Dl(b,15472);i=g;return}j=b+435|0;if((a[j]|0)==3){k=8;l=3}else{k=a[b+436|0]|0;l=d[b+439|0]|0}if((l|0)!=(f|0)|f>>>0>4){Dl(b,15448);nm(b,f)|0;i=g;return}l=h+3|0;m=h+2|0;n=h+1|0;nA(h|0,k|0,4)|0;if((b|0)!=0){am(b,h,f);Mk(b,h,f)}if((nm(b,0)|0)!=0){i=g;return}a:do{if((f|0)!=0){o=0;while(1){p=a[h+o|0]|0;o=o+1|0;if(p<<24>>24==0|(p&255)>(k&255)){break}if(!(o>>>0<f>>>0)){break a}}Dl(b,15448);i=g;return}}while(0);f=a[h]|0;h=b+516|0;if((a[j]&2)==0){nA(h|0,f|0,4)|0;a[b+520|0]=a[n]|0}else{a[h]=f;a[b+517|0]=a[n]|0;a[b+518|0]=a[m]|0;a[b+520|0]=a[l]|0}fn(b,e,h);i=g;return}function tm(a,f,g){a=a|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;h=i;i=i+64|0;j=h+32|0;k=h;l=c[a+208>>2]|0;if((l&1|0)==0){zl(a,15456)}if((l&6|0)!=0){nm(a,g)|0;Dl(a,15432);i=h;return}if((g|0)!=32){nm(a,g)|0;Dl(a,15448);i=h;return}if((a|0)!=0){am(a,j,32);Mk(a,j,32)}if((nm(a,0)|0)!=0){i=h;return}g=(d[j+1|0]|0)<<16|(d[j]|0)<<24|(d[j+2|0]|0)<<8|(d[j+3|0]|0);l=k+24|0;c[l>>2]=(g|0)>-1?g:-1;g=(d[j+5|0]|0)<<16|(d[j+4|0]|0)<<24|(d[j+6|0]|0)<<8|(d[j+7|0]|0);m=k+28|0;c[m>>2]=(g|0)>-1?g:-1;g=(d[j+9|0]|0)<<16|(d[j+8|0]|0)<<24|(d[j+10|0]|0)<<8|(d[j+11|0]|0);c[k>>2]=(g|0)>-1?g:-1;g=(d[j+13|0]|0)<<16|(d[j+12|0]|0)<<24|(d[j+14|0]|0)<<8|(d[j+15|0]|0);n=(g|0)>-1?g:-1;c[k+4>>2]=n;g=(d[j+17|0]|0)<<16|(d[j+16|0]|0)<<24|(d[j+18|0]|0)<<8|(d[j+19|0]|0);o=(g|0)>-1?g:-1;c[k+8>>2]=o;g=(d[j+21|0]|0)<<16|(d[j+20|0]|0)<<24|(d[j+22|0]|0)<<8|(d[j+23|0]|0);p=(g|0)>-1?g:-1;c[k+12>>2]=p;g=(d[j+25|0]|0)<<16|(d[j+24|0]|0)<<24|(d[j+26|0]|0)<<8|(d[j+27|0]|0);q=(g|0)>-1?g:-1;c[k+16>>2]=q;g=(d[j+29|0]|0)<<16|(d[j+28|0]|0)<<24|(d[j+30|0]|0)<<8|(d[j+31|0]|0);j=(g|0)>-1?g:-1;c[k+20>>2]=j;if(((!((c[l>>2]|0)==-1)?!((c[m>>2]|0)==-1):0)?!((c[k>>2]|0)==-1|(n|0)==-1|(o|0)==-1|(p|0)==-1):0)?!((q|0)==-1|(j|0)==-1):0){j=a+898|0;q=e[j>>1]|0;if((q&32768|0)!=0){i=h;return}if((q&16|0)==0){b[j>>1]=q|16;Yk(a,a+824|0,k,1)|0;Xk(a,f);i=h;return}else{b[j>>1]=q|32768;Xk(a,f);Dl(a,15472);i=h;return}}Dl(a,15592);i=h;return}function um(a,f,g){a=a|0;f=f|0;g=g|0;var h=0,j=0,k=0;h=i;i=i+16|0;j=h;k=c[a+208>>2]|0;if((k&1|0)==0){zl(a,15456)}if((k&6|0)!=0){nm(a,g)|0;Dl(a,15432);i=h;return}if((g|0)!=1){nm(a,g)|0;Dl(a,15448);i=h;return}if((a|0)!=0){am(a,j,1);Mk(a,j,1)}if((nm(a,0)|0)!=0){i=h;return}g=a+898|0;k=e[g>>1]|0;if((k&32768|0)!=0){i=h;return}if((k&4|0)==0){_k(a,a+824|0,d[j]|0)|0;Xk(a,f);i=h;return}else{b[g>>1]=k|32768;Xk(a,f);Dl(a,15608);i=h;return}}function vm(f,g,h){f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;j=i;i=i+1248|0;k=j+4|0;l=j+1164|0;m=j+1032|0;n=j+8|0;o=j;c[k>>2]=h;p=c[f+208>>2]|0;if((p&1|0)==0){zl(f,15456)}if((p&6|0)!=0){nm(f,h)|0;Dl(f,15432);i=j;return}if(h>>>0<9){nm(f,h)|0;Dl(f,15632);i=j;return}p=f+824|0;q=f+898|0;r=e[q>>1]|0;if((r&32768|0)!=0){nm(f,h)|0;i=j;return}do{if((r&4|0)==0){s=h>>>0<81?h:81;if((f|0)!=0){am(f,l,s);Mk(f,l,s)}t=h-s|0;c[k>>2]=t;if((s|0)!=0){u=0;while(1){v=u+1|0;if((a[l+u|0]|0)==0){w=1;x=u;break}y=v>>>0<80;if(y&v>>>0<s>>>0){u=v}else{w=y;x=v;break}}if((x|0)!=0&w){u=x+1|0;if(u>>>0<s>>>0?(a[l+u|0]|0)==0:0){v=x+2|0;if((wm(f,1766015824)|0)!=0){z=t;A=c[f+248>>2]|0;B=44;break}c[o>>2]=132;c[f+224>>2]=l+v;c[f+228>>2]=s-v;xm(f,n,k,m,o,0);a:do{if((c[o>>2]|0)==0){v=d[m+1|0]<<16|d[m]<<24|d[m+2|0]<<8|d[m+3|0];if((bl(f,p,l,v)|0)!=0?(cl(f,p,l,v,m,d[f+435|0]|0)|0)!=0:0){y=a[m+128|0]|0;C=a[m+129|0]|0;D=a[m+130|0]|0;E=a[m+131|0]|0;F=f+788|0;G=c[F>>2]|0;if((G|0)!=0){H=f+792|0;if((c[H>>2]|0)>>>0<v>>>0){c[F>>2]=0;c[H>>2]=0;Ql(f,G);B=25}else{I=G}}else{B=25}if((B|0)==25){G=Tl(f,v)|0;if((G|0)==0){J=15672;K=1;break}c[F>>2]=G;c[f+792>>2]=v;I=G}lA(I|0,m|0,132)|0;G=((C&255)<<16|(y&255)<<24|(D&255)<<8|E&255)*12|0;c[o>>2]=G;xm(f,n,k,I+132|0,o,0);if((c[o>>2]|0)!=0){J=c[f+248>>2]|0;K=1;break}if((dl(f,p,l,v,I)|0)!=0){c[o>>2]=v+ -132-G;xm(f,n,k,I+(G+132)|0,o,1);G=c[k>>2]|0;E=(G|0)==0;if(!E?(c[f+212>>2]&1048576|0)==0:0){J=15648;K=1;break}if((c[o>>2]|0)==0){if(!E){yl(f,15648)}nm(f,G)|0;el(f,p,I,c[f+272>>2]|0);do{if((g|0)!=0){Rk(f,g,16,0);G=Tl(f,u)|0;c[g+116>>2]=G;if((G|0)==0){b[q>>1]=e[q>>1]|32768;Xk(f,g);J=15672;K=0;break a}else{lA(G|0,l|0,u|0)|0;c[g+124>>2]=v;c[g+120>>2]=I;c[F>>2]=0;G=g+232|0;c[G>>2]=c[G>>2]|16;G=g+8|0;c[G>>2]=c[G>>2]|4096;Xk(f,g);break}}}while(0);c[f+220>>2]=0;i=j;return}else{J=15688;K=1}}else{J=0;K=1}}else{J=0;K=1}}else{J=c[f+248>>2]|0;K=1}}while(0);c[f+220>>2]=0;if(K){z=c[k>>2]|0;A=J;B=44}else{L=J}}else{z=t;A=15704;B=44}}else{z=t;A=15728;B=44}}else{z=t;A=15728;B=44}}else{z=h;A=15608;B=44}}while(0);if((B|0)==44){nm(f,z)|0;L=A}b[q>>1]=e[q>>1]|32768;Xk(f,g);if((L|0)==0){i=j;return}Dl(f,L);i=j;return}function wm(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+64|0;f=e;g=b+220|0;h=c[g>>2]|0;if((h|0)!=0){a[f]=h>>>24;a[f+1|0]=h>>>16;a[f+2|0]=h>>>8;a[f+3|0]=h;ul(f,64,4,17120)|0;yl(b,f);c[g>>2]=0}f=b+224|0;c[f>>2]=0;c[b+228>>2]=0;c[b+236>>2]=0;c[b+240>>2]=0;h=b+212|0;if((c[h>>2]&2|0)==0){j=vn(f,17136,56)|0;if((j|0)==0){c[h>>2]=c[h>>2]|2;k=7}else{l=j;k=8}}else{j=un(f)|0;if((j|0)==0){k=7}else{l=j;k=8}}if((k|0)==7){c[g>>2]=d;m=0;i=e;return m|0}else if((k|0)==8){Uk(b,l);m=l;i=e;return m|0}return 0}function xm(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=i;if((c[a+220>>2]|0)!=(c[a+376>>2]|0)){c[a+248>>2]=17056;i=h;return}j=a+224|0;c[a+236>>2]=e;e=a+240|0;c[e>>2]=0;k=a+228|0;l=(g|0)!=0?4:2;g=1024;while(1){if((c[k>>2]|0)==0){m=c[d>>2]|0;n=g>>>0>m>>>0?m:g;c[d>>2]=m-n;if((n|0)!=0){am(a,b,n);Mk(a,b,n)}c[j>>2]=b;c[k>>2]=n;o=n}else{o=g}if((c[e>>2]|0)==0){n=c[f>>2]|0;c[f>>2]=0;c[e>>2]=n}n=wn(j,(c[d>>2]|0)==0?l:0)|0;if((n|0)!=0){p=n;break}if((c[f>>2]|0)!=0){g=o;continue}if((c[e>>2]|0)==0){p=0;break}else{g=o}}c[f>>2]=(c[f>>2]|0)+(c[e>>2]|0);c[e>>2]=0;Uk(a,p);i=h;return}function ym(e,f,g){e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;h=i;i=i+16|0;j=h;k=e+756|0;l=c[k>>2]|0;if((l|0)==1){nm(e,g)|0;i=h;return}else if((l|0)!=0){m=3}if((m|0)==3?(n=l+ -1|0,c[k>>2]=n,(n|0)==1):0){wl(e,15744);nm(e,g)|0;i=h;return}n=c[e+208>>2]|0;if((n&1|0)==0){zl(e,15456)}if((n&4|0)!=0){nm(e,g)|0;Dl(e,15432);i=h;return}n=g+1|0;k=e+788|0;l=c[k>>2]|0;if((l|0)!=0){o=e+792|0;if((c[o>>2]|0)>>>0<n>>>0){c[k>>2]=0;c[o>>2]=0;Ql(e,l);m=12}else{p=l;m=15}}else{m=12}do{if((m|0)==12){l=Tl(e,n)|0;if((l|0)!=0){c[k>>2]=l;c[e+792>>2]=n;if((e|0)==0){q=l;break}else{p=l;m=15;break}}nm(e,g)|0;Dl(e,15672);i=h;return}}while(0);if((m|0)==15){am(e,p,g);Mk(e,p,g);q=p}if((nm(e,0)|0)!=0){i=h;return}a[q+g|0]=0;p=q;while(1){r=p+1|0;if((a[p]|0)==0){break}else{p=r}}if(r>>>0>(q+(g+ -2)|0)>>>0){wl(e,15784);i=h;return}m=p+2|0;p=a[r]|0;a[j+4|0]=p;r=p<<24>>24==8;p=r?6:10;n=q-m+g|0;if(((n>>>0)%(p>>>0)|0|0)!=0){wl(e,15808);i=h;return}g=(n>>>0)/(p>>>0)|0;if(g>>>0>429496729){wl(e,15840);i=h;return}c[j+12>>2]=g;p=Wl(e,g*10|0)|0;n=j+8|0;c[n>>2]=p;if((p|0)==0){wl(e,15864);i=h;return}if((g|0)!=0){k=m;m=0;while(1){l=p+(m*10|0)|0;if(r){b[l>>1]=d[k]|0;b[p+(m*10|0)+2>>1]=d[k+1|0]|0;b[p+(m*10|0)+4>>1]=d[k+2|0]|0;b[p+(m*10|0)+6>>1]=d[k+3|0]|0;s=k+4|0}else{b[l>>1]=d[k]<<8|d[k+1|0];b[p+(m*10|0)+2>>1]=d[k+2|0]<<8|d[k+3|0];b[p+(m*10|0)+4>>1]=d[k+4|0]<<8|d[k+5|0];b[p+(m*10|0)+6>>1]=d[k+6|0]<<8|d[k+7|0];s=k+8|0}b[p+(m*10|0)+8>>1]=d[s]<<8|d[s+1|0];m=m+1|0;if((m|0)>=(g|0)){break}else{k=s+2|0}}}c[j>>2]=q;kn(e,f,j,1);Ql(e,c[n>>2]|0);i=h;return}function zm(d,f,g){d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;h=i;i=i+272|0;j=h+8|0;k=h;l=h+2|0;m=c[d+208>>2]|0;if((m&1|0)==0){zl(d,15456)}if((m&4|0)!=0){nm(d,g)|0;Dl(d,15432);i=h;return}if((f|0)!=0?(c[f+8>>2]&16|0)!=0:0){nm(d,g)|0;Dl(d,15472);i=h;return}n=a[d+435|0]|0;if(n<<24>>24==3){if((m&2|0)==0){nm(d,g)|0;Dl(d,15432);i=h;return}if((e[d+420>>1]|0)>>>0<g>>>0|g>>>0>256|(g|0)==0){nm(d,g)|0;Dl(d,15448);i=h;return}if((d|0)!=0){am(d,j,g);Mk(d,j,g)}b[d+428>>1]=g}else if(n<<24>>24==2){if((g|0)!=6){nm(d,g)|0;Dl(d,15448);i=h;return}if((d|0)==0){o=0;p=0;q=0;r=0;s=0;t=0}else{am(d,l,6);Mk(d,l,6);o=a[l]|0;p=a[l+1|0]|0;q=a[l+2|0]|0;r=a[l+3|0]|0;s=a[l+4|0]|0;t=a[l+5|0]|0}b[d+428>>1]=1;b[d+534>>1]=(o&255)<<8|p&255;b[d+536>>1]=(q&255)<<8|r&255;b[d+538>>1]=(s&255)<<8|t&255}else if(n<<24>>24==0){if((g|0)!=2){nm(d,g)|0;Dl(d,15448);i=h;return}if((d|0)==0){u=0;v=0}else{am(d,k,2);Mk(d,k,2);u=a[k]|0;v=a[k+1|0]|0}b[d+428>>1]=1;b[d+540>>1]=(u&255)<<8|v&255}else{nm(d,g)|0;Dl(d,15904);i=h;return}g=d+428|0;if((nm(d,0)|0)==0){jn(d,f,j,e[g>>1]|0,d+532|0);i=h;return}else{b[g>>1]=0;i=h;return}}function Am(e,f,g){e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;h=i;i=i+16|0;j=h+10|0;k=h;l=c[e+208>>2]|0;if((l&1|0)==0){zl(e,15456)}do{if((l&4|0)==0){m=e+435|0;n=a[m]|0;o=n<<24>>24==3;if(o?(l&2|0)==0:0){break}p=(f|0)!=0;if(p?(c[f+8>>2]&32|0)!=0:0){nm(e,g)|0;Dl(e,15472);i=h;return}if(o){q=1}else{q=(n&2)==0?2:6}if((q|0)!=(g|0)){nm(e,g)|0;Dl(e,15448);i=h;return}if((e|0)!=0){am(e,j,g);Mk(e,j,g)}if((nm(e,0)|0)!=0){i=h;return}n=a[m]|0;do{if(!(n<<24>>24==3)){a[k]=0;m=((d[j]|0)<<8|(d[j+1|0]|0))&65535;if((n&2)==0){b[k+8>>1]=m;b[k+6>>1]=m;b[k+4>>1]=m;b[k+2>>1]=m;break}else{b[k+2>>1]=m;b[k+4>>1]=(d[j+2|0]|0)<<8|(d[j+3|0]|0);b[k+6>>1]=(d[j+4|0]|0)<<8|(d[j+5|0]|0);b[k+8>>1]=0;break}}else{m=a[j]|0;a[k]=m;do{if(p?(o=b[f+20>>1]|0,!(o<<16>>16==0)):0){r=m&255;if(r>>>0<(o&65535)>>>0){o=c[e+416>>2]|0;b[k+2>>1]=d[o+(r*3|0)|0]|0;b[k+4>>1]=d[o+(r*3|0)+1|0]|0;b[k+6>>1]=d[o+(r*3|0)+2|0]|0;break}Dl(e,15936);i=h;return}else{s=23}}while(0);if((s|0)==23){b[k+6>>1]=0;b[k+4>>1]=0;b[k+2>>1]=0}b[k+8>>1]=0}}while(0);Zm(e,f,k);i=h;return}}while(0);nm(e,g)|0;Dl(e,15432);i=h;return}function Bm(a,f,g){a=a|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+528|0;j=h;k=h+512|0;l=c[a+208>>2]|0;if((l&1|0)==0){zl(a,15456)}if((l&6|0)!=2){nm(a,g)|0;Dl(a,15432);i=h;return}if((f|0)!=0?(c[f+8>>2]&64|0)!=0:0){nm(a,g)|0;Dl(a,15472);i=h;return}l=g>>>1;if((l|0)!=(e[a+420>>1]|0|0)|g>>>0>513){nm(a,g)|0;Dl(a,15448);i=h;return}if((l|0)!=0){g=k+1|0;if((a|0)==0){m=0;do{b[j+(m<<1)>>1]=0;m=m+1|0}while(m>>>0<l>>>0)}else{m=0;do{am(a,k,2);Mk(a,k,2);b[j+(m<<1)>>1]=(d[k]|0)<<8|(d[g]|0);m=m+1|0}while(m>>>0<l>>>0)}}if((nm(a,0)|0)!=0){i=h;return}_m(a,f,j);i=h;return}function Cm(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f;h=c[a+208>>2]|0;if((h&1|0)==0){zl(a,15456)}if((h&4|0)!=0){nm(a,e)|0;Dl(a,15432);i=f;return}if((b|0)!=0?(c[b+8>>2]&128|0)!=0:0){nm(a,e)|0;Dl(a,15472);i=f;return}if((e|0)!=9){nm(a,e)|0;Dl(a,15448);i=f;return}if((a|0)!=0){am(a,g,9);Mk(a,g,9)}if((nm(a,0)|0)!=0){i=f;return}dn(a,b,(d[g+1|0]|0)<<16|(d[g]|0)<<24|(d[g+2|0]|0)<<8|(d[g+3|0]|0),(d[g+5|0]|0)<<16|(d[g+4|0]|0)<<24|(d[g+6|0]|0)<<8|(d[g+7|0]|0),d[g+8|0]|0);i=f;return}function Dm(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f;h=c[a+208>>2]|0;if((h&1|0)==0){zl(a,15456)}if((h&4|0)!=0){nm(a,e)|0;Dl(a,15432);i=f;return}if((b|0)!=0?(c[b+8>>2]&256|0)!=0:0){nm(a,e)|0;Dl(a,15472);i=f;return}if((e|0)!=9){nm(a,e)|0;Dl(a,15448);i=f;return}if((a|0)!=0){am(a,g,9);Mk(a,g,9)}if((nm(a,0)|0)!=0){i=f;return}an(a,b,(d[g+1|0]|0)<<16|(d[g]|0)<<24|(d[g+2|0]|0)<<8|(d[g+3|0]|0),(d[g+5|0]|0)<<16|(d[g+4|0]|0)<<24|(d[g+6|0]|0)<<8|(d[g+7|0]|0),d[g+8|0]|0);i=f;return}function Em(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;g=i;h=c[b+208>>2]|0;if((h&1|0)==0){zl(b,15456)}if((h&4|0)!=0){nm(b,f)|0;Dl(b,15432);i=g;return}if((e|0)!=0?(c[e+8>>2]&1024|0)!=0:0){nm(b,f)|0;Dl(b,15472);i=g;return}h=f+1|0;j=b+788|0;k=c[j>>2]|0;if((k|0)!=0){l=b+792|0;if((c[l>>2]|0)>>>0<h>>>0){c[j>>2]=0;c[l>>2]=0;Ql(b,k);m=11}else{n=k;m=14}}else{m=11}do{if((m|0)==11){k=Tl(b,h)|0;if((k|0)!=0){c[j>>2]=k;c[b+792>>2]=h;if((b|0)==0){o=k;break}else{n=k;m=14;break}}nm(b,f)|0;Dl(b,15672);i=g;return}}while(0);if((m|0)==14){am(b,n,f);Mk(b,n,f);o=n}if((nm(b,0)|0)!=0){i=g;return}n=o+f|0;a[n]=0;f=o;while(1){p=f+1|0;if((a[f]|0)==0){break}else{f=p}}if(!(n>>>0>(f+12|0)>>>0)){Dl(b,15448);i=g;return}m=d[f+2|0]<<16|d[p]<<24|d[f+3|0]<<8|d[f+4|0];p=d[f+6|0]<<16|d[f+5|0]<<24|d[f+7|0]<<8|d[f+8|0];h=a[f+9|0]|0;j=a[f+10|0]|0;k=f+11|0;f=h&255;if((h<<24>>24!=0|j<<24>>24==2?(h+ -1<<24>>24&255)>1|j<<24>>24==3:0)?h<<24>>24!=3|j<<24>>24==4:0){if((h&255)>3){Dl(b,15976);q=k}else{q=k}while(1){if((a[q]|0)==0){break}else{q=q+1|0}}h=j&255;l=Wl(b,h<<2)|0;if((l|0)==0){Dl(b,15672);i=g;return}a:do{if(!(j<<24>>24==0)){r=q;s=0;b:while(1){t=r+1|0;c[l+(s<<2)>>2]=t;if(t>>>0>n>>>0){break}else{u=t}while(1){t=u+1|0;if((a[u]|0)==0){break}if(t>>>0>n>>>0){break b}else{u=t}}s=s+1|0;if((s|0)>=(h|0)){break a}else{r=u}}Ql(b,l);Dl(b,16008);i=g;return}}while(0);bn(b,e,o,m,p,f,h,k,l);Ql(b,l);i=g;return}Dl(b,15952);i=g;return}function Fm(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+16|0;h=g+4|0;j=g;k=c[b+208>>2]|0;if((k&1|0)==0){zl(b,15456)}if((k&4|0)!=0){nm(b,f)|0;Dl(b,15432);i=g;return}if((e|0)!=0?(c[e+8>>2]&16384|0)!=0:0){nm(b,f)|0;Dl(b,15472);i=g;return}if(f>>>0<4){nm(b,f)|0;Dl(b,15448);i=g;return}k=f+1|0;l=b+788|0;m=c[l>>2]|0;if((m|0)!=0){n=b+792|0;if((c[n>>2]|0)>>>0<k>>>0){c[l>>2]=0;c[n>>2]=0;Ql(b,m);o=13}else{p=m;o=16}}else{o=13}do{if((o|0)==13){m=Tl(b,k)|0;if((m|0)!=0){c[l>>2]=m;c[b+792>>2]=k;if((b|0)==0){q=m;break}else{p=m;o=16;break}}Dl(b,15672);nm(b,f)|0;i=g;return}}while(0);if((o|0)==16){am(b,p,f);Mk(b,p,f);q=p}a[q+f|0]=0;if((nm(b,0)|0)!=0){i=g;return}if(!(((a[q]|0)+ -1<<24>>24&255)<2)){Dl(b,16024);i=g;return}c[h>>2]=1;c[j>>2]=0;if(((il(q,f,j,h)|0)!=0?(p=c[h>>2]|0,p>>>0<f>>>0):0)?(o=p+1|0,c[h>>2]=o,(a[q+p|0]|0)==0):0){if((c[j>>2]&392|0)!=264){Dl(b,16064);i=g;return}c[j>>2]=0;p=(il(q,f,j,h)|0)!=0;if(!(p&(c[h>>2]|0)==(f|0))){Dl(b,16088);i=g;return}if((c[j>>2]&392|0)==264){cn(b,e,d[q]|0,q+1|0,q+o|0);i=g;return}else{Dl(b,16112);i=g;return}}Dl(b,16040);i=g;return}function Gm(e,f,g){e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h+8|0;k=h;l=e+208|0;m=c[l>>2]|0;if((m&1|0)==0){zl(e,15456)}if((f|0)!=0?(c[f+8>>2]&512|0)!=0:0){nm(e,g)|0;Dl(e,15472);i=h;return}if((m&4|0)!=0){c[l>>2]=m|8}if((g|0)!=7){nm(e,g)|0;Dl(e,15448);i=h;return}if((e|0)!=0){am(e,j,7);Mk(e,j,7)}if((nm(e,0)|0)!=0){i=h;return}a[k+6|0]=a[j+6|0]|0;a[k+5|0]=a[j+5|0]|0;a[k+4|0]=a[j+4|0]|0;a[k+3|0]=a[j+3|0]|0;a[k+2|0]=a[j+2|0]|0;b[k>>1]=(d[j]|0)<<8|(d[j+1|0]|0);hn(e,f,k);i=h;return}function Hm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+32|0;g=f;h=b+756|0;j=c[h>>2]|0;if((j|0)==1){nm(b,e)|0;i=f;return}else if((j|0)!=0){k=3}if((k|0)==3?(l=j+ -1|0,c[h>>2]=l,(l|0)==1):0){nm(b,e)|0;Dl(b,16136);i=f;return}l=b+208|0;h=c[l>>2]|0;if((h&1|0)==0){zl(b,15456)}if((h&4|0)!=0){c[l>>2]=h|8}h=e+1|0;l=b+788|0;j=c[l>>2]|0;if((j|0)!=0){m=b+792|0;if((c[m>>2]|0)>>>0<h>>>0){c[l>>2]=0;c[m>>2]=0;Ql(b,j);k=12}else{n=j;k=15}}else{k=12}do{if((k|0)==12){j=Tl(b,h)|0;if((j|0)!=0){c[l>>2]=j;c[b+792>>2]=h;if((b|0)==0){o=j;break}else{n=j;k=15;break}}yl(b,17080);Dl(b,15672);i=f;return}}while(0);if((k|0)==15){am(b,n,e);Mk(b,n,e);o=n}if((nm(b,0)|0)!=0){i=f;return}n=o+e|0;a[n]=0;e=o;while(1){p=e+1|0;if((a[e]|0)==0){break}else{e=p}}k=(e|0)==(n|0)?e:p;c[g>>2]=-1;c[g+4>>2]=o;c[g+20>>2]=0;c[g+24>>2]=0;c[g+16>>2]=0;c[g+8>>2]=k;c[g+12>>2]=gA(k|0)|0;if((gn(b,d,g,1)|0)==0){i=f;return}wl(b,16160);i=f;return}function Im(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;i=i+32|0;g=f+28|0;h=f;j=b+756|0;k=c[j>>2]|0;if((k|0)==1){nm(b,e)|0;i=f;return}else if((k|0)!=0){l=3}if((l|0)==3?(m=k+ -1|0,c[j>>2]=m,(m|0)==1):0){nm(b,e)|0;Dl(b,16136);i=f;return}m=b+208|0;j=c[m>>2]|0;if((j&1|0)==0){zl(b,15456)}if((j&4|0)!=0){c[m>>2]=j|8}j=b+788|0;m=c[j>>2]|0;if((m|0)!=0){k=b+792|0;if((c[k>>2]|0)>>>0<e>>>0){c[j>>2]=0;c[k>>2]=0;Ql(b,m);l=12}else{n=m;l=15}}else{l=12}do{if((l|0)==12){m=Tl(b,e)|0;if((m|0)!=0){c[j>>2]=m;c[b+792>>2]=e;if((b|0)==0){o=m;break}else{n=m;l=15;break}}nm(b,e)|0;Dl(b,15672);i=f;return}}while(0);if((l|0)==15){am(b,n,e);Mk(b,n,e);o=n}if((nm(b,0)|0)!=0){i=f;return}if((e|0)!=0){n=0;while(1){l=n+1|0;if((a[o+n|0]|0)==0){p=n;break}if(l>>>0<e>>>0){n=l}else{p=l;break}}if(!(p>>>0>79|(p|0)==0)){if(!((p+3|0)>>>0>e>>>0)){if((a[o+(p+1)|0]|0)==0){c[g>>2]=-1;o=p+2|0;if((Jm(b,e,o,g)|0)==1){e=c[j>>2]|0;j=c[g>>2]|0;a[e+(j+o)|0]=0;c[h>>2]=0;c[h+4>>2]=e;c[h+8>>2]=e+o;c[h+12>>2]=j;c[h+16>>2]=0;c[h+20>>2]=0;c[h+24>>2]=0;j=(gn(b,d,h,1)|0)==0;q=j?0:16240}else{q=c[b+248>>2]|0}if((q|0)==0){i=f;return}else{r=q}}else{r=16208}}else{r=15688}}else{r=15728}}else{r=15728}Dl(b,r);i=f;return}function Jm(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;g=i;i=i+16|0;h=g;j=c[b+760>>2]|0;if(!((j|0)==-1|(j|0)==0)){k=e+1|0;if(j>>>0<k>>>0){Uk(b,-4);l=-4;i=g;return l|0}else{m=k;n=j}}else{m=e+1|0;n=-1}j=n-m|0;if(j>>>0<(c[f>>2]|0)>>>0){c[f>>2]=j}j=b+376|0;m=wm(b,c[j>>2]|0)|0;if((m|0)==1){l=-7;i=g;return l|0}else if((m|0)==0){n=d-e|0;c[h>>2]=n;d=b+788|0;k=Ym(b,c[j>>2]|0,(c[d>>2]|0)+e|0,h,0,f)|0;do{if((k|0)==1){if((un(b+224|0)|0)!=0){Uk(b,1);o=-7;break}p=c[f>>2]|0;q=e+1+p|0;r=Tl(b,q)|0;if((r|0)==0){Uk(b,-4);o=-4;break}s=Ym(b,c[j>>2]|0,(c[d>>2]|0)+e|0,h,r+e|0,f)|0;if((s|0)==0){t=-7;u=r}else if((s|0)==1){if((p|0)==(c[f>>2]|0)){a[r+(p+e)|0]=0;p=c[d>>2]|0;if((e|0)!=0){lA(r|0,p|0,e|0)|0}c[d>>2]=r;c[b+792>>2]=q;t=1;u=p}else{t=-7;u=r}}else{t=s;u=r}Ql(b,u);if((t|0)!=1|(n|0)==(c[h>>2]|0)){o=t}else{Dl(b,15648);o=1}}else{o=(k|0)==0?-7:k}}while(0);c[b+220>>2]=0;l=o;i=g;return l|0}else{l=m;i=g;return l|0}return 0}function Km(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;f=i;i=i+32|0;g=f+28|0;h=f;j=b+756|0;k=c[j>>2]|0;if((k|0)==1){nm(b,e)|0;i=f;return}else if((k|0)!=0){l=3}if((l|0)==3?(m=k+ -1|0,c[j>>2]=m,(m|0)==1):0){nm(b,e)|0;Dl(b,16136);i=f;return}m=b+208|0;j=c[m>>2]|0;if((j&1|0)==0){zl(b,15456)}if((j&4|0)!=0){c[m>>2]=j|8}j=e+1|0;m=b+788|0;k=c[m>>2]|0;if((k|0)!=0){n=b+792|0;if((c[n>>2]|0)>>>0<j>>>0){c[m>>2]=0;c[n>>2]=0;Ql(b,k);l=12}else{o=k;l=15}}else{l=12}do{if((l|0)==12){k=Tl(b,j)|0;if((k|0)!=0){c[m>>2]=k;c[b+792>>2]=j;if((b|0)==0){p=k;break}else{o=k;l=15;break}}yl(b,17080);nm(b,e)|0;Dl(b,15672);i=f;return}}while(0);if((l|0)==15){am(b,o,e);Mk(b,o,e);p=o}if((nm(b,0)|0)!=0){i=f;return}a:do{if((e|0)!=0){o=0;while(1){l=o+1|0;if((a[p+o|0]|0)==0){q=o;break}if(l>>>0<e>>>0){o=l}else{q=l;break}}if(!(q>>>0>79|(q|0)==0)){if(!((q+5|0)>>>0>e>>>0)){o=a[p+(q+1)|0]|0;if(o<<24>>24==1){if((a[p+(q+2)|0]|0)!=0){r=16264;break}}else if(!(o<<24>>24==0)){r=16264;break}l=o<<24>>24!=0;c[g>>2]=0;o=q+3|0;b:do{if(o>>>0<e>>>0){j=o;while(1){k=j+1|0;if((a[p+j|0]|0)==0){s=j;break b}if(k>>>0<e>>>0){j=k}else{s=k;break}}}else{s=o}}while(0);j=s+1|0;c:do{if(j>>>0<e>>>0){k=j;while(1){n=k+1|0;if((a[p+k|0]|0)==0){t=k;break c}if(n>>>0<e>>>0){k=n}else{t=n;break}}}else{t=j}}while(0);k=t+1|0;do{if(l|k>>>0>e>>>0){if(!(l&k>>>0<e>>>0)){r=15688;break a}c[g>>2]=-1;if((Jm(b,e,k,g)|0)!=1){n=c[b+248>>2]|0;if((n|0)==0){u=p;break}else{r=n;break a}}else{u=c[m>>2]|0;break}}else{c[g>>2]=e-k;u=p}}while(0);a[u+((c[g>>2]|0)+k)|0]=0;c[h>>2]=l?1:2;c[h+4>>2]=u;c[h+20>>2]=u+o;c[h+24>>2]=u+j;c[h+8>>2]=u+k;c[h+12>>2]=0;c[h+16>>2]=c[g>>2];n=(gn(b,d,h,1)|0)==0;if(n){i=f;return}else{r=n?0:16240}}else{r=15688}}else{r=15728}}else{r=15728}}while(0);Dl(b,r);i=f;return}function Lm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;g=a+684|0;do{if((c[g>>2]|0)==0){if((e|0)==0){h=c[a+688>>2]|0}else{h=e}if((h|0)==3){j=13}else if((h|0)==2?(c[a+376>>2]&536870912|0)!=0:0){j=13}else{j=14}if((j|0)==13){k=(Mm(a,d)|0)==0;l=k?1:h;j=15;break}else if((j|0)==14){nm(a,d)|0;l=h;j=15;break}}else{if((Mm(a,d)|0)!=0){k=Ad[c[g>>2]&127](a,a+764|0)|0;if((k|0)<0){zl(a,16288)}if((k|0)==0){if((e|0)<2){if((c[a+688>>2]|0)<2){yl(a,16312);Al(a,16336);j=16}else{j=16}}else{l=e;j=15}}else{m=1}}else{m=0}}}while(0);if((j|0)==15){if((l|0)==3){j=17}else if((l|0)==2){j=16}else{m=0}}if((j|0)==16){if((c[a+376>>2]&536870912|0)==0){m=0}else{j=17}}do{if((j|0)==17){l=a+756|0;e=c[l>>2]|0;if((e|0)==2){c[l>>2]=1;Dl(a,16136);m=0;break}else if((e|0)==1){m=0;break}else if((e|0)!=0){c[l>>2]=e+ -1}ln(a,b,a+764|0,1);m=1}}while(0);b=a+772|0;j=c[b>>2]|0;if((j|0)!=0){Ql(a,j)}c[b>>2]=0;if((m|0)!=0){i=f;return}if((c[a+376>>2]&536870912|0)==0){zl(a,16416)}else{i=f;return}}function Mm(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;f=b+772|0;g=c[f>>2]|0;if((g|0)!=0){Ql(b,g);c[f>>2]=0}g=c[b+760>>2]|0;if(!((g|0)==-1|(g|0)==0)?g>>>0<d>>>0:0){h=0;j=8}else{j=5}do{if((j|0)==5){g=c[b+376>>2]|0;a[b+764|0]=g>>>24;a[b+765|0]=g>>>16;a[b+766|0]=g>>>8;a[b+767|0]=g;a[b+768|0]=0;c[b+776>>2]=d;a[b+780|0]=c[b+208>>2];if((d|0)==0){c[f>>2]=0;break}else{g=Wl(b,d)|0;c[f>>2]=g;h=g;j=8;break}}}while(0);do{if((j|0)==8){f=(d|0)==0;if((h|0)!=0|f){if(f|(b|0)==0){break}am(b,h,d);Mk(b,h,d);break}else{nm(b,d)|0;Dl(b,17016);k=0;i=e;return k|0}}}while(0);nm(b,0)|0;k=1;i=e;return k|0}function Nm(e,f,g){e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;h=i;j=a[e+443|0]|0;k=j&255;l=c[e+384>>2]|0;m=l+1|0;n=c[e+348>>2]|0;o=a[e+433|0]|0;p=o&255;if(j<<24>>24==0){tl(e,16472)}q=c[e+404>>2]|0;if((q|0)!=0){if((j&255)>7){r=aa(n,k>>>3)|0}else{r=((aa(n,k)|0)+7|0)>>>3}if((q|0)!=(r|0)){tl(e,16504)}}if((n|0)==0){tl(e,16544)}r=aa(n,k)|0;q=r&7;do{if((q|0)!=0){if((j&255)>7){s=aa(n,k>>>3)|0}else{s=(r+7|0)>>>3}t=f+(s+ -1)|0;u=a[t]|0;if((c[e+216>>2]&65536|0)==0){v=u;w=255>>>q;x=t;break}else{v=u;w=255<<q;x=t;break}}else{v=0;w=0;x=0}}while(0);a:do{if((a[e+432|0]|0)!=0?(q=c[e+216>>2]|0,(q&2|0)!=0&(o&255)<6):0){if((g|0)==1){s=p&1;if((s|0)==0){y=83;break}else{z=s}}else if((g|0)==0){z=p&1}else{y=83;break}s=z<<3-((p+1|0)>>>1)&7;if(!(n>>>0>s>>>0)){i=h;return}if((j&255)<8){t=8/(k>>>0)|0;u=(g|0)!=0;do{if((q&65536|0)==0){if(u){if(j<<24>>24==1){A=0}else{A=j<<24>>24==2?1:2}B=16720+(A*12|0)+(p>>>1<<2)+36|0;break}else{if(j<<24>>24==1){C=0}else{C=j<<24>>24==2?1:2}B=16576+(C*24|0)+(p<<2)+72|0;break}}else{if(u){if(j<<24>>24==1){D=0}else{D=j<<24>>24==2?1:2}B=16720+(D*12|0)+(p>>>1<<2)|0;break}else{if(j<<24>>24==1){E=0}else{E=j<<24>>24==2?1:2}B=16576+(E*24|0)+(p<<2)|0;break}}}while(0);u=f;q=c[B>>2]|0;F=n;G=m;while(1){H=q>>>8|q<<24;I=q&255;if((I|0)==255){a[u]=a[G]|0}else if((I|0)!=0){a[u]=d[G]&q|d[u]&(q^255)}if(!(F>>>0>t>>>0)){break a}u=u+1|0;q=H;F=F-t|0;G=G+1|0}}if((k&7|0)!=0){tl(e,16792)}G=k>>>3;t=aa(s,G)|0;F=(aa(n,G)|0)-t|0;q=f+t|0;u=t+1|0;H=l+u|0;if((g|0)==0){J=G}else{I=G<<((6-p|0)>>>1);J=I>>>0>F>>>0?F:I}I=G<<((7-p|0)>>>1);if((J|0)==3){a[q]=a[H]|0;G=t+2|0;a[f+u|0]=a[l+G|0]|0;a[f+G|0]=a[l+(t+3)|0]|0;if(F>>>0>I>>>0){K=q;L=F;M=H}else{i=h;return}while(1){t=M+I|0;G=K+I|0;u=L-I|0;a[G]=a[t]|0;N=I+1|0;a[K+N|0]=a[M+N|0]|0;N=I+2|0;a[K+N|0]=a[M+N|0]|0;if(u>>>0>I>>>0){K=G;L=u;M=t}else{break}}i=h;return}else if((J|0)==1){a[q]=a[H]|0;if(F>>>0>I>>>0){O=q;P=F;Q=H}else{i=h;return}do{O=O+I|0;Q=Q+I|0;P=P-I|0;a[O]=a[Q]|0}while(P>>>0>I>>>0);i=h;return}else if((J|0)==2){s=q;t=F;u=H;do{a[s]=a[u]|0;a[s+1|0]=a[u+1|0]|0;if(!(t>>>0>I>>>0)){y=89;break}u=u+I|0;s=s+I|0;t=t-I|0}while(t>>>0>1);if((y|0)==89){i=h;return}a[s]=a[u]|0;i=h;return}else{if((((J>>>0<16?(t=q,(t&1|0)==0):0)?(G=H,(G&1|0)==0):0)?(J&1|0)==0:0)?(I&1|0)==0:0){if((((t&3|0)==0?(G&3|0)==0:0)?(J&3|0)==0:0)?(I&3|0)==0:0){G=((I-J|0)>>>2)+1|0;t=q;N=F;R=H;do{S=J;T=t;U=R;while(1){c[T>>2]=c[U>>2];S=S+ -4|0;if((S|0)==0){break}else{T=T+4|0;U=U+4|0}}if(!(N>>>0>I>>>0)){y=89;break}t=T+(G<<2)|0;R=U+(G<<2)|0;N=N-I|0}while(!(J>>>0>N>>>0));if((y|0)==89){i=h;return}G=t;u=N;s=R;while(1){a[G]=a[s]|0;u=u+ -1|0;if((u|0)==0){break}else{G=G+1|0;s=s+1|0}}i=h;return}s=((I-J|0)>>>1)+1|0;G=q;u=F;R=H;do{N=J;t=G;S=R;while(1){b[t>>1]=b[S>>1]|0;N=N+ -2|0;if((N|0)==0){break}else{t=t+2|0;S=S+2|0}}if(!(u>>>0>I>>>0)){y=89;break}G=t+(s<<1)|0;R=S+(s<<1)|0;u=u-I|0}while(!(J>>>0>u>>>0));if((y|0)==89){i=h;return}s=G;N=u;U=R;while(1){a[s]=a[U]|0;N=N+ -1|0;if((N|0)==0){break}else{s=s+1|0;U=U+1|0}}i=h;return}lA(q|0,H|0,J|0)|0;if(F>>>0>I>>>0){V=q;W=J;X=F;Y=H}else{i=h;return}do{Y=Y+I|0;V=V+I|0;X=X-I|0;W=W>>>0>X>>>0?X:W;lA(V|0,Y|0,W|0)|0}while(X>>>0>I>>>0);i=h;return}}else{y=83}}while(0);if((y|0)==83){if((j&255)>7){Z=aa(n,k>>>3)|0}else{Z=(r+7|0)>>>3}lA(f|0,m|0,Z|0)|0}if((x|0)==0){i=h;return}a[x]=d[x]&(w^255)|v&255&w;i=h;return}function Om(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;h=i;i=i+16|0;j=h;if((e|0)==0|(b|0)==0){i=h;return}k=c[b>>2]|0;l=c[16832+(f<<2)>>2]|0;f=aa(l,k)|0;m=b+11|0;n=d[m]|0;if((n|0)==1){o=k+7&7;if((g&65536|0)==0){p=f+7&7^7;q=7;r=1;s=0;t=o^7}else{p=f+7&7;q=0;r=-1;s=7;t=o}if((k|0)!=0){o=e+((f+ -1|0)>>>3)|0;u=p;p=0;v=e+((k+ -1|0)>>>3)|0;w=t;while(1){t=(d[v]|0)>>>w&1;x=o;y=u;z=0;do{a[x]=(d[x]|0)&32639>>>(7-y|0)|t<<y;A=(y|0)==(q|0);y=A?s:y+r|0;x=A?x+ -1|0:x;z=z+1|0}while((z|0)<(l|0));z=(w|0)==(q|0);p=p+1|0;if(!(p>>>0<(c[b>>2]|0)>>>0)){break}else{o=x;u=y;v=z?v+ -1|0:v;w=z?s:w+r|0}}}}else if((n|0)==2){r=(k<<1)+6&6;if((g&65536|0)==0){B=(f<<1)+6&6^6;C=6;D=2;E=0;F=r^6}else{B=(f<<1)+6&6;C=0;D=-2;E=6;F=r}if((k|0)!=0){r=e+((f+ -1|0)>>>2)|0;w=B;B=0;s=e+((k+ -1|0)>>>2)|0;v=F;while(1){F=(d[s]|0)>>>v&3;u=r;o=w;p=0;do{a[u]=(d[u]|0)&16191>>>(6-o|0)|F<<o;q=(o|0)==(C|0);u=q?u+ -1|0:u;o=q?E:o+D|0;p=p+1|0}while((p|0)<(l|0));p=(v|0)==(C|0);B=B+1|0;if(!(B>>>0<(c[b>>2]|0)>>>0)){break}else{r=u;w=o;s=p?s+ -1|0:s;v=p?E:v+D|0}}}}else if((n|0)==4){D=k&1;if((g&65536|0)==0){G=f&1;H=4;I=4;J=0;K=D}else{G=f&1^1;H=0;I=-4;J=4;K=D^1}if((k|0)!=0){D=e+((f+ -1|0)>>>1)|0;g=G<<2;G=0;v=e+((k+ -1|0)>>>1)|0;E=K<<2;while(1){K=(d[v]|0)>>>E&15;s=D;w=g;r=0;do{a[s]=(d[s]|0)&3855>>>(4-w|0)|K<<w;B=(w|0)==(H|0);s=B?s+ -1|0:s;w=B?J:w+I|0;r=r+1|0}while((r|0)<(l|0));r=(E|0)==(H|0);G=G+1|0;if(!(G>>>0<(c[b>>2]|0)>>>0)){break}else{D=s;g=w;v=r?v+ -1|0:v;E=r?J:E+I|0}}}}else{I=n>>>3;if((k|0)!=0){n=e+(aa(I,f+ -1|0)|0)|0;E=e+(aa(I,k+ -1|0)|0)|0;k=0-I|0;e=0-(aa((l|0)>1?l:1,I)|0)|0;J=n;n=0;v=E;while(1){lA(j|0,v|0,I|0)|0;E=J;g=0;while(1){lA(E|0,j|0,I|0)|0;g=g+1|0;if((g|0)>=(l|0)){break}else{E=E+k|0}}n=n+1|0;if(!(n>>>0<(c[b>>2]|0)>>>0)){break}else{J=J+e|0;v=v+k|0}}}}c[b>>2]=f;k=a[m]|0;m=k&255;if((k&255)>7){L=aa(m>>>3,f)|0}else{L=((aa(m,f)|0)+7|0)>>>3}c[b+4>>2]=L;i=h;return}function Pm(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;h=i;j=g+ -1|0;if(!(j>>>0<4)){i=h;return}g=a+808|0;if((c[g>>2]|0)==0){k=(d[a+438|0]|0)+7|0;c[g>>2]=13;c[a+812>>2]=14;c[a+816>>2]=15;c[a+820>>2]=(k&504|0)==8?16:17}wd[c[a+(j<<2)+808>>2]&31](b,e,f);i=h;return}function Qm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;e=i;i=i+1024|0;f=e;g=a+224|0;h=a+236|0;c[h>>2]=b;j=a+240|0;c[j>>2]=0;k=a+228|0;l=(b|0)!=0;m=a+408|0;n=a+376|0;o=a+796|0;p=a+788|0;q=a+792|0;r=(a|0)==0;s=(b|0)==0?0:d;a:while(1){if((c[k>>2]|0)==0){d=c[m>>2]|0;while(1){if((d|0)!=0){break}nm(a,0)|0;b=mm(a)|0;c[m>>2]=b;if((c[n>>2]|0)==1229209940){d=b}else{t=6;break a}}b=c[o>>2]|0;u=b>>>0>d>>>0?d:b;b=c[p>>2]|0;if((b|0)!=0){if((c[q>>2]|0)>>>0<u>>>0){c[p>>2]=0;c[q>>2]=0;Ql(a,b);t=10}else{v=b}}else{t=10}if((t|0)==10){t=0;b=Tl(a,u)|0;if((b|0)==0){t=12;break}c[p>>2]=b;c[q>>2]=u;v=b}if(!r){am(a,v,u);Mk(a,v,u)}c[m>>2]=(c[m>>2]|0)-u;c[g>>2]=v;c[k>>2]=u}if(l){w=0;x=s}else{c[h>>2]=f;w=s;x=1024}c[j>>2]=x;y=wn(g,0)|0;u=c[j>>2]|0;z=(l?u:1024-u|0)+w|0;c[j>>2]=0;if((y|0)==1){t=19;break}else if((y|0)!=0){t=22;break}if((z|0)==0){t=30;break}else{s=z}}if((t|0)==6){tl(a,16864)}else if((t|0)==12){zl(a,17080)}else if((t|0)==19){c[h>>2]=0;h=a+208|0;c[h>>2]=c[h>>2]|8;h=a+212|0;c[h>>2]=c[h>>2]|8;if(!((c[k>>2]|0)==0?(c[m>>2]|0)==0:0)){Dl(a,16888)}if((z|0)==0){i=e;return}if(l){tl(a,16864)}Dl(a,16912);i=e;return}else if((t|0)==22){Uk(a,y);y=c[a+248>>2]|0;if(l){zl(a,y)}Dl(a,y);i=e;return}else if((t|0)==30){i=e;return}}function Rm(b){b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;e=i;f=b+372|0;g=(c[f>>2]|0)+1|0;c[f>>2]=g;h=b+356|0;if(g>>>0<(c[h>>2]|0)>>>0){i=e;return}do{if((a[b+432|0]|0)!=0?(c[f>>2]=0,nA(c[b+380>>2]|0,0,(c[b+364>>2]|0)+1|0)|0,g=b+433|0,j=(a[g]|0)+1<<24>>24,a[g]=j,!((j&255)>6)):0){k=(c[b+348>>2]|0)+ -1|0;l=b+368|0;m=(c[b+216>>2]&2|0)==0;n=b+352|0;o=j;p=j&255;while(1){j=d[16960+p|0]|0;q=((k+j-(d[16952+p|0]|0)|0)>>>0)/(j>>>0)|0;if(!m){break}j=o&255;r=d[16944+j|0]|0;s=(((c[n>>2]|0)+ -1+r-(d[16936+j|0]|0)|0)>>>0)/(r>>>0)|0;c[h>>2]=s;if(!((s|0)==0|(q|0)==0)){break}s=o+1<<24>>24;a[g]=s;if((s&255)>6){t=9;break}else{o=s;p=s&255}}if((t|0)==9){c[l>>2]=q;break}c[l>>2]=q;if((o&255)<7){i=e;return}}}while(0);q=b+212|0;if((c[q>>2]&8|0)==0?(Qm(b,0,0),c[b+236>>2]=0,t=c[q>>2]|0,(t&8|0)==0):0){h=b+208|0;c[h>>2]=c[h>>2]|8;c[q>>2]=t|8}t=b+220|0;if((c[t>>2]|0)!=1229209940){i=e;return}c[b+224>>2]=0;c[b+228>>2]=0;c[t>>2]=0;nm(b,c[b+408>>2]|0)|0;i=e;return}function Sm(e){e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;f=i;hm(e);g=e+432|0;if((a[g]|0)==0){c[e+356>>2]=c[e+352>>2];h=c[e+348>>2]|0;c[e+368>>2]=h;j=h;k=c[e+216>>2]|0}else{h=c[e+216>>2]|0;l=c[e+352>>2]|0;if((h&2|0)==0){c[e+356>>2]=(l+7|0)>>>3}else{c[e+356>>2]=l}l=c[e+348>>2]|0;m=d[e+433|0]|0;n=d[16960+m|0]|0;c[e+368>>2]=((l+ -1+n-(d[16952+m|0]|0)|0)>>>0)/(n>>>0)|0;j=l;k=h}h=d[e+438|0]|0;l=e+216|0;if((k&4|0)==0){o=h}else{o=(d[e+436|0]|0)<8?8:h}h=c[l>>2]|0;k=(h&4096|0)==0;do{if(!k){n=a[e+435|0]|0;if(n<<24>>24==2){if((b[e+428>>1]|0)==0){p=o;break}p=(o<<2>>>0)/3|0;break}else if(n<<24>>24==0){p=(o>>>0<8?8:o)<<((b[e+428>>1]|0)!=0);break}else if(n<<24>>24==3){p=(b[e+428>>1]|0)==0?24:32;break}else{p=o;break}}else{p=o}}while(0);do{if((h&512|0)!=0){if(k){o=h&-513;c[l>>2]=o;q=o;r=p;break}else{q=h;r=p<<((d[e+436|0]|0)<16);break}}else{q=h;r=p}}while(0);p=(q&32768|0)==0;do{if(!p){h=a[e+435|0]|0;if(h<<24>>24==3|h<<24>>24==2){s=(r|0)<33?32:64;break}else if(h<<24>>24==0){s=(r|0)<9?16:32;break}else{s=r;break}}else{s=r}}while(0);do{if((q&16384|0)==0){t=s}else{if((b[e+428>>1]|0)==0){if(p){u=27}}else{if(!((q&4096|0)!=0|p^1)){u=27}}if((u|0)==27?(r=a[e+435|0]|0,!(r<<24>>24==4)):0){h=r<<24>>24==6;if((s|0)<9){t=h?32:24;break}else{t=h?64:48;break}}t=(s|0)<17?32:64}}while(0);if((q&1048576|0)==0){v=t}else{q=aa(d[e+205|0]|0,d[e+204|0]|0)|0;v=(q|0)>(t|0)?q:t}a[e+442|0]=v;a[e+443|0]=0;t=j+7&-8;if((v|0)>7){w=aa(t,v>>>3)|0}else{w=(aa(t,v)|0)>>>3}t=(v+7>>3)+49+w|0;w=e+784|0;if(t>>>0>(c[w>>2]|0)>>>0){v=e+728|0;Ql(e,c[v>>2]|0);j=e+804|0;Ql(e,c[j>>2]|0);if((a[g]|0)==0){x=Sl(e,t)|0}else{x=Rl(e,t)|0}c[v>>2]=x;x=Sl(e,t)|0;c[j>>2]=x;j=c[v>>2]|0;c[e+384>>2]=j+(j+32&15^31);c[e+380>>2]=x+(x+32&15^31);c[w>>2]=t}t=c[e+364>>2]|0;if((t|0)==-1){tl(e,16968)}nA(c[e+380>>2]|0,0,t+1|0)|0;t=e+788|0;w=c[t>>2]|0;if((w|0)!=0){c[e+792>>2]=0;c[t>>2]=0;Ql(e,w)}if((wm(e,1229209940)|0)==0){w=e+212|0;c[w>>2]=c[w>>2]|64;i=f;return}else{tl(e,c[e+248>>2]|0)}}function Tm(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0;f=i;g=c[b+4>>2]|0;h=((d[b+11|0]|0)+7|0)>>>3;if(!(h>>>0<g>>>0)){i=f;return}b=0-h|0;j=h;k=e+h|0;while(1){a[k]=(d[k+b|0]|0)+(d[k]|0);j=j+1|0;if((j|0)==(g|0)){break}else{k=k+1|0}}i=f;return}function Um(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;h=c[b+4>>2]|0;if((h|0)==0){i=g;return}else{j=0;k=f;l=e}while(1){a[l]=(d[k]|0)+(d[l]|0);j=j+1|0;if((j|0)==(h|0)){break}else{k=k+1|0;l=l+1|0}}i=g;return}function Vm(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;h=((d[b+11|0]|0)+7|0)>>>3;j=c[b+4>>2]|0;if((h|0)==0){k=f;l=e}else{b=e+h|0;m=0;n=f;o=e;while(1){a[o]=((d[n]|0)>>>1)+(d[o]|0);m=m+1|0;if(!(m>>>0<h>>>0)){break}else{n=n+1|0;o=o+1|0}}k=f+h|0;l=b}if((j|0)==(h|0)){i=g;return}b=0-h|0;f=j-h|0;h=0;j=k;k=l;while(1){a[k]=(((d[k+b|0]|0)+(d[j]|0)|0)>>>1)+(d[k]|0);h=h+1|0;if((h|0)==(f|0)){break}else{j=j+1|0;k=k+1|0}}i=g;return}function Wm(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=i;h=c[b+4>>2]|0;b=e+h|0;j=d[f]|0;k=(d[e]|0)+j|0;a[e]=k;if((h|0)<=1){i=g;return}h=e+1|0;e=k;k=j;j=f;while(1){f=j+1|0;l=e&255;m=d[f]|0;n=m-k|0;o=l-k|0;p=(n|0)<0?0-n|0:n;q=(o|0)<0?0-o|0:o;r=n+o|0;o=(q|0)<(p|0);n=((((r|0)<0?0-r|0:r)|0)<((o?q:p)|0)?k:o?m:l)+(d[h]|0)|0;a[h]=n;l=h+1|0;if(l>>>0<b>>>0){h=l;e=n;k=m;j=f}else{break}}i=g;return}function Xm(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;h=((d[b+11|0]|0)+7|0)>>>3;j=e+h|0;if((h|0)==0){k=e;l=f}else{m=e+1|0;n=(j>>>0>m>>>0?j:m)+(0-e)|0;m=f;o=e;while(1){p=o+1|0;a[o]=(d[m]|0)+(d[o]|0);if(p>>>0<j>>>0){m=m+1|0;o=p}else{break}}k=p;l=f+n|0}n=e+(c[b+4>>2]|0)|0;if(!(k>>>0<n>>>0)){i=g;return}b=0-h|0;h=l;l=k;while(1){k=d[h+b|0]|0;e=d[l+b|0]|0;f=d[h]|0;p=f-k|0;o=e-k|0;m=(p|0)<0?0-p|0:p;j=(o|0)<0?0-o|0:o;q=p+o|0;o=(j|0)<(m|0);p=l+1|0;a[l]=((((q|0)<0?0-q|0:q)|0)<((o?j:m)|0)?k:o?f:e)+(d[l]|0);if((p|0)==(n|0)){break}else{h=h+1|0;l=p}}i=g;return}function Ym(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;h=i;i=i+1024|0;j=h;if((c[a+220>>2]|0)!=(b|0)){c[a+248>>2]=17056;k=-2;i=h;return k|0}b=c[g>>2]|0;l=c[e>>2]|0;m=a+224|0;c[m>>2]=d;d=a+228|0;c[d>>2]=0;n=a+240|0;c[n>>2]=0;o=(f|0)==0;p=a+236|0;if(!o){c[p>>2]=f}f=0;q=0;r=l;l=b;while(1){c[d>>2]=f+r;b=q+l|0;if(o){c[p>>2]=j;s=1024}else{s=-1}t=b>>>0<s>>>0?b:s;c[n>>2]=t;u=b-t|0;v=wn(m,(b|0)==(t|0)?4:0)|0;if((v|0)!=0){break}f=c[d>>2]|0;q=c[n>>2]|0;r=0;l=u}if(o){c[p>>2]=0}p=c[d>>2]|0;d=(c[n>>2]|0)+u|0;if((d|0)!=0){c[g>>2]=(c[g>>2]|0)-d}if((p|0)!=0){c[e>>2]=(c[e>>2]|0)-p}Uk(a,v);k=v;i=h;return k|0}function Zm(a,d,e){a=a|0;d=d|0;e=e|0;var f=0;f=i;if((a|0)==0|(d|0)==0|(e|0)==0){i=f;return}a=d+170|0;b[a+0>>1]=b[e+0>>1]|0;b[a+2>>1]=b[e+2>>1]|0;b[a+4>>1]=b[e+4>>1]|0;b[a+6>>1]=b[e+6>>1]|0;b[a+8>>1]=b[e+8>>1]|0;e=d+8|0;c[e>>2]=c[e>>2]|32;i=f;return}function _m(a,d,e){a=a|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;if((a|0)==0|(d|0)==0){i=f;return}g=d+20|0;h=b[g>>1]|0;if(h<<16>>16==0|(h&65535)>256){wl(a,17144);i=f;return}Rk(a,d,8,0);h=Wl(a,512)|0;c[d+204>>2]=h;if((h|0)==0){wl(a,17192);i=f;return}a=d+232|0;c[a>>2]=c[a>>2]|8;a=b[g>>1]|0;if(!(a<<16>>16==0)){g=0;do{b[h+(g<<1)>>1]=b[e+(g<<1)>>1]|0;g=g+1|0}while((g|0)<(a&65535|0))}a=d+8|0;c[a>>2]=c[a>>2]|64;i=f;return}function $m(b,e,f,g,h,j,k,l,m){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0;n=i;if((b|0)==0|(e|0)==0){i=n;return}c[e>>2]=f;c[e+4>>2]=g;o=e+24|0;a[o]=h;p=e+25|0;a[p]=j;a[e+26|0]=l;a[e+27|0]=m;a[e+28|0]=k;hl(b,f,g,h&255,j&255,k&255,l&255,m&255);m=a[p]|0;if(!(m<<24>>24==3)){p=(m&2)==0?1:3;a[e+29|0]=p;if((m&4)==0){q=p}else{m=p+1<<24>>24;a[e+29|0]=m;q=m}}else{a[e+29|0]=1;q=1}m=aa(d[o]|0,q&255)|0;a[e+30|0]=m;q=m&255;if(q>>>0>7){r=aa(q>>>3,f)|0}else{r=((aa(q,f)|0)+7|0)>>>3}c[e+12>>2]=r;i=n;return}function an(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;h=i;if((b|0)==0|(d|0)==0){i=h;return}c[d+180>>2]=e;c[d+184>>2]=f;a[d+188|0]=g;g=d+8|0;c[g>>2]=c[g>>2]|256;i=h;return}function bn(b,d,e,f,g,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0;m=i;if((b|0)==0|(d|0)==0|(e|0)==0|(k|0)==0){i=m;return}n=(j|0)>0;if(n&(l|0)==0){i=m;return}o=(gA(e|0)|0)+1|0;if(h>>>0>3){tl(b,17232)}if(j>>>0>255){tl(b,17264)}a:do{if(n){p=0;while(1){q=c[l+(p<<2)>>2]|0;if((q|0)==0){r=11;break}p=p+1|0;if((jl(q,gA(q|0)|0)|0)==0){r=11;break}if((p|0)>=(j|0)){break a}}if((r|0)==11){tl(b,17296)}}}while(0);r=Wl(b,o)|0;c[d+208>>2]=r;if((r|0)==0){wl(b,17336);i=m;return}lA(r|0,e|0,o|0)|0;c[d+212>>2]=f;c[d+216>>2]=g;a[d+228|0]=h;a[d+229|0]=j;h=(gA(k|0)|0)+1|0;g=Wl(b,h)|0;c[d+220>>2]=g;if((g|0)==0){wl(b,17376);i=m;return}lA(g|0,k|0,h|0)|0;h=(j<<2)+4|0;k=Wl(b,h)|0;g=d+224|0;c[g>>2]=k;if((k|0)==0){wl(b,17416);i=m;return}nA(k|0,0,h|0)|0;b:do{if(n){h=0;while(1){k=l+(h<<2)|0;f=(gA(c[k>>2]|0)|0)+1|0;o=Wl(b,f)|0;c[(c[g>>2]|0)+(h<<2)>>2]=o;o=c[(c[g>>2]|0)+(h<<2)>>2]|0;if((o|0)==0){break}lA(o|0,c[k>>2]|0,f|0)|0;h=h+1|0;if((h|0)>=(j|0)){break b}}wl(b,17456);i=m;return}}while(0);b=d+8|0;c[b>>2]=c[b>>2]|1024;b=d+232|0;c[b>>2]=c[b>>2]|128;i=m;return}function cn(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0;h=i;if((b|0)==0|(d|0)==0){i=h;return}if((e+ -1|0)>>>0>1){tl(b,17496)}if((f|0)==0){tl(b,17520)}j=gA(f|0)|0;if((j|0)==0){tl(b,17520)}if((a[f]|0)==45){tl(b,17520)}if((jl(f,j)|0)==0){tl(b,17520)}if((g|0)==0){tl(b,17544)}k=gA(g|0)|0;if((k|0)==0){tl(b,17544)}if((a[g]|0)==45){tl(b,17544)}if((jl(g,k)|0)==0){tl(b,17544)}a[d+252|0]=e;e=j+1|0;j=Wl(b,e)|0;l=d+256|0;c[l>>2]=j;if((j|0)==0){wl(b,17568);i=h;return}lA(j|0,f|0,e|0)|0;e=k+1|0;k=Wl(b,e)|0;c[d+260>>2]=k;if((k|0)==0){Ql(b,c[l>>2]|0);c[l>>2]=0;wl(b,17568);i=h;return}else{lA(k|0,g|0,e|0)|0;e=d+8|0;c[e>>2]=c[e>>2]|16384;e=d+232|0;c[e>>2]=c[e>>2]|256;i=h;return}}function dn(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;h=i;if((b|0)==0|(d|0)==0){i=h;return}c[d+192>>2]=e;c[d+196>>2]=f;a[d+200|0]=g;g=d+8|0;c[g>>2]=c[g>>2]|128;i=h;return}function en(d,e,f,g){d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;h=i;if((d|0)==0|(e|0)==0){i=h;return}if(g>>>0>256){if((a[e+25|0]|0)==3){tl(d,17616)}wl(d,17616);i=h;return}j=(g|0)>0;if(j&(f|0)==0){tl(d,17640)}if((g|0)==0?(c[d+708>>2]&1|0)==0:0){tl(d,17640)}Rk(d,e,4096,0);k=Rl(d,768)|0;c[d+416>>2]=k;if(j){lA(k|0,f|0,g*3|0)|0}c[e+16>>2]=k;k=g&65535;b[d+420>>1]=k;b[e+20>>1]=k;k=e+232|0;c[k>>2]=c[k>>2]|4096;k=e+8|0;c[k>>2]=c[k>>2]|8;i=h;return}function fn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;f=i;if((b|0)==0|(d|0)==0|(e|0)==0){i=f;return}b=d+148|0;a[b+0|0]=a[e+0|0]|0;a[b+1|0]=a[e+1|0]|0;a[b+2|0]=a[e+2|0]|0;a[b+3|0]=a[e+3|0]|0;a[b+4|0]=a[e+4|0]|0;e=d+8|0;c[e>>2]=c[e>>2]|2;i=f;return}function gn(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;g=i;if((b|0)==0|(d|0)==0|(f|0)<1|(e|0)==0){h=0;i=g;return h|0}j=d+132|0;k=d+128|0;l=c[k>>2]|0;do{if(((c[j>>2]|0)-l|0)<(f|0)){if((2147483647-l|0)>=(f|0)){m=l+f|0;if((m|0)<2147483639){n=m+8&-8}else{n=2147483647}m=d+136|0;o=Vl(b,c[m>>2]|0,l,n-l|0,28)|0;if((o|0)!=0){Ql(b,c[m>>2]|0);c[m>>2]=o;o=d+232|0;c[o>>2]=c[o>>2]|16384;c[j>>2]=n;break}}El(b,17656,1);h=1;i=g;return h|0}}while(0);if((f|0)<=0){h=0;i=g;return h|0}n=d+136|0;d=0;a:while(1){j=c[k>>2]|0;l=c[n>>2]|0;o=l+(j*28|0)|0;m=e+(d*28|0)+4|0;p=c[m>>2]|0;do{if((p|0)!=0){q=e+(d*28|0)|0;r=c[q>>2]|0;if((r+1|0)>>>0>3){El(b,17680,1);break}s=gA(p|0)|0;if((r|0)>=1){t=c[e+(d*28|0)+20>>2]|0;if((t|0)==0){u=0}else{u=gA(t|0)|0}t=c[e+(d*28|0)+24>>2]|0;if((t|0)==0){v=0;w=u}else{v=gA(t|0)|0;w=u}}else{v=0;w=0}t=e+(d*28|0)+8|0;x=c[t>>2]|0;if((x|0)!=0?(a[x]|0)!=0:0){y=gA(x|0)|0;c[o>>2]=r;z=y}else{A=21}do{if((A|0)==21){A=0;if((r|0)>0){c[o>>2]=1;z=0;break}else{c[o>>2]=-1;z=0;break}}}while(0);r=Tl(b,s+4+w+v+z|0)|0;y=l+(j*28|0)+4|0;c[y>>2]=r;if((r|0)==0){break a}lA(r|0,c[m>>2]|0,s|0)|0;a[(c[y>>2]|0)+s|0]=0;if((c[q>>2]|0)>0){r=(c[y>>2]|0)+(s+1)|0;x=l+(j*28|0)+20|0;c[x>>2]=r;lA(r|0,c[e+(d*28|0)+20>>2]|0,w|0)|0;a[(c[x>>2]|0)+w|0]=0;r=(c[x>>2]|0)+(w+1)|0;x=l+(j*28|0)+24|0;c[x>>2]=r;lA(r|0,c[e+(d*28|0)+24>>2]|0,v|0)|0;a[(c[x>>2]|0)+v|0]=0;r=(c[x>>2]|0)+(v+1)|0;c[l+(j*28|0)+8>>2]=r;B=r}else{c[l+(j*28|0)+20>>2]=0;c[l+(j*28|0)+24>>2]=0;r=(c[y>>2]|0)+(s+1)|0;c[l+(j*28|0)+8>>2]=r;B=r}if((z|0)==0){C=B}else{lA(B|0,c[t>>2]|0,z|0)|0;C=c[l+(j*28|0)+8>>2]|0}a[C+z|0]=0;r=l+(j*28|0)+12|0;if((c[o>>2]|0)>0){c[r>>2]=0;c[l+(j*28|0)+16>>2]=z}else{c[r>>2]=z;c[l+(j*28|0)+16>>2]=0}c[k>>2]=(c[k>>2]|0)+1}}while(0);j=d+1|0;if((j|0)<(f|0)){d=j}else{h=0;A=37;break}}if((A|0)==37){i=g;return h|0}El(b,17720,1);h=1;i=g;return h|0}function hn(f,g,h){f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;j=i;if((f|0)==0|(g|0)==0|(h|0)==0){i=j;return}if((c[f+208>>2]&512|0)!=0){i=j;return}k=a[h+2|0]|0;if((((!(k<<24>>24==0|(k&255)>12)?(k=a[h+3|0]|0,!(k<<24>>24==0|(k&255)>31)):0)?(d[h+4|0]|0)<=23:0)?(d[h+5|0]|0)<=59:0)?(d[h+6|0]|0)<=60:0){k=h;h=k;l=e[h>>1]|e[h+2>>1]<<16;h=k+4|0;k=e[h>>1]|e[h+2>>1]<<16;h=g+140|0;m=h;b[m>>1]=l;b[m+2>>1]=l>>>16;l=h+4|0;b[l>>1]=k;b[l+2>>1]=k>>>16;k=g+8|0;c[k>>2]=c[k>>2]|512;i=j;return}wl(f,17752);i=j;return}function jn(f,g,h,j,k){f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0;l=i;if((f|0)==0|(g|0)==0){i=l;return}if((h|0)!=0?(Rk(f,g,8192,0),m=Sl(f,256)|0,c[g+156>>2]=m,c[f+528>>2]=m,(j+ -1|0)>>>0<256):0){lA(m|0,h|0,j|0)|0}if((k|0)==0){b[g+22>>1]=j;if((j|0)==0){i=l;return}}else{h=1<<(d[g+24|0]|0);m=a[g+25|0]|0;if(m<<24>>24==0){if((e[k+8>>1]|0|0)>(h|0)){n=11}}else if(m<<24>>24==2){if(!(((e[k+2>>1]|0|0)<=(h|0)?(e[k+4>>1]|0|0)<=(h|0):0)?(e[k+6>>1]|0|0)<=(h|0):0)){n=11}}if((n|0)==11){wl(f,17784)}f=g+160|0;b[f+0>>1]=b[k+0>>1]|0;b[f+2>>1]=b[k+2>>1]|0;b[f+4>>1]=b[k+4>>1]|0;b[f+6>>1]=b[k+6>>1]|0;b[f+8>>1]=b[k+8>>1]|0;b[g+22>>1]=(j|0)==0?1:j&65535}j=g+8|0;c[j>>2]=c[j>>2]|16;j=g+232|0;c[j>>2]=c[j>>2]|8192;i=l;return}function kn(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;if((b|0)==0|(d|0)==0|(f|0)<1|(e|0)==0){i=g;return}h=d+244|0;j=d+248|0;k=Vl(b,c[h>>2]|0,c[j>>2]|0,f,16)|0;if((k|0)==0){El(b,17840,1);i=g;return}Ql(b,c[h>>2]|0);c[h>>2]=k;h=d+232|0;c[h>>2]=c[h>>2]|32;h=d+8|0;d=e;e=f;f=k+(c[j>>2]<<4)|0;while(1){if((c[d>>2]|0)!=0?(k=d+8|0,(c[k>>2]|0)!=0):0){a[f+4|0]=a[d+4|0]|0;l=(gA(c[d>>2]|0)|0)+1|0;m=Tl(b,l)|0;c[f>>2]=m;if((m|0)==0){break}lA(m|0,c[d>>2]|0,l|0)|0;l=d+12|0;m=Ul(b,c[l>>2]|0,10)|0;c[f+8>>2]=m;if((m|0)==0){n=10;break}c[f+12>>2]=c[l>>2];lA(m|0,c[k>>2]|0,(c[l>>2]|0)*10|0)|0;c[h>>2]=c[h>>2]|8192;c[j>>2]=(c[j>>2]|0)+1;o=f+16|0}else{Bl(b,17864);o=f}l=e+ -1|0;if((l|0)==0){n=15;break}else{d=d+16|0;e=l;f=o}}if((n|0)==10){Ql(b,c[f>>2]|0)}else if((n|0)==15){i=g;return}if((e|0)<=0){i=g;return}El(b,17896,1);i=g;return}function ln(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;h=i;if((b|0)==0|(e|0)==0|(g|0)<1|(f|0)==0){i=h;return}j=e+236|0;k=e+240|0;l=Vl(b,c[j>>2]|0,c[k>>2]|0,g,20)|0;if((l|0)==0){El(b,17920,1);i=h;return}Ql(b,c[j>>2]|0);c[j>>2]=l;j=e+232|0;c[j>>2]=c[j>>2]|512;if((g|0)<=0){i=h;return}j=b+208|0;e=f;f=g;g=l+((c[k>>2]|0)*20|0)|0;while(1){l=d[e]|d[e+1|0]<<8|d[e+2|0]<<16|d[e+3|0]<<24;a[g]=l;a[g+1|0]=l>>8;a[g+2|0]=l>>16;a[g+3|0]=l>>24;a[g+4|0]=0;l=a[e+16|0]&11;if((l|0)==0){if((c[j>>2]&32768|0)!=0){m=9;break}Al(b,17976);n=c[j>>2]&11;if((n|0)==0){m=9;break}else{o=n}}else{o=l}while(1){l=o&0-o;if((o|0)==(l|0)){break}else{o=l^o}}a[g+16|0]=o;l=e+12|0;n=c[l>>2]|0;do{if((n|0)!=0){p=Tl(b,n)|0;c[g+8>>2]=p;if((p|0)==0){El(b,17944,1);q=g;break}else{lA(p|0,c[e+8>>2]|0,c[l>>2]|0)|0;c[g+12>>2]=c[l>>2];m=16;break}}else{c[g+8>>2]=0;c[g+12>>2]=0;m=16}}while(0);if((m|0)==16){m=0;c[k>>2]=(c[k>>2]|0)+1;q=g+20|0}l=f+ -1|0;if((l|0)>0){e=e+20|0;f=l;g=q}else{m=18;break}}if((m|0)==9){tl(b,18032)}else if((m|0)==18){i=h;return}}function mn(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;g=a[b+8|0]|0;if(g<<24>>24==0){h=c[b+4>>2]|0;if((h|0)==0){i=f;return}else{j=0;k=e}while(1){a[k]=(d[k]|0)^255;j=j+1|0;if((j|0)==(h|0)){break}else{k=k+1|0}}i=f;return}else if(g<<24>>24==4){g=a[b+9|0]|0;if(g<<24>>24==16){k=c[b+4>>2]|0;if((k|0)==0){i=f;return}else{l=0;m=e}while(1){a[m]=(d[m]|0)^255;h=m+1|0;a[h]=(d[h]|0)^255;l=l+4|0;if(!(l>>>0<k>>>0)){break}else{m=m+4|0}}i=f;return}else if(g<<24>>24==8){g=c[b+4>>2]|0;if((g|0)==0){i=f;return}else{n=0;o=e}while(1){a[o]=(d[o]|0)^255;n=n+2|0;if(!(n>>>0<g>>>0)){break}else{o=o+2|0}}i=f;return}else{i=f;return}}else{i=f;return}}function nn(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;if((a[b+9|0]|0)!=16){i=f;return}g=aa(d[b+10|0]|0,c[b>>2]|0)|0;if((g|0)==0){i=f;return}else{h=0;j=e}while(1){e=a[j]|0;b=j+1|0;a[j]=a[b]|0;a[b]=e;h=h+1|0;if((h|0)==(g|0)){break}else{j=j+2|0}}i=f;return}function on(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;g=a[b+9|0]|0;do{if((g&255)<8){h=c[b+4>>2]|0;j=e+h|0;if(g<<24>>24==1){k=18080}else if(g<<24>>24==4){k=18592}else if(g<<24>>24==2){k=18336}else{break}if((h|0)>0){h=e;do{a[h]=a[k+(d[h]|0)|0]|0;h=h+1|0}while(h>>>0<j>>>0)}}}while(0);i=f;return}function pn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;f=i;g=b+4|0;h=d+(c[g>>2]|0)|0;j=b+10|0;k=a[j]|0;if(k<<24>>24==2){l=a[b+9|0]|0;if(l<<24>>24==8){if((e|0)==0){m=d+1|0;n=d+2|0}else{m=d;n=d+1|0}if(n>>>0<h>>>0){o=m;p=n;while(1){n=o+1|0;a[o]=a[p]|0;q=p+2|0;if(q>>>0<h>>>0){o=n;p=q}else{r=n;break}}}else{r=m}a[b+11|0]=8;s=r}else if(l<<24>>24==16){if((e|0)==0){t=d+2|0;u=d+4|0}else{t=d;u=d+2|0}if(u>>>0<h>>>0){l=t;r=u;while(1){a[l]=a[r]|0;u=l+2|0;a[l+1|0]=a[r+1|0]|0;m=r+4|0;if(m>>>0<h>>>0){l=u;r=m}else{v=u;break}}}else{v=t}a[b+11|0]=16;s=v}else{i=f;return}a[j]=1;v=b+8|0;if((a[v]|0)==4){a[v]=0;w=s}else{w=s}}else if(k<<24>>24==4){k=a[b+9|0]|0;if(k<<24>>24==16){if((e|0)==0){x=d+6|0;y=d+8|0}else{x=d;y=d+2|0}if(y>>>0<h>>>0){s=x;v=y;while(1){a[s]=a[v]|0;a[s+1|0]=a[v+1|0]|0;a[s+2|0]=a[v+2|0]|0;a[s+3|0]=a[v+3|0]|0;a[s+4|0]=a[v+4|0]|0;y=s+6|0;a[s+5|0]=a[v+5|0]|0;t=v+8|0;if(t>>>0<h>>>0){s=y;v=t}else{z=y;break}}}else{z=x}a[b+11|0]=48;A=z}else if(k<<24>>24==8){if((e|0)==0){B=d+3|0;C=d+4|0}else{B=d;C=d+1|0}if(C>>>0<h>>>0){e=B;k=C;while(1){a[e]=a[k]|0;a[e+1|0]=a[k+1|0]|0;C=e+3|0;a[e+2|0]=a[k+2|0]|0;z=k+4|0;if(z>>>0<h>>>0){e=C;k=z}else{D=C;break}}}else{D=B}a[b+11|0]=24;A=D}else{i=f;return}a[j]=3;j=b+8|0;if((a[j]|0)==6){a[j]=2;w=A}else{w=A}}else{i=f;return}c[g>>2]=w-d;i=f;return}function qn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=i;f=a[b+8|0]|0;if((f&2)==0){i=e;return}g=c[b>>2]|0;h=a[b+9|0]|0;if(h<<24>>24==16){if(f<<24>>24==2){if((g|0)==0){i=e;return}else{j=0;k=d}while(1){b=a[k]|0;l=k+4|0;a[k]=a[l]|0;a[l]=b;b=k+1|0;l=a[b]|0;m=k+5|0;a[b]=a[m]|0;a[m]=l;j=j+1|0;if((j|0)==(g|0)){break}else{k=k+6|0}}i=e;return}else if(f<<24>>24==6){if((g|0)==0){i=e;return}else{n=0;o=d}while(1){k=a[o]|0;j=o+4|0;a[o]=a[j]|0;a[j]=k;k=o+1|0;j=a[k]|0;l=o+5|0;a[k]=a[l]|0;a[l]=j;n=n+1|0;if((n|0)==(g|0)){break}else{o=o+8|0}}i=e;return}else{i=e;return}}else if(h<<24>>24==8){if(f<<24>>24==2){if((g|0)==0){i=e;return}else{p=0;q=d}while(1){h=a[q]|0;o=q+2|0;a[q]=a[o]|0;a[o]=h;p=p+1|0;if((p|0)==(g|0)){break}else{q=q+3|0}}i=e;return}else if(f<<24>>24==6){if((g|0)==0){i=e;return}else{r=0;s=d}while(1){d=a[s]|0;f=s+2|0;a[s]=a[f]|0;a[f]=d;r=r+1|0;if((r|0)==(g|0)){break}else{s=s+4|0}}i=e;return}else{i=e;return}}else{i=e;return}}function rn(e,f){e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;g=i;h=b[e+420>>1]|0;j=d[f+9|0]|0;if((h&65535|0)>=(1<<j|0)|h<<16>>16==0){i=g;return}h=(aa(c[f>>2]|0,0-(d[f+11|0]|0)|0)|0)&7;k=c[e+384>>2]|0;l=c[f+4>>2]|0;f=k+l|0;if((j|0)==1){if((l|0)<=0){i=g;return}m=e+424|0;n=h;o=f;while(1){if(((d[o]|0)>>>n|0)!=0){c[m>>2]=1}o=o+ -1|0;if(!(o>>>0>k>>>0)){break}else{n=0}}i=g;return}else if((j|0)==2){if((l|0)<=0){i=g;return}n=e+424|0;o=c[n>>2]|0;m=h;p=f;while(1){q=a[p]|0;r=(q&255)>>>m&3;if((r|0)>(o|0)){c[n>>2]=r;s=a[p]|0;t=r}else{s=q;t=o}q=(s&255)>>>m>>>2&3;if((q|0)>(t|0)){c[n>>2]=q;u=a[p]|0;v=q}else{u=s;v=t}q=(u&255)>>>m>>>4&3;if((q|0)>(v|0)){c[n>>2]=q;w=a[p]|0;x=q}else{w=u;x=v}q=(w&255)>>>m>>>6&3;if((q|0)>(x|0)){c[n>>2]=q;y=q}else{y=x}p=p+ -1|0;if(!(p>>>0>k>>>0)){break}else{o=y;m=0}}i=g;return}else if((j|0)==8){if((l|0)<=0){i=g;return}m=e+424|0;y=c[m>>2]|0;o=f;while(1){p=d[o]|0;if((p|0)>(y|0)){c[m>>2]=p;z=p}else{z=y}o=o+ -1|0;if(!(o>>>0>k>>>0)){break}else{y=z}}i=g;return}else if((j|0)==4){if((l|0)<=0){i=g;return}l=e+424|0;e=c[l>>2]|0;j=h;h=f;while(1){f=a[h]|0;z=(f&255)>>>j&15;if((z|0)>(e|0)){c[l>>2]=z;A=a[h]|0;B=z}else{A=f;B=e}f=(A&255)>>>j>>>4&15;if((f|0)>(B|0)){c[l>>2]=f;C=f}else{C=B}h=h+ -1|0;if(!(h>>>0>k>>>0)){break}else{e=C;j=0}}i=g;return}else{i=g;return}}function sn(a,b,c){a=a|0;b=b|0;c=c|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;e=i;f=a>>>16;g=a&65535;if((c|0)==1){a=(d[b]|0)+g|0;h=a>>>0>65520?a+ -65521|0:a;a=h+f|0;j=(a>>>0>65520?a+15|0:a)<<16|h;i=e;return j|0}if((b|0)==0){j=1;i=e;return j|0}if(c>>>0<16){if((c|0)==0){k=g;l=f}else{h=b;a=c;m=g;n=f;while(1){o=a+ -1|0;p=(d[h]|0)+m|0;q=p+n|0;if((o|0)==0){k=p;l=q;break}else{h=h+1|0;a=o;m=p;n=q}}}j=((l>>>0)%65521|0)<<16|(k>>>0>65520?k+ -65521|0:k);i=e;return j|0}if(c>>>0>5551){k=b;l=c;n=g;m=f;do{l=l+ -5552|0;a=k;h=n;q=347;p=m;while(1){o=(d[a]|0)+h|0;r=o+(d[a+1|0]|0)|0;s=r+(d[a+2|0]|0)|0;t=s+(d[a+3|0]|0)|0;u=t+(d[a+4|0]|0)|0;v=u+(d[a+5|0]|0)|0;w=v+(d[a+6|0]|0)|0;x=w+(d[a+7|0]|0)|0;y=x+(d[a+8|0]|0)|0;z=y+(d[a+9|0]|0)|0;A=z+(d[a+10|0]|0)|0;B=A+(d[a+11|0]|0)|0;C=B+(d[a+12|0]|0)|0;D=C+(d[a+13|0]|0)|0;E=D+(d[a+14|0]|0)|0;h=E+(d[a+15|0]|0)|0;p=o+p+r+s+t+u+v+w+x+y+z+A+B+C+D+E+h|0;q=q+ -1|0;if((q|0)==0){break}else{a=a+16|0}}k=k+5552|0;n=(h>>>0)%65521|0;m=(p>>>0)%65521|0}while(l>>>0>5551);if((l|0)!=0){if(l>>>0>15){F=l;G=k;H=n;I=m;J=15}else{K=l;L=k;M=n;N=m;J=16}}else{O=n;P=m}}else{F=c;G=b;H=g;I=f;J=15}if((J|0)==15){while(1){J=0;F=F+ -16|0;f=(d[G]|0)+H|0;g=f+(d[G+1|0]|0)|0;b=g+(d[G+2|0]|0)|0;c=b+(d[G+3|0]|0)|0;m=c+(d[G+4|0]|0)|0;n=m+(d[G+5|0]|0)|0;k=n+(d[G+6|0]|0)|0;l=k+(d[G+7|0]|0)|0;a=l+(d[G+8|0]|0)|0;q=a+(d[G+9|0]|0)|0;E=q+(d[G+10|0]|0)|0;D=E+(d[G+11|0]|0)|0;C=D+(d[G+12|0]|0)|0;B=C+(d[G+13|0]|0)|0;A=B+(d[G+14|0]|0)|0;H=A+(d[G+15|0]|0)|0;I=f+I+g+b+c+m+n+k+l+a+q+E+D+C+B+A+H|0;G=G+16|0;if(!(F>>>0>15)){break}else{J=15}}if((F|0)==0){Q=H;R=I;J=17}else{K=F;L=G;M=H;N=I;J=16}}if((J|0)==16){while(1){J=0;I=K+ -1|0;H=(d[L]|0)+M|0;G=H+N|0;if((I|0)==0){Q=H;R=G;J=17;break}else{K=I;L=L+1|0;M=H;N=G;J=16}}}if((J|0)==17){O=(Q>>>0)%65521|0;P=(R>>>0)%65521|0}j=P<<16|O;i=e;return j|0}function tn(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;f=i;if((b|0)==0){g=0;i=f;return g|0}h=~a;a:do{if((e|0)!=0){a=b;j=e;k=h;while(1){if((a&3|0)==0){break}l=c[18848+(((d[a]|0)^k&255)<<2)>>2]^k>>>8;m=j+ -1|0;if((m|0)==0){n=l;break a}else{a=a+1|0;j=m;k=l}}if(j>>>0>31){l=j;m=a;o=k;while(1){p=c[m>>2]^o;q=c[20896+((p>>>8&255)<<2)>>2]^c[21920+((p&255)<<2)>>2]^c[19872+((p>>>16&255)<<2)>>2]^c[18848+(p>>>24<<2)>>2]^c[m+4>>2];p=c[20896+((q>>>8&255)<<2)>>2]^c[21920+((q&255)<<2)>>2]^c[19872+((q>>>16&255)<<2)>>2]^c[18848+(q>>>24<<2)>>2]^c[m+8>>2];q=c[20896+((p>>>8&255)<<2)>>2]^c[21920+((p&255)<<2)>>2]^c[19872+((p>>>16&255)<<2)>>2]^c[18848+(p>>>24<<2)>>2]^c[m+12>>2];p=c[20896+((q>>>8&255)<<2)>>2]^c[21920+((q&255)<<2)>>2]^c[19872+((q>>>16&255)<<2)>>2]^c[18848+(q>>>24<<2)>>2]^c[m+16>>2];q=c[20896+((p>>>8&255)<<2)>>2]^c[21920+((p&255)<<2)>>2]^c[19872+((p>>>16&255)<<2)>>2]^c[18848+(p>>>24<<2)>>2]^c[m+20>>2];p=c[20896+((q>>>8&255)<<2)>>2]^c[21920+((q&255)<<2)>>2]^c[19872+((q>>>16&255)<<2)>>2]^c[18848+(q>>>24<<2)>>2]^c[m+24>>2];q=m+32|0;r=c[20896+((p>>>8&255)<<2)>>2]^c[21920+((p&255)<<2)>>2]^c[19872+((p>>>16&255)<<2)>>2]^c[18848+(p>>>24<<2)>>2]^c[m+28>>2];p=c[20896+((r>>>8&255)<<2)>>2]^c[21920+((r&255)<<2)>>2]^c[19872+((r>>>16&255)<<2)>>2]^c[18848+(r>>>24<<2)>>2];r=l+ -32|0;if(r>>>0>31){l=r;m=q;o=p}else{s=r;t=q;u=p;break}}}else{s=j;t=a;u=k}if(s>>>0>3){o=s;m=t;l=u;while(1){p=m+4|0;q=c[m>>2]^l;r=c[20896+((q>>>8&255)<<2)>>2]^c[21920+((q&255)<<2)>>2]^c[19872+((q>>>16&255)<<2)>>2]^c[18848+(q>>>24<<2)>>2];q=o+ -4|0;if(q>>>0>3){o=q;m=p;l=r}else{v=q;w=p;x=r;break}}}else{v=s;w=t;x=u}if((v|0)==0){n=x}else{l=w;m=v;o=x;while(1){k=c[18848+(((d[l]|0)^o&255)<<2)>>2]^o>>>8;a=m+ -1|0;if((a|0)==0){n=k;break}else{l=l+1|0;m=a;o=k}}}}else{n=h}}while(0);g=~n;i=f;return g|0}function un(a){a=a|0;var b=0,d=0,e=0;b=i;if((a|0)==0){d=-2;i=b;return d|0}e=c[a+28>>2]|0;if((e|0)==0){d=-2;i=b;return d|0}c[e+28>>2]=0;c[a+20>>2]=0;c[a+8>>2]=0;c[a+24>>2]=0;c[a+48>>2]=1;c[e>>2]=0;c[e+4>>2]=0;c[e+12>>2]=0;c[e+20>>2]=32768;c[e+32>>2]=0;c[e+40>>2]=0;c[e+44>>2]=0;c[e+48>>2]=0;c[e+56>>2]=0;c[e+60>>2]=0;a=e+1328|0;c[e+108>>2]=a;c[e+80>>2]=a;c[e+76>>2]=a;c[e+7104>>2]=1;c[e+7108>>2]=-1;d=0;i=b;return d|0}function vn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=i;if((d|0)==0){g=-6;i=f;return g|0}if(!((a[d]|0)==49&(e|0)==56)){g=-6;i=f;return g|0}if((b|0)==0){g=-2;i=f;return g|0}e=b+24|0;c[e>>2]=0;d=b+32|0;h=c[d>>2]|0;if((h|0)==0){c[d>>2]=35;c[b+40>>2]=0;j=35}else{j=h}h=b+36|0;if((c[h>>2]|0)==0){c[h>>2]=25}d=b+40|0;k=md[j&63](c[d>>2]|0,1,7116)|0;if((k|0)==0){g=-4;i=f;return g|0}j=b+28|0;c[j>>2]=k;c[k+52>>2]=0;l=c[j>>2]|0;do{if((l|0)!=0){m=l+52|0;n=c[m>>2]|0;o=l+36|0;if((n|0)!=0){if((c[o>>2]|0)==15){p=l}else{td[c[h>>2]&31](c[d>>2]|0,n);c[m>>2]=0;p=c[j>>2]|0}c[l+8>>2]=1;c[o>>2]=15;if((p|0)==0){break}else{q=p}}else{c[l+8>>2]=1;c[o>>2]=15;q=l}c[q+28>>2]=0;c[b+20>>2]=0;c[b+8>>2]=0;c[e>>2]=0;c[b+48>>2]=1;c[q>>2]=0;c[q+4>>2]=0;c[q+12>>2]=0;c[q+20>>2]=32768;c[q+32>>2]=0;c[q+40>>2]=0;c[q+44>>2]=0;c[q+48>>2]=0;c[q+56>>2]=0;c[q+60>>2]=0;o=q+1328|0;c[q+108>>2]=o;c[q+80>>2]=o;c[q+76>>2]=o;c[q+7104>>2]=1;c[q+7108>>2]=-1;g=0;i=f;return g|0}}while(0);td[c[h>>2]&31](c[d>>2]|0,k);c[j>>2]=0;g=-2;i=f;return g|0}




// EMSCRIPTEN_END_FUNCS
var ld=[TA,Mt];var md=[UA,Hr,at,ct,dt,Bt,pt,Ot,Qt,Tt,Ut,it,jt,Pu,cv,my,oy,Ax,ky,ly,Ke,Le,Qe,Se,bf,cf,Fl,Jl,pg,Zg,_g,bh,mk,nk,Jk,Bn,jp,Rv,Sv,jw,ww,xw,tw,yw,zw,Xw,Yw,Zw,_w,sz,UA,UA,UA,UA,UA,UA,UA,UA,UA,UA,UA,UA,UA,UA];var nd=[VA,Nh,Oh,Ph,Qh,Rh,Th,Uh,Vh,Wh,pj,oj,nj,mj,lj,kj,jj,qj,rj,sj,tj,uj,vj,wj,xj,yj,zj,Aj,Bj,Cj,Dj,Ej,Fj,Gj,Hj,Ij,Jj,Kj,Lj,Mj,Nj,ij,hj,gj,Dk,Ek,VA,VA,VA,VA,VA,VA,VA,VA,VA,VA,VA,VA,VA,VA,VA,VA,VA,VA];var od=[WA,Ue,_e,WA];var pd=[XA,Ve,$e,XA];var qd=[YA,we,mf,kf,lf,YA,YA,YA];var rd=[ZA,rf,dq,hq,Cr,Ys,zt,Ht,Nt,St,Ku,nv,qv,sv,Fy,xe,Oe,jf,Re,Te,em,gm,fm,dm,hg,ig,lg,ng,og,ch,ph,qh,Bh,zh,Eh,Fh,Mh,Yh,_h,$h,mi,ni,oi,xi,Hi,Ii,Ki,Vi,bj,dj,fj,Qj,Rj,_j,bk,ek,sk,wk,hr,Or,Tr,js,fs,qu,_u,yx,tz,mz,Py,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA,ZA];var sd=[_A,Li,Ni,Ri,Si,Ti,Wi,_A];var td=[$A,fq,kq,Me,We,Ye,af,_f,$f,aB,Zl,fg,gg,mg,yh,qi,Qi,cj,ej,Pj,Zj,vk,Fk,Kk,Ql,Cn,lr,pz,$A,$A,$A,$A];var ud=[bB,pr,qk,rk];var vd=[cB,or,sr,tr,Dr,tt,Lu,mv,rv,tv,xz,yz,zz,Ey,Ne,Xe,Ze,df,ef,ff,gf,dB,Pk,Wz,eg,jg,kg,$g,ah,Ch,Gh,Ih,li,yi,zi,Ai,Bi,vx,wx,xx,Bv,cB,cB,cB,cB,cB,cB,cB,cB,cB,cB,cB,cB,cB,cB,cB,cB,cB,cB,cB,cB,cB,cB,cB];var wd=[eB,jq,zr,Ar,Gr,Iu,Ou,hf,$l,cm,ag,_l,bm,Tm,Um,Vm,Wm,Xm,Lo,Io,Lr,Qr,Dv,Ev,Gv,Hv,nz,oz,Ty,eB,eB,eB];var xd=[fB,sf,tf,uf,qe,re,ve,ie,of,nf,tg,sg,rg,qg,fB,fB];var yd=[gB,Er,Fr,$s,lt,nt,Mu,Nu,Qu,Ru,dv,uv,vv,Yl,ok,pk,gr,kr,Wo,ux,ry,gB,gB,gB,gB,gB,gB,gB,gB,gB,gB,gB];var zd=[hB,Mr,Nr,Rr,Sr,hB,hB,hB];var Ad=[iB,cq,eq,gq,iq,lq,qr,rr,nr,yr,Br,ns,os,ps,qs,rs,ss,ts,us,vs,ws,xs,ys,zs,As,Bs,Cs,Ds,Es,Fs,Gs,Hs,Is,Js,Ks,Ls,Ms,Ns,Os,Ps,Qs,Rs,Ss,Ts,Us,Vs,Ws,Xs,Zs,_s,bt,et,ft,gt,At,Ct,Dt,Et,Ft,Gt,It,Jt,Kt,Lt,Pt,Rt,vt,ot,ht,Hu,Ju,av,bv,ov,xv,yv,ny,se,te,ze,Kl,Ll,Ol,Nl,Ml,rh,sh,th,uh,vh,ui,Hh,Jh,Kh,ai,bi,ci,di,gi,fi,Nk,Wl,jr,wr,lu,mu,pu,Cv,Fv,Qy,iB,iB,iB,iB,iB,iB,iB,iB,iB,iB,iB,iB,iB,iB,iB,iB,iB,iB];var Bd=[jB,xt,yt,ut,Vt,wt,pv,wv,tk,uk,bu,cu,du,ty,jB,jB];var Cd=[kB,ri,si,ti,Mi,Oi,Xi,Yi,Zi,_i,$i,Tj,Uj,Vj,Wj,Xj,ak,ck,dk,Xl,Il,fo,Uu,$w,ax,bx,cx,dx,ex,Ry,Sy,kB];return{_testSetjmp:kA,_strlen:gA,_free:Xz,_main:cg,_realloc:Zz,_i64Add:fA,_memmove:mA,_tolower:oA,_saveSetjmp:jA,_memset:nA,_malloc:Wz,_strncpy:iA,_memcpy:lA,_i64Subtract:hA,_calloc:Yz,runPostSets:eA,stackAlloc:Dd,stackSave:Ed,stackRestore:Fd,setThrew:Gd,setTempRet0:Jd,setTempRet1:Kd,setTempRet2:Ld,setTempRet3:Md,setTempRet4:Nd,setTempRet5:Od,setTempRet6:Pd,setTempRet7:Qd,setTempRet8:Rd,setTempRet9:Sd,dynCall_iiiiiiii:BA,dynCall_iiii:CA,dynCall_viiiii:DA,dynCall_vid:EA,dynCall_di:FA,dynCall_i:GA,dynCall_vi:HA,dynCall_viiiiiii:IA,dynCall_vii:JA,dynCall_iiiiiii:KA,dynCall_ii:LA,dynCall_viii:MA,dynCall_v:NA,dynCall_iiiii:OA,dynCall_viiiiii:PA,dynCall_iii:QA,dynCall_iiiiii:RA,dynCall_viiii:SA}})


// EMSCRIPTEN_END_ASM
({ "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array }, { "abort": abort, "assert": assert, "asmPrintInt": asmPrintInt, "asmPrintFloat": asmPrintFloat, "min": Math_min, "invoke_iiiiiiii": invoke_iiiiiiii, "invoke_iiii": invoke_iiii, "invoke_viiiii": invoke_viiiii, "invoke_vid": invoke_vid, "invoke_di": invoke_di, "invoke_i": invoke_i, "invoke_vi": invoke_vi, "invoke_viiiiiii": invoke_viiiiiii, "invoke_vii": invoke_vii, "invoke_iiiiiii": invoke_iiiiiii, "invoke_ii": invoke_ii, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_iiiii": invoke_iiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "invoke_viiii": invoke_viiii, "_glUseProgram": _glUseProgram, "_fread": _fread, "_glLineWidth": _glLineWidth, "__reallyNegative": __reallyNegative, "_alBufferData": _alBufferData, "_glDeleteProgram": _glDeleteProgram, "_longjmp": _longjmp, "_glBindBuffer": _glBindBuffer, "_alSource3f": _alSource3f, "_fsync": _fsync, "_llvm_pow_f32": _llvm_pow_f32, "_glTranslatef": _glTranslatef, "_sbrk": _sbrk, "_glBlendFunc": _glBlendFunc, "_glDisableVertexAttribArray": _glDisableVertexAttribArray, "_sinf": _sinf, "_sysconf": _sysconf, "_close": _close, "_ferror": _ferror, "_glLoadMatrixf": _glLoadMatrixf, "_glfwGetMousePos": _glfwGetMousePos, "_fileno": _fileno, "_recv": _recv, "_puts": _puts, "_glLoadIdentity": _glLoadIdentity, "_glMatrixMode": _glMatrixMode, "_glfwInit": _glfwInit, "_write": _write, "_ftell": _ftell, "_glShaderSource": _glShaderSource, "_glFramebufferRenderbuffer": _glFramebufferRenderbuffer, "_glOrtho": _glOrtho, "_alGetListenerf": _alGetListenerf, "_glVertexPointer": _glVertexPointer, "_tmpnam": _tmpnam, "_glGetBooleanv": _glGetBooleanv, "_alSourcePlay": _alSourcePlay, "_tmpfile": _tmpfile, "_alSourcePause": _alSourcePause, "_glEnableVertexAttribArray": _glEnableVertexAttribArray, "_glVertexAttribPointer": _glVertexAttribPointer, "_glHint": _glHint, "_send": _send, "_alcCreateContext": _alcCreateContext, "_setlocale": _setlocale, "_glfwOpenWindow": _glfwOpenWindow, "_glBindRenderbuffer": _glBindRenderbuffer, "_alGetSourcei": _alGetSourcei, "_alcMakeContextCurrent": _alcMakeContextCurrent, "_alGetSourcef": _alGetSourcef, "_glViewport": _glViewport, "_alSourceQueueBuffers": _alSourceQueueBuffers, "___setErrNo": ___setErrNo, "_alSourcef": _alSourcef, "_glDeleteTextures": _glDeleteTextures, "_alSourcei": _alSourcei, "_alGenBuffers": _alGenBuffers, "_putchar": _putchar, "_floor": _floor, "_glEnable": _glEnable, "_printf": _printf, "_glGenTextures": _glGenTextures, "_sprintf": _sprintf, "_glGetIntegerv": _glGetIntegerv, "_alDeleteSources": _alDeleteSources, "_glPushMatrix": _glPushMatrix, "_alGetError": _alGetError, "_emscripten_get_now": _emscripten_get_now, "_glAttachShader": _glAttachShader, "_read": _read, "_clock_gettime": _clock_gettime, "_fwrite": _fwrite, "_time": _time, "_glBindFramebuffer": _glBindFramebuffer, "_glDetachShader": _glDetachShader, "_glGenFramebuffers": _glGenFramebuffers, "_exit": _exit, "_glGetString": _glGetString, "_llvm_pow_f64": _llvm_pow_f64, "_glDeleteFramebuffers": _glDeleteFramebuffers, "_glColor4f": _glColor4f, "_glfwPollEvents": _glfwPollEvents, "_lseek": _lseek, "_glCheckFramebufferStatus": _glCheckFramebufferStatus, "___buildEnvironment": ___buildEnvironment, "_glEnableClientState": _glEnableClientState, "_pwrite": _pwrite, "_alcGetIntegerv": _alcGetIntegerv, "_open": _open, "_glClearColor": _glClearColor, "_glIsEnabled": _glIsEnabled, "_glBindTexture": _glBindTexture, "_snprintf": _snprintf, "_llvm_bswap_i32": _llvm_bswap_i32, "_glGetFloatv": _glGetFloatv, "_alcDestroyContext": _alcDestroyContext, "_glDrawArrays": _glDrawArrays, "_glCreateShader": _glCreateShader, "_fseek": _fseek, "_alListenerf": _alListenerf, "_glfwGetMouseButton": _glfwGetMouseButton, "_getenv": _getenv, "_fclose": _fclose, "_glActiveTexture": _glActiveTexture, "_glTexCoordPointer": _glTexCoordPointer, "_alSourceStop": _alSourceStop, "_glCompileShader": _glCompileShader, "_alcCloseDevice": _alcCloseDevice, "__getFloat": __getFloat, "_alcOpenDevice": _alcOpenDevice, "_abort": _abort, "_glTexImage2D": _glTexImage2D, "_fopen": _fopen, "_glDisableClientState": _glDisableClientState, "_cosf": _cosf, "_glDeleteRenderbuffers": _glDeleteRenderbuffers, "_glLinkProgram": _glLinkProgram, "_glGenRenderbuffers": _glGenRenderbuffers, "_fprintf": _fprintf, "_log10": _log10, "_glClear": _glClear, "_sscanf": _sscanf, "_glPopMatrix": _glPopMatrix, "_glRenderbufferStorage": _glRenderbufferStorage, "__exit": __exit, "_glfwTerminate": _glfwTerminate, "_glBindAttribLocation": _glBindAttribLocation, "_glPixelStorei": _glPixelStorei, "_alDeleteBuffers": _alDeleteBuffers, "_pread": _pread, "_mkport": _mkport, "_fflush": _fflush, "_feof": _feof, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_emscripten_set_main_loop": _emscripten_set_main_loop, "___errno_location": ___errno_location, "_alGenSources": _alGenSources, "_fputc": _fputc, "__scanString": __scanString, "_glDisable": _glDisable, "_emscripten_cancel_main_loop": _emscripten_cancel_main_loop, "_emscripten_longjmp": _emscripten_longjmp, "__formatString": __formatString, "_fputs": _fputs, "_FT_Gzip_Uncompress": _FT_Gzip_Uncompress, "_glTexParameterf": _glTexParameterf, "_glTexSubImage2D": _glTexSubImage2D, "_alSourceUnqueueBuffers": _alSourceUnqueueBuffers, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "ctlz_i8": ctlz_i8, "NaN": NaN, "Infinity": Infinity, "_stderr": _stderr }, buffer);
var _testSetjmp = Module["_testSetjmp"] = asm["_testSetjmp"];
var _strlen = Module["_strlen"] = asm["_strlen"];
var _free = Module["_free"] = asm["_free"];
var _main = Module["_main"] = asm["_main"];
var _realloc = Module["_realloc"] = asm["_realloc"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _tolower = Module["_tolower"] = asm["_tolower"];
var _saveSetjmp = Module["_saveSetjmp"] = asm["_saveSetjmp"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _strncpy = Module["_strncpy"] = asm["_strncpy"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _calloc = Module["_calloc"] = asm["_calloc"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_vid = Module["dynCall_vid"] = asm["dynCall_vid"];
var dynCall_di = Module["dynCall_di"] = asm["dynCall_di"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];

Runtime.stackAlloc = function(size) { return asm['stackAlloc'](size) };
Runtime.stackSave = function() { return asm['stackSave']() };
Runtime.stackRestore = function(top) { asm['stackRestore'](top) };


// TODO: strip out parts of this we do not need

//======= begin closure i64 code =======

// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */

var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };


  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.

    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };


  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.


  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};


  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }

    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };


  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };


  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };


  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }

    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }

    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));

    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };


  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.


  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;


  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);


  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);


  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);


  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);


  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);


  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);


  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };


  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };


  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (this.isZero()) {
      return '0';
    }

    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }

    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));

    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);

      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };


  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };


  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };


  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };


  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };


  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };


  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };


  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };


  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }

    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }

    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };


  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };


  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };


  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }

    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }

    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }

    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));

      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);

      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }

      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }

      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };


  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };


  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };


  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };


  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };


  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };


  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };

  //======= begin jsbn =======

  var navigator = { appName: 'Modern Browser' }; // polyfill a little

  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/

  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */

  // Basic JavaScript BN library - subset useful for RSA encryption.

  // Bits per digit
  var dbits;

  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);

  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }

  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }

  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.

  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }

  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);

  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;

  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }

  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }

  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }

  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }

  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }

  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }

  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }

  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }

  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }

  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }

  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }

  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }

  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }

  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }

  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }

  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }

  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }

  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }

  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;

  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }

  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }

  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }

  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }

  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }

  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;

  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }

  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }

  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;

  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;

  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  // jsbn2 stuff

  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }

  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }

  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }

  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }

  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }

  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }

  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }

  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;

  //======= end jsbn =======

  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();

//======= end closure i64 code =======



// === Auto-generated postamble setup entry stuff ===

if (memoryInitializer) {
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, STATIC_BASE);
  } else {
    addRunDependency('memory initializer');
    Browser.asyncLoad(memoryInitializer, function(data) {
      HEAPU8.set(data, STATIC_BASE);
      removeRunDependency('memory initializer');
    }, function(data) {
      throw 'could not load memory initializer ' + memoryInitializer;
    });
  }
}

function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun'] && shouldRunNow) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  initialStackTop = STACKTOP;

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    if (!Module['noExitRuntime']) {
      exit(ret);
    }
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['_main'] && shouldRunNow) {
      Module['callMain'](args);
    }

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      if (!ABORT) doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status) {
  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;

  // exit the runtime
  exitRuntime();

  // TODO We should handle this differently based on environment.
  // In the browser, the best we can do is throw an exception
  // to halt execution, but in node we could process.exit and
  // I'd imagine SM shell would have something equivalent.
  // This would let us set a proper exit status (which
  // would be great for checking test exit statuses).
  // https://github.com/kripken/emscripten/issues/1371

  // throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

function abort(text) {
  if (text) {
    Module.print(text);
    Module.printErr(text);
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.';

  throw 'abort() at ' + stackTrace() + extra;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}






